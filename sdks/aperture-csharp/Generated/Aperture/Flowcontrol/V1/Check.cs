// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aperture/flowcontrol/check/v1/check.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aperture.Flowcontrol.Check.V1 {

  /// <summary>Holder for reflection information generated from aperture/flowcontrol/check/v1/check.proto</summary>
  public static partial class CheckReflection {

    #region Descriptor
    /// <summary>File descriptor for aperture/flowcontrol/check/v1/check.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilhcGVydHVyZS9mbG93Y29udHJvbC9jaGVjay92MS9jaGVjay5wcm90bxId",
            "YXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hlY2sudjEaHmdvb2dsZS9wcm90b2J1",
            "Zi9kdXJhdGlvbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90byLBAgoMQ2hlY2tSZXF1ZXN0EiMKDWNvbnRyb2xfcG9pbnQYASABKAlS",
            "DGNvbnRyb2xQb2ludBJPCgZsYWJlbHMYAiADKAsyNy5hcGVydHVyZS5mbG93",
            "Y29udHJvbC5jaGVjay52MS5DaGVja1JlcXVlc3QuTGFiZWxzRW50cnlSBmxh",
            "YmVscxIbCglyYW1wX21vZGUYAyABKAhSCHJhbXBNb2RlEmMKFGNhY2hlX2xv",
            "b2t1cF9yZXF1ZXN0GAQgASgLMjEuYXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hl",
            "Y2sudjEuQ2FjaGVMb29rdXBSZXF1ZXN0UhJjYWNoZUxvb2t1cFJlcXVlc3Qa",
            "OQoLTGFiZWxzRW50cnkSEAoDa2V5GAEgASgJUgNrZXkSFAoFdmFsdWUYAiAB",
            "KAlSBXZhbHVlOgI4ASLlCgoNQ2hlY2tSZXNwb25zZRIwCgVzdGFydBgBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBSBXN0YXJ0EiwKA2VuZBgC",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBSA2VuZBIaCghzZXJ2",
            "aWNlcxgEIAMoCVIIc2VydmljZXMSIwoNY29udHJvbF9wb2ludBgFIAEoCVIM",
            "Y29udHJvbFBvaW50EiYKD2Zsb3dfbGFiZWxfa2V5cxgGIAMoCVINZmxvd0xh",
            "YmVsS2V5cxJ5ChV0ZWxlbWV0cnlfZmxvd19sYWJlbHMYByADKAsyRS5hcGVy",
            "dHVyZS5mbG93Y29udHJvbC5jaGVjay52MS5DaGVja1Jlc3BvbnNlLlRlbGVt",
            "ZXRyeUZsb3dMYWJlbHNFbnRyeVITdGVsZW1ldHJ5Rmxvd0xhYmVscxJeCg1k",
            "ZWNpc2lvbl90eXBlGAggASgOMjkuYXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hl",
            "Y2sudjEuQ2hlY2tSZXNwb25zZS5EZWNpc2lvblR5cGVSDGRlY2lzaW9uVHlw",
            "ZRJeCg1yZWplY3RfcmVhc29uGAkgASgOMjkuYXBlcnR1cmUuZmxvd2NvbnRy",
            "b2wuY2hlY2sudjEuQ2hlY2tSZXNwb25zZS5SZWplY3RSZWFzb25SDHJlamVj",
            "dFJlYXNvbhJYChBjbGFzc2lmaWVyX2luZm9zGAogAygLMi0uYXBlcnR1cmUu",
            "Zmxvd2NvbnRyb2wuY2hlY2sudjEuQ2xhc3NpZmllckluZm9SD2NsYXNzaWZp",
            "ZXJJbmZvcxJWChBmbHV4X21ldGVyX2luZm9zGAsgAygLMiwuYXBlcnR1cmUu",
            "Zmxvd2NvbnRyb2wuY2hlY2sudjEuRmx1eE1ldGVySW5mb1IOZmx1eE1ldGVy",
            "SW5mb3MSWwoRbGltaXRlcl9kZWNpc2lvbnMYDCADKAsyLi5hcGVydHVyZS5m",
            "bG93Y29udHJvbC5jaGVjay52MS5MaW1pdGVyRGVjaXNpb25SEGxpbWl0ZXJE",
            "ZWNpc2lvbnMSNgoJd2FpdF90aW1lGA0gASgLMhkuZ29vZ2xlLnByb3RvYnVm",
            "LkR1cmF0aW9uUgh3YWl0VGltZRJoChtkZW5pZWRfcmVzcG9uc2Vfc3RhdHVz",
            "X2NvZGUYDiABKA4yKS5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVjay52MS5T",
            "dGF0dXNDb2RlUhhkZW5pZWRSZXNwb25zZVN0YXR1c0NvZGUSZgoVY2FjaGVf",
            "bG9va3VwX3Jlc3BvbnNlGA8gASgLMjIuYXBlcnR1cmUuZmxvd2NvbnRyb2wu",
            "Y2hlY2sudjEuQ2FjaGVMb29rdXBSZXNwb25zZVITY2FjaGVMb29rdXBSZXNw",
            "b25zZRpGChhUZWxlbWV0cnlGbG93TGFiZWxzRW50cnkSEAoDa2V5GAEgASgJ",
            "UgNrZXkSFAoFdmFsdWUYAiABKAlSBXZhbHVlOgI4ASKmAQoMUmVqZWN0UmVh",
            "c29uEhYKElJFSkVDVF9SRUFTT05fTk9ORRAAEh4KGlJFSkVDVF9SRUFTT05f",
            "UkFURV9MSU1JVEVEEAESGwoXUkVKRUNUX1JFQVNPTl9OT19UT0tFTlMQAhId",
            "ChlSRUpFQ1RfUkVBU09OX05PVF9TQU1QTEVEEAMSIgoeUkVKRUNUX1JFQVNP",
            "Tl9OT19NQVRDSElOR19SQU1QEAQiRgoMRGVjaXNpb25UeXBlEhoKFkRFQ0lT",
            "SU9OX1RZUEVfQUNDRVBURUQQABIaChZERUNJU0lPTl9UWVBFX1JFSkVDVEVE",
            "EAEi9gEKEUtleUxvb2t1cFJlc3BvbnNlEhQKBXZhbHVlGAEgASgMUgV2YWx1",
            "ZRJVCg1sb29rdXBfc3RhdHVzGAIgASgOMjAuYXBlcnR1cmUuZmxvd2NvbnRy",
            "b2wuY2hlY2sudjEuQ2FjaGVMb29rdXBTdGF0dXNSDGxvb2t1cFN0YXR1cxJe",
            "ChBvcGVyYXRpb25fc3RhdHVzGAMgASgOMjMuYXBlcnR1cmUuZmxvd2NvbnRy",
            "b2wuY2hlY2sudjEuQ2FjaGVPcGVyYXRpb25TdGF0dXNSD29wZXJhdGlvblN0",
            "YXR1cxIUCgVlcnJvchgEIAEoCVIFZXJyb3IigQMKEkNhY2hlVXBzZXJ0UmVx",
            "dWVzdBIjCg1jb250cm9sX3BvaW50GAEgASgJUgxjb250cm9sUG9pbnQSVwoS",
            "cmVzdWx0X2NhY2hlX2VudHJ5GAIgASgLMikuYXBlcnR1cmUuZmxvd2NvbnRy",
            "b2wuY2hlY2sudjEuQ2FjaGVFbnRyeVIQcmVzdWx0Q2FjaGVFbnRyeRJ7ChRn",
            "bG9iYWxfY2FjaGVfZW50cmllcxgDIAMoCzJJLmFwZXJ0dXJlLmZsb3djb250",
            "cm9sLmNoZWNrLnYxLkNhY2hlVXBzZXJ0UmVxdWVzdC5HbG9iYWxDYWNoZUVu",
            "dHJpZXNFbnRyeVISZ2xvYmFsQ2FjaGVFbnRyaWVzGnAKF0dsb2JhbENhY2hl",
            "RW50cmllc0VudHJ5EhAKA2tleRgBIAEoCVIDa2V5Ej8KBXZhbHVlGAIgASgL",
            "MikuYXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hlY2sudjEuQ2FjaGVFbnRyeVIF",
            "dmFsdWU6AjgBImEKCkNhY2hlRW50cnkSEAoDa2V5GAEgASgJUgNrZXkSFAoF",
            "dmFsdWUYAiABKAxSBXZhbHVlEisKA3R0bBgDIAEoCzIZLmdvb2dsZS5wcm90",
            "b2J1Zi5EdXJhdGlvblIDdHRsIvsCChNDYWNoZVVwc2VydFJlc3BvbnNlEmQK",
            "FXJlc3VsdF9jYWNoZV9yZXNwb25zZRgBIAEoCzIwLmFwZXJ0dXJlLmZsb3dj",
            "b250cm9sLmNoZWNrLnYxLktleVVwc2VydFJlc3BvbnNlUhNyZXN1bHRDYWNo",
            "ZVJlc3BvbnNlEoIBChZnbG9iYWxfY2FjaGVfcmVzcG9uc2VzGAIgAygLMkwu",
            "YXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hlY2sudjEuQ2FjaGVVcHNlcnRSZXNw",
            "b25zZS5HbG9iYWxDYWNoZVJlc3BvbnNlc0VudHJ5UhRnbG9iYWxDYWNoZVJl",
            "c3BvbnNlcxp5ChlHbG9iYWxDYWNoZVJlc3BvbnNlc0VudHJ5EhAKA2tleRgB",
            "IAEoCVIDa2V5EkYKBXZhbHVlGAIgASgLMjAuYXBlcnR1cmUuZmxvd2NvbnRy",
            "b2wuY2hlY2sudjEuS2V5VXBzZXJ0UmVzcG9uc2VSBXZhbHVlOgI4ASKJAQoR",
            "S2V5VXBzZXJ0UmVzcG9uc2USXgoQb3BlcmF0aW9uX3N0YXR1cxgBIAEoDjIz",
            "LmFwZXJ0dXJlLmZsb3djb250cm9sLmNoZWNrLnYxLkNhY2hlT3BlcmF0aW9u",
            "U3RhdHVzUg9vcGVyYXRpb25TdGF0dXMSFAoFZXJyb3IYAiABKAlSBWVycm9y",
            "Io8BChJDYWNoZURlbGV0ZVJlcXVlc3QSIwoNY29udHJvbF9wb2ludBgBIAEo",
            "CVIMY29udHJvbFBvaW50EigKEHJlc3VsdF9jYWNoZV9rZXkYAiABKAlSDnJl",
            "c3VsdENhY2hlS2V5EioKEWdsb2JhbF9jYWNoZV9rZXlzGAMgAygJUg9nbG9i",
            "YWxDYWNoZUtleXMi+wIKE0NhY2hlRGVsZXRlUmVzcG9uc2USZAoVcmVzdWx0",
            "X2NhY2hlX3Jlc3BvbnNlGAEgASgLMjAuYXBlcnR1cmUuZmxvd2NvbnRyb2wu",
            "Y2hlY2sudjEuS2V5RGVsZXRlUmVzcG9uc2VSE3Jlc3VsdENhY2hlUmVzcG9u",
            "c2USggEKFmdsb2JhbF9jYWNoZV9yZXNwb25zZXMYAiADKAsyTC5hcGVydHVy",
            "ZS5mbG93Y29udHJvbC5jaGVjay52MS5DYWNoZURlbGV0ZVJlc3BvbnNlLkds",
            "b2JhbENhY2hlUmVzcG9uc2VzRW50cnlSFGdsb2JhbENhY2hlUmVzcG9uc2Vz",
            "GnkKGUdsb2JhbENhY2hlUmVzcG9uc2VzRW50cnkSEAoDa2V5GAEgASgJUgNr",
            "ZXkSRgoFdmFsdWUYAiABKAsyMC5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVj",
            "ay52MS5LZXlEZWxldGVSZXNwb25zZVIFdmFsdWU6AjgBIokBChFLZXlEZWxl",
            "dGVSZXNwb25zZRJeChBvcGVyYXRpb25fc3RhdHVzGAEgASgOMjMuYXBlcnR1",
            "cmUuZmxvd2NvbnRyb2wuY2hlY2sudjEuQ2FjaGVPcGVyYXRpb25TdGF0dXNS",
            "D29wZXJhdGlvblN0YXR1cxIUCgVlcnJvchgCIAEoCVIFZXJyb3IijwEKEkNh",
            "Y2hlTG9va3VwUmVxdWVzdBIjCg1jb250cm9sX3BvaW50GAEgASgJUgxjb250",
            "cm9sUG9pbnQSKAoQcmVzdWx0X2NhY2hlX2tleRgCIAEoCVIOcmVzdWx0Q2Fj",
            "aGVLZXkSKgoRZ2xvYmFsX2NhY2hlX2tleXMYAyADKAlSD2dsb2JhbENhY2hl",
            "S2V5cyL7AgoTQ2FjaGVMb29rdXBSZXNwb25zZRJkChVyZXN1bHRfY2FjaGVf",
            "cmVzcG9uc2UYASABKAsyMC5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVjay52",
            "MS5LZXlMb29rdXBSZXNwb25zZVITcmVzdWx0Q2FjaGVSZXNwb25zZRKCAQoW",
            "Z2xvYmFsX2NhY2hlX3Jlc3BvbnNlcxgCIAMoCzJMLmFwZXJ0dXJlLmZsb3dj",
            "b250cm9sLmNoZWNrLnYxLkNhY2hlTG9va3VwUmVzcG9uc2UuR2xvYmFsQ2Fj",
            "aGVSZXNwb25zZXNFbnRyeVIUZ2xvYmFsQ2FjaGVSZXNwb25zZXMaeQoZR2xv",
            "YmFsQ2FjaGVSZXNwb25zZXNFbnRyeRIQCgNrZXkYASABKAlSA2tleRJGCgV2",
            "YWx1ZRgCIAEoCzIwLmFwZXJ0dXJlLmZsb3djb250cm9sLmNoZWNrLnYxLktl",
            "eUxvb2t1cFJlc3BvbnNlUgV2YWx1ZToCOAEi7QIKDkNsYXNzaWZpZXJJbmZv",
            "Eh8KC3BvbGljeV9uYW1lGAEgASgJUgpwb2xpY3lOYW1lEh8KC3BvbGljeV9o",
            "YXNoGAIgASgJUgpwb2xpY3lIYXNoEikKEGNsYXNzaWZpZXJfaW5kZXgYAyAB",
            "KANSD2NsYXNzaWZpZXJJbmRleBJJCgVlcnJvchgFIAEoDjIzLmFwZXJ0dXJl",
            "LmZsb3djb250cm9sLmNoZWNrLnYxLkNsYXNzaWZpZXJJbmZvLkVycm9yUgVl",
            "cnJvciKiAQoFRXJyb3ISDgoKRVJST1JfTk9ORRAAEhUKEUVSUk9SX0VWQUxf",
            "RkFJTEVEEAESGQoVRVJST1JfRU1QVFlfUkVTVUxUU0VUEAISHQoZRVJST1Jf",
            "QU1CSUdVT1VTX1JFU1VMVFNFVBADEhoKFkVSUk9SX01VTFRJX0VYUFJFU1NJ",
            "T04QBBIcChhFUlJPUl9FWFBSRVNTSU9OX05PVF9NQVAQBSKmDAoPTGltaXRl",
            "ckRlY2lzaW9uEh8KC3BvbGljeV9uYW1lGAEgASgJUgpwb2xpY3lOYW1lEh8K",
            "C3BvbGljeV9oYXNoGAIgASgJUgpwb2xpY3lIYXNoEiEKDGNvbXBvbmVudF9p",
            "ZBgDIAEoCVILY29tcG9uZW50SWQSGAoHZHJvcHBlZBgEIAEoCFIHZHJvcHBl",
            "ZBJUCgZyZWFzb24YBSABKA4yPC5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVj",
            "ay52MS5MaW1pdGVyRGVjaXNpb24uTGltaXRlclJlYXNvblIGcmVhc29uEmgK",
            "G2RlbmllZF9yZXNwb25zZV9zdGF0dXNfY29kZRgKIAEoDjIpLmFwZXJ0dXJl",
            "LmZsb3djb250cm9sLmNoZWNrLnYxLlN0YXR1c0NvZGVSGGRlbmllZFJlc3Bv",
            "bnNlU3RhdHVzQ29kZRI2Cgl3YWl0X3RpbWUYCyABKAsyGS5nb29nbGUucHJv",
            "dG9idWYuRHVyYXRpb25SCHdhaXRUaW1lEmwKEXJhdGVfbGltaXRlcl9pbmZv",
            "GBQgASgLMj4uYXBlcnR1cmUuZmxvd2NvbnRyb2wuY2hlY2sudjEuTGltaXRl",
            "ckRlY2lzaW9uLlJhdGVMaW1pdGVySW5mb0gAUg9yYXRlTGltaXRlckluZm8S",
            "bgoTbG9hZF9zY2hlZHVsZXJfaW5mbxgVIAEoCzI8LmFwZXJ0dXJlLmZsb3dj",
            "b250cm9sLmNoZWNrLnYxLkxpbWl0ZXJEZWNpc2lvbi5TY2hlZHVsZXJJbmZv",
            "SABSEWxvYWRTY2hlZHVsZXJJbmZvEl8KDHNhbXBsZXJfaW5mbxgWIAEoCzI6",
            "LmFwZXJ0dXJlLmZsb3djb250cm9sLmNoZWNrLnYxLkxpbWl0ZXJEZWNpc2lv",
            "bi5TYW1wbGVySW5mb0gAUgtzYW1wbGVySW5mbxJ1ChRxdW90YV9zY2hlZHVs",
            "ZXJfaW5mbxgXIAEoCzJBLmFwZXJ0dXJlLmZsb3djb250cm9sLmNoZWNrLnYx",
            "LkxpbWl0ZXJEZWNpc2lvbi5RdW90YVNjaGVkdWxlckluZm9IAFIScXVvdGFT",
            "Y2hlZHVsZXJJbmZvGmAKClRva2Vuc0luZm8SHAoJcmVtYWluaW5nGAEgASgB",
            "UglyZW1haW5pbmcSGAoHY3VycmVudBgCIAEoAVIHY3VycmVudBIaCghjb25z",
            "dW1lZBgDIAEoAVIIY29uc3VtZWQagwEKD1JhdGVMaW1pdGVySW5mbxIUCgVs",
            "YWJlbBgBIAEoCVIFbGFiZWwSWgoLdG9rZW5zX2luZm8YAiABKAsyOS5hcGVy",
            "dHVyZS5mbG93Y29udHJvbC5jaGVjay52MS5MaW1pdGVyRGVjaXNpb24uVG9r",
            "ZW5zSW5mb1IKdG9rZW5zSW5mbxquAQoNU2NoZWR1bGVySW5mbxIlCg53b3Jr",
            "bG9hZF9pbmRleBgBIAEoCVINd29ya2xvYWRJbmRleBJaCgt0b2tlbnNfaW5m",
            "bxgCIAEoCzI5LmFwZXJ0dXJlLmZsb3djb250cm9sLmNoZWNrLnYxLkxpbWl0",
            "ZXJEZWNpc2lvbi5Ub2tlbnNJbmZvUgp0b2tlbnNJbmZvEhoKCHByaW9yaXR5",
            "GAMgASgBUghwcmlvcml0eRojCgtTYW1wbGVySW5mbxIUCgVsYWJlbBgBIAEo",
            "CVIFbGFiZWwayQEKElF1b3RhU2NoZWR1bGVySW5mbxIUCgVsYWJlbBgBIAEo",
            "CVIFbGFiZWwSJQoOd29ya2xvYWRfaW5kZXgYAiABKAlSDXdvcmtsb2FkSW5k",
            "ZXgSWgoLdG9rZW5zX2luZm8YAyABKAsyOS5hcGVydHVyZS5mbG93Y29udHJv",
            "bC5jaGVjay52MS5MaW1pdGVyRGVjaXNpb24uVG9rZW5zSW5mb1IKdG9rZW5z",
            "SW5mbxIaCghwcmlvcml0eRgEIAEoAVIIcHJpb3JpdHkiUQoNTGltaXRlclJl",
            "YXNvbhIeChpMSU1JVEVSX1JFQVNPTl9VTlNQRUNJRklFRBAAEiAKHExJTUlU",
            "RVJfUkVBU09OX0tFWV9OT1RfRk9VTkQQAUIJCgdkZXRhaWxzIjcKDUZsdXhN",
            "ZXRlckluZm8SJgoPZmx1eF9tZXRlcl9uYW1lGAEgASgJUg1mbHV4TWV0ZXJO",
            "YW1lKiYKEUNhY2hlTG9va3VwU3RhdHVzEgcKA0hJVBAAEggKBE1JU1MQASou",
            "ChRDYWNoZU9wZXJhdGlvblN0YXR1cxILCgdTVUNDRVNTEAASCQoFRVJST1IQ",
            "ASq1CQoKU3RhdHVzQ29kZRIJCgVFbXB0eRAAEgwKCENvbnRpbnVlEGQSBwoC",
            "T0sQyAESDAoHQ3JlYXRlZBDJARINCghBY2NlcHRlZBDKARIgChtOb25BdXRo",
            "b3JpdGF0aXZlSW5mb3JtYXRpb24QywESDgoJTm9Db250ZW50EMwBEhEKDFJl",
            "c2V0Q29udGVudBDNARITCg5QYXJ0aWFsQ29udGVudBDOARIQCgtNdWx0aVN0",
            "YXR1cxDPARIUCg9BbHJlYWR5UmVwb3J0ZWQQ0AESCwoGSU1Vc2VkEOIBEhQK",
            "D011bHRpcGxlQ2hvaWNlcxCsAhIVChBNb3ZlZFBlcm1hbmVudGx5EK0CEgoK",
            "BUZvdW5kEK4CEg0KCFNlZU90aGVyEK8CEhAKC05vdE1vZGlmaWVkELACEg0K",
            "CFVzZVByb3h5ELECEhYKEVRlbXBvcmFyeVJlZGlyZWN0ELMCEhYKEVBlcm1h",
            "bmVudFJlZGlyZWN0ELQCEg8KCkJhZFJlcXVlc3QQkAMSEQoMVW5hdXRob3Jp",
            "emVkEJEDEhQKD1BheW1lbnRSZXF1aXJlZBCSAxIOCglGb3JiaWRkZW4QkwMS",
            "DQoITm90Rm91bmQQlAMSFQoQTWV0aG9kTm90QWxsb3dlZBCVAxISCg1Ob3RB",
            "Y2NlcHRhYmxlEJYDEiAKG1Byb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZBCX",
            "AxITCg5SZXF1ZXN0VGltZW91dBCYAxINCghDb25mbGljdBCZAxIJCgRHb25l",
            "EJoDEhMKDkxlbmd0aFJlcXVpcmVkEJsDEhcKElByZWNvbmRpdGlvbkZhaWxl",
            "ZBCcAxIUCg9QYXlsb2FkVG9vTGFyZ2UQnQMSDwoKVVJJVG9vTG9uZxCeAxIZ",
            "ChRVbnN1cHBvcnRlZE1lZGlhVHlwZRCfAxIYChNSYW5nZU5vdFNhdGlzZmlh",
            "YmxlEKADEhYKEUV4cGVjdGF0aW9uRmFpbGVkEKEDEhcKEk1pc2RpcmVjdGVk",
            "UmVxdWVzdBClAxIYChNVbnByb2Nlc3NhYmxlRW50aXR5EKYDEgsKBkxvY2tl",
            "ZBCnAxIVChBGYWlsZWREZXBlbmRlbmN5EKgDEhQKD1VwZ3JhZGVSZXF1aXJl",
            "ZBCqAxIZChRQcmVjb25kaXRpb25SZXF1aXJlZBCsAxIUCg9Ub29NYW55UmVx",
            "dWVzdHMQrQMSIAobUmVxdWVzdEhlYWRlckZpZWxkc1Rvb0xhcmdlEK8DEhgK",
            "E0ludGVybmFsU2VydmVyRXJyb3IQ9AMSEwoOTm90SW1wbGVtZW50ZWQQ9QMS",
            "DwoKQmFkR2F0ZXdheRD2AxIXChJTZXJ2aWNlVW5hdmFpbGFibGUQ9wMSEwoO",
            "R2F0ZXdheVRpbWVvdXQQ+AMSHAoXSFRUUFZlcnNpb25Ob3RTdXBwb3J0ZWQQ",
            "+QMSGgoVVmFyaWFudEFsc29OZWdvdGlhdGVzEPoDEhgKE0luc3VmZmljaWVu",
            "dFN0b3JhZ2UQ+wMSEQoMTG9vcERldGVjdGVkEPwDEhAKC05vdEV4dGVuZGVk",
            "EP4DEiIKHU5ldHdvcmtBdXRoZW50aWNhdGlvblJlcXVpcmVkEP8DMuIDChJG",
            "bG93Q29udHJvbFNlcnZpY2USZAoFQ2hlY2sSKy5hcGVydHVyZS5mbG93Y29u",
            "dHJvbC5jaGVjay52MS5DaGVja1JlcXVlc3QaLC5hcGVydHVyZS5mbG93Y29u",
            "dHJvbC5jaGVjay52MS5DaGVja1Jlc3BvbnNlIgASdgoLQ2FjaGVMb29rdXAS",
            "MS5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVjay52MS5DYWNoZUxvb2t1cFJl",
            "cXVlc3QaMi5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVjay52MS5DYWNoZUxv",
            "b2t1cFJlc3BvbnNlIgASdgoLQ2FjaGVVcHNlcnQSMS5hcGVydHVyZS5mbG93",
            "Y29udHJvbC5jaGVjay52MS5DYWNoZVVwc2VydFJlcXVlc3QaMi5hcGVydHVy",
            "ZS5mbG93Y29udHJvbC5jaGVjay52MS5DYWNoZVVwc2VydFJlc3BvbnNlIgAS",
            "dgoLQ2FjaGVEZWxldGUSMS5hcGVydHVyZS5mbG93Y29udHJvbC5jaGVjay52",
            "MS5DYWNoZURlbGV0ZVJlcXVlc3QaMi5hcGVydHVyZS5mbG93Y29udHJvbC5j",
            "aGVjay52MS5DYWNoZURlbGV0ZVJlc3BvbnNlIgBCxgEKIWNvbS5hcGVydHVy",
            "ZS5mbG93Y29udHJvbC5jaGVjay52MUIKQ2hlY2tQcm90b1ABogIDQUZDqgId",
            "QXBlcnR1cmUuRmxvd2NvbnRyb2wuQ2hlY2suVjHKAh1BcGVydHVyZVxGbG93",
            "Y29udHJvbFxDaGVja1xWMeICKUFwZXJ0dXJlXEZsb3djb250cm9sXENoZWNr",
            "XFYxXEdQQk1ldGFkYXRh6gIgQXBlcnR1cmU6OkZsb3djb250cm9sOjpDaGVj",
            "azo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus), typeof(global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus), typeof(global::Aperture.Flowcontrol.Check.V1.StatusCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CheckRequest), global::Aperture.Flowcontrol.Check.V1.CheckRequest.Parser, new[]{ "ControlPoint", "Labels", "RampMode", "CacheLookupRequest" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CheckResponse), global::Aperture.Flowcontrol.Check.V1.CheckResponse.Parser, new[]{ "Start", "End", "Services", "ControlPoint", "FlowLabelKeys", "TelemetryFlowLabels", "DecisionType", "RejectReason", "ClassifierInfos", "FluxMeterInfos", "LimiterDecisions", "WaitTime", "DeniedResponseStatusCode", "CacheLookupResponse" }, null, new[]{ typeof(global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason), typeof(global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse), global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse.Parser, new[]{ "Value", "LookupStatus", "OperationStatus", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheUpsertRequest), global::Aperture.Flowcontrol.Check.V1.CacheUpsertRequest.Parser, new[]{ "ControlPoint", "ResultCacheEntry", "GlobalCacheEntries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheEntry), global::Aperture.Flowcontrol.Check.V1.CacheEntry.Parser, new[]{ "Key", "Value", "Ttl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheUpsertResponse), global::Aperture.Flowcontrol.Check.V1.CacheUpsertResponse.Parser, new[]{ "ResultCacheResponse", "GlobalCacheResponses" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse), global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse.Parser, new[]{ "OperationStatus", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheDeleteRequest), global::Aperture.Flowcontrol.Check.V1.CacheDeleteRequest.Parser, new[]{ "ControlPoint", "ResultCacheKey", "GlobalCacheKeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheDeleteResponse), global::Aperture.Flowcontrol.Check.V1.CacheDeleteResponse.Parser, new[]{ "ResultCacheResponse", "GlobalCacheResponses" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse), global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse.Parser, new[]{ "OperationStatus", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest), global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest.Parser, new[]{ "ControlPoint", "ResultCacheKey", "GlobalCacheKeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse), global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse.Parser, new[]{ "ResultCacheResponse", "GlobalCacheResponses" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.ClassifierInfo), global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Parser, new[]{ "PolicyName", "PolicyHash", "ClassifierIndex", "Error" }, null, new[]{ typeof(global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Parser, new[]{ "PolicyName", "PolicyHash", "ComponentId", "Dropped", "Reason", "DeniedResponseStatusCode", "WaitTime", "RateLimiterInfo", "LoadSchedulerInfo", "SamplerInfo", "QuotaSchedulerInfo" }, new[]{ "Details" }, new[]{ typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo.Parser, new[]{ "Remaining", "Current", "Consumed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo.Parser, new[]{ "Label", "TokensInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo.Parser, new[]{ "WorkloadIndex", "TokensInfo", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo.Parser, new[]{ "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo), global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo.Parser, new[]{ "Label", "WorkloadIndex", "TokensInfo", "Priority" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo), global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo.Parser, new[]{ "FluxMeterName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CacheLookupStatus {
    [pbr::OriginalName("HIT")] Hit = 0,
    [pbr::OriginalName("MISS")] Miss = 1,
  }

  public enum CacheOperationStatus {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    [pbr::OriginalName("ERROR")] Error = 1,
  }

  /// <summary>
  /// HTTP response codes.
  /// For more details: https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
  /// </summary>
  public enum StatusCode {
    /// <summary>
    /// Empty - This code not part of the HTTP status code specification, but it is needed for `enum` type.
    /// </summary>
    [pbr::OriginalName("Empty")] Empty = 0,
    [pbr::OriginalName("Continue")] Continue = 100,
    [pbr::OriginalName("OK")] Ok = 200,
    [pbr::OriginalName("Created")] Created = 201,
    [pbr::OriginalName("Accepted")] Accepted = 202,
    [pbr::OriginalName("NonAuthoritativeInformation")] NonAuthoritativeInformation = 203,
    [pbr::OriginalName("NoContent")] NoContent = 204,
    [pbr::OriginalName("ResetContent")] ResetContent = 205,
    [pbr::OriginalName("PartialContent")] PartialContent = 206,
    [pbr::OriginalName("MultiStatus")] MultiStatus = 207,
    [pbr::OriginalName("AlreadyReported")] AlreadyReported = 208,
    [pbr::OriginalName("IMUsed")] Imused = 226,
    [pbr::OriginalName("MultipleChoices")] MultipleChoices = 300,
    [pbr::OriginalName("MovedPermanently")] MovedPermanently = 301,
    [pbr::OriginalName("Found")] Found = 302,
    [pbr::OriginalName("SeeOther")] SeeOther = 303,
    [pbr::OriginalName("NotModified")] NotModified = 304,
    [pbr::OriginalName("UseProxy")] UseProxy = 305,
    [pbr::OriginalName("TemporaryRedirect")] TemporaryRedirect = 307,
    [pbr::OriginalName("PermanentRedirect")] PermanentRedirect = 308,
    [pbr::OriginalName("BadRequest")] BadRequest = 400,
    [pbr::OriginalName("Unauthorized")] Unauthorized = 401,
    [pbr::OriginalName("PaymentRequired")] PaymentRequired = 402,
    [pbr::OriginalName("Forbidden")] Forbidden = 403,
    [pbr::OriginalName("NotFound")] NotFound = 404,
    [pbr::OriginalName("MethodNotAllowed")] MethodNotAllowed = 405,
    [pbr::OriginalName("NotAcceptable")] NotAcceptable = 406,
    [pbr::OriginalName("ProxyAuthenticationRequired")] ProxyAuthenticationRequired = 407,
    [pbr::OriginalName("RequestTimeout")] RequestTimeout = 408,
    [pbr::OriginalName("Conflict")] Conflict = 409,
    [pbr::OriginalName("Gone")] Gone = 410,
    [pbr::OriginalName("LengthRequired")] LengthRequired = 411,
    [pbr::OriginalName("PreconditionFailed")] PreconditionFailed = 412,
    [pbr::OriginalName("PayloadTooLarge")] PayloadTooLarge = 413,
    [pbr::OriginalName("URITooLong")] UritooLong = 414,
    [pbr::OriginalName("UnsupportedMediaType")] UnsupportedMediaType = 415,
    [pbr::OriginalName("RangeNotSatisfiable")] RangeNotSatisfiable = 416,
    [pbr::OriginalName("ExpectationFailed")] ExpectationFailed = 417,
    [pbr::OriginalName("MisdirectedRequest")] MisdirectedRequest = 421,
    [pbr::OriginalName("UnprocessableEntity")] UnprocessableEntity = 422,
    [pbr::OriginalName("Locked")] Locked = 423,
    [pbr::OriginalName("FailedDependency")] FailedDependency = 424,
    [pbr::OriginalName("UpgradeRequired")] UpgradeRequired = 426,
    [pbr::OriginalName("PreconditionRequired")] PreconditionRequired = 428,
    [pbr::OriginalName("TooManyRequests")] TooManyRequests = 429,
    [pbr::OriginalName("RequestHeaderFieldsTooLarge")] RequestHeaderFieldsTooLarge = 431,
    [pbr::OriginalName("InternalServerError")] InternalServerError = 500,
    [pbr::OriginalName("NotImplemented")] NotImplemented = 501,
    [pbr::OriginalName("BadGateway")] BadGateway = 502,
    [pbr::OriginalName("ServiceUnavailable")] ServiceUnavailable = 503,
    [pbr::OriginalName("GatewayTimeout")] GatewayTimeout = 504,
    [pbr::OriginalName("HTTPVersionNotSupported")] HttpversionNotSupported = 505,
    [pbr::OriginalName("VariantAlsoNegotiates")] VariantAlsoNegotiates = 506,
    [pbr::OriginalName("InsufficientStorage")] InsufficientStorage = 507,
    [pbr::OriginalName("LoopDetected")] LoopDetected = 508,
    [pbr::OriginalName("NotExtended")] NotExtended = 510,
    [pbr::OriginalName("NetworkAuthenticationRequired")] NetworkAuthenticationRequired = 511,
  }

  #endregion

  #region Messages
  /// <summary>
  /// CheckRequest contains fields required to perform Check call.
  /// </summary>
  public sealed partial class CheckRequest : pb::IMessage<CheckRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckRequest> _parser = new pb::MessageParser<CheckRequest>(() => new CheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckRequest(CheckRequest other) : this() {
      controlPoint_ = other.controlPoint_;
      labels_ = other.labels_.Clone();
      rampMode_ = other.rampMode_;
      cacheLookupRequest_ = other.cacheLookupRequest_ != null ? other.cacheLookupRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckRequest Clone() {
      return new CheckRequest(this);
    }

    /// <summary>Field number for the "control_point" field.</summary>
    public const int ControlPointFieldNumber = 1;
    private string controlPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlPoint {
      get { return controlPoint_; }
      set {
        controlPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "ramp_mode" field.</summary>
    public const int RampModeFieldNumber = 3;
    private bool rampMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RampMode {
      get { return rampMode_; }
      set {
        rampMode_ = value;
      }
    }

    /// <summary>Field number for the "cache_lookup_request" field.</summary>
    public const int CacheLookupRequestFieldNumber = 4;
    private global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest cacheLookupRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest CacheLookupRequest {
      get { return cacheLookupRequest_; }
      set {
        cacheLookupRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlPoint != other.ControlPoint) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (RampMode != other.RampMode) return false;
      if (!object.Equals(CacheLookupRequest, other.CacheLookupRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlPoint.Length != 0) hash ^= ControlPoint.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (RampMode != false) hash ^= RampMode.GetHashCode();
      if (cacheLookupRequest_ != null) hash ^= CacheLookupRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (RampMode != false) {
        output.WriteRawTag(24);
        output.WriteBool(RampMode);
      }
      if (cacheLookupRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CacheLookupRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (RampMode != false) {
        output.WriteRawTag(24);
        output.WriteBool(RampMode);
      }
      if (cacheLookupRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CacheLookupRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ControlPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlPoint);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (RampMode != false) {
        size += 1 + 1;
      }
      if (cacheLookupRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CacheLookupRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlPoint.Length != 0) {
        ControlPoint = other.ControlPoint;
      }
      labels_.MergeFrom(other.labels_);
      if (other.RampMode != false) {
        RampMode = other.RampMode;
      }
      if (other.cacheLookupRequest_ != null) {
        if (cacheLookupRequest_ == null) {
          CacheLookupRequest = new global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest();
        }
        CacheLookupRequest.MergeFrom(other.CacheLookupRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 24: {
            RampMode = input.ReadBool();
            break;
          }
          case 34: {
            if (cacheLookupRequest_ == null) {
              CacheLookupRequest = new global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest();
            }
            input.ReadMessage(CacheLookupRequest);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 24: {
            RampMode = input.ReadBool();
            break;
          }
          case 34: {
            if (cacheLookupRequest_ == null) {
              CacheLookupRequest = new global::Aperture.Flowcontrol.Check.V1.CacheLookupRequest();
            }
            input.ReadMessage(CacheLookupRequest);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CheckResponse contains fields that represent decision made by Check call.
  /// </summary>
  public sealed partial class CheckResponse : pb::IMessage<CheckResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckResponse> _parser = new pb::MessageParser<CheckResponse>(() => new CheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckResponse(CheckResponse other) : this() {
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      services_ = other.services_.Clone();
      controlPoint_ = other.controlPoint_;
      flowLabelKeys_ = other.flowLabelKeys_.Clone();
      telemetryFlowLabels_ = other.telemetryFlowLabels_.Clone();
      decisionType_ = other.decisionType_;
      rejectReason_ = other.rejectReason_;
      classifierInfos_ = other.classifierInfos_.Clone();
      fluxMeterInfos_ = other.fluxMeterInfos_.Clone();
      limiterDecisions_ = other.limiterDecisions_.Clone();
      waitTime_ = other.waitTime_ != null ? other.waitTime_.Clone() : null;
      deniedResponseStatusCode_ = other.deniedResponseStatusCode_;
      cacheLookupResponse_ = other.cacheLookupResponse_ != null ? other.cacheLookupResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckResponse Clone() {
      return new CheckResponse(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp start_;
    /// <summary>
    /// start timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp end_;
    /// <summary>
    /// end timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_services_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> services_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// services that matched
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Services {
      get { return services_; }
    }

    /// <summary>Field number for the "control_point" field.</summary>
    public const int ControlPointFieldNumber = 5;
    private string controlPoint_ = "";
    /// <summary>
    /// control_point of request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlPoint {
      get { return controlPoint_; }
      set {
        controlPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flow_label_keys" field.</summary>
    public const int FlowLabelKeysFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_flowLabelKeys_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> flowLabelKeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// flow label keys that were matched for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> FlowLabelKeys {
      get { return flowLabelKeys_; }
    }

    /// <summary>Field number for the "telemetry_flow_labels" field.</summary>
    public const int TelemetryFlowLabelsFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_telemetryFlowLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 58);
    private readonly pbc::MapField<string, string> telemetryFlowLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// telemetry_flow_labels are labels for telemetry purpose. The keys in telemetry_flow_labels is subset of flow_label_keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> TelemetryFlowLabels {
      get { return telemetryFlowLabels_; }
    }

    /// <summary>Field number for the "decision_type" field.</summary>
    public const int DecisionTypeFieldNumber = 8;
    private global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType decisionType_ = global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted;
    /// <summary>
    /// decision_type contains what the decision was.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType DecisionType {
      get { return decisionType_; }
      set {
        decisionType_ = value;
      }
    }

    /// <summary>Field number for the "reject_reason" field.</summary>
    public const int RejectReasonFieldNumber = 9;
    private global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason rejectReason_ = global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None;
    /// <summary>
    /// reject_reason contains the reason for the rejection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason RejectReason {
      get { return rejectReason_; }
      set {
        rejectReason_ = value;
      }
    }

    /// <summary>Field number for the "classifier_infos" field.</summary>
    public const int ClassifierInfosFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Aperture.Flowcontrol.Check.V1.ClassifierInfo> _repeated_classifierInfos_codec
        = pb::FieldCodec.ForMessage(82, global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Parser);
    private readonly pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.ClassifierInfo> classifierInfos_ = new pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.ClassifierInfo>();
    /// <summary>
    /// classifiers that were matched for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.ClassifierInfo> ClassifierInfos {
      get { return classifierInfos_; }
    }

    /// <summary>Field number for the "flux_meter_infos" field.</summary>
    public const int FluxMeterInfosFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo> _repeated_fluxMeterInfos_codec
        = pb::FieldCodec.ForMessage(90, global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo.Parser);
    private readonly pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo> fluxMeterInfos_ = new pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo>();
    /// <summary>
    /// flux meters that were matched for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.FluxMeterInfo> FluxMeterInfos {
      get { return fluxMeterInfos_; }
    }

    /// <summary>Field number for the "limiter_decisions" field.</summary>
    public const int LimiterDecisionsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Aperture.Flowcontrol.Check.V1.LimiterDecision> _repeated_limiterDecisions_codec
        = pb::FieldCodec.ForMessage(98, global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Parser);
    private readonly pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.LimiterDecision> limiterDecisions_ = new pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.LimiterDecision>();
    /// <summary>
    /// limiter_decisions contains information about decision made by each limiter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Aperture.Flowcontrol.Check.V1.LimiterDecision> LimiterDecisions {
      get { return limiterDecisions_; }
    }

    /// <summary>Field number for the "wait_time" field.</summary>
    public const int WaitTimeFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Duration waitTime_;
    /// <summary>
    /// Recommended minimal amount of time to wait when retrying the request, if
    /// decision_type is REJECTED. Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "denied_response_status_code" field.</summary>
    public const int DeniedResponseStatusCodeFieldNumber = 14;
    private global::Aperture.Flowcontrol.Check.V1.StatusCode deniedResponseStatusCode_ = global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty;
    /// <summary>
    /// http_status contains the http status code to be returned to the client, if
    /// decision_type is REJECTED. Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.StatusCode DeniedResponseStatusCode {
      get { return deniedResponseStatusCode_; }
      set {
        deniedResponseStatusCode_ = value;
      }
    }

    /// <summary>Field number for the "cache_lookup_response" field.</summary>
    public const int CacheLookupResponseFieldNumber = 15;
    private global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse cacheLookupResponse_;
    /// <summary>
    /// CacheLookupResponse contains the result of the cache lookup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse CacheLookupResponse {
      get { return cacheLookupResponse_; }
      set {
        cacheLookupResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if(!services_.Equals(other.services_)) return false;
      if (ControlPoint != other.ControlPoint) return false;
      if(!flowLabelKeys_.Equals(other.flowLabelKeys_)) return false;
      if (!TelemetryFlowLabels.Equals(other.TelemetryFlowLabels)) return false;
      if (DecisionType != other.DecisionType) return false;
      if (RejectReason != other.RejectReason) return false;
      if(!classifierInfos_.Equals(other.classifierInfos_)) return false;
      if(!fluxMeterInfos_.Equals(other.fluxMeterInfos_)) return false;
      if(!limiterDecisions_.Equals(other.limiterDecisions_)) return false;
      if (!object.Equals(WaitTime, other.WaitTime)) return false;
      if (DeniedResponseStatusCode != other.DeniedResponseStatusCode) return false;
      if (!object.Equals(CacheLookupResponse, other.CacheLookupResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      hash ^= services_.GetHashCode();
      if (ControlPoint.Length != 0) hash ^= ControlPoint.GetHashCode();
      hash ^= flowLabelKeys_.GetHashCode();
      hash ^= TelemetryFlowLabels.GetHashCode();
      if (DecisionType != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted) hash ^= DecisionType.GetHashCode();
      if (RejectReason != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None) hash ^= RejectReason.GetHashCode();
      hash ^= classifierInfos_.GetHashCode();
      hash ^= fluxMeterInfos_.GetHashCode();
      hash ^= limiterDecisions_.GetHashCode();
      if (waitTime_ != null) hash ^= WaitTime.GetHashCode();
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) hash ^= DeniedResponseStatusCode.GetHashCode();
      if (cacheLookupResponse_ != null) hash ^= CacheLookupResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (start_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(End);
      }
      services_.WriteTo(output, _repeated_services_codec);
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ControlPoint);
      }
      flowLabelKeys_.WriteTo(output, _repeated_flowLabelKeys_codec);
      telemetryFlowLabels_.WriteTo(output, _map_telemetryFlowLabels_codec);
      if (DecisionType != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DecisionType);
      }
      if (RejectReason != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RejectReason);
      }
      classifierInfos_.WriteTo(output, _repeated_classifierInfos_codec);
      fluxMeterInfos_.WriteTo(output, _repeated_fluxMeterInfos_codec);
      limiterDecisions_.WriteTo(output, _repeated_limiterDecisions_codec);
      if (waitTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(WaitTime);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        output.WriteRawTag(112);
        output.WriteEnum((int) DeniedResponseStatusCode);
      }
      if (cacheLookupResponse_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CacheLookupResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (start_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(End);
      }
      services_.WriteTo(ref output, _repeated_services_codec);
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ControlPoint);
      }
      flowLabelKeys_.WriteTo(ref output, _repeated_flowLabelKeys_codec);
      telemetryFlowLabels_.WriteTo(ref output, _map_telemetryFlowLabels_codec);
      if (DecisionType != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DecisionType);
      }
      if (RejectReason != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RejectReason);
      }
      classifierInfos_.WriteTo(ref output, _repeated_classifierInfos_codec);
      fluxMeterInfos_.WriteTo(ref output, _repeated_fluxMeterInfos_codec);
      limiterDecisions_.WriteTo(ref output, _repeated_limiterDecisions_codec);
      if (waitTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(WaitTime);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        output.WriteRawTag(112);
        output.WriteEnum((int) DeniedResponseStatusCode);
      }
      if (cacheLookupResponse_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CacheLookupResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      size += services_.CalculateSize(_repeated_services_codec);
      if (ControlPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlPoint);
      }
      size += flowLabelKeys_.CalculateSize(_repeated_flowLabelKeys_codec);
      size += telemetryFlowLabels_.CalculateSize(_map_telemetryFlowLabels_codec);
      if (DecisionType != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DecisionType);
      }
      if (RejectReason != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RejectReason);
      }
      size += classifierInfos_.CalculateSize(_repeated_classifierInfos_codec);
      size += fluxMeterInfos_.CalculateSize(_repeated_fluxMeterInfos_codec);
      size += limiterDecisions_.CalculateSize(_repeated_limiterDecisions_codec);
      if (waitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WaitTime);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeniedResponseStatusCode);
      }
      if (cacheLookupResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CacheLookupResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        End.MergeFrom(other.End);
      }
      services_.Add(other.services_);
      if (other.ControlPoint.Length != 0) {
        ControlPoint = other.ControlPoint;
      }
      flowLabelKeys_.Add(other.flowLabelKeys_);
      telemetryFlowLabels_.MergeFrom(other.telemetryFlowLabels_);
      if (other.DecisionType != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType.Accepted) {
        DecisionType = other.DecisionType;
      }
      if (other.RejectReason != global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason.None) {
        RejectReason = other.RejectReason;
      }
      classifierInfos_.Add(other.classifierInfos_);
      fluxMeterInfos_.Add(other.fluxMeterInfos_);
      limiterDecisions_.Add(other.limiterDecisions_);
      if (other.waitTime_ != null) {
        if (waitTime_ == null) {
          WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WaitTime.MergeFrom(other.WaitTime);
      }
      if (other.DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        DeniedResponseStatusCode = other.DeniedResponseStatusCode;
      }
      if (other.cacheLookupResponse_ != null) {
        if (cacheLookupResponse_ == null) {
          CacheLookupResponse = new global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse();
        }
        CacheLookupResponse.MergeFrom(other.CacheLookupResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Start);
            break;
          }
          case 18: {
            if (end_ == null) {
              End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
          case 42: {
            ControlPoint = input.ReadString();
            break;
          }
          case 50: {
            flowLabelKeys_.AddEntriesFrom(input, _repeated_flowLabelKeys_codec);
            break;
          }
          case 58: {
            telemetryFlowLabels_.AddEntriesFrom(input, _map_telemetryFlowLabels_codec);
            break;
          }
          case 64: {
            DecisionType = (global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType) input.ReadEnum();
            break;
          }
          case 72: {
            RejectReason = (global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason) input.ReadEnum();
            break;
          }
          case 82: {
            classifierInfos_.AddEntriesFrom(input, _repeated_classifierInfos_codec);
            break;
          }
          case 90: {
            fluxMeterInfos_.AddEntriesFrom(input, _repeated_fluxMeterInfos_codec);
            break;
          }
          case 98: {
            limiterDecisions_.AddEntriesFrom(input, _repeated_limiterDecisions_codec);
            break;
          }
          case 106: {
            if (waitTime_ == null) {
              WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WaitTime);
            break;
          }
          case 112: {
            DeniedResponseStatusCode = (global::Aperture.Flowcontrol.Check.V1.StatusCode) input.ReadEnum();
            break;
          }
          case 122: {
            if (cacheLookupResponse_ == null) {
              CacheLookupResponse = new global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse();
            }
            input.ReadMessage(CacheLookupResponse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Start);
            break;
          }
          case 18: {
            if (end_ == null) {
              End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            services_.AddEntriesFrom(ref input, _repeated_services_codec);
            break;
          }
          case 42: {
            ControlPoint = input.ReadString();
            break;
          }
          case 50: {
            flowLabelKeys_.AddEntriesFrom(ref input, _repeated_flowLabelKeys_codec);
            break;
          }
          case 58: {
            telemetryFlowLabels_.AddEntriesFrom(ref input, _map_telemetryFlowLabels_codec);
            break;
          }
          case 64: {
            DecisionType = (global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.DecisionType) input.ReadEnum();
            break;
          }
          case 72: {
            RejectReason = (global::Aperture.Flowcontrol.Check.V1.CheckResponse.Types.RejectReason) input.ReadEnum();
            break;
          }
          case 82: {
            classifierInfos_.AddEntriesFrom(ref input, _repeated_classifierInfos_codec);
            break;
          }
          case 90: {
            fluxMeterInfos_.AddEntriesFrom(ref input, _repeated_fluxMeterInfos_codec);
            break;
          }
          case 98: {
            limiterDecisions_.AddEntriesFrom(ref input, _repeated_limiterDecisions_codec);
            break;
          }
          case 106: {
            if (waitTime_ == null) {
              WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WaitTime);
            break;
          }
          case 112: {
            DeniedResponseStatusCode = (global::Aperture.Flowcontrol.Check.V1.StatusCode) input.ReadEnum();
            break;
          }
          case 122: {
            if (cacheLookupResponse_ == null) {
              CacheLookupResponse = new global::Aperture.Flowcontrol.Check.V1.CacheLookupResponse();
            }
            input.ReadMessage(CacheLookupResponse);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CheckResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// RejectReason contains fields that give further information about rejection.
      /// </summary>
      public enum RejectReason {
        [pbr::OriginalName("REJECT_REASON_NONE")] None = 0,
        [pbr::OriginalName("REJECT_REASON_RATE_LIMITED")] RateLimited = 1,
        [pbr::OriginalName("REJECT_REASON_NO_TOKENS")] NoTokens = 2,
        [pbr::OriginalName("REJECT_REASON_NOT_SAMPLED")] NotSampled = 3,
        [pbr::OriginalName("REJECT_REASON_NO_MATCHING_RAMP")] NoMatchingRamp = 4,
      }

      /// <summary>
      /// DecisionType contains fields that represent decision made by Check call.
      /// </summary>
      public enum DecisionType {
        [pbr::OriginalName("DECISION_TYPE_ACCEPTED")] Accepted = 0,
        [pbr::OriginalName("DECISION_TYPE_REJECTED")] Rejected = 1,
      }

    }
    #endregion

  }

  public sealed partial class KeyLookupResponse : pb::IMessage<KeyLookupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyLookupResponse> _parser = new pb::MessageParser<KeyLookupResponse>(() => new KeyLookupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyLookupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyLookupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyLookupResponse(KeyLookupResponse other) : this() {
      value_ = other.value_;
      lookupStatus_ = other.lookupStatus_;
      operationStatus_ = other.operationStatus_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyLookupResponse Clone() {
      return new KeyLookupResponse(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lookup_status" field.</summary>
    public const int LookupStatusFieldNumber = 2;
    private global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus lookupStatus_ = global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus LookupStatus {
      get { return lookupStatus_; }
      set {
        lookupStatus_ = value;
      }
    }

    /// <summary>Field number for the "operation_status" field.</summary>
    public const int OperationStatusFieldNumber = 3;
    private global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus operationStatus_ = global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus OperationStatus {
      get { return operationStatus_; }
      set {
        operationStatus_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyLookupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyLookupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (LookupStatus != other.LookupStatus) return false;
      if (OperationStatus != other.OperationStatus) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (LookupStatus != global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit) hash ^= LookupStatus.GetHashCode();
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) hash ^= OperationStatus.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (LookupStatus != global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LookupStatus);
      }
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (LookupStatus != global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LookupStatus);
      }
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (LookupStatus != global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LookupStatus);
      }
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationStatus);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyLookupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.LookupStatus != global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus.Hit) {
        LookupStatus = other.LookupStatus;
      }
      if (other.OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        OperationStatus = other.OperationStatus;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
          case 16: {
            LookupStatus = (global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus) input.ReadEnum();
            break;
          }
          case 24: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 34: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
          case 16: {
            LookupStatus = (global::Aperture.Flowcontrol.Check.V1.CacheLookupStatus) input.ReadEnum();
            break;
          }
          case 24: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 34: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheUpsertRequest : pb::IMessage<CacheUpsertRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheUpsertRequest> _parser = new pb::MessageParser<CacheUpsertRequest>(() => new CacheUpsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheUpsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertRequest(CacheUpsertRequest other) : this() {
      controlPoint_ = other.controlPoint_;
      resultCacheEntry_ = other.resultCacheEntry_ != null ? other.resultCacheEntry_.Clone() : null;
      globalCacheEntries_ = other.globalCacheEntries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertRequest Clone() {
      return new CacheUpsertRequest(this);
    }

    /// <summary>Field number for the "control_point" field.</summary>
    public const int ControlPointFieldNumber = 1;
    private string controlPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlPoint {
      get { return controlPoint_; }
      set {
        controlPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result_cache_entry" field.</summary>
    public const int ResultCacheEntryFieldNumber = 2;
    private global::Aperture.Flowcontrol.Check.V1.CacheEntry resultCacheEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheEntry ResultCacheEntry {
      get { return resultCacheEntry_; }
      set {
        resultCacheEntry_ = value;
      }
    }

    /// <summary>Field number for the "global_cache_entries" field.</summary>
    public const int GlobalCacheEntriesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.CacheEntry>.Codec _map_globalCacheEntries_codec
        = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.CacheEntry>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Aperture.Flowcontrol.Check.V1.CacheEntry.Parser), 26);
    private readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.CacheEntry> globalCacheEntries_ = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.CacheEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.CacheEntry> GlobalCacheEntries {
      get { return globalCacheEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheUpsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheUpsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlPoint != other.ControlPoint) return false;
      if (!object.Equals(ResultCacheEntry, other.ResultCacheEntry)) return false;
      if (!GlobalCacheEntries.Equals(other.GlobalCacheEntries)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlPoint.Length != 0) hash ^= ControlPoint.GetHashCode();
      if (resultCacheEntry_ != null) hash ^= ResultCacheEntry.GetHashCode();
      hash ^= GlobalCacheEntries.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (resultCacheEntry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResultCacheEntry);
      }
      globalCacheEntries_.WriteTo(output, _map_globalCacheEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (resultCacheEntry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResultCacheEntry);
      }
      globalCacheEntries_.WriteTo(ref output, _map_globalCacheEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ControlPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlPoint);
      }
      if (resultCacheEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultCacheEntry);
      }
      size += globalCacheEntries_.CalculateSize(_map_globalCacheEntries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheUpsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlPoint.Length != 0) {
        ControlPoint = other.ControlPoint;
      }
      if (other.resultCacheEntry_ != null) {
        if (resultCacheEntry_ == null) {
          ResultCacheEntry = new global::Aperture.Flowcontrol.Check.V1.CacheEntry();
        }
        ResultCacheEntry.MergeFrom(other.ResultCacheEntry);
      }
      globalCacheEntries_.MergeFrom(other.globalCacheEntries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            if (resultCacheEntry_ == null) {
              ResultCacheEntry = new global::Aperture.Flowcontrol.Check.V1.CacheEntry();
            }
            input.ReadMessage(ResultCacheEntry);
            break;
          }
          case 26: {
            globalCacheEntries_.AddEntriesFrom(input, _map_globalCacheEntries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            if (resultCacheEntry_ == null) {
              ResultCacheEntry = new global::Aperture.Flowcontrol.Check.V1.CacheEntry();
            }
            input.ReadMessage(ResultCacheEntry);
            break;
          }
          case 26: {
            globalCacheEntries_.AddEntriesFrom(ref input, _map_globalCacheEntries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheEntry : pb::IMessage<CacheEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheEntry> _parser = new pb::MessageParser<CacheEntry>(() => new CacheEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheEntry(CacheEntry other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      ttl_ = other.ttl_ != null ? other.ttl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheEntry Clone() {
      return new CacheEntry(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration ttl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(Ttl, other.Ttl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (ttl_ != null) hash ^= Ttl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (ttl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Ttl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (ttl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Ttl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (ttl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ttl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheEntry other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.ttl_ != null) {
        if (ttl_ == null) {
          Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Ttl.MergeFrom(other.Ttl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Ttl);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Ttl);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheUpsertResponse : pb::IMessage<CacheUpsertResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheUpsertResponse> _parser = new pb::MessageParser<CacheUpsertResponse>(() => new CacheUpsertResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheUpsertResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertResponse(CacheUpsertResponse other) : this() {
      resultCacheResponse_ = other.resultCacheResponse_ != null ? other.resultCacheResponse_.Clone() : null;
      globalCacheResponses_ = other.globalCacheResponses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheUpsertResponse Clone() {
      return new CacheUpsertResponse(this);
    }

    /// <summary>Field number for the "result_cache_response" field.</summary>
    public const int ResultCacheResponseFieldNumber = 1;
    private global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse resultCacheResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse ResultCacheResponse {
      get { return resultCacheResponse_; }
      set {
        resultCacheResponse_ = value;
      }
    }

    /// <summary>Field number for the "global_cache_responses" field.</summary>
    public const int GlobalCacheResponsesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse>.Codec _map_globalCacheResponses_codec
        = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse.Parser), 18);
    private readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse> globalCacheResponses_ = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse> GlobalCacheResponses {
      get { return globalCacheResponses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheUpsertResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheUpsertResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResultCacheResponse, other.ResultCacheResponse)) return false;
      if (!GlobalCacheResponses.Equals(other.GlobalCacheResponses)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCacheResponse_ != null) hash ^= ResultCacheResponse.GetHashCode();
      hash ^= GlobalCacheResponses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(ref output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (resultCacheResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultCacheResponse);
      }
      size += globalCacheResponses_.CalculateSize(_map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheUpsertResponse other) {
      if (other == null) {
        return;
      }
      if (other.resultCacheResponse_ != null) {
        if (resultCacheResponse_ == null) {
          ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse();
        }
        ResultCacheResponse.MergeFrom(other.ResultCacheResponse);
      }
      globalCacheResponses_.MergeFrom(other.globalCacheResponses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyUpsertResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(ref input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyUpsertResponse : pb::IMessage<KeyUpsertResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyUpsertResponse> _parser = new pb::MessageParser<KeyUpsertResponse>(() => new KeyUpsertResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyUpsertResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyUpsertResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyUpsertResponse(KeyUpsertResponse other) : this() {
      operationStatus_ = other.operationStatus_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyUpsertResponse Clone() {
      return new KeyUpsertResponse(this);
    }

    /// <summary>Field number for the "operation_status" field.</summary>
    public const int OperationStatusFieldNumber = 1;
    private global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus operationStatus_ = global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus OperationStatus {
      get { return operationStatus_; }
      set {
        operationStatus_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyUpsertResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyUpsertResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationStatus != other.OperationStatus) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) hash ^= OperationStatus.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationStatus);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyUpsertResponse other) {
      if (other == null) {
        return;
      }
      if (other.OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        OperationStatus = other.OperationStatus;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheDeleteRequest : pb::IMessage<CacheDeleteRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheDeleteRequest> _parser = new pb::MessageParser<CacheDeleteRequest>(() => new CacheDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteRequest(CacheDeleteRequest other) : this() {
      controlPoint_ = other.controlPoint_;
      resultCacheKey_ = other.resultCacheKey_;
      globalCacheKeys_ = other.globalCacheKeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteRequest Clone() {
      return new CacheDeleteRequest(this);
    }

    /// <summary>Field number for the "control_point" field.</summary>
    public const int ControlPointFieldNumber = 1;
    private string controlPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlPoint {
      get { return controlPoint_; }
      set {
        controlPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result_cache_key" field.</summary>
    public const int ResultCacheKeyFieldNumber = 2;
    private string resultCacheKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultCacheKey {
      get { return resultCacheKey_; }
      set {
        resultCacheKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "global_cache_keys" field.</summary>
    public const int GlobalCacheKeysFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_globalCacheKeys_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> globalCacheKeys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GlobalCacheKeys {
      get { return globalCacheKeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlPoint != other.ControlPoint) return false;
      if (ResultCacheKey != other.ResultCacheKey) return false;
      if(!globalCacheKeys_.Equals(other.globalCacheKeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlPoint.Length != 0) hash ^= ControlPoint.GetHashCode();
      if (ResultCacheKey.Length != 0) hash ^= ResultCacheKey.GetHashCode();
      hash ^= globalCacheKeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResultCacheKey);
      }
      globalCacheKeys_.WriteTo(output, _repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResultCacheKey);
      }
      globalCacheKeys_.WriteTo(ref output, _repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ControlPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultCacheKey);
      }
      size += globalCacheKeys_.CalculateSize(_repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlPoint.Length != 0) {
        ControlPoint = other.ControlPoint;
      }
      if (other.ResultCacheKey.Length != 0) {
        ResultCacheKey = other.ResultCacheKey;
      }
      globalCacheKeys_.Add(other.globalCacheKeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            ResultCacheKey = input.ReadString();
            break;
          }
          case 26: {
            globalCacheKeys_.AddEntriesFrom(input, _repeated_globalCacheKeys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            ResultCacheKey = input.ReadString();
            break;
          }
          case 26: {
            globalCacheKeys_.AddEntriesFrom(ref input, _repeated_globalCacheKeys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheDeleteResponse : pb::IMessage<CacheDeleteResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheDeleteResponse> _parser = new pb::MessageParser<CacheDeleteResponse>(() => new CacheDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteResponse(CacheDeleteResponse other) : this() {
      resultCacheResponse_ = other.resultCacheResponse_ != null ? other.resultCacheResponse_.Clone() : null;
      globalCacheResponses_ = other.globalCacheResponses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheDeleteResponse Clone() {
      return new CacheDeleteResponse(this);
    }

    /// <summary>Field number for the "result_cache_response" field.</summary>
    public const int ResultCacheResponseFieldNumber = 1;
    private global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse resultCacheResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse ResultCacheResponse {
      get { return resultCacheResponse_; }
      set {
        resultCacheResponse_ = value;
      }
    }

    /// <summary>Field number for the "global_cache_responses" field.</summary>
    public const int GlobalCacheResponsesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse>.Codec _map_globalCacheResponses_codec
        = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse.Parser), 18);
    private readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse> globalCacheResponses_ = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse> GlobalCacheResponses {
      get { return globalCacheResponses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResultCacheResponse, other.ResultCacheResponse)) return false;
      if (!GlobalCacheResponses.Equals(other.GlobalCacheResponses)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCacheResponse_ != null) hash ^= ResultCacheResponse.GetHashCode();
      hash ^= GlobalCacheResponses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(ref output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (resultCacheResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultCacheResponse);
      }
      size += globalCacheResponses_.CalculateSize(_map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheDeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.resultCacheResponse_ != null) {
        if (resultCacheResponse_ == null) {
          ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse();
        }
        ResultCacheResponse.MergeFrom(other.ResultCacheResponse);
      }
      globalCacheResponses_.MergeFrom(other.globalCacheResponses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyDeleteResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(ref input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyDeleteResponse : pb::IMessage<KeyDeleteResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyDeleteResponse> _parser = new pb::MessageParser<KeyDeleteResponse>(() => new KeyDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyDeleteResponse(KeyDeleteResponse other) : this() {
      operationStatus_ = other.operationStatus_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyDeleteResponse Clone() {
      return new KeyDeleteResponse(this);
    }

    /// <summary>Field number for the "operation_status" field.</summary>
    public const int OperationStatusFieldNumber = 1;
    private global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus operationStatus_ = global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus OperationStatus {
      get { return operationStatus_; }
      set {
        operationStatus_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationStatus != other.OperationStatus) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) hash ^= OperationStatus.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperationStatus);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationStatus);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyDeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.OperationStatus != global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus.Success) {
        OperationStatus = other.OperationStatus;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OperationStatus = (global::Aperture.Flowcontrol.Check.V1.CacheOperationStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheLookupRequest : pb::IMessage<CacheLookupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheLookupRequest> _parser = new pb::MessageParser<CacheLookupRequest>(() => new CacheLookupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheLookupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupRequest(CacheLookupRequest other) : this() {
      controlPoint_ = other.controlPoint_;
      resultCacheKey_ = other.resultCacheKey_;
      globalCacheKeys_ = other.globalCacheKeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupRequest Clone() {
      return new CacheLookupRequest(this);
    }

    /// <summary>Field number for the "control_point" field.</summary>
    public const int ControlPointFieldNumber = 1;
    private string controlPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControlPoint {
      get { return controlPoint_; }
      set {
        controlPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result_cache_key" field.</summary>
    public const int ResultCacheKeyFieldNumber = 2;
    private string resultCacheKey_ = "";
    /// <summary>
    /// Key for result cache that needs to be fetched.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultCacheKey {
      get { return resultCacheKey_; }
      set {
        resultCacheKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "global_cache_keys" field.</summary>
    public const int GlobalCacheKeysFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_globalCacheKeys_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> globalCacheKeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Keys for global cache entries that need to be fetched.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GlobalCacheKeys {
      get { return globalCacheKeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheLookupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheLookupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlPoint != other.ControlPoint) return false;
      if (ResultCacheKey != other.ResultCacheKey) return false;
      if(!globalCacheKeys_.Equals(other.globalCacheKeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlPoint.Length != 0) hash ^= ControlPoint.GetHashCode();
      if (ResultCacheKey.Length != 0) hash ^= ResultCacheKey.GetHashCode();
      hash ^= globalCacheKeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResultCacheKey);
      }
      globalCacheKeys_.WriteTo(output, _repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ControlPoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResultCacheKey);
      }
      globalCacheKeys_.WriteTo(ref output, _repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ControlPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlPoint);
      }
      if (ResultCacheKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultCacheKey);
      }
      size += globalCacheKeys_.CalculateSize(_repeated_globalCacheKeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheLookupRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlPoint.Length != 0) {
        ControlPoint = other.ControlPoint;
      }
      if (other.ResultCacheKey.Length != 0) {
        ResultCacheKey = other.ResultCacheKey;
      }
      globalCacheKeys_.Add(other.globalCacheKeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            ResultCacheKey = input.ReadString();
            break;
          }
          case 26: {
            globalCacheKeys_.AddEntriesFrom(input, _repeated_globalCacheKeys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControlPoint = input.ReadString();
            break;
          }
          case 18: {
            ResultCacheKey = input.ReadString();
            break;
          }
          case 26: {
            globalCacheKeys_.AddEntriesFrom(ref input, _repeated_globalCacheKeys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CacheLookupResponse : pb::IMessage<CacheLookupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CacheLookupResponse> _parser = new pb::MessageParser<CacheLookupResponse>(() => new CacheLookupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CacheLookupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupResponse(CacheLookupResponse other) : this() {
      resultCacheResponse_ = other.resultCacheResponse_ != null ? other.resultCacheResponse_.Clone() : null;
      globalCacheResponses_ = other.globalCacheResponses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CacheLookupResponse Clone() {
      return new CacheLookupResponse(this);
    }

    /// <summary>Field number for the "result_cache_response" field.</summary>
    public const int ResultCacheResponseFieldNumber = 1;
    private global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse resultCacheResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse ResultCacheResponse {
      get { return resultCacheResponse_; }
      set {
        resultCacheResponse_ = value;
      }
    }

    /// <summary>Field number for the "global_cache_responses" field.</summary>
    public const int GlobalCacheResponsesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse>.Codec _map_globalCacheResponses_codec
        = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse.Parser), 18);
    private readonly pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse> globalCacheResponses_ = new pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse> GlobalCacheResponses {
      get { return globalCacheResponses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CacheLookupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CacheLookupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResultCacheResponse, other.ResultCacheResponse)) return false;
      if (!GlobalCacheResponses.Equals(other.GlobalCacheResponses)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCacheResponse_ != null) hash ^= ResultCacheResponse.GetHashCode();
      hash ^= GlobalCacheResponses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCacheResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultCacheResponse);
      }
      globalCacheResponses_.WriteTo(ref output, _map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (resultCacheResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultCacheResponse);
      }
      size += globalCacheResponses_.CalculateSize(_map_globalCacheResponses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CacheLookupResponse other) {
      if (other == null) {
        return;
      }
      if (other.resultCacheResponse_ != null) {
        if (resultCacheResponse_ == null) {
          ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse();
        }
        ResultCacheResponse.MergeFrom(other.ResultCacheResponse);
      }
      globalCacheResponses_.MergeFrom(other.globalCacheResponses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (resultCacheResponse_ == null) {
              ResultCacheResponse = new global::Aperture.Flowcontrol.Check.V1.KeyLookupResponse();
            }
            input.ReadMessage(ResultCacheResponse);
            break;
          }
          case 18: {
            globalCacheResponses_.AddEntriesFrom(ref input, _map_globalCacheResponses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ClassifierInfo describes details for each ClassifierInfo.
  /// </summary>
  public sealed partial class ClassifierInfo : pb::IMessage<ClassifierInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClassifierInfo> _parser = new pb::MessageParser<ClassifierInfo>(() => new ClassifierInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClassifierInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierInfo(ClassifierInfo other) : this() {
      policyName_ = other.policyName_;
      policyHash_ = other.policyHash_;
      classifierIndex_ = other.classifierIndex_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierInfo Clone() {
      return new ClassifierInfo(this);
    }

    /// <summary>Field number for the "policy_name" field.</summary>
    public const int PolicyNameFieldNumber = 1;
    private string policyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PolicyName {
      get { return policyName_; }
      set {
        policyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy_hash" field.</summary>
    public const int PolicyHashFieldNumber = 2;
    private string policyHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PolicyHash {
      get { return policyHash_; }
      set {
        policyHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "classifier_index" field.</summary>
    public const int ClassifierIndexFieldNumber = 3;
    private long classifierIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClassifierIndex {
      get { return classifierIndex_; }
      set {
        classifierIndex_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 5;
    private global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error error_ = global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClassifierInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClassifierInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyName != other.PolicyName) return false;
      if (PolicyHash != other.PolicyHash) return false;
      if (ClassifierIndex != other.ClassifierIndex) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyName.Length != 0) hash ^= PolicyName.GetHashCode();
      if (PolicyHash.Length != 0) hash ^= PolicyHash.GetHashCode();
      if (ClassifierIndex != 0L) hash ^= ClassifierIndex.GetHashCode();
      if (Error != global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PolicyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PolicyHash);
      }
      if (ClassifierIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClassifierIndex);
      }
      if (Error != global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PolicyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PolicyHash);
      }
      if (ClassifierIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClassifierIndex);
      }
      if (Error != global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PolicyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyHash);
      }
      if (ClassifierIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClassifierIndex);
      }
      if (Error != global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClassifierInfo other) {
      if (other == null) {
        return;
      }
      if (other.PolicyName.Length != 0) {
        PolicyName = other.PolicyName;
      }
      if (other.PolicyHash.Length != 0) {
        PolicyHash = other.PolicyHash;
      }
      if (other.ClassifierIndex != 0L) {
        ClassifierIndex = other.ClassifierIndex;
      }
      if (other.Error != global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error.None) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyName = input.ReadString();
            break;
          }
          case 18: {
            PolicyHash = input.ReadString();
            break;
          }
          case 24: {
            ClassifierIndex = input.ReadInt64();
            break;
          }
          case 40: {
            Error = (global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PolicyName = input.ReadString();
            break;
          }
          case 18: {
            PolicyHash = input.ReadString();
            break;
          }
          case 24: {
            ClassifierIndex = input.ReadInt64();
            break;
          }
          case 40: {
            Error = (global::Aperture.Flowcontrol.Check.V1.ClassifierInfo.Types.Error) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ClassifierInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Error information.
      /// </summary>
      public enum Error {
        [pbr::OriginalName("ERROR_NONE")] None = 0,
        [pbr::OriginalName("ERROR_EVAL_FAILED")] EvalFailed = 1,
        [pbr::OriginalName("ERROR_EMPTY_RESULTSET")] EmptyResultset = 2,
        [pbr::OriginalName("ERROR_AMBIGUOUS_RESULTSET")] AmbiguousResultset = 3,
        [pbr::OriginalName("ERROR_MULTI_EXPRESSION")] MultiExpression = 4,
        [pbr::OriginalName("ERROR_EXPRESSION_NOT_MAP")] ExpressionNotMap = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// LimiterDecision describes details for each limiter.
  /// </summary>
  public sealed partial class LimiterDecision : pb::IMessage<LimiterDecision>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimiterDecision> _parser = new pb::MessageParser<LimiterDecision>(() => new LimiterDecision());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LimiterDecision> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimiterDecision() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimiterDecision(LimiterDecision other) : this() {
      policyName_ = other.policyName_;
      policyHash_ = other.policyHash_;
      componentId_ = other.componentId_;
      dropped_ = other.dropped_;
      reason_ = other.reason_;
      deniedResponseStatusCode_ = other.deniedResponseStatusCode_;
      waitTime_ = other.waitTime_ != null ? other.waitTime_.Clone() : null;
      switch (other.DetailsCase) {
        case DetailsOneofCase.RateLimiterInfo:
          RateLimiterInfo = other.RateLimiterInfo.Clone();
          break;
        case DetailsOneofCase.LoadSchedulerInfo:
          LoadSchedulerInfo = other.LoadSchedulerInfo.Clone();
          break;
        case DetailsOneofCase.SamplerInfo:
          SamplerInfo = other.SamplerInfo.Clone();
          break;
        case DetailsOneofCase.QuotaSchedulerInfo:
          QuotaSchedulerInfo = other.QuotaSchedulerInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimiterDecision Clone() {
      return new LimiterDecision(this);
    }

    /// <summary>Field number for the "policy_name" field.</summary>
    public const int PolicyNameFieldNumber = 1;
    private string policyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PolicyName {
      get { return policyName_; }
      set {
        policyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy_hash" field.</summary>
    public const int PolicyHashFieldNumber = 2;
    private string policyHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PolicyHash {
      get { return policyHash_; }
      set {
        policyHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "component_id" field.</summary>
    public const int ComponentIdFieldNumber = 3;
    private string componentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentId {
      get { return componentId_; }
      set {
        componentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dropped" field.</summary>
    public const int DroppedFieldNumber = 4;
    private bool dropped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Dropped {
      get { return dropped_; }
      set {
        dropped_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason reason_ = global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "denied_response_status_code" field.</summary>
    public const int DeniedResponseStatusCodeFieldNumber = 10;
    private global::Aperture.Flowcontrol.Check.V1.StatusCode deniedResponseStatusCode_ = global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.StatusCode DeniedResponseStatusCode {
      get { return deniedResponseStatusCode_; }
      set {
        deniedResponseStatusCode_ = value;
      }
    }

    /// <summary>Field number for the "wait_time" field.</summary>
    public const int WaitTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Duration waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "rate_limiter_info" field.</summary>
    public const int RateLimiterInfoFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo RateLimiterInfo {
      get { return detailsCase_ == DetailsOneofCase.RateLimiterInfo ? (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.RateLimiterInfo;
      }
    }

    /// <summary>Field number for the "load_scheduler_info" field.</summary>
    public const int LoadSchedulerInfoFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo LoadSchedulerInfo {
      get { return detailsCase_ == DetailsOneofCase.LoadSchedulerInfo ? (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.LoadSchedulerInfo;
      }
    }

    /// <summary>Field number for the "sampler_info" field.</summary>
    public const int SamplerInfoFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo SamplerInfo {
      get { return detailsCase_ == DetailsOneofCase.SamplerInfo ? (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.SamplerInfo;
      }
    }

    /// <summary>Field number for the "quota_scheduler_info" field.</summary>
    public const int QuotaSchedulerInfoFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo QuotaSchedulerInfo {
      get { return detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo ? (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.QuotaSchedulerInfo;
      }
    }

    private object details_;
    /// <summary>Enum of possible cases for the "details" oneof.</summary>
    public enum DetailsOneofCase {
      None = 0,
      RateLimiterInfo = 20,
      LoadSchedulerInfo = 21,
      SamplerInfo = 22,
      QuotaSchedulerInfo = 23,
    }
    private DetailsOneofCase detailsCase_ = DetailsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailsOneofCase DetailsCase {
      get { return detailsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetails() {
      detailsCase_ = DetailsOneofCase.None;
      details_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LimiterDecision);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LimiterDecision other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyName != other.PolicyName) return false;
      if (PolicyHash != other.PolicyHash) return false;
      if (ComponentId != other.ComponentId) return false;
      if (Dropped != other.Dropped) return false;
      if (Reason != other.Reason) return false;
      if (DeniedResponseStatusCode != other.DeniedResponseStatusCode) return false;
      if (!object.Equals(WaitTime, other.WaitTime)) return false;
      if (!object.Equals(RateLimiterInfo, other.RateLimiterInfo)) return false;
      if (!object.Equals(LoadSchedulerInfo, other.LoadSchedulerInfo)) return false;
      if (!object.Equals(SamplerInfo, other.SamplerInfo)) return false;
      if (!object.Equals(QuotaSchedulerInfo, other.QuotaSchedulerInfo)) return false;
      if (DetailsCase != other.DetailsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyName.Length != 0) hash ^= PolicyName.GetHashCode();
      if (PolicyHash.Length != 0) hash ^= PolicyHash.GetHashCode();
      if (ComponentId.Length != 0) hash ^= ComponentId.GetHashCode();
      if (Dropped != false) hash ^= Dropped.GetHashCode();
      if (Reason != global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified) hash ^= Reason.GetHashCode();
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) hash ^= DeniedResponseStatusCode.GetHashCode();
      if (waitTime_ != null) hash ^= WaitTime.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) hash ^= RateLimiterInfo.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) hash ^= LoadSchedulerInfo.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.SamplerInfo) hash ^= SamplerInfo.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) hash ^= QuotaSchedulerInfo.GetHashCode();
      hash ^= (int) detailsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PolicyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PolicyHash);
      }
      if (ComponentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ComponentId);
      }
      if (Dropped != false) {
        output.WriteRawTag(32);
        output.WriteBool(Dropped);
      }
      if (Reason != global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Reason);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DeniedResponseStatusCode);
      }
      if (waitTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(WaitTime);
      }
      if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RateLimiterInfo);
      }
      if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LoadSchedulerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.SamplerInfo) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SamplerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(QuotaSchedulerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PolicyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PolicyHash);
      }
      if (ComponentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ComponentId);
      }
      if (Dropped != false) {
        output.WriteRawTag(32);
        output.WriteBool(Dropped);
      }
      if (Reason != global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Reason);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DeniedResponseStatusCode);
      }
      if (waitTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(WaitTime);
      }
      if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RateLimiterInfo);
      }
      if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LoadSchedulerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.SamplerInfo) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SamplerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(QuotaSchedulerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PolicyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyName);
      }
      if (PolicyHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyHash);
      }
      if (ComponentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentId);
      }
      if (Dropped != false) {
        size += 1 + 1;
      }
      if (Reason != global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeniedResponseStatusCode);
      }
      if (waitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WaitTime);
      }
      if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RateLimiterInfo);
      }
      if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LoadSchedulerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.SamplerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SamplerInfo);
      }
      if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuotaSchedulerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LimiterDecision other) {
      if (other == null) {
        return;
      }
      if (other.PolicyName.Length != 0) {
        PolicyName = other.PolicyName;
      }
      if (other.PolicyHash.Length != 0) {
        PolicyHash = other.PolicyHash;
      }
      if (other.ComponentId.Length != 0) {
        ComponentId = other.ComponentId;
      }
      if (other.Dropped != false) {
        Dropped = other.Dropped;
      }
      if (other.Reason != global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason.Unspecified) {
        Reason = other.Reason;
      }
      if (other.DeniedResponseStatusCode != global::Aperture.Flowcontrol.Check.V1.StatusCode.Empty) {
        DeniedResponseStatusCode = other.DeniedResponseStatusCode;
      }
      if (other.waitTime_ != null) {
        if (waitTime_ == null) {
          WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WaitTime.MergeFrom(other.WaitTime);
      }
      switch (other.DetailsCase) {
        case DetailsOneofCase.RateLimiterInfo:
          if (RateLimiterInfo == null) {
            RateLimiterInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo();
          }
          RateLimiterInfo.MergeFrom(other.RateLimiterInfo);
          break;
        case DetailsOneofCase.LoadSchedulerInfo:
          if (LoadSchedulerInfo == null) {
            LoadSchedulerInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo();
          }
          LoadSchedulerInfo.MergeFrom(other.LoadSchedulerInfo);
          break;
        case DetailsOneofCase.SamplerInfo:
          if (SamplerInfo == null) {
            SamplerInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo();
          }
          SamplerInfo.MergeFrom(other.SamplerInfo);
          break;
        case DetailsOneofCase.QuotaSchedulerInfo:
          if (QuotaSchedulerInfo == null) {
            QuotaSchedulerInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo();
          }
          QuotaSchedulerInfo.MergeFrom(other.QuotaSchedulerInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyName = input.ReadString();
            break;
          }
          case 18: {
            PolicyHash = input.ReadString();
            break;
          }
          case 26: {
            ComponentId = input.ReadString();
            break;
          }
          case 32: {
            Dropped = input.ReadBool();
            break;
          }
          case 40: {
            Reason = (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason) input.ReadEnum();
            break;
          }
          case 80: {
            DeniedResponseStatusCode = (global::Aperture.Flowcontrol.Check.V1.StatusCode) input.ReadEnum();
            break;
          }
          case 90: {
            if (waitTime_ == null) {
              WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WaitTime);
            break;
          }
          case 162: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo();
            if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) {
              subBuilder.MergeFrom(RateLimiterInfo);
            }
            input.ReadMessage(subBuilder);
            RateLimiterInfo = subBuilder;
            break;
          }
          case 170: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo();
            if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) {
              subBuilder.MergeFrom(LoadSchedulerInfo);
            }
            input.ReadMessage(subBuilder);
            LoadSchedulerInfo = subBuilder;
            break;
          }
          case 178: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo();
            if (detailsCase_ == DetailsOneofCase.SamplerInfo) {
              subBuilder.MergeFrom(SamplerInfo);
            }
            input.ReadMessage(subBuilder);
            SamplerInfo = subBuilder;
            break;
          }
          case 186: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo();
            if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) {
              subBuilder.MergeFrom(QuotaSchedulerInfo);
            }
            input.ReadMessage(subBuilder);
            QuotaSchedulerInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PolicyName = input.ReadString();
            break;
          }
          case 18: {
            PolicyHash = input.ReadString();
            break;
          }
          case 26: {
            ComponentId = input.ReadString();
            break;
          }
          case 32: {
            Dropped = input.ReadBool();
            break;
          }
          case 40: {
            Reason = (global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.LimiterReason) input.ReadEnum();
            break;
          }
          case 80: {
            DeniedResponseStatusCode = (global::Aperture.Flowcontrol.Check.V1.StatusCode) input.ReadEnum();
            break;
          }
          case 90: {
            if (waitTime_ == null) {
              WaitTime = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WaitTime);
            break;
          }
          case 162: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.RateLimiterInfo();
            if (detailsCase_ == DetailsOneofCase.RateLimiterInfo) {
              subBuilder.MergeFrom(RateLimiterInfo);
            }
            input.ReadMessage(subBuilder);
            RateLimiterInfo = subBuilder;
            break;
          }
          case 170: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SchedulerInfo();
            if (detailsCase_ == DetailsOneofCase.LoadSchedulerInfo) {
              subBuilder.MergeFrom(LoadSchedulerInfo);
            }
            input.ReadMessage(subBuilder);
            LoadSchedulerInfo = subBuilder;
            break;
          }
          case 178: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.SamplerInfo();
            if (detailsCase_ == DetailsOneofCase.SamplerInfo) {
              subBuilder.MergeFrom(SamplerInfo);
            }
            input.ReadMessage(subBuilder);
            SamplerInfo = subBuilder;
            break;
          }
          case 186: {
            global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo subBuilder = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.QuotaSchedulerInfo();
            if (detailsCase_ == DetailsOneofCase.QuotaSchedulerInfo) {
              subBuilder.MergeFrom(QuotaSchedulerInfo);
            }
            input.ReadMessage(subBuilder);
            QuotaSchedulerInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LimiterDecision message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum LimiterReason {
        [pbr::OriginalName("LIMITER_REASON_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("LIMITER_REASON_KEY_NOT_FOUND")] KeyNotFound = 1,
      }

      public sealed partial class TokensInfo : pb::IMessage<TokensInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TokensInfo> _parser = new pb::MessageParser<TokensInfo>(() => new TokensInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TokensInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TokensInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TokensInfo(TokensInfo other) : this() {
          remaining_ = other.remaining_;
          current_ = other.current_;
          consumed_ = other.consumed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TokensInfo Clone() {
          return new TokensInfo(this);
        }

        /// <summary>Field number for the "remaining" field.</summary>
        public const int RemainingFieldNumber = 1;
        private double remaining_;
        /// <summary>
        /// remaining and current may not
        /// provide accurate values in case
        /// the request times out while waiting
        /// for tokens.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Remaining {
          get { return remaining_; }
          set {
            remaining_ = value;
          }
        }

        /// <summary>Field number for the "current" field.</summary>
        public const int CurrentFieldNumber = 2;
        private double current_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Current {
          get { return current_; }
          set {
            current_ = value;
          }
        }

        /// <summary>Field number for the "consumed" field.</summary>
        public const int ConsumedFieldNumber = 3;
        private double consumed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Consumed {
          get { return consumed_; }
          set {
            consumed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TokensInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TokensInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Remaining, other.Remaining)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Current, other.Current)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Consumed, other.Consumed)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Remaining != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Remaining);
          if (Current != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Current);
          if (Consumed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Consumed);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Remaining != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Remaining);
          }
          if (Current != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Current);
          }
          if (Consumed != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Consumed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Remaining != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Remaining);
          }
          if (Current != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Current);
          }
          if (Consumed != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Consumed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Remaining != 0D) {
            size += 1 + 8;
          }
          if (Current != 0D) {
            size += 1 + 8;
          }
          if (Consumed != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TokensInfo other) {
          if (other == null) {
            return;
          }
          if (other.Remaining != 0D) {
            Remaining = other.Remaining;
          }
          if (other.Current != 0D) {
            Current = other.Current;
          }
          if (other.Consumed != 0D) {
            Consumed = other.Consumed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Remaining = input.ReadDouble();
                break;
              }
              case 17: {
                Current = input.ReadDouble();
                break;
              }
              case 25: {
                Consumed = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Remaining = input.ReadDouble();
                break;
              }
              case 17: {
                Current = input.ReadDouble();
                break;
              }
              case 25: {
                Consumed = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RateLimiterInfo : pb::IMessage<RateLimiterInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RateLimiterInfo> _parser = new pb::MessageParser<RateLimiterInfo>(() => new RateLimiterInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RateLimiterInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimiterInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimiterInfo(RateLimiterInfo other) : this() {
          label_ = other.label_;
          tokensInfo_ = other.tokensInfo_ != null ? other.tokensInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimiterInfo Clone() {
          return new RateLimiterInfo(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tokens_info" field.</summary>
        public const int TokensInfoFieldNumber = 2;
        private global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo tokensInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo TokensInfo {
          get { return tokensInfo_; }
          set {
            tokensInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RateLimiterInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RateLimiterInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if (!object.Equals(TokensInfo, other.TokensInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (tokensInfo_ != null) hash ^= TokensInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TokensInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TokensInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (tokensInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokensInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RateLimiterInfo other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          if (other.tokensInfo_ != null) {
            if (tokensInfo_ == null) {
              TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
            }
            TokensInfo.MergeFrom(other.TokensInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SchedulerInfo : pb::IMessage<SchedulerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SchedulerInfo> _parser = new pb::MessageParser<SchedulerInfo>(() => new SchedulerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SchedulerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SchedulerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SchedulerInfo(SchedulerInfo other) : this() {
          workloadIndex_ = other.workloadIndex_;
          tokensInfo_ = other.tokensInfo_ != null ? other.tokensInfo_.Clone() : null;
          priority_ = other.priority_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SchedulerInfo Clone() {
          return new SchedulerInfo(this);
        }

        /// <summary>Field number for the "workload_index" field.</summary>
        public const int WorkloadIndexFieldNumber = 1;
        private string workloadIndex_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string WorkloadIndex {
          get { return workloadIndex_; }
          set {
            workloadIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tokens_info" field.</summary>
        public const int TokensInfoFieldNumber = 2;
        private global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo tokensInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo TokensInfo {
          get { return tokensInfo_; }
          set {
            tokensInfo_ = value;
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 3;
        private double priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SchedulerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SchedulerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WorkloadIndex != other.WorkloadIndex) return false;
          if (!object.Equals(TokensInfo, other.TokensInfo)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Priority, other.Priority)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (WorkloadIndex.Length != 0) hash ^= WorkloadIndex.GetHashCode();
          if (tokensInfo_ != null) hash ^= TokensInfo.GetHashCode();
          if (Priority != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Priority);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (WorkloadIndex.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TokensInfo);
          }
          if (Priority != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (WorkloadIndex.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TokensInfo);
          }
          if (Priority != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (WorkloadIndex.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokensInfo);
          }
          if (Priority != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SchedulerInfo other) {
          if (other == null) {
            return;
          }
          if (other.WorkloadIndex.Length != 0) {
            WorkloadIndex = other.WorkloadIndex;
          }
          if (other.tokensInfo_ != null) {
            if (tokensInfo_ == null) {
              TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
            }
            TokensInfo.MergeFrom(other.TokensInfo);
          }
          if (other.Priority != 0D) {
            Priority = other.Priority;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                WorkloadIndex = input.ReadString();
                break;
              }
              case 18: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
              case 25: {
                Priority = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                WorkloadIndex = input.ReadString();
                break;
              }
              case 18: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
              case 25: {
                Priority = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SamplerInfo : pb::IMessage<SamplerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SamplerInfo> _parser = new pb::MessageParser<SamplerInfo>(() => new SamplerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SamplerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SamplerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SamplerInfo(SamplerInfo other) : this() {
          label_ = other.label_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SamplerInfo Clone() {
          return new SamplerInfo(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SamplerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SamplerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SamplerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class QuotaSchedulerInfo : pb::IMessage<QuotaSchedulerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QuotaSchedulerInfo> _parser = new pb::MessageParser<QuotaSchedulerInfo>(() => new QuotaSchedulerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QuotaSchedulerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QuotaSchedulerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QuotaSchedulerInfo(QuotaSchedulerInfo other) : this() {
          label_ = other.label_;
          workloadIndex_ = other.workloadIndex_;
          tokensInfo_ = other.tokensInfo_ != null ? other.tokensInfo_.Clone() : null;
          priority_ = other.priority_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QuotaSchedulerInfo Clone() {
          return new QuotaSchedulerInfo(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "workload_index" field.</summary>
        public const int WorkloadIndexFieldNumber = 2;
        private string workloadIndex_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string WorkloadIndex {
          get { return workloadIndex_; }
          set {
            workloadIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tokens_info" field.</summary>
        public const int TokensInfoFieldNumber = 3;
        private global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo tokensInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo TokensInfo {
          get { return tokensInfo_; }
          set {
            tokensInfo_ = value;
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 4;
        private double priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QuotaSchedulerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QuotaSchedulerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if (WorkloadIndex != other.WorkloadIndex) return false;
          if (!object.Equals(TokensInfo, other.TokensInfo)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Priority, other.Priority)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (WorkloadIndex.Length != 0) hash ^= WorkloadIndex.GetHashCode();
          if (tokensInfo_ != null) hash ^= TokensInfo.GetHashCode();
          if (Priority != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Priority);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (WorkloadIndex.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TokensInfo);
          }
          if (Priority != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (WorkloadIndex.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TokensInfo);
          }
          if (Priority != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (WorkloadIndex.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkloadIndex);
          }
          if (tokensInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokensInfo);
          }
          if (Priority != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QuotaSchedulerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          if (other.WorkloadIndex.Length != 0) {
            WorkloadIndex = other.WorkloadIndex;
          }
          if (other.tokensInfo_ != null) {
            if (tokensInfo_ == null) {
              TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
            }
            TokensInfo.MergeFrom(other.TokensInfo);
          }
          if (other.Priority != 0D) {
            Priority = other.Priority;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                WorkloadIndex = input.ReadString();
                break;
              }
              case 26: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
              case 33: {
                Priority = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                WorkloadIndex = input.ReadString();
                break;
              }
              case 26: {
                if (tokensInfo_ == null) {
                  TokensInfo = new global::Aperture.Flowcontrol.Check.V1.LimiterDecision.Types.TokensInfo();
                }
                input.ReadMessage(TokensInfo);
                break;
              }
              case 33: {
                Priority = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// FluxMeterInfo describes detail for each FluxMeterInfo.
  /// </summary>
  public sealed partial class FluxMeterInfo : pb::IMessage<FluxMeterInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FluxMeterInfo> _parser = new pb::MessageParser<FluxMeterInfo>(() => new FluxMeterInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FluxMeterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aperture.Flowcontrol.Check.V1.CheckReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FluxMeterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FluxMeterInfo(FluxMeterInfo other) : this() {
      fluxMeterName_ = other.fluxMeterName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FluxMeterInfo Clone() {
      return new FluxMeterInfo(this);
    }

    /// <summary>Field number for the "flux_meter_name" field.</summary>
    public const int FluxMeterNameFieldNumber = 1;
    private string fluxMeterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FluxMeterName {
      get { return fluxMeterName_; }
      set {
        fluxMeterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FluxMeterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FluxMeterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FluxMeterName != other.FluxMeterName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FluxMeterName.Length != 0) hash ^= FluxMeterName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FluxMeterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FluxMeterName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FluxMeterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FluxMeterName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FluxMeterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FluxMeterName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FluxMeterInfo other) {
      if (other == null) {
        return;
      }
      if (other.FluxMeterName.Length != 0) {
        FluxMeterName = other.FluxMeterName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FluxMeterName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FluxMeterName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
