// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/auth/v3/authz_stripped.proto

package com.fluxninja.generated.envoy.service.auth.v3;

public interface ConfigCoreMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.auth.v3.ConfigCoreMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * If both ``filter_metadata`` and
   * :ref:`typed_filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata&gt;`
   * fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; filter_metadata = 1 [json_name = "filterMetadata"];</code>
   */
  int getFilterMetadataCount();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * If both ``filter_metadata`` and
   * :ref:`typed_filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata&gt;`
   * fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; filter_metadata = 1 [json_name = "filterMetadata"];</code>
   */
  boolean containsFilterMetadata(
      java.lang.String key);
  /**
   * Use {@link #getFilterMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getFilterMetadata();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * If both ``filter_metadata`` and
   * :ref:`typed_filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata&gt;`
   * fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; filter_metadata = 1 [json_name = "filterMetadata"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getFilterMetadataMap();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * If both ``filter_metadata`` and
   * :ref:`typed_filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata&gt;`
   * fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; filter_metadata = 1 [json_name = "filterMetadata"];</code>
   */

  /* nullable */
com.google.protobuf.Struct getFilterMetadataOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Struct defaultValue);
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * If both ``filter_metadata`` and
   * :ref:`typed_filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata&gt;`
   * fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; filter_metadata = 1 [json_name = "filterMetadata"];</code>
   */

  com.google.protobuf.Struct getFilterMetadataOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * The value is encoded as google.protobuf.Any.
   * If both :ref:`filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.filter_metadata&gt;`
   * and ``typed_filter_metadata`` fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_filter_metadata = 2 [json_name = "typedFilterMetadata"];</code>
   */
  int getTypedFilterMetadataCount();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * The value is encoded as google.protobuf.Any.
   * If both :ref:`filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.filter_metadata&gt;`
   * and ``typed_filter_metadata`` fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_filter_metadata = 2 [json_name = "typedFilterMetadata"];</code>
   */
  boolean containsTypedFilterMetadata(
      java.lang.String key);
  /**
   * Use {@link #getTypedFilterMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedFilterMetadata();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * The value is encoded as google.protobuf.Any.
   * If both :ref:`filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.filter_metadata&gt;`
   * and ``typed_filter_metadata`` fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_filter_metadata = 2 [json_name = "typedFilterMetadata"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedFilterMetadataMap();
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * The value is encoded as google.protobuf.Any.
   * If both :ref:`filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.filter_metadata&gt;`
   * and ``typed_filter_metadata`` fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_filter_metadata = 2 [json_name = "typedFilterMetadata"];</code>
   */

  /* nullable */
com.google.protobuf.Any getTypedFilterMetadataOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Any defaultValue);
  /**
   * <pre>
   * Key is the reverse DNS filter name, e.g. com.acme.widget. The ``envoy.*``
   * namespace is reserved for Envoy's built-in filters.
   * The value is encoded as google.protobuf.Any.
   * If both :ref:`filter_metadata &lt;envoy_v3_api_field_config.core.v3.Metadata.filter_metadata&gt;`
   * and ``typed_filter_metadata`` fields are present in the metadata with same keys,
   * only ``typed_filter_metadata`` field will be parsed.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_filter_metadata = 2 [json_name = "typedFilterMetadata"];</code>
   */

  com.google.protobuf.Any getTypedFilterMetadataOrThrow(
      java.lang.String key);
}
