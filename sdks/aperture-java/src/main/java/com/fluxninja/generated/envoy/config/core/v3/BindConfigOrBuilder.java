// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/address.proto

package com.fluxninja.generated.envoy.config.core.v3;

public interface BindConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.core.v3.BindConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SocketAddress source_address = 1 [json_name = "sourceAddress", (.validate.rules) = { ... }</code>
   * @return Whether the sourceAddress field is set.
   */
  boolean hasSourceAddress();
  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SocketAddress source_address = 1 [json_name = "sourceAddress", (.validate.rules) = { ... }</code>
   * @return The sourceAddress.
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketAddress getSourceAddress();
  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SocketAddress source_address = 1 [json_name = "sourceAddress", (.validate.rules) = { ... }</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketAddressOrBuilder getSourceAddressOrBuilder();

  /**
   * <pre>
   * Whether to set the ``IP_FREEBIND`` option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_v3_api_field_config.cluster.v3.UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option ``IP_FREEBIND`` is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2 [json_name = "freebind"];</code>
   * @return Whether the freebind field is set.
   */
  boolean hasFreebind();
  /**
   * <pre>
   * Whether to set the ``IP_FREEBIND`` option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_v3_api_field_config.cluster.v3.UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option ``IP_FREEBIND`` is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2 [json_name = "freebind"];</code>
   * @return The freebind.
   */
  com.google.protobuf.BoolValue getFreebind();
  /**
   * <pre>
   * Whether to set the ``IP_FREEBIND`` option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_v3_api_field_config.cluster.v3.UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option ``IP_FREEBIND`` is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2 [json_name = "freebind"];</code>
   */
  com.google.protobuf.BoolValueOrBuilder getFreebindOrBuilder();

  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 3 [json_name = "socketOptions"];</code>
   */
  java.util.List<com.fluxninja.generated.envoy.config.core.v3.SocketOption> 
      getSocketOptionsList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 3 [json_name = "socketOptions"];</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketOption getSocketOptions(int index);
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 3 [json_name = "socketOptions"];</code>
   */
  int getSocketOptionsCount();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 3 [json_name = "socketOptions"];</code>
   */
  java.util.List<? extends com.fluxninja.generated.envoy.config.core.v3.SocketOptionOrBuilder> 
      getSocketOptionsOrBuilderList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 3 [json_name = "socketOptions"];</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketOptionOrBuilder getSocketOptionsOrBuilder(
      int index);

  /**
   * <pre>
   * Additional source addresses appended to the address specified in the `source_address`
   * field. This enables to specify multiple source addresses. Currently, only one additional
   * address can be supported, and the additional address should have a different IP version
   * with the address in the `source_address` field. The address which has the same IP
   * version with the target host's address IP version will be used as bind address. If more
   * than one additional address specified, only the first address matched IP version will be
   * returned. If there is no same IP version address found, the address in the `source_address`
   * will be returned.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketAddress additional_source_addresses = 4 [json_name = "additionalSourceAddresses"];</code>
   */
  java.util.List<com.fluxninja.generated.envoy.config.core.v3.SocketAddress> 
      getAdditionalSourceAddressesList();
  /**
   * <pre>
   * Additional source addresses appended to the address specified in the `source_address`
   * field. This enables to specify multiple source addresses. Currently, only one additional
   * address can be supported, and the additional address should have a different IP version
   * with the address in the `source_address` field. The address which has the same IP
   * version with the target host's address IP version will be used as bind address. If more
   * than one additional address specified, only the first address matched IP version will be
   * returned. If there is no same IP version address found, the address in the `source_address`
   * will be returned.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketAddress additional_source_addresses = 4 [json_name = "additionalSourceAddresses"];</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketAddress getAdditionalSourceAddresses(int index);
  /**
   * <pre>
   * Additional source addresses appended to the address specified in the `source_address`
   * field. This enables to specify multiple source addresses. Currently, only one additional
   * address can be supported, and the additional address should have a different IP version
   * with the address in the `source_address` field. The address which has the same IP
   * version with the target host's address IP version will be used as bind address. If more
   * than one additional address specified, only the first address matched IP version will be
   * returned. If there is no same IP version address found, the address in the `source_address`
   * will be returned.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketAddress additional_source_addresses = 4 [json_name = "additionalSourceAddresses"];</code>
   */
  int getAdditionalSourceAddressesCount();
  /**
   * <pre>
   * Additional source addresses appended to the address specified in the `source_address`
   * field. This enables to specify multiple source addresses. Currently, only one additional
   * address can be supported, and the additional address should have a different IP version
   * with the address in the `source_address` field. The address which has the same IP
   * version with the target host's address IP version will be used as bind address. If more
   * than one additional address specified, only the first address matched IP version will be
   * returned. If there is no same IP version address found, the address in the `source_address`
   * will be returned.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketAddress additional_source_addresses = 4 [json_name = "additionalSourceAddresses"];</code>
   */
  java.util.List<? extends com.fluxninja.generated.envoy.config.core.v3.SocketAddressOrBuilder> 
      getAdditionalSourceAddressesOrBuilderList();
  /**
   * <pre>
   * Additional source addresses appended to the address specified in the `source_address`
   * field. This enables to specify multiple source addresses. Currently, only one additional
   * address can be supported, and the additional address should have a different IP version
   * with the address in the `source_address` field. The address which has the same IP
   * version with the target host's address IP version will be used as bind address. If more
   * than one additional address specified, only the first address matched IP version will be
   * returned. If there is no same IP version address found, the address in the `source_address`
   * will be returned.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketAddress additional_source_addresses = 4 [json_name = "additionalSourceAddresses"];</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.SocketAddressOrBuilder getAdditionalSourceAddressesOrBuilder(
      int index);
}
