// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/base.proto

package com.fluxninja.generated.envoy.config.core.v3;

public interface ExtensionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.core.v3.Extension)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is the name of the Envoy filter as specified in the Envoy
   * configuration, e.g. envoy.filters.http.router, com.acme.widget.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * This is the name of the Envoy filter as specified in the Envoy
   * configuration, e.g. envoy.filters.http.router, com.acme.widget.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Category of the extension.
   * Extension category names use reverse DNS notation. For instance "envoy.filters.listener"
   * for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from
   * acme.com vendor.
   * [#comment:TODO(yanavlasov): Link to the doc with existing envoy category names.]
   * </pre>
   *
   * <code>string category = 2 [json_name = "category"];</code>
   * @return The category.
   */
  java.lang.String getCategory();
  /**
   * <pre>
   * Category of the extension.
   * Extension category names use reverse DNS notation. For instance "envoy.filters.listener"
   * for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from
   * acme.com vendor.
   * [#comment:TODO(yanavlasov): Link to the doc with existing envoy category names.]
   * </pre>
   *
   * <code>string category = 2 [json_name = "category"];</code>
   * @return The bytes for category.
   */
  com.google.protobuf.ByteString
      getCategoryBytes();

  /**
   * <pre>
   * [#not-implemented-hide:] Type descriptor of extension configuration proto.
   * [#comment:TODO(yanavlasov): Link to the doc with existing configuration protos.]
   * [#comment:TODO(yanavlasov): Add tests when PR #9391 lands.]
   * </pre>
   *
   * <code>string type_descriptor = 3 [json_name = "typeDescriptor", deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.core.v3.Extension.type_descriptor is deprecated.
   *     See envoy/config/core/v3/base.proto;l=123
   * @return The typeDescriptor.
   */
  @java.lang.Deprecated java.lang.String getTypeDescriptor();
  /**
   * <pre>
   * [#not-implemented-hide:] Type descriptor of extension configuration proto.
   * [#comment:TODO(yanavlasov): Link to the doc with existing configuration protos.]
   * [#comment:TODO(yanavlasov): Add tests when PR #9391 lands.]
   * </pre>
   *
   * <code>string type_descriptor = 3 [json_name = "typeDescriptor", deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.core.v3.Extension.type_descriptor is deprecated.
   *     See envoy/config/core/v3/base.proto;l=123
   * @return The bytes for typeDescriptor.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getTypeDescriptorBytes();

  /**
   * <pre>
   * The version is a property of the extension and maintained independently
   * of other extensions and the Envoy API.
   * This field is not set when extension did not provide version information.
   * </pre>
   *
   * <code>.envoy.config.core.v3.BuildVersion version = 4 [json_name = "version"];</code>
   * @return Whether the version field is set.
   */
  boolean hasVersion();
  /**
   * <pre>
   * The version is a property of the extension and maintained independently
   * of other extensions and the Envoy API.
   * This field is not set when extension did not provide version information.
   * </pre>
   *
   * <code>.envoy.config.core.v3.BuildVersion version = 4 [json_name = "version"];</code>
   * @return The version.
   */
  com.fluxninja.generated.envoy.config.core.v3.BuildVersion getVersion();
  /**
   * <pre>
   * The version is a property of the extension and maintained independently
   * of other extensions and the Envoy API.
   * This field is not set when extension did not provide version information.
   * </pre>
   *
   * <code>.envoy.config.core.v3.BuildVersion version = 4 [json_name = "version"];</code>
   */
  com.fluxninja.generated.envoy.config.core.v3.BuildVersionOrBuilder getVersionOrBuilder();

  /**
   * <pre>
   * Indicates that the extension is present but was disabled via dynamic configuration.
   * </pre>
   *
   * <code>bool disabled = 5 [json_name = "disabled"];</code>
   * @return The disabled.
   */
  boolean getDisabled();

  /**
   * <pre>
   * Type URLs of extension configuration protos.
   * </pre>
   *
   * <code>repeated string type_urls = 6 [json_name = "typeUrls"];</code>
   * @return A list containing the typeUrls.
   */
  java.util.List<java.lang.String>
      getTypeUrlsList();
  /**
   * <pre>
   * Type URLs of extension configuration protos.
   * </pre>
   *
   * <code>repeated string type_urls = 6 [json_name = "typeUrls"];</code>
   * @return The count of typeUrls.
   */
  int getTypeUrlsCount();
  /**
   * <pre>
   * Type URLs of extension configuration protos.
   * </pre>
   *
   * <code>repeated string type_urls = 6 [json_name = "typeUrls"];</code>
   * @param index The index of the element to return.
   * @return The typeUrls at the given index.
   */
  java.lang.String getTypeUrls(int index);
  /**
   * <pre>
   * Type URLs of extension configuration protos.
   * </pre>
   *
   * <code>repeated string type_urls = 6 [json_name = "typeUrls"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the typeUrls at the given index.
   */
  com.google.protobuf.ByteString
      getTypeUrlsBytes(int index);
}
