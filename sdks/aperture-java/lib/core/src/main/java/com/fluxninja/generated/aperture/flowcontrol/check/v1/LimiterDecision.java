// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/check/v1/check.proto

package com.fluxninja.generated.aperture.flowcontrol.check.v1;

/**
 * <pre>
 * LimiterDecision describes details for each limiter.
 * </pre>
 *
 * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision}
 */
public final class LimiterDecision extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision)
    LimiterDecisionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LimiterDecision.newBuilder() to construct.
  private LimiterDecision(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LimiterDecision() {
    policyName_ = "";
    policyHash_ = "";
    componentId_ = "";
    reason_ = 0;
    deniedResponseStatusCode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LimiterDecision();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.Builder.class);
  }

  /**
   * Protobuf enum {@code aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason}
   */
  public enum LimiterReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LIMITER_REASON_UNSPECIFIED = 0;</code>
     */
    LIMITER_REASON_UNSPECIFIED(0),
    /**
     * <code>LIMITER_REASON_KEY_NOT_FOUND = 1;</code>
     */
    LIMITER_REASON_KEY_NOT_FOUND(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LIMITER_REASON_UNSPECIFIED = 0;</code>
     */
    public static final int LIMITER_REASON_UNSPECIFIED_VALUE = 0;
    /**
     * <code>LIMITER_REASON_KEY_NOT_FOUND = 1;</code>
     */
    public static final int LIMITER_REASON_KEY_NOT_FOUND_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LimiterReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LimiterReason forNumber(int value) {
      switch (value) {
        case 0: return LIMITER_REASON_UNSPECIFIED;
        case 1: return LIMITER_REASON_KEY_NOT_FOUND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LimiterReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LimiterReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LimiterReason>() {
            public LimiterReason findValueByNumber(int number) {
              return LimiterReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.getDescriptor().getEnumTypes().get(0);
    }

    private static final LimiterReason[] VALUES = values();

    public static LimiterReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LimiterReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason)
  }

  public interface TokensInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * remaining and current may not
     * provide accurate values in case
     * the request times out while waiting
     * for tokens.
     * </pre>
     *
     * <code>double remaining = 1 [json_name = "remaining"];</code>
     * @return The remaining.
     */
    double getRemaining();

    /**
     * <code>double current = 2 [json_name = "current"];</code>
     * @return The current.
     */
    double getCurrent();

    /**
     * <code>double consumed = 3 [json_name = "consumed"];</code>
     * @return The consumed.
     */
    double getConsumed();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo}
   */
  public static final class TokensInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)
      TokensInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TokensInfo.newBuilder() to construct.
    private TokensInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokensInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TokensInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder.class);
    }

    public static final int REMAINING_FIELD_NUMBER = 1;
    private double remaining_ = 0D;
    /**
     * <pre>
     * remaining and current may not
     * provide accurate values in case
     * the request times out while waiting
     * for tokens.
     * </pre>
     *
     * <code>double remaining = 1 [json_name = "remaining"];</code>
     * @return The remaining.
     */
    @java.lang.Override
    public double getRemaining() {
      return remaining_;
    }

    public static final int CURRENT_FIELD_NUMBER = 2;
    private double current_ = 0D;
    /**
     * <code>double current = 2 [json_name = "current"];</code>
     * @return The current.
     */
    @java.lang.Override
    public double getCurrent() {
      return current_;
    }

    public static final int CONSUMED_FIELD_NUMBER = 3;
    private double consumed_ = 0D;
    /**
     * <code>double consumed = 3 [json_name = "consumed"];</code>
     * @return The consumed.
     */
    @java.lang.Override
    public double getConsumed() {
      return consumed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(remaining_) != 0) {
        output.writeDouble(1, remaining_);
      }
      if (java.lang.Double.doubleToRawLongBits(current_) != 0) {
        output.writeDouble(2, current_);
      }
      if (java.lang.Double.doubleToRawLongBits(consumed_) != 0) {
        output.writeDouble(3, consumed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(remaining_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, remaining_);
      }
      if (java.lang.Double.doubleToRawLongBits(current_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, current_);
      }
      if (java.lang.Double.doubleToRawLongBits(consumed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, consumed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo) obj;

      if (java.lang.Double.doubleToLongBits(getRemaining())
          != java.lang.Double.doubleToLongBits(
              other.getRemaining())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrent())
          != java.lang.Double.doubleToLongBits(
              other.getCurrent())) return false;
      if (java.lang.Double.doubleToLongBits(getConsumed())
          != java.lang.Double.doubleToLongBits(
              other.getConsumed())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRemaining()));
      hash = (37 * hash) + CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrent()));
      hash = (37 * hash) + CONSUMED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConsumed()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        remaining_ = 0D;
        current_ = 0D;
        consumed_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo build() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo buildPartial() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.remaining_ = remaining_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.current_ = current_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.consumed_ = consumed_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo) {
          return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo other) {
        if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance()) return this;
        if (other.getRemaining() != 0D) {
          setRemaining(other.getRemaining());
        }
        if (other.getCurrent() != 0D) {
          setCurrent(other.getCurrent());
        }
        if (other.getConsumed() != 0D) {
          setConsumed(other.getConsumed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                remaining_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                current_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                consumed_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double remaining_ ;
      /**
       * <pre>
       * remaining and current may not
       * provide accurate values in case
       * the request times out while waiting
       * for tokens.
       * </pre>
       *
       * <code>double remaining = 1 [json_name = "remaining"];</code>
       * @return The remaining.
       */
      @java.lang.Override
      public double getRemaining() {
        return remaining_;
      }
      /**
       * <pre>
       * remaining and current may not
       * provide accurate values in case
       * the request times out while waiting
       * for tokens.
       * </pre>
       *
       * <code>double remaining = 1 [json_name = "remaining"];</code>
       * @param value The remaining to set.
       * @return This builder for chaining.
       */
      public Builder setRemaining(double value) {

        remaining_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * remaining and current may not
       * provide accurate values in case
       * the request times out while waiting
       * for tokens.
       * </pre>
       *
       * <code>double remaining = 1 [json_name = "remaining"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRemaining() {
        bitField0_ = (bitField0_ & ~0x00000001);
        remaining_ = 0D;
        onChanged();
        return this;
      }

      private double current_ ;
      /**
       * <code>double current = 2 [json_name = "current"];</code>
       * @return The current.
       */
      @java.lang.Override
      public double getCurrent() {
        return current_;
      }
      /**
       * <code>double current = 2 [json_name = "current"];</code>
       * @param value The current to set.
       * @return This builder for chaining.
       */
      public Builder setCurrent(double value) {

        current_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double current = 2 [json_name = "current"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        current_ = 0D;
        onChanged();
        return this;
      }

      private double consumed_ ;
      /**
       * <code>double consumed = 3 [json_name = "consumed"];</code>
       * @return The consumed.
       */
      @java.lang.Override
      public double getConsumed() {
        return consumed_;
      }
      /**
       * <code>double consumed = 3 [json_name = "consumed"];</code>
       * @param value The consumed to set.
       * @return This builder for chaining.
       */
      public Builder setConsumed(double value) {

        consumed_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double consumed = 3 [json_name = "consumed"];</code>
       * @return This builder for chaining.
       */
      public Builder clearConsumed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        consumed_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo)
    private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo();
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokensInfo>
        PARSER = new com.google.protobuf.AbstractParser<TokensInfo>() {
      @java.lang.Override
      public TokensInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TokensInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokensInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RateLimiterInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    boolean hasTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo}
   */
  public static final class RateLimiterInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)
      RateLimiterInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RateLimiterInfo.newBuilder() to construct.
    private RateLimiterInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RateLimiterInfo() {
      label_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RateLimiterInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder.class);
    }

    private int bitField0_;
    public static final int LABEL_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object label_ = "";
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKENS_INFO_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    @java.lang.Override
    public boolean hasTokensInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getTokensInfo());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTokensInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) obj;

      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (hasTokensInfo() != other.hasTokensInfo()) return false;
      if (hasTokensInfo()) {
        if (!getTokensInfo()
            .equals(other.getTokensInfo())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      if (hasTokensInfo()) {
        hash = (37 * hash) + TOKENS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTokensInfo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokensInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        label_ = "";
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo build() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo buildPartial() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.label_ = label_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tokensInfo_ = tokensInfoBuilder_ == null
              ? tokensInfo_
              : tokensInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) {
          return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo other) {
        if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance()) return this;
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasTokensInfo()) {
          mergeTokensInfo(other.getTokensInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                label_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getTokensInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object label_ = "";
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        label_ = getDefaultInstance().getLabel();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> tokensInfoBuilder_;
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       * @return Whether the tokensInfo field is set.
       */
      public boolean hasTokensInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       * @return The tokensInfo.
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
        if (tokensInfoBuilder_ == null) {
          return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        } else {
          return tokensInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tokensInfo_ = value;
        } else {
          tokensInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder builderForValue) {
        if (tokensInfoBuilder_ == null) {
          tokensInfo_ = builderForValue.build();
        } else {
          tokensInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder mergeTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tokensInfo_ != null &&
            tokensInfo_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance()) {
            getTokensInfoBuilder().mergeFrom(value);
          } else {
            tokensInfo_ = value;
          }
        } else {
          tokensInfoBuilder_.mergeFrom(value);
        }
        if (tokensInfo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder clearTokensInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder getTokensInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTokensInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
        if (tokensInfoBuilder_ != null) {
          return tokensInfoBuilder_.getMessageOrBuilder();
        } else {
          return tokensInfo_ == null ?
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> 
          getTokensInfoFieldBuilder() {
        if (tokensInfoBuilder_ == null) {
          tokensInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder>(
                  getTokensInfo(),
                  getParentForChildren(),
                  isClean());
          tokensInfo_ = null;
        }
        return tokensInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo)
    private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo();
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RateLimiterInfo>
        PARSER = new com.google.protobuf.AbstractParser<RateLimiterInfo>() {
      @java.lang.Override
      public RateLimiterInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RateLimiterInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RateLimiterInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SchedulerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    java.lang.String getWorkloadIndex();
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    com.google.protobuf.ByteString
        getWorkloadIndexBytes();

    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    boolean hasTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder();

    /**
     * <code>double priority = 3 [json_name = "priority"];</code>
     * @return The priority.
     */
    double getPriority();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo}
   */
  public static final class SchedulerInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)
      SchedulerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SchedulerInfo.newBuilder() to construct.
    private SchedulerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SchedulerInfo() {
      workloadIndex_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SchedulerInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder.class);
    }

    private int bitField0_;
    public static final int WORKLOAD_INDEX_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object workloadIndex_ = "";
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    @java.lang.Override
    public java.lang.String getWorkloadIndex() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workloadIndex_ = s;
        return s;
      }
    }
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkloadIndexBytes() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workloadIndex_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKENS_INFO_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    @java.lang.Override
    public boolean hasTokensInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 3;
    private double priority_ = 0D;
    /**
     * <code>double priority = 3 [json_name = "priority"];</code>
     * @return The priority.
     */
    @java.lang.Override
    public double getPriority() {
      return priority_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, workloadIndex_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getTokensInfo());
      }
      if (java.lang.Double.doubleToRawLongBits(priority_) != 0) {
        output.writeDouble(3, priority_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, workloadIndex_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTokensInfo());
      }
      if (java.lang.Double.doubleToRawLongBits(priority_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, priority_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) obj;

      if (!getWorkloadIndex()
          .equals(other.getWorkloadIndex())) return false;
      if (hasTokensInfo() != other.hasTokensInfo()) return false;
      if (hasTokensInfo()) {
        if (!getTokensInfo()
            .equals(other.getTokensInfo())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getPriority())
          != java.lang.Double.doubleToLongBits(
              other.getPriority())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WORKLOAD_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadIndex().hashCode();
      if (hasTokensInfo()) {
        hash = (37 * hash) + TOKENS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTokensInfo().hashCode();
      }
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPriority()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokensInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        workloadIndex_ = "";
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        priority_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo build() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo buildPartial() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.workloadIndex_ = workloadIndex_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tokensInfo_ = tokensInfoBuilder_ == null
              ? tokensInfo_
              : tokensInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.priority_ = priority_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) {
          return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo other) {
        if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance()) return this;
        if (!other.getWorkloadIndex().isEmpty()) {
          workloadIndex_ = other.workloadIndex_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasTokensInfo()) {
          mergeTokensInfo(other.getTokensInfo());
        }
        if (other.getPriority() != 0D) {
          setPriority(other.getPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                workloadIndex_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getTokensInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                priority_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object workloadIndex_ = "";
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return The workloadIndex.
       */
      public java.lang.String getWorkloadIndex() {
        java.lang.Object ref = workloadIndex_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workloadIndex_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return The bytes for workloadIndex.
       */
      public com.google.protobuf.ByteString
          getWorkloadIndexBytes() {
        java.lang.Object ref = workloadIndex_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workloadIndex_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @param value The workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndex(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        workloadIndex_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkloadIndex() {
        workloadIndex_ = getDefaultInstance().getWorkloadIndex();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @param value The bytes for workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        workloadIndex_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> tokensInfoBuilder_;
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       * @return Whether the tokensInfo field is set.
       */
      public boolean hasTokensInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       * @return The tokensInfo.
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
        if (tokensInfoBuilder_ == null) {
          return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        } else {
          return tokensInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tokensInfo_ = value;
        } else {
          tokensInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder builderForValue) {
        if (tokensInfoBuilder_ == null) {
          tokensInfo_ = builderForValue.build();
        } else {
          tokensInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder mergeTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tokensInfo_ != null &&
            tokensInfo_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance()) {
            getTokensInfoBuilder().mergeFrom(value);
          } else {
            tokensInfo_ = value;
          }
        } else {
          tokensInfoBuilder_.mergeFrom(value);
        }
        if (tokensInfo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public Builder clearTokensInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder getTokensInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTokensInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
        if (tokensInfoBuilder_ != null) {
          return tokensInfoBuilder_.getMessageOrBuilder();
        } else {
          return tokensInfo_ == null ?
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 2 [json_name = "tokensInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> 
          getTokensInfoFieldBuilder() {
        if (tokensInfoBuilder_ == null) {
          tokensInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder>(
                  getTokensInfo(),
                  getParentForChildren(),
                  isClean());
          tokensInfo_ = null;
        }
        return tokensInfoBuilder_;
      }

      private double priority_ ;
      /**
       * <code>double priority = 3 [json_name = "priority"];</code>
       * @return The priority.
       */
      @java.lang.Override
      public double getPriority() {
        return priority_;
      }
      /**
       * <code>double priority = 3 [json_name = "priority"];</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(double value) {

        priority_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double priority = 3 [json_name = "priority"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000004);
        priority_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo)
    private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo();
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SchedulerInfo>
        PARSER = new com.google.protobuf.AbstractParser<SchedulerInfo>() {
      @java.lang.Override
      public SchedulerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SchedulerInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SchedulerInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SamplerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo}
   */
  public static final class SamplerInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)
      SamplerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SamplerInfo.newBuilder() to construct.
    private SamplerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SamplerInfo() {
      label_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SamplerInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder.class);
    }

    public static final int LABEL_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object label_ = "";
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) obj;

      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        label_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo build() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo buildPartial() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.label_ = label_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) {
          return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo other) {
        if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance()) return this;
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                label_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object label_ = "";
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        label_ = getDefaultInstance().getLabel();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo)
    private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo();
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SamplerInfo>
        PARSER = new com.google.protobuf.AbstractParser<SamplerInfo>() {
      @java.lang.Override
      public SamplerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SamplerInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SamplerInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QuotaSchedulerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    java.lang.String getWorkloadIndex();
    /**
     * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    com.google.protobuf.ByteString
        getWorkloadIndexBytes();

    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    boolean hasTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo();
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     */
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder();

    /**
     * <code>double priority = 4 [json_name = "priority"];</code>
     * @return The priority.
     */
    double getPriority();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo}
   */
  public static final class QuotaSchedulerInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)
      QuotaSchedulerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QuotaSchedulerInfo.newBuilder() to construct.
    private QuotaSchedulerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QuotaSchedulerInfo() {
      label_ = "";
      workloadIndex_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QuotaSchedulerInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder.class);
    }

    private int bitField0_;
    public static final int LABEL_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object label_ = "";
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 1 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORKLOAD_INDEX_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object workloadIndex_ = "";
    /**
     * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    @java.lang.Override
    public java.lang.String getWorkloadIndex() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workloadIndex_ = s;
        return s;
      }
    }
    /**
     * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkloadIndexBytes() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workloadIndex_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKENS_INFO_FIELD_NUMBER = 3;
    private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     * @return Whether the tokensInfo field is set.
     */
    @java.lang.Override
    public boolean hasTokensInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     * @return The tokensInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
      return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 4;
    private double priority_ = 0D;
    /**
     * <code>double priority = 4 [json_name = "priority"];</code>
     * @return The priority.
     */
    @java.lang.Override
    public double getPriority() {
      return priority_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, workloadIndex_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getTokensInfo());
      }
      if (java.lang.Double.doubleToRawLongBits(priority_) != 0) {
        output.writeDouble(4, priority_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, workloadIndex_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTokensInfo());
      }
      if (java.lang.Double.doubleToRawLongBits(priority_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, priority_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) obj;

      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!getWorkloadIndex()
          .equals(other.getWorkloadIndex())) return false;
      if (hasTokensInfo() != other.hasTokensInfo()) return false;
      if (hasTokensInfo()) {
        if (!getTokensInfo()
            .equals(other.getTokensInfo())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getPriority())
          != java.lang.Double.doubleToLongBits(
              other.getPriority())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (37 * hash) + WORKLOAD_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadIndex().hashCode();
      if (hasTokensInfo()) {
        hash = (37 * hash) + TOKENS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTokensInfo().hashCode();
      }
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPriority()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokensInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        label_ = "";
        workloadIndex_ = "";
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        priority_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo build() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo buildPartial() {
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.label_ = label_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.workloadIndex_ = workloadIndex_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tokensInfo_ = tokensInfoBuilder_ == null
              ? tokensInfo_
              : tokensInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.priority_ = priority_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) {
          return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo other) {
        if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance()) return this;
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getWorkloadIndex().isEmpty()) {
          workloadIndex_ = other.workloadIndex_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasTokensInfo()) {
          mergeTokensInfo(other.getTokensInfo());
        }
        if (other.getPriority() != 0D) {
          setPriority(other.getPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                label_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                workloadIndex_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTokensInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 33: {
                priority_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object label_ = "";
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        label_ = getDefaultInstance().getLabel();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string label = 1 [json_name = "label"];</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        label_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object workloadIndex_ = "";
      /**
       * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
       * @return The workloadIndex.
       */
      public java.lang.String getWorkloadIndex() {
        java.lang.Object ref = workloadIndex_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workloadIndex_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
       * @return The bytes for workloadIndex.
       */
      public com.google.protobuf.ByteString
          getWorkloadIndexBytes() {
        java.lang.Object ref = workloadIndex_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workloadIndex_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
       * @param value The workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndex(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        workloadIndex_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkloadIndex() {
        workloadIndex_ = getDefaultInstance().getWorkloadIndex();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 2 [json_name = "workloadIndex"];</code>
       * @param value The bytes for workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        workloadIndex_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokensInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> tokensInfoBuilder_;
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       * @return Whether the tokensInfo field is set.
       */
      public boolean hasTokensInfo() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       * @return The tokensInfo.
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo getTokensInfo() {
        if (tokensInfoBuilder_ == null) {
          return tokensInfo_ == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        } else {
          return tokensInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tokensInfo_ = value;
        } else {
          tokensInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public Builder setTokensInfo(
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder builderForValue) {
        if (tokensInfoBuilder_ == null) {
          tokensInfo_ = builderForValue.build();
        } else {
          tokensInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public Builder mergeTokensInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo value) {
        if (tokensInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            tokensInfo_ != null &&
            tokensInfo_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance()) {
            getTokensInfoBuilder().mergeFrom(value);
          } else {
            tokensInfo_ = value;
          }
        } else {
          tokensInfoBuilder_.mergeFrom(value);
        }
        if (tokensInfo_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public Builder clearTokensInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tokensInfo_ = null;
        if (tokensInfoBuilder_ != null) {
          tokensInfoBuilder_.dispose();
          tokensInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder getTokensInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTokensInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder getTokensInfoOrBuilder() {
        if (tokensInfoBuilder_ != null) {
          return tokensInfoBuilder_.getMessageOrBuilder();
        } else {
          return tokensInfo_ == null ?
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.getDefaultInstance() : tokensInfo_;
        }
      }
      /**
       * <code>.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo tokens_info = 3 [json_name = "tokensInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder> 
          getTokensInfoFieldBuilder() {
        if (tokensInfoBuilder_ == null) {
          tokensInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.TokensInfoOrBuilder>(
                  getTokensInfo(),
                  getParentForChildren(),
                  isClean());
          tokensInfo_ = null;
        }
        return tokensInfoBuilder_;
      }

      private double priority_ ;
      /**
       * <code>double priority = 4 [json_name = "priority"];</code>
       * @return The priority.
       */
      @java.lang.Override
      public double getPriority() {
        return priority_;
      }
      /**
       * <code>double priority = 4 [json_name = "priority"];</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(double value) {

        priority_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double priority = 4 [json_name = "priority"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo)
    private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo();
    }

    public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QuotaSchedulerInfo>
        PARSER = new com.google.protobuf.AbstractParser<QuotaSchedulerInfo>() {
      @java.lang.Override
      public QuotaSchedulerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<QuotaSchedulerInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QuotaSchedulerInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int detailsCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object details_;
  public enum DetailsCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RATE_LIMITER_INFO(20),
    LOAD_SCHEDULER_INFO(21),
    SAMPLER_INFO(22),
    QUOTA_SCHEDULER_INFO(23),
    DETAILS_NOT_SET(0);
    private final int value;
    private DetailsCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DetailsCase valueOf(int value) {
      return forNumber(value);
    }

    public static DetailsCase forNumber(int value) {
      switch (value) {
        case 20: return RATE_LIMITER_INFO;
        case 21: return LOAD_SCHEDULER_INFO;
        case 22: return SAMPLER_INFO;
        case 23: return QUOTA_SCHEDULER_INFO;
        case 0: return DETAILS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DetailsCase
  getDetailsCase() {
    return DetailsCase.forNumber(
        detailsCase_);
  }

  public static final int POLICY_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object policyName_ = "";
  /**
   * <code>string policy_name = 1 [json_name = "policyName"];</code>
   * @return The policyName.
   */
  @java.lang.Override
  public java.lang.String getPolicyName() {
    java.lang.Object ref = policyName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      policyName_ = s;
      return s;
    }
  }
  /**
   * <code>string policy_name = 1 [json_name = "policyName"];</code>
   * @return The bytes for policyName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPolicyNameBytes() {
    java.lang.Object ref = policyName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      policyName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POLICY_HASH_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object policyHash_ = "";
  /**
   * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
   * @return The policyHash.
   */
  @java.lang.Override
  public java.lang.String getPolicyHash() {
    java.lang.Object ref = policyHash_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      policyHash_ = s;
      return s;
    }
  }
  /**
   * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
   * @return The bytes for policyHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPolicyHashBytes() {
    java.lang.Object ref = policyHash_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      policyHash_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPONENT_ID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object componentId_ = "";
  /**
   * <code>string component_id = 3 [json_name = "componentId"];</code>
   * @return The componentId.
   */
  @java.lang.Override
  public java.lang.String getComponentId() {
    java.lang.Object ref = componentId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      componentId_ = s;
      return s;
    }
  }
  /**
   * <code>string component_id = 3 [json_name = "componentId"];</code>
   * @return The bytes for componentId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getComponentIdBytes() {
    java.lang.Object ref = componentId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      componentId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DROPPED_FIELD_NUMBER = 4;
  private boolean dropped_ = false;
  /**
   * <code>bool dropped = 4 [json_name = "dropped"];</code>
   * @return The dropped.
   */
  @java.lang.Override
  public boolean getDropped() {
    return dropped_;
  }

  public static final int REASON_FIELD_NUMBER = 5;
  private int reason_ = 0;
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
   * @return The enum numeric value on the wire for reason.
   */
  @java.lang.Override public int getReasonValue() {
    return reason_;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
   * @return The reason.
   */
  @java.lang.Override public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason getReason() {
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason result = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.forNumber(reason_);
    return result == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.UNRECOGNIZED : result;
  }

  public static final int DENIED_RESPONSE_STATUS_CODE_FIELD_NUMBER = 10;
  private int deniedResponseStatusCode_ = 0;
  /**
   * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
   * @return The enum numeric value on the wire for deniedResponseStatusCode.
   */
  @java.lang.Override public int getDeniedResponseStatusCodeValue() {
    return deniedResponseStatusCode_;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
   * @return The deniedResponseStatusCode.
   */
  @java.lang.Override public com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode getDeniedResponseStatusCode() {
    com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode result = com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.forNumber(deniedResponseStatusCode_);
    return result == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.UNRECOGNIZED : result;
  }

  public static final int WAIT_TIME_FIELD_NUMBER = 11;
  private com.google.protobuf.Duration waitTime_;
  /**
   * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
   * @return Whether the waitTime field is set.
   */
  @java.lang.Override
  public boolean hasWaitTime() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
   * @return The waitTime.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getWaitTime() {
    return waitTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : waitTime_;
  }
  /**
   * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getWaitTimeOrBuilder() {
    return waitTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : waitTime_;
  }

  public static final int RATE_LIMITER_INFO_FIELD_NUMBER = 20;
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
   * @return Whether the rateLimiterInfo field is set.
   */
  @java.lang.Override
  public boolean hasRateLimiterInfo() {
    return detailsCase_ == 20;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
   * @return The rateLimiterInfo.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo getRateLimiterInfo() {
    if (detailsCase_ == 20) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder getRateLimiterInfoOrBuilder() {
    if (detailsCase_ == 20) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
  }

  public static final int LOAD_SCHEDULER_INFO_FIELD_NUMBER = 21;
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
   * @return Whether the loadSchedulerInfo field is set.
   */
  @java.lang.Override
  public boolean hasLoadSchedulerInfo() {
    return detailsCase_ == 21;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
   * @return The loadSchedulerInfo.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo getLoadSchedulerInfo() {
    if (detailsCase_ == 21) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder getLoadSchedulerInfoOrBuilder() {
    if (detailsCase_ == 21) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
  }

  public static final int SAMPLER_INFO_FIELD_NUMBER = 22;
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
   * @return Whether the samplerInfo field is set.
   */
  @java.lang.Override
  public boolean hasSamplerInfo() {
    return detailsCase_ == 22;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
   * @return The samplerInfo.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo getSamplerInfo() {
    if (detailsCase_ == 22) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder getSamplerInfoOrBuilder() {
    if (detailsCase_ == 22) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
  }

  public static final int QUOTA_SCHEDULER_INFO_FIELD_NUMBER = 23;
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
   * @return Whether the quotaSchedulerInfo field is set.
   */
  @java.lang.Override
  public boolean hasQuotaSchedulerInfo() {
    return detailsCase_ == 23;
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
   * @return The quotaSchedulerInfo.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo getQuotaSchedulerInfo() {
    if (detailsCase_ == 23) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder getQuotaSchedulerInfoOrBuilder() {
    if (detailsCase_ == 23) {
       return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_;
    }
    return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, policyName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyHash_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, policyHash_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(componentId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, componentId_);
    }
    if (dropped_ != false) {
      output.writeBool(4, dropped_);
    }
    if (reason_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.LIMITER_REASON_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, reason_);
    }
    if (deniedResponseStatusCode_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.Empty.getNumber()) {
      output.writeEnum(10, deniedResponseStatusCode_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(11, getWaitTime());
    }
    if (detailsCase_ == 20) {
      output.writeMessage(20, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_);
    }
    if (detailsCase_ == 21) {
      output.writeMessage(21, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_);
    }
    if (detailsCase_ == 22) {
      output.writeMessage(22, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_);
    }
    if (detailsCase_ == 23) {
      output.writeMessage(23, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, policyName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyHash_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, policyHash_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(componentId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, componentId_);
    }
    if (dropped_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, dropped_);
    }
    if (reason_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.LIMITER_REASON_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, reason_);
    }
    if (deniedResponseStatusCode_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.Empty.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, deniedResponseStatusCode_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getWaitTime());
    }
    if (detailsCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_);
    }
    if (detailsCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_);
    }
    if (detailsCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_);
    }
    if (detailsCase_ == 23) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision other = (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision) obj;

    if (!getPolicyName()
        .equals(other.getPolicyName())) return false;
    if (!getPolicyHash()
        .equals(other.getPolicyHash())) return false;
    if (!getComponentId()
        .equals(other.getComponentId())) return false;
    if (getDropped()
        != other.getDropped()) return false;
    if (reason_ != other.reason_) return false;
    if (deniedResponseStatusCode_ != other.deniedResponseStatusCode_) return false;
    if (hasWaitTime() != other.hasWaitTime()) return false;
    if (hasWaitTime()) {
      if (!getWaitTime()
          .equals(other.getWaitTime())) return false;
    }
    if (!getDetailsCase().equals(other.getDetailsCase())) return false;
    switch (detailsCase_) {
      case 20:
        if (!getRateLimiterInfo()
            .equals(other.getRateLimiterInfo())) return false;
        break;
      case 21:
        if (!getLoadSchedulerInfo()
            .equals(other.getLoadSchedulerInfo())) return false;
        break;
      case 22:
        if (!getSamplerInfo()
            .equals(other.getSamplerInfo())) return false;
        break;
      case 23:
        if (!getQuotaSchedulerInfo()
            .equals(other.getQuotaSchedulerInfo())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POLICY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPolicyName().hashCode();
    hash = (37 * hash) + POLICY_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getPolicyHash().hashCode();
    hash = (37 * hash) + COMPONENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getComponentId().hashCode();
    hash = (37 * hash) + DROPPED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDropped());
    hash = (37 * hash) + REASON_FIELD_NUMBER;
    hash = (53 * hash) + reason_;
    hash = (37 * hash) + DENIED_RESPONSE_STATUS_CODE_FIELD_NUMBER;
    hash = (53 * hash) + deniedResponseStatusCode_;
    if (hasWaitTime()) {
      hash = (37 * hash) + WAIT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTime().hashCode();
    }
    switch (detailsCase_) {
      case 20:
        hash = (37 * hash) + RATE_LIMITER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getRateLimiterInfo().hashCode();
        break;
      case 21:
        hash = (37 * hash) + LOAD_SCHEDULER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getLoadSchedulerInfo().hashCode();
        break;
      case 22:
        hash = (37 * hash) + SAMPLER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSamplerInfo().hashCode();
        break;
      case 23:
        hash = (37 * hash) + QUOTA_SCHEDULER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getQuotaSchedulerInfo().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LimiterDecision describes details for each limiter.
   * </pre>
   *
   * Protobuf type {@code aperture.flowcontrol.check.v1.LimiterDecision}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.check.v1.LimiterDecision)
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecisionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.class, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getWaitTimeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      policyName_ = "";
      policyHash_ = "";
      componentId_ = "";
      dropped_ = false;
      reason_ = 0;
      deniedResponseStatusCode_ = 0;
      waitTime_ = null;
      if (waitTimeBuilder_ != null) {
        waitTimeBuilder_.dispose();
        waitTimeBuilder_ = null;
      }
      if (rateLimiterInfoBuilder_ != null) {
        rateLimiterInfoBuilder_.clear();
      }
      if (loadSchedulerInfoBuilder_ != null) {
        loadSchedulerInfoBuilder_.clear();
      }
      if (samplerInfoBuilder_ != null) {
        samplerInfoBuilder_.clear();
      }
      if (quotaSchedulerInfoBuilder_ != null) {
        quotaSchedulerInfoBuilder_.clear();
      }
      detailsCase_ = 0;
      details_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.CheckProto.internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision build() {
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision buildPartial() {
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision result = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.policyName_ = policyName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.policyHash_ = policyHash_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.componentId_ = componentId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.dropped_ = dropped_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.reason_ = reason_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.deniedResponseStatusCode_ = deniedResponseStatusCode_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.waitTime_ = waitTimeBuilder_ == null
            ? waitTime_
            : waitTimeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision result) {
      result.detailsCase_ = detailsCase_;
      result.details_ = this.details_;
      if (detailsCase_ == 20 &&
          rateLimiterInfoBuilder_ != null) {
        result.details_ = rateLimiterInfoBuilder_.build();
      }
      if (detailsCase_ == 21 &&
          loadSchedulerInfoBuilder_ != null) {
        result.details_ = loadSchedulerInfoBuilder_.build();
      }
      if (detailsCase_ == 22 &&
          samplerInfoBuilder_ != null) {
        result.details_ = samplerInfoBuilder_.build();
      }
      if (detailsCase_ == 23 &&
          quotaSchedulerInfoBuilder_ != null) {
        result.details_ = quotaSchedulerInfoBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision) {
        return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision other) {
      if (other == com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.getDefaultInstance()) return this;
      if (!other.getPolicyName().isEmpty()) {
        policyName_ = other.policyName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getPolicyHash().isEmpty()) {
        policyHash_ = other.policyHash_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getComponentId().isEmpty()) {
        componentId_ = other.componentId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getDropped() != false) {
        setDropped(other.getDropped());
      }
      if (other.reason_ != 0) {
        setReasonValue(other.getReasonValue());
      }
      if (other.deniedResponseStatusCode_ != 0) {
        setDeniedResponseStatusCodeValue(other.getDeniedResponseStatusCodeValue());
      }
      if (other.hasWaitTime()) {
        mergeWaitTime(other.getWaitTime());
      }
      switch (other.getDetailsCase()) {
        case RATE_LIMITER_INFO: {
          mergeRateLimiterInfo(other.getRateLimiterInfo());
          break;
        }
        case LOAD_SCHEDULER_INFO: {
          mergeLoadSchedulerInfo(other.getLoadSchedulerInfo());
          break;
        }
        case SAMPLER_INFO: {
          mergeSamplerInfo(other.getSamplerInfo());
          break;
        }
        case QUOTA_SCHEDULER_INFO: {
          mergeQuotaSchedulerInfo(other.getQuotaSchedulerInfo());
          break;
        }
        case DETAILS_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              policyName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              policyHash_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              componentId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              dropped_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              reason_ = input.readEnum();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 80: {
              deniedResponseStatusCode_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 80
            case 90: {
              input.readMessage(
                  getWaitTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 90
            case 162: {
              input.readMessage(
                  getRateLimiterInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              detailsCase_ = 20;
              break;
            } // case 162
            case 170: {
              input.readMessage(
                  getLoadSchedulerInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              detailsCase_ = 21;
              break;
            } // case 170
            case 178: {
              input.readMessage(
                  getSamplerInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              detailsCase_ = 22;
              break;
            } // case 178
            case 186: {
              input.readMessage(
                  getQuotaSchedulerInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              detailsCase_ = 23;
              break;
            } // case 186
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int detailsCase_ = 0;
    private java.lang.Object details_;
    public DetailsCase
        getDetailsCase() {
      return DetailsCase.forNumber(
          detailsCase_);
    }

    public Builder clearDetails() {
      detailsCase_ = 0;
      details_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object policyName_ = "";
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return The policyName.
     */
    public java.lang.String getPolicyName() {
      java.lang.Object ref = policyName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return The bytes for policyName.
     */
    public com.google.protobuf.ByteString
        getPolicyNameBytes() {
      java.lang.Object ref = policyName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @param value The policyName to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      policyName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPolicyName() {
      policyName_ = getDefaultInstance().getPolicyName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @param value The bytes for policyName to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      policyName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object policyHash_ = "";
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return The policyHash.
     */
    public java.lang.String getPolicyHash() {
      java.lang.Object ref = policyHash_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyHash_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return The bytes for policyHash.
     */
    public com.google.protobuf.ByteString
        getPolicyHashBytes() {
      java.lang.Object ref = policyHash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @param value The policyHash to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyHash(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      policyHash_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPolicyHash() {
      policyHash_ = getDefaultInstance().getPolicyHash();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @param value The bytes for policyHash to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyHashBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      policyHash_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object componentId_ = "";
    /**
     * <code>string component_id = 3 [json_name = "componentId"];</code>
     * @return The componentId.
     */
    public java.lang.String getComponentId() {
      java.lang.Object ref = componentId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        componentId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string component_id = 3 [json_name = "componentId"];</code>
     * @return The bytes for componentId.
     */
    public com.google.protobuf.ByteString
        getComponentIdBytes() {
      java.lang.Object ref = componentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        componentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string component_id = 3 [json_name = "componentId"];</code>
     * @param value The componentId to set.
     * @return This builder for chaining.
     */
    public Builder setComponentId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      componentId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string component_id = 3 [json_name = "componentId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearComponentId() {
      componentId_ = getDefaultInstance().getComponentId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string component_id = 3 [json_name = "componentId"];</code>
     * @param value The bytes for componentId to set.
     * @return This builder for chaining.
     */
    public Builder setComponentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      componentId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean dropped_ ;
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @return The dropped.
     */
    @java.lang.Override
    public boolean getDropped() {
      return dropped_;
    }
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @param value The dropped to set.
     * @return This builder for chaining.
     */
    public Builder setDropped(boolean value) {

      dropped_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDropped() {
      bitField0_ = (bitField0_ & ~0x00000008);
      dropped_ = false;
      onChanged();
      return this;
    }

    private int reason_ = 0;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return The enum numeric value on the wire for reason.
     */
    @java.lang.Override public int getReasonValue() {
      return reason_;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @param value The enum numeric value on the wire for reason to set.
     * @return This builder for chaining.
     */
    public Builder setReasonValue(int value) {
      reason_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return The reason.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason getReason() {
      com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason result = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.forNumber(reason_);
      return result == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason.UNRECOGNIZED : result;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @param value The reason to set.
     * @return This builder for chaining.
     */
    public Builder setReason(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      reason_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReason() {
      bitField0_ = (bitField0_ & ~0x00000010);
      reason_ = 0;
      onChanged();
      return this;
    }

    private int deniedResponseStatusCode_ = 0;
    /**
     * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
     * @return The enum numeric value on the wire for deniedResponseStatusCode.
     */
    @java.lang.Override public int getDeniedResponseStatusCodeValue() {
      return deniedResponseStatusCode_;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
     * @param value The enum numeric value on the wire for deniedResponseStatusCode to set.
     * @return This builder for chaining.
     */
    public Builder setDeniedResponseStatusCodeValue(int value) {
      deniedResponseStatusCode_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
     * @return The deniedResponseStatusCode.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode getDeniedResponseStatusCode() {
      com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode result = com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.forNumber(deniedResponseStatusCode_);
      return result == null ? com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode.UNRECOGNIZED : result;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
     * @param value The deniedResponseStatusCode to set.
     * @return This builder for chaining.
     */
    public Builder setDeniedResponseStatusCode(com.fluxninja.generated.aperture.flowcontrol.check.v1.StatusCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      deniedResponseStatusCode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.StatusCode denied_response_status_code = 10 [json_name = "deniedResponseStatusCode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDeniedResponseStatusCode() {
      bitField0_ = (bitField0_ & ~0x00000020);
      deniedResponseStatusCode_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration waitTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> waitTimeBuilder_;
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     * @return Whether the waitTime field is set.
     */
    public boolean hasWaitTime() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     * @return The waitTime.
     */
    public com.google.protobuf.Duration getWaitTime() {
      if (waitTimeBuilder_ == null) {
        return waitTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : waitTime_;
      } else {
        return waitTimeBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public Builder setWaitTime(com.google.protobuf.Duration value) {
      if (waitTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        waitTime_ = value;
      } else {
        waitTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public Builder setWaitTime(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (waitTimeBuilder_ == null) {
        waitTime_ = builderForValue.build();
      } else {
        waitTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public Builder mergeWaitTime(com.google.protobuf.Duration value) {
      if (waitTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          waitTime_ != null &&
          waitTime_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getWaitTimeBuilder().mergeFrom(value);
        } else {
          waitTime_ = value;
        }
      } else {
        waitTimeBuilder_.mergeFrom(value);
      }
      if (waitTime_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public Builder clearWaitTime() {
      bitField0_ = (bitField0_ & ~0x00000040);
      waitTime_ = null;
      if (waitTimeBuilder_ != null) {
        waitTimeBuilder_.dispose();
        waitTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public com.google.protobuf.Duration.Builder getWaitTimeBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getWaitTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    public com.google.protobuf.DurationOrBuilder getWaitTimeOrBuilder() {
      if (waitTimeBuilder_ != null) {
        return waitTimeBuilder_.getMessageOrBuilder();
      } else {
        return waitTime_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : waitTime_;
      }
    }
    /**
     * <code>.google.protobuf.Duration wait_time = 11 [json_name = "waitTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getWaitTimeFieldBuilder() {
      if (waitTimeBuilder_ == null) {
        waitTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getWaitTime(),
                getParentForChildren(),
                isClean());
        waitTime_ = null;
      }
      return waitTimeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder> rateLimiterInfoBuilder_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     * @return Whether the rateLimiterInfo field is set.
     */
    @java.lang.Override
    public boolean hasRateLimiterInfo() {
      return detailsCase_ == 20;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     * @return The rateLimiterInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo getRateLimiterInfo() {
      if (rateLimiterInfoBuilder_ == null) {
        if (detailsCase_ == 20) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
      } else {
        if (detailsCase_ == 20) {
          return rateLimiterInfoBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    public Builder setRateLimiterInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo value) {
      if (rateLimiterInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        rateLimiterInfoBuilder_.setMessage(value);
      }
      detailsCase_ = 20;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    public Builder setRateLimiterInfo(
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder builderForValue) {
      if (rateLimiterInfoBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        rateLimiterInfoBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 20;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    public Builder mergeRateLimiterInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo value) {
      if (rateLimiterInfoBuilder_ == null) {
        if (detailsCase_ == 20 &&
            details_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance()) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.newBuilder((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 20) {
          rateLimiterInfoBuilder_.mergeFrom(value);
        } else {
          rateLimiterInfoBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 20;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    public Builder clearRateLimiterInfo() {
      if (rateLimiterInfoBuilder_ == null) {
        if (detailsCase_ == 20) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 20) {
          detailsCase_ = 0;
          details_ = null;
        }
        rateLimiterInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder getRateLimiterInfoBuilder() {
      return getRateLimiterInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder getRateLimiterInfoOrBuilder() {
      if ((detailsCase_ == 20) && (rateLimiterInfoBuilder_ != null)) {
        return rateLimiterInfoBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 20) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo rate_limiter_info = 20 [json_name = "rateLimiterInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder> 
        getRateLimiterInfoFieldBuilder() {
      if (rateLimiterInfoBuilder_ == null) {
        if (!(detailsCase_ == 20)) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.getDefaultInstance();
        }
        rateLimiterInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoOrBuilder>(
                (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfo) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 20;
      onChanged();
      return rateLimiterInfoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder> loadSchedulerInfoBuilder_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     * @return Whether the loadSchedulerInfo field is set.
     */
    @java.lang.Override
    public boolean hasLoadSchedulerInfo() {
      return detailsCase_ == 21;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     * @return The loadSchedulerInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo getLoadSchedulerInfo() {
      if (loadSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 21) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
      } else {
        if (detailsCase_ == 21) {
          return loadSchedulerInfoBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    public Builder setLoadSchedulerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo value) {
      if (loadSchedulerInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        loadSchedulerInfoBuilder_.setMessage(value);
      }
      detailsCase_ = 21;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    public Builder setLoadSchedulerInfo(
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder builderForValue) {
      if (loadSchedulerInfoBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        loadSchedulerInfoBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 21;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    public Builder mergeLoadSchedulerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo value) {
      if (loadSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 21 &&
            details_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance()) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.newBuilder((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 21) {
          loadSchedulerInfoBuilder_.mergeFrom(value);
        } else {
          loadSchedulerInfoBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 21;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    public Builder clearLoadSchedulerInfo() {
      if (loadSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 21) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 21) {
          detailsCase_ = 0;
          details_ = null;
        }
        loadSchedulerInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder getLoadSchedulerInfoBuilder() {
      return getLoadSchedulerInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder getLoadSchedulerInfoOrBuilder() {
      if ((detailsCase_ == 21) && (loadSchedulerInfoBuilder_ != null)) {
        return loadSchedulerInfoBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 21) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo load_scheduler_info = 21 [json_name = "loadSchedulerInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder> 
        getLoadSchedulerInfoFieldBuilder() {
      if (loadSchedulerInfoBuilder_ == null) {
        if (!(detailsCase_ == 21)) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.getDefaultInstance();
        }
        loadSchedulerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfoOrBuilder>(
                (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SchedulerInfo) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 21;
      onChanged();
      return loadSchedulerInfoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder> samplerInfoBuilder_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     * @return Whether the samplerInfo field is set.
     */
    @java.lang.Override
    public boolean hasSamplerInfo() {
      return detailsCase_ == 22;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     * @return The samplerInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo getSamplerInfo() {
      if (samplerInfoBuilder_ == null) {
        if (detailsCase_ == 22) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
      } else {
        if (detailsCase_ == 22) {
          return samplerInfoBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    public Builder setSamplerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo value) {
      if (samplerInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        samplerInfoBuilder_.setMessage(value);
      }
      detailsCase_ = 22;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    public Builder setSamplerInfo(
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder builderForValue) {
      if (samplerInfoBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        samplerInfoBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 22;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    public Builder mergeSamplerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo value) {
      if (samplerInfoBuilder_ == null) {
        if (detailsCase_ == 22 &&
            details_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance()) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.newBuilder((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 22) {
          samplerInfoBuilder_.mergeFrom(value);
        } else {
          samplerInfoBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 22;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    public Builder clearSamplerInfo() {
      if (samplerInfoBuilder_ == null) {
        if (detailsCase_ == 22) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 22) {
          detailsCase_ = 0;
          details_ = null;
        }
        samplerInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder getSamplerInfoBuilder() {
      return getSamplerInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder getSamplerInfoOrBuilder() {
      if ((detailsCase_ == 22) && (samplerInfoBuilder_ != null)) {
        return samplerInfoBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 22) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo sampler_info = 22 [json_name = "samplerInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder> 
        getSamplerInfoFieldBuilder() {
      if (samplerInfoBuilder_ == null) {
        if (!(detailsCase_ == 22)) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.getDefaultInstance();
        }
        samplerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfoOrBuilder>(
                (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.SamplerInfo) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 22;
      onChanged();
      return samplerInfoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder> quotaSchedulerInfoBuilder_;
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     * @return Whether the quotaSchedulerInfo field is set.
     */
    @java.lang.Override
    public boolean hasQuotaSchedulerInfo() {
      return detailsCase_ == 23;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     * @return The quotaSchedulerInfo.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo getQuotaSchedulerInfo() {
      if (quotaSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 23) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
      } else {
        if (detailsCase_ == 23) {
          return quotaSchedulerInfoBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    public Builder setQuotaSchedulerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo value) {
      if (quotaSchedulerInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        quotaSchedulerInfoBuilder_.setMessage(value);
      }
      detailsCase_ = 23;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    public Builder setQuotaSchedulerInfo(
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder builderForValue) {
      if (quotaSchedulerInfoBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        quotaSchedulerInfoBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 23;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    public Builder mergeQuotaSchedulerInfo(com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo value) {
      if (quotaSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 23 &&
            details_ != com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance()) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.newBuilder((com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 23) {
          quotaSchedulerInfoBuilder_.mergeFrom(value);
        } else {
          quotaSchedulerInfoBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 23;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    public Builder clearQuotaSchedulerInfo() {
      if (quotaSchedulerInfoBuilder_ == null) {
        if (detailsCase_ == 23) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 23) {
          detailsCase_ = 0;
          details_ = null;
        }
        quotaSchedulerInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder getQuotaSchedulerInfoBuilder() {
      return getQuotaSchedulerInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder getQuotaSchedulerInfoOrBuilder() {
      if ((detailsCase_ == 23) && (quotaSchedulerInfoBuilder_ != null)) {
        return quotaSchedulerInfoBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 23) {
          return (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_;
        }
        return com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo quota_scheduler_info = 23 [json_name = "quotaSchedulerInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder> 
        getQuotaSchedulerInfoFieldBuilder() {
      if (quotaSchedulerInfoBuilder_ == null) {
        if (!(detailsCase_ == 23)) {
          details_ = com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.getDefaultInstance();
        }
        quotaSchedulerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo.Builder, com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfoOrBuilder>(
                (com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision.QuotaSchedulerInfo) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 23;
      onChanged();
      return quotaSchedulerInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.check.v1.LimiterDecision)
  }

  // @@protoc_insertion_point(class_scope:aperture.flowcontrol.check.v1.LimiterDecision)
  private static final com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision();
  }

  public static com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LimiterDecision>
      PARSER = new com.google.protobuf.AbstractParser<LimiterDecision>() {
    @java.lang.Override
    public LimiterDecision parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LimiterDecision> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LimiterDecision> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.check.v1.LimiterDecision getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

