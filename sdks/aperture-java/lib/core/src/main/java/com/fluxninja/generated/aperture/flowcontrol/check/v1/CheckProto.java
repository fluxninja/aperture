// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/check/v1/check.proto

package com.fluxninja.generated.aperture.flowcontrol.check.v1;

public final class CheckProto {
  private CheckProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)aperture/flowcontrol/check/v1/check.pr" +
      "oto\022\035aperture.flowcontrol.check.v1\032-aper" +
      "ture/policy/language/v1/flowcontrol.prot" +
      "o\032\036google/protobuf/duration.proto\032\037googl" +
      "e/protobuf/timestamp.proto\032\027validate/val" +
      "idate.proto\"\277\001\n\014CheckRequest\022#\n\rcontrol_" +
      "point\030\001 \001(\tR\014controlPoint\022O\n\006labels\030\002 \003(" +
      "\01327.aperture.flowcontrol.check.v1.CheckR" +
      "equest.LabelsEntryR\006labels\0329\n\013LabelsEntr" +
      "y\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005valu" +
      "e:\0028\001\"\341\t\n\rCheckResponse\0220\n\005start\030\001 \001(\0132\032" +
      ".google.protobuf.TimestampR\005start\022,\n\003end" +
      "\030\002 \001(\0132\032.google.protobuf.TimestampR\003end\022" +
      "\032\n\010services\030\004 \003(\tR\010services\022#\n\rcontrol_p" +
      "oint\030\005 \001(\tR\014controlPoint\022&\n\017flow_label_k" +
      "eys\030\006 \003(\tR\rflowLabelKeys\022y\n\025telemetry_fl" +
      "ow_labels\030\007 \003(\0132E.aperture.flowcontrol.c" +
      "heck.v1.CheckResponse.TelemetryFlowLabel" +
      "sEntryR\023telemetryFlowLabels\022^\n\rdecision_" +
      "type\030\010 \001(\01629.aperture.flowcontrol.check." +
      "v1.CheckResponse.DecisionTypeR\014decisionT" +
      "ype\022^\n\rreject_reason\030\t \001(\01629.aperture.fl" +
      "owcontrol.check.v1.CheckResponse.RejectR" +
      "easonR\014rejectReason\022X\n\020classifier_infos\030" +
      "\n \003(\0132-.aperture.flowcontrol.check.v1.Cl" +
      "assifierInfoR\017classifierInfos\022V\n\020flux_me" +
      "ter_infos\030\013 \003(\0132,.aperture.flowcontrol.c" +
      "heck.v1.FluxMeterInfoR\016fluxMeterInfos\022[\n" +
      "\021limiter_decisions\030\014 \003(\0132..aperture.flow" +
      "control.check.v1.LimiterDecisionR\020limite" +
      "rDecisions\0226\n\twait_time\030\r \001(\0132\031.google.p" +
      "rotobuf.DurationR\010waitTime\022r\n\033denied_res" +
      "ponse_status_code\030\016 \001(\0162\'.aperture.polic" +
      "y.language.v1.StatusCodeB\n\372B\007\202\001\004\020\001 \000R\030de" +
      "niedResponseStatusCode\032F\n\030TelemetryFlowL" +
      "abelsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 " +
      "\001(\tR\005value:\0028\001\"\200\001\n\014RejectReason\022\026\n\022REJEC" +
      "T_REASON_NONE\020\000\022\036\n\032REJECT_REASON_RATE_LI" +
      "MITED\020\001\022\033\n\027REJECT_REASON_NO_TOKENS\020\002\022\033\n\027" +
      "REJECT_REASON_REGULATED\020\003\"F\n\014DecisionTyp" +
      "e\022\032\n\026DECISION_TYPE_ACCEPTED\020\000\022\032\n\026DECISIO" +
      "N_TYPE_REJECTED\020\001\"\355\002\n\016ClassifierInfo\022\037\n\013" +
      "policy_name\030\001 \001(\tR\npolicyName\022\037\n\013policy_" +
      "hash\030\002 \001(\tR\npolicyHash\022)\n\020classifier_ind" +
      "ex\030\003 \001(\003R\017classifierIndex\022I\n\005error\030\005 \001(\016" +
      "23.aperture.flowcontrol.check.v1.Classif" +
      "ierInfo.ErrorR\005error\"\242\001\n\005Error\022\016\n\nERROR_" +
      "NONE\020\000\022\025\n\021ERROR_EVAL_FAILED\020\001\022\031\n\025ERROR_E" +
      "MPTY_RESULTSET\020\002\022\035\n\031ERROR_AMBIGUOUS_RESU" +
      "LTSET\020\003\022\032\n\026ERROR_MULTI_EXPRESSION\020\004\022\034\n\030E" +
      "RROR_EXPRESSION_NOT_MAP\020\005\"\221\n\n\017LimiterDec" +
      "ision\022\037\n\013policy_name\030\001 \001(\tR\npolicyName\022\037" +
      "\n\013policy_hash\030\002 \001(\tR\npolicyHash\022!\n\014compo" +
      "nent_id\030\003 \001(\tR\013componentId\022\030\n\007dropped\030\004 " +
      "\001(\010R\007dropped\022T\n\006reason\030\005 \001(\0162<.aperture." +
      "flowcontrol.check.v1.LimiterDecision.Lim" +
      "iterReasonR\006reason\022l\n\021rate_limiter_info\030" +
      "\006 \001(\0132>.aperture.flowcontrol.check.v1.Li" +
      "miterDecision.RateLimiterInfoH\000R\017rateLim" +
      "iterInfo\022n\n\023load_scheduler_info\030\007 \001(\0132<." +
      "aperture.flowcontrol.check.v1.LimiterDec" +
      "ision.SchedulerInfoH\000R\021loadSchedulerInfo" +
      "\022_\n\014sampler_info\030\010 \001(\0132:.aperture.flowco" +
      "ntrol.check.v1.LimiterDecision.SamplerIn" +
      "foH\000R\013samplerInfo\022u\n\024quota_scheduler_inf" +
      "o\030\t \001(\0132A.aperture.flowcontrol.check.v1." +
      "LimiterDecision.QuotaSchedulerInfoH\000R\022qu" +
      "otaSchedulerInfo\022r\n\033denied_response_stat" +
      "us_code\030\n \001(\0162\'.aperture.policy.language" +
      ".v1.StatusCodeB\n\372B\007\202\001\004\020\001 \000R\030deniedRespon" +
      "seStatusCode\032\210\001\n\017RateLimiterInfo\022\034\n\trema" +
      "ining\030\001 \001(\001R\tremaining\022\030\n\007current\030\002 \001(\001R" +
      "\007current\022\024\n\005label\030\003 \001(\tR\005label\022\'\n\017tokens" +
      "_consumed\030\004 \001(\001R\016tokensConsumed\032_\n\rSched" +
      "ulerInfo\022%\n\016workload_index\030\001 \001(\tR\rworklo" +
      "adIndex\022\'\n\017tokens_consumed\030\002 \001(\004R\016tokens" +
      "Consumed\032#\n\013SamplerInfo\022\024\n\005label\030\001 \001(\tR\005" +
      "label\032\217\001\n\022QuotaSchedulerInfo\022\024\n\005label\030\001 " +
      "\001(\tR\005label\022c\n\016scheduler_info\030\002 \001(\0132<.ape" +
      "rture.flowcontrol.check.v1.LimiterDecisi" +
      "on.SchedulerInfoR\rschedulerInfo\"Q\n\rLimit" +
      "erReason\022\036\n\032LIMITER_REASON_UNSPECIFIED\020\000" +
      "\022 \n\034LIMITER_REASON_KEY_NOT_FOUND\020\001B\t\n\007de" +
      "tails\"7\n\rFluxMeterInfo\022&\n\017flux_meter_nam" +
      "e\030\001 \001(\tR\rfluxMeterName2z\n\022FlowControlSer" +
      "vice\022d\n\005Check\022+.aperture.flowcontrol.che" +
      "ck.v1.CheckRequest\032,.aperture.flowcontro" +
      "l.check.v1.CheckResponse\"\000B\263\002\n5com.fluxn" +
      "inja.generated.aperture.flowcontrol.chec" +
      "k.v1B\nCheckProtoP\001ZWgithub.com/fluxninja" +
      "/aperture/v2/api/gen/proto/go/aperture/f" +
      "lowcontrol/check/v1;checkv1\242\002\003AFC\252\002\035Aper" +
      "ture.Flowcontrol.Check.V1\312\002\035Aperture\\Flo" +
      "wcontrol\\Check\\V1\342\002)Aperture\\Flowcontrol" +
      "\\Check\\V1\\GPBMetadata\352\002 Aperture::Flowco" +
      "ntrol::Check::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.policy.language.v1.FlowcontrolProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.fluxninja.generated.validate.ValidateProto.getDescriptor(),
        });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor,
        new java.lang.String[] { "ControlPoint", "Labels", });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor,
        new java.lang.String[] { "Start", "End", "Services", "ControlPoint", "FlowLabelKeys", "TelemetryFlowLabels", "DecisionType", "RejectReason", "ClassifierInfos", "FluxMeterInfos", "LimiterDecisions", "WaitTime", "DeniedResponseStatusCode", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ClassifierIndex", "Error", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ComponentId", "Dropped", "Reason", "RateLimiterInfo", "LoadSchedulerInfo", "SamplerInfo", "QuotaSchedulerInfo", "DeniedResponseStatusCode", "Details", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor,
        new java.lang.String[] { "Remaining", "Current", "Label", "TokensConsumed", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor,
        new java.lang.String[] { "WorkloadIndex", "TokensConsumed", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(2);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor,
        new java.lang.String[] { "Label", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(3);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor,
        new java.lang.String[] { "Label", "SchedulerInfo", });
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor,
        new java.lang.String[] { "FluxMeterName", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.validate.ValidateProto.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.aperture.policy.language.v1.FlowcontrolProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.fluxninja.generated.validate.ValidateProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
