// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/check/v1/check.proto

package com.fluxninja.generated.aperture.flowcontrol.check.v1;

public final class CheckProto {
  private CheckProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_AWSGatewayCheckRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_AWSGatewayCheckRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_ConcurrencyLimiterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_ConcurrencyLimiterInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)aperture/flowcontrol/check/v1/check.pr" +
      "oto\022\035aperture.flowcontrol.check.v1\032\034goog" +
      "le/api/annotations.proto\032\031google/api/htt" +
      "pbody.proto\032\037google/protobuf/timestamp.p" +
      "roto\032.protoc-gen-openapiv2/options/annot" +
      "ations.proto\"2\n\026AWSGatewayCheckRequest\022\030" +
      "\n\007payload\030\001 \001(\tR\007payload\"\277\001\n\014CheckReques" +
      "t\022#\n\rcontrol_point\030\001 \001(\tR\014controlPoint\022O" +
      "\n\006labels\030\002 \003(\01327.aperture.flowcontrol.ch" +
      "eck.v1.CheckRequest.LabelsEntryR\006labels\032" +
      "9\n\013LabelsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu" +
      "e\030\002 \001(\tR\005value:\0028\001\"\241\010\n\rCheckResponse\0220\n\005" +
      "start\030\001 \001(\0132\032.google.protobuf.TimestampR" +
      "\005start\022,\n\003end\030\002 \001(\0132\032.google.protobuf.Ti" +
      "mestampR\003end\022\032\n\010services\030\004 \003(\tR\010services" +
      "\022#\n\rcontrol_point\030\005 \001(\tR\014controlPoint\022&\n" +
      "\017flow_label_keys\030\006 \003(\tR\rflowLabelKeys\022y\n" +
      "\025telemetry_flow_labels\030\007 \003(\0132E.aperture." +
      "flowcontrol.check.v1.CheckResponse.Telem" +
      "etryFlowLabelsEntryR\023telemetryFlowLabels" +
      "\022^\n\rdecision_type\030\010 \001(\01629.aperture.flowc" +
      "ontrol.check.v1.CheckResponse.DecisionTy" +
      "peR\014decisionType\022^\n\rreject_reason\030\t \001(\0162" +
      "9.aperture.flowcontrol.check.v1.CheckRes" +
      "ponse.RejectReasonR\014rejectReason\022X\n\020clas" +
      "sifier_infos\030\n \003(\0132-.aperture.flowcontro" +
      "l.check.v1.ClassifierInfoR\017classifierInf" +
      "os\022V\n\020flux_meter_infos\030\013 \003(\0132,.aperture." +
      "flowcontrol.check.v1.FluxMeterInfoR\016flux" +
      "MeterInfos\022[\n\021limiter_decisions\030\014 \003(\0132.." +
      "aperture.flowcontrol.check.v1.LimiterDec" +
      "isionR\020limiterDecisions\032F\n\030TelemetryFlow" +
      "LabelsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002" +
      " \001(\tR\005value:\0028\001\"m\n\014RejectReason\022\026\n\022REJEC" +
      "T_REASON_NONE\020\000\022\036\n\032REJECT_REASON_RATE_LI" +
      "MITED\020\001\022%\n!REJECT_REASON_CONCURRENCY_LIM" +
      "ITED\020\002\"F\n\014DecisionType\022\032\n\026DECISION_TYPE_" +
      "ACCEPTED\020\000\022\032\n\026DECISION_TYPE_REJECTED\020\001\"\212" +
      "\003\n\016ClassifierInfo\022\037\n\013policy_name\030\001 \001(\tR\n" +
      "policyName\022\037\n\013policy_hash\030\002 \001(\tR\npolicyH" +
      "ash\022)\n\020classifier_index\030\003 \001(\003R\017classifie" +
      "rIndex\022\033\n\tlabel_key\030\004 \001(\tR\010labelKey\022I\n\005e" +
      "rror\030\005 \001(\01623.aperture.flowcontrol.check." +
      "v1.ClassifierInfo.ErrorR\005error\"\242\001\n\005Error" +
      "\022\016\n\nERROR_NONE\020\000\022\025\n\021ERROR_EVAL_FAILED\020\001\022" +
      "\031\n\025ERROR_EMPTY_RESULTSET\020\002\022\035\n\031ERROR_AMBI" +
      "GUOUS_RESULTSET\020\003\022\032\n\026ERROR_MULTI_EXPRESS" +
      "ION\020\004\022\034\n\030ERROR_EXPRESSION_NOT_MAP\020\005\"\336\005\n\017" +
      "LimiterDecision\022\037\n\013policy_name\030\001 \001(\tR\npo" +
      "licyName\022\037\n\013policy_hash\030\002 \001(\tR\npolicyHas" +
      "h\022\'\n\017component_index\030\003 \001(\003R\016componentInd" +
      "ex\022\030\n\007dropped\030\004 \001(\010R\007dropped\022T\n\006reason\030\005" +
      " \001(\0162<.aperture.flowcontrol.check.v1.Lim" +
      "iterDecision.LimiterReasonR\006reason\022l\n\021ra" +
      "te_limiter_info\030\006 \001(\0132>.aperture.flowcon" +
      "trol.check.v1.LimiterDecision.RateLimite" +
      "rInfoH\000R\017rateLimiterInfo\022\201\001\n\030concurrency" +
      "_limiter_info\030\007 \001(\0132E.aperture.flowcontr" +
      "ol.check.v1.LimiterDecision.ConcurrencyL" +
      "imiterInfoH\000R\026concurrencyLimiterInfo\032_\n\017" +
      "RateLimiterInfo\022\034\n\tremaining\030\001 \001(\003R\trema" +
      "ining\022\030\n\007current\030\002 \001(\003R\007current\022\024\n\005label" +
      "\030\003 \001(\tR\005label\032?\n\026ConcurrencyLimiterInfo\022" +
      "%\n\016workload_index\030\001 \001(\tR\rworkloadIndex\"Q" +
      "\n\rLimiterReason\022\036\n\032LIMITER_REASON_UNSPEC" +
      "IFIED\020\000\022 \n\034LIMITER_REASON_KEY_NOT_FOUND\020" +
      "\001B\t\n\007details\"7\n\rFluxMeterInfo\022&\n\017flux_me" +
      "ter_name\030\001 \001(\tR\rfluxMeterName2\264\001\n\034AWSGat" +
      "ewayFlowControlService\022\223\001\n\017AWSGatewayChe" +
      "ck\0225.aperture.flowcontrol.check.v1.AWSGa" +
      "tewayCheckRequest\032\024.google.api.HttpBody\"" +
      "3\222A\020\n\016aperture-agent\202\323\344\223\002\032:\001*\"\025/v1/aws_g" +
      "ateway_check2z\n\022FlowControlService\022d\n\005Ch" +
      "eck\022+.aperture.flowcontrol.check.v1.Chec" +
      "kRequest\032,.aperture.flowcontrol.check.v1" +
      ".CheckResponse\"\000B\260\002\n5com.fluxninja.gener" +
      "ated.aperture.flowcontrol.check.v1B\nChec" +
      "kProtoP\001ZTgithub.com/fluxninja/aperture/" +
      "api/gen/proto/go/aperture/flowcontrol/ch" +
      "eck/v1;checkv1\242\002\003AFC\252\002\035Aperture.Flowcont" +
      "rol.Check.V1\312\002\035Aperture\\Flowcontrol\\Chec" +
      "k\\V1\342\002)Aperture\\Flowcontrol\\Check\\V1\\GPB" +
      "Metadata\352\002 Aperture::Flowcontrol::Check:" +
      ":V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor(),
          com.fluxninja.generated.google.api.HttpbodyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_aperture_flowcontrol_check_v1_AWSGatewayCheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_AWSGatewayCheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_AWSGatewayCheckRequest_descriptor,
        new java.lang.String[] { "Payload", });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor,
        new java.lang.String[] { "ControlPoint", "Labels", });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor,
        new java.lang.String[] { "Start", "End", "Services", "ControlPoint", "FlowLabelKeys", "TelemetryFlowLabels", "DecisionType", "RejectReason", "ClassifierInfos", "FluxMeterInfos", "LimiterDecisions", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ClassifierIndex", "LabelKey", "Error", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ComponentIndex", "Dropped", "Reason", "RateLimiterInfo", "ConcurrencyLimiterInfo", "Details", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor,
        new java.lang.String[] { "Remaining", "Current", "Label", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_ConcurrencyLimiterInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_ConcurrencyLimiterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_ConcurrencyLimiterInfo_descriptor,
        new java.lang.String[] { "WorkloadIndex", });
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor,
        new java.lang.String[] { "FluxMeterName", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.google.api.AnnotationsProto.http);
    registry.add(com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Operation);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor();
    com.fluxninja.generated.google.api.HttpbodyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
