// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/check/v1/check.proto

package com.fluxninja.generated.aperture.flowcontrol.check.v1;

public final class CheckProto {
  private CheckProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)aperture/flowcontrol/check/v1/check.pr" +
      "oto\022\035aperture.flowcontrol.check.v1\032\036goog" +
      "le/protobuf/duration.proto\032\037google/proto" +
      "buf/timestamp.proto\"\277\001\n\014CheckRequest\022#\n\r" +
      "control_point\030\001 \001(\tR\014controlPoint\022O\n\006lab" +
      "els\030\002 \003(\01327.aperture.flowcontrol.check.v" +
      "1.CheckRequest.LabelsEntryR\006labels\0329\n\013La" +
      "belsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001" +
      "(\tR\005value:\0028\001\"\327\t\n\rCheckResponse\0220\n\005start" +
      "\030\001 \001(\0132\032.google.protobuf.TimestampR\005star" +
      "t\022,\n\003end\030\002 \001(\0132\032.google.protobuf.Timesta" +
      "mpR\003end\022\032\n\010services\030\004 \003(\tR\010services\022#\n\rc" +
      "ontrol_point\030\005 \001(\tR\014controlPoint\022&\n\017flow" +
      "_label_keys\030\006 \003(\tR\rflowLabelKeys\022y\n\025tele" +
      "metry_flow_labels\030\007 \003(\0132E.aperture.flowc" +
      "ontrol.check.v1.CheckResponse.TelemetryF" +
      "lowLabelsEntryR\023telemetryFlowLabels\022^\n\rd" +
      "ecision_type\030\010 \001(\01629.aperture.flowcontro" +
      "l.check.v1.CheckResponse.DecisionTypeR\014d" +
      "ecisionType\022^\n\rreject_reason\030\t \001(\01629.ape" +
      "rture.flowcontrol.check.v1.CheckResponse" +
      ".RejectReasonR\014rejectReason\022X\n\020classifie" +
      "r_infos\030\n \003(\0132-.aperture.flowcontrol.che" +
      "ck.v1.ClassifierInfoR\017classifierInfos\022V\n" +
      "\020flux_meter_infos\030\013 \003(\0132,.aperture.flowc" +
      "ontrol.check.v1.FluxMeterInfoR\016fluxMeter" +
      "Infos\022[\n\021limiter_decisions\030\014 \003(\0132..apert" +
      "ure.flowcontrol.check.v1.LimiterDecision" +
      "R\020limiterDecisions\0226\n\twait_time\030\r \001(\0132\031." +
      "google.protobuf.DurationR\010waitTime\022h\n\033de" +
      "nied_response_status_code\030\016 \001(\0162).apertu" +
      "re.flowcontrol.check.v1.StatusCodeR\030deni" +
      "edResponseStatusCode\032F\n\030TelemetryFlowLab" +
      "elsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(" +
      "\tR\005value:\0028\001\"\200\001\n\014RejectReason\022\026\n\022REJECT_" +
      "REASON_NONE\020\000\022\036\n\032REJECT_REASON_RATE_LIMI" +
      "TED\020\001\022\033\n\027REJECT_REASON_NO_TOKENS\020\002\022\033\n\027RE" +
      "JECT_REASON_REGULATED\020\003\"F\n\014DecisionType\022" +
      "\032\n\026DECISION_TYPE_ACCEPTED\020\000\022\032\n\026DECISION_" +
      "TYPE_REJECTED\020\001\"\355\002\n\016ClassifierInfo\022\037\n\013po" +
      "licy_name\030\001 \001(\tR\npolicyName\022\037\n\013policy_ha" +
      "sh\030\002 \001(\tR\npolicyHash\022)\n\020classifier_index" +
      "\030\003 \001(\003R\017classifierIndex\022I\n\005error\030\005 \001(\01623" +
      ".aperture.flowcontrol.check.v1.Classifie" +
      "rInfo.ErrorR\005error\"\242\001\n\005Error\022\016\n\nERROR_NO" +
      "NE\020\000\022\025\n\021ERROR_EVAL_FAILED\020\001\022\031\n\025ERROR_EMP" +
      "TY_RESULTSET\020\002\022\035\n\031ERROR_AMBIGUOUS_RESULT" +
      "SET\020\003\022\032\n\026ERROR_MULTI_EXPRESSION\020\004\022\034\n\030ERR" +
      "OR_EXPRESSION_NOT_MAP\020\005\"\356\013\n\017LimiterDecis" +
      "ion\022\037\n\013policy_name\030\001 \001(\tR\npolicyName\022\037\n\013" +
      "policy_hash\030\002 \001(\tR\npolicyHash\022!\n\014compone" +
      "nt_id\030\003 \001(\tR\013componentId\022\030\n\007dropped\030\004 \001(" +
      "\010R\007dropped\022T\n\006reason\030\005 \001(\0162<.aperture.fl" +
      "owcontrol.check.v1.LimiterDecision.Limit" +
      "erReasonR\006reason\022h\n\033denied_response_stat" +
      "us_code\030\n \001(\0162).aperture.flowcontrol.che" +
      "ck.v1.StatusCodeR\030deniedResponseStatusCo" +
      "de\0226\n\twait_time\030\013 \001(\0132\031.google.protobuf." +
      "DurationR\010waitTime\022l\n\021rate_limiter_info\030" +
      "\024 \001(\0132>.aperture.flowcontrol.check.v1.Li" +
      "miterDecision.RateLimiterInfoH\000R\017rateLim" +
      "iterInfo\022n\n\023load_scheduler_info\030\025 \001(\0132<." +
      "aperture.flowcontrol.check.v1.LimiterDec" +
      "ision.SchedulerInfoH\000R\021loadSchedulerInfo" +
      "\022_\n\014sampler_info\030\026 \001(\0132:.aperture.flowco" +
      "ntrol.check.v1.LimiterDecision.SamplerIn" +
      "foH\000R\013samplerInfo\022u\n\024quota_scheduler_inf" +
      "o\030\027 \001(\0132A.aperture.flowcontrol.check.v1." +
      "LimiterDecision.QuotaSchedulerInfoH\000R\022qu" +
      "otaSchedulerInfo\032`\n\nTokensInfo\022\034\n\tremain" +
      "ing\030\001 \001(\001R\tremaining\022\030\n\007current\030\002 \001(\001R\007c" +
      "urrent\022\032\n\010consumed\030\003 \001(\001R\010consumed\032\203\001\n\017R" +
      "ateLimiterInfo\022\024\n\005label\030\001 \001(\tR\005label\022Z\n\013" +
      "tokens_info\030\002 \001(\01329.aperture.flowcontrol" +
      ".check.v1.LimiterDecision.TokensInfoR\nto" +
      "kensInfo\032\222\001\n\rSchedulerInfo\022%\n\016workload_i" +
      "ndex\030\001 \001(\tR\rworkloadIndex\022Z\n\013tokens_info" +
      "\030\002 \001(\01329.aperture.flowcontrol.check.v1.L" +
      "imiterDecision.TokensInfoR\ntokensInfo\032#\n" +
      "\013SamplerInfo\022\024\n\005label\030\001 \001(\tR\005label\032\255\001\n\022Q" +
      "uotaSchedulerInfo\022\024\n\005label\030\001 \001(\tR\005label\022" +
      "%\n\016workload_index\030\002 \001(\tR\rworkloadIndex\022Z" +
      "\n\013tokens_info\030\003 \001(\01329.aperture.flowcontr" +
      "ol.check.v1.LimiterDecision.TokensInfoR\n" +
      "tokensInfo\"Q\n\rLimiterReason\022\036\n\032LIMITER_R" +
      "EASON_UNSPECIFIED\020\000\022 \n\034LIMITER_REASON_KE" +
      "Y_NOT_FOUND\020\001B\t\n\007details\"7\n\rFluxMeterInf" +
      "o\022&\n\017flux_meter_name\030\001 \001(\tR\rfluxMeterNam" +
      "e*\265\t\n\nStatusCode\022\t\n\005Empty\020\000\022\014\n\010Continue\020" +
      "d\022\007\n\002OK\020\310\001\022\014\n\007Created\020\311\001\022\r\n\010Accepted\020\312\001\022" +
      " \n\033NonAuthoritativeInformation\020\313\001\022\016\n\tNoC" +
      "ontent\020\314\001\022\021\n\014ResetContent\020\315\001\022\023\n\016PartialC" +
      "ontent\020\316\001\022\020\n\013MultiStatus\020\317\001\022\024\n\017AlreadyRe" +
      "ported\020\320\001\022\013\n\006IMUsed\020\342\001\022\024\n\017MultipleChoice" +
      "s\020\254\002\022\025\n\020MovedPermanently\020\255\002\022\n\n\005Found\020\256\002\022" +
      "\r\n\010SeeOther\020\257\002\022\020\n\013NotModified\020\260\002\022\r\n\010UseP" +
      "roxy\020\261\002\022\026\n\021TemporaryRedirect\020\263\002\022\026\n\021Perma" +
      "nentRedirect\020\264\002\022\017\n\nBadRequest\020\220\003\022\021\n\014Unau" +
      "thorized\020\221\003\022\024\n\017PaymentRequired\020\222\003\022\016\n\tFor" +
      "bidden\020\223\003\022\r\n\010NotFound\020\224\003\022\025\n\020MethodNotAll" +
      "owed\020\225\003\022\022\n\rNotAcceptable\020\226\003\022 \n\033ProxyAuth" +
      "enticationRequired\020\227\003\022\023\n\016RequestTimeout\020" +
      "\230\003\022\r\n\010Conflict\020\231\003\022\t\n\004Gone\020\232\003\022\023\n\016LengthRe" +
      "quired\020\233\003\022\027\n\022PreconditionFailed\020\234\003\022\024\n\017Pa" +
      "yloadTooLarge\020\235\003\022\017\n\nURITooLong\020\236\003\022\031\n\024Uns" +
      "upportedMediaType\020\237\003\022\030\n\023RangeNotSatisfia" +
      "ble\020\240\003\022\026\n\021ExpectationFailed\020\241\003\022\027\n\022Misdir" +
      "ectedRequest\020\245\003\022\030\n\023UnprocessableEntity\020\246" +
      "\003\022\013\n\006Locked\020\247\003\022\025\n\020FailedDependency\020\250\003\022\024\n" +
      "\017UpgradeRequired\020\252\003\022\031\n\024PreconditionRequi" +
      "red\020\254\003\022\024\n\017TooManyRequests\020\255\003\022 \n\033RequestH" +
      "eaderFieldsTooLarge\020\257\003\022\030\n\023InternalServer" +
      "Error\020\364\003\022\023\n\016NotImplemented\020\365\003\022\017\n\nBadGate" +
      "way\020\366\003\022\027\n\022ServiceUnavailable\020\367\003\022\023\n\016Gatew" +
      "ayTimeout\020\370\003\022\034\n\027HTTPVersionNotSupported\020" +
      "\371\003\022\032\n\025VariantAlsoNegotiates\020\372\003\022\030\n\023Insuff" +
      "icientStorage\020\373\003\022\021\n\014LoopDetected\020\374\003\022\020\n\013N" +
      "otExtended\020\376\003\022\"\n\035NetworkAuthenticationRe" +
      "quired\020\377\0032z\n\022FlowControlService\022d\n\005Check" +
      "\022+.aperture.flowcontrol.check.v1.CheckRe" +
      "quest\032,.aperture.flowcontrol.check.v1.Ch" +
      "eckResponse\"\000B\263\002\n5com.fluxninja.generate" +
      "d.aperture.flowcontrol.check.v1B\nCheckPr" +
      "otoP\001ZWgithub.com/fluxninja/aperture/v2/" +
      "api/gen/proto/go/aperture/flowcontrol/ch" +
      "eck/v1;checkv1\242\002\003AFC\252\002\035Aperture.Flowcont" +
      "rol.Check.V1\312\002\035Aperture\\Flowcontrol\\Chec" +
      "k\\V1\342\002)Aperture\\Flowcontrol\\Check\\V1\\GPB" +
      "Metadata\352\002 Aperture::Flowcontrol::Check:" +
      ":V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor,
        new java.lang.String[] { "ControlPoint", "Labels", });
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckRequest_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckRequest_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor,
        new java.lang.String[] { "Start", "End", "Services", "ControlPoint", "FlowLabelKeys", "TelemetryFlowLabels", "DecisionType", "RejectReason", "ClassifierInfos", "FluxMeterInfos", "LimiterDecisions", "WaitTime", "DeniedResponseStatusCode", });
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor =
      internal_static_aperture_flowcontrol_check_v1_CheckResponse_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_CheckResponse_TelemetryFlowLabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_ClassifierInfo_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ClassifierIndex", "Error", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor,
        new java.lang.String[] { "PolicyName", "PolicyHash", "ComponentId", "Dropped", "Reason", "DeniedResponseStatusCode", "WaitTime", "RateLimiterInfo", "LoadSchedulerInfo", "SamplerInfo", "QuotaSchedulerInfo", "Details", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(0);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_TokensInfo_descriptor,
        new java.lang.String[] { "Remaining", "Current", "Consumed", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(1);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_RateLimiterInfo_descriptor,
        new java.lang.String[] { "Label", "TokensInfo", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(2);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SchedulerInfo_descriptor,
        new java.lang.String[] { "WorkloadIndex", "TokensInfo", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(3);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_SamplerInfo_descriptor,
        new java.lang.String[] { "Label", });
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor =
      internal_static_aperture_flowcontrol_check_v1_LimiterDecision_descriptor.getNestedTypes().get(4);
    internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_LimiterDecision_QuotaSchedulerInfo_descriptor,
        new java.lang.String[] { "Label", "WorkloadIndex", "TokensInfo", });
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_flowcontrol_check_v1_FluxMeterInfo_descriptor,
        new java.lang.String[] { "FluxMeterName", });
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
