// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate/validate.proto

package com.fluxninja.generated.validate;

public interface RepeatedRulesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:validate.RepeatedRules)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * MinItems specifies that this field must have the specified number of
   * items at a minimum
   * </pre>
   *
   * <code>optional uint64 min_items = 1 [json_name = "minItems"];</code>
   * @return Whether the minItems field is set.
   */
  boolean hasMinItems();
  /**
   * <pre>
   * MinItems specifies that this field must have the specified number of
   * items at a minimum
   * </pre>
   *
   * <code>optional uint64 min_items = 1 [json_name = "minItems"];</code>
   * @return The minItems.
   */
  long getMinItems();

  /**
   * <pre>
   * MaxItems specifies that this field must have the specified number of
   * items at a maximum
   * </pre>
   *
   * <code>optional uint64 max_items = 2 [json_name = "maxItems"];</code>
   * @return Whether the maxItems field is set.
   */
  boolean hasMaxItems();
  /**
   * <pre>
   * MaxItems specifies that this field must have the specified number of
   * items at a maximum
   * </pre>
   *
   * <code>optional uint64 max_items = 2 [json_name = "maxItems"];</code>
   * @return The maxItems.
   */
  long getMaxItems();

  /**
   * <pre>
   * Unique specifies that all elements in this field must be unique. This
   * contraint is only applicable to scalar and enum types (messages are not
   * supported).
   * </pre>
   *
   * <code>optional bool unique = 3 [json_name = "unique"];</code>
   * @return Whether the unique field is set.
   */
  boolean hasUnique();
  /**
   * <pre>
   * Unique specifies that all elements in this field must be unique. This
   * contraint is only applicable to scalar and enum types (messages are not
   * supported).
   * </pre>
   *
   * <code>optional bool unique = 3 [json_name = "unique"];</code>
   * @return The unique.
   */
  boolean getUnique();

  /**
   * <pre>
   * Items specifies the contraints to be applied to each item in the field.
   * Repeated message fields will still execute validation against each item
   * unless skip is specified here.
   * </pre>
   *
   * <code>optional .validate.FieldRules items = 4 [json_name = "items"];</code>
   * @return Whether the items field is set.
   */
  boolean hasItems();
  /**
   * <pre>
   * Items specifies the contraints to be applied to each item in the field.
   * Repeated message fields will still execute validation against each item
   * unless skip is specified here.
   * </pre>
   *
   * <code>optional .validate.FieldRules items = 4 [json_name = "items"];</code>
   * @return The items.
   */
  com.fluxninja.generated.validate.FieldRules getItems();
  /**
   * <pre>
   * Items specifies the contraints to be applied to each item in the field.
   * Repeated message fields will still execute validation against each item
   * unless skip is specified here.
   * </pre>
   *
   * <code>optional .validate.FieldRules items = 4 [json_name = "items"];</code>
   */
  com.fluxninja.generated.validate.FieldRulesOrBuilder getItemsOrBuilder();

  /**
   * <pre>
   * IgnoreEmpty specifies that the validation rules of this field should be
   * evaluated only if the field is not empty
   * </pre>
   *
   * <code>optional bool ignore_empty = 5 [json_name = "ignoreEmpty"];</code>
   * @return Whether the ignoreEmpty field is set.
   */
  boolean hasIgnoreEmpty();
  /**
   * <pre>
   * IgnoreEmpty specifies that the validation rules of this field should be
   * evaluated only if the field is not empty
   * </pre>
   *
   * <code>optional bool ignore_empty = 5 [json_name = "ignoreEmpty"];</code>
   * @return The ignoreEmpty.
   */
  boolean getIgnoreEmpty();
}
