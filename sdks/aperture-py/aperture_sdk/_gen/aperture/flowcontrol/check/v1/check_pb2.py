# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aperture/flowcontrol/check/v1/check.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)aperture/flowcontrol/check/v1/check.proto\x12\x1d\x61perture.flowcontrol.check.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9d\x01\n\x0c\x43heckRequest\x12\x15\n\rcontrol_point\x18\x01 \x01(\t\x12G\n\x06labels\x18\x02 \x03(\x0b\x32\x37.aperture.flowcontrol.check.v1.CheckRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfe\x06\n\rCheckResponse\x12)\n\x05start\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\'\n\x03\x65nd\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08services\x18\x04 \x03(\t\x12\x15\n\rcontrol_point\x18\x05 \x01(\t\x12\x17\n\x0f\x66low_label_keys\x18\x06 \x03(\t\x12\x64\n\x15telemetry_flow_labels\x18\x07 \x03(\x0b\x32\x45.aperture.flowcontrol.check.v1.CheckResponse.TelemetryFlowLabelsEntry\x12P\n\rdecision_type\x18\x08 \x01(\x0e\x32\x39.aperture.flowcontrol.check.v1.CheckResponse.DecisionType\x12P\n\rreject_reason\x18\t \x01(\x0e\x32\x39.aperture.flowcontrol.check.v1.CheckResponse.RejectReason\x12G\n\x10\x63lassifier_infos\x18\n \x03(\x0b\x32-.aperture.flowcontrol.check.v1.ClassifierInfo\x12\x46\n\x10\x66lux_meter_infos\x18\x0b \x03(\x0b\x32,.aperture.flowcontrol.check.v1.FluxMeterInfo\x12I\n\x11limiter_decisions\x18\x0c \x03(\x0b\x32..aperture.flowcontrol.check.v1.LimiterDecision\x1a:\n\x18TelemetryFlowLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"m\n\x0cRejectReason\x12\x16\n\x12REJECT_REASON_NONE\x10\x00\x12\x1e\n\x1aREJECT_REASON_RATE_LIMITED\x10\x01\x12%\n!REJECT_REASON_CONCURRENCY_LIMITED\x10\x02\"F\n\x0c\x44\x65\x63isionType\x12\x1a\n\x16\x44\x45\x43ISION_TYPE_ACCEPTED\x10\x00\x12\x1a\n\x16\x44\x45\x43ISION_TYPE_REJECTED\x10\x01\"\xd0\x02\n\x0e\x43lassifierInfo\x12\x13\n\x0bpolicy_name\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_hash\x18\x02 \x01(\t\x12\x18\n\x10\x63lassifier_index\x18\x03 \x01(\x03\x12\x11\n\tlabel_key\x18\x04 \x01(\t\x12\x42\n\x05\x65rror\x18\x05 \x01(\x0e\x32\x33.aperture.flowcontrol.check.v1.ClassifierInfo.Error\"\xa2\x01\n\x05\x45rror\x12\x0e\n\nERROR_NONE\x10\x00\x12\x15\n\x11\x45RROR_EVAL_FAILED\x10\x01\x12\x19\n\x15\x45RROR_EMPTY_RESULTSET\x10\x02\x12\x1d\n\x19\x45RROR_AMBIGUOUS_RESULTSET\x10\x03\x12\x1a\n\x16\x45RROR_MULTI_EXPRESSION\x10\x04\x12\x1c\n\x18\x45RROR_EXPRESSION_NOT_MAP\x10\x05\"\xce\x04\n\x0fLimiterDecision\x12\x13\n\x0bpolicy_name\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_hash\x18\x02 \x01(\t\x12\x14\n\x0c\x63omponent_id\x18\x03 \x01(\t\x12\x0f\n\x07\x64ropped\x18\x04 \x01(\x08\x12L\n\x06reason\x18\x05 \x01(\x0e\x32<.aperture.flowcontrol.check.v1.LimiterDecision.LimiterReason\x12[\n\x11rate_limiter_info\x18\x06 \x01(\x0b\x32>.aperture.flowcontrol.check.v1.LimiterDecision.RateLimiterInfoH\x00\x12i\n\x18\x63oncurrency_limiter_info\x18\x07 \x01(\x0b\x32\x45.aperture.flowcontrol.check.v1.LimiterDecision.ConcurrencyLimiterInfoH\x00\x1a\x44\n\x0fRateLimiterInfo\x12\x11\n\tremaining\x18\x01 \x01(\x03\x12\x0f\n\x07\x63urrent\x18\x02 \x01(\x03\x12\r\n\x05label\x18\x03 \x01(\t\x1a\x30\n\x16\x43oncurrencyLimiterInfo\x12\x16\n\x0eworkload_index\x18\x01 \x01(\t\"Q\n\rLimiterReason\x12\x1e\n\x1aLIMITER_REASON_UNSPECIFIED\x10\x00\x12 \n\x1cLIMITER_REASON_KEY_NOT_FOUND\x10\x01\x42\t\n\x07\x64\x65tails\"(\n\rFluxMeterInfo\x12\x17\n\x0f\x66lux_meter_name\x18\x01 \x01(\t2z\n\x12\x46lowControlService\x12\x64\n\x05\x43heck\x12+.aperture.flowcontrol.check.v1.CheckRequest\x1a,.aperture.flowcontrol.check.v1.CheckResponse\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'aperture.flowcontrol.check.v1.check_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CHECKREQUEST_LABELSENTRY._options = None
  _CHECKREQUEST_LABELSENTRY._serialized_options = b'8\001'
  _CHECKRESPONSE_TELEMETRYFLOWLABELSENTRY._options = None
  _CHECKRESPONSE_TELEMETRYFLOWLABELSENTRY._serialized_options = b'8\001'
  _CHECKREQUEST._serialized_start=110
  _CHECKREQUEST._serialized_end=267
  _CHECKREQUEST_LABELSENTRY._serialized_start=222
  _CHECKREQUEST_LABELSENTRY._serialized_end=267
  _CHECKRESPONSE._serialized_start=270
  _CHECKRESPONSE._serialized_end=1164
  _CHECKRESPONSE_TELEMETRYFLOWLABELSENTRY._serialized_start=923
  _CHECKRESPONSE_TELEMETRYFLOWLABELSENTRY._serialized_end=981
  _CHECKRESPONSE_REJECTREASON._serialized_start=983
  _CHECKRESPONSE_REJECTREASON._serialized_end=1092
  _CHECKRESPONSE_DECISIONTYPE._serialized_start=1094
  _CHECKRESPONSE_DECISIONTYPE._serialized_end=1164
  _CLASSIFIERINFO._serialized_start=1167
  _CLASSIFIERINFO._serialized_end=1503
  _CLASSIFIERINFO_ERROR._serialized_start=1341
  _CLASSIFIERINFO_ERROR._serialized_end=1503
  _LIMITERDECISION._serialized_start=1506
  _LIMITERDECISION._serialized_end=2096
  _LIMITERDECISION_RATELIMITERINFO._serialized_start=1884
  _LIMITERDECISION_RATELIMITERINFO._serialized_end=1952
  _LIMITERDECISION_CONCURRENCYLIMITERINFO._serialized_start=1954
  _LIMITERDECISION_CONCURRENCYLIMITERINFO._serialized_end=2002
  _LIMITERDECISION_LIMITERREASON._serialized_start=2004
  _LIMITERDECISION_LIMITERREASON._serialized_end=2085
  _FLUXMETERINFO._serialized_start=2098
  _FLUXMETERINFO._serialized_end=2138
  _FLOWCONTROLSERVICE._serialized_start=2140
  _FLOWCONTROLSERVICE._serialized_end=2262
# @@protoc_insertion_point(module_scope)
