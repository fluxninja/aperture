{
  "definitions": {
    "AdaptiveLoadScheduler": {
      "description": "The _Adaptive Load Scheduler_ adjusts the accepted token rate based on the deviation of the input signal from the setpoint.",
      "properties": {
        "dry_run": {
          "description": "Decides whether to run the load scheduler in dry-run mode. In dry run mode the scheduler acts as pass through to all flow and does not queue flows.\nIt is useful for observing the behavior of load scheduler without disrupting any real traffic.",
          "type": "boolean"
        },
        "dry_run_config_key": {
          "description": "Configuration key for setting dry run mode through dynamic configuration.",
          "type": "string"
        },
        "in_ports": {
          "$ref": "#/definitions/AdaptiveLoadSchedulerIns",
          "description": "Collection of input ports for the _Adaptive Load Scheduler_ component.\n\n",
          "x-go-tag-validate": "required"
        },
        "out_ports": {
          "$ref": "#/definitions/AdaptiveLoadSchedulerOuts",
          "description": "Collection of output ports for the _Adaptive Load Scheduler_ component."
        },
        "parameters": {
          "$ref": "#/definitions/AdaptiveLoadSchedulerParameters",
          "description": "Parameters for the _Adaptive Load Scheduler_ component.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdaptiveLoadSchedulerIns": {
      "description": "Input ports for the _Adaptive Load Scheduler_ component.",
      "properties": {
        "overload_confirmation": {
          "$ref": "#/definitions/InPort",
          "description": "The `overload_confirmation` port provides additional criteria to determine overload state which\nresults in _Flow_ throttling at the service."
        },
        "setpoint": {
          "$ref": "#/definitions/InPort",
          "description": "The setpoint input to the controller.\n\n",
          "x-go-tag-validate": "required"
        },
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "The input signal to the controller.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdaptiveLoadSchedulerOuts": {
      "description": "Output ports for the _Adaptive Load Scheduler_ component.",
      "properties": {
        "desired_load_multiplier": {
          "$ref": "#/definitions/OutPort",
          "description": "Desired Load multiplier is the ratio of desired token rate to the incoming token rate."
        },
        "is_overload": {
          "$ref": "#/definitions/OutPort",
          "description": "A Boolean signal that indicates whether the service is in overload state."
        },
        "observed_load_multiplier": {
          "$ref": "#/definitions/OutPort",
          "description": "Observed Load multiplier is the ratio of accepted token rate to the incoming token rate."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AdaptiveLoadSchedulerParameters": {
      "description": "Parameters for the _Adaptive Load Scheduler_ component.",
      "properties": {
        "alerter": {
          "$ref": "#/definitions/AlerterParameters",
          "description": "Configuration parameters for the embedded Alerter.\n\n",
          "x-go-tag-validate": "required"
        },
        "gradient": {
          "$ref": "#/definitions/GradientControllerParameters",
          "description": "Parameters for the _Gradient Controller_.\n\n",
          "x-go-tag-validate": "required"
        },
        "load_multiplier_linear_increment": {
          "default": 0.0025,
          "description": "Linear increment to load multiplier in each execution tick when the system is\nnot in the overloaded state, up until the `max_load_multiplier` is reached.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "0.0025"
        },
        "load_scheduler": {
          "$ref": "#/definitions/LoadSchedulerParameters",
          "description": "Parameters for the _Load Scheduler_.\n\n",
          "x-go-tag-validate": "required"
        },
        "max_load_multiplier": {
          "default": 2,
          "description": "The maximum load multiplier that can be reached during recovery from an overload state.\n- Helps protect the service from request bursts while the system is still recovering.\n- Once this value is reached, the scheduler enters the pass-through mode, allowing requests to bypass the scheduler and be sent directly to the service.\n- Any future overload state is detected by the control policy, and the load multiplier increment cycle is restarted.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "2.0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AddressExtractor": {
      "description": "IP addresses in attribute context are defined as objects with separate IP and port fields.\nThis is a helper to display an address as a single string.\n\n:::caution\n\nThis might introduce high-cardinality flow label values.\n\n:::\n\n[ext-authz-address]: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#config-core-v3-address\n\nExample:\n```yaml\nfrom: \"source.address # or destination.address\"\n```",
      "properties": {
        "from": {
          "description": "Attribute path pointing to some string - for example, `source.address`.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["from"],
      "title": "Display an [Address][ext-authz-address] as a single string, for example, `<ip>:<port>`",
      "type": "object",
      "additionalProperties": false
    },
    "Alerter": {
      "description": "Alerter reacts to a signal and generates alert to send to alert manager.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/AlerterIns",
          "description": "Input ports for the Alerter component."
        },
        "parameters": {
          "$ref": "#/definitions/AlerterParameters",
          "title": "Alerter configuration",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AlerterIns": {
      "description": "Inputs for the Alerter component.",
      "properties": {
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AlerterParameters": {
      "description": "Alerter Parameters configure parameters such as alert name, severity, resolve timeout, alert channels and labels.",
      "properties": {
        "alert_channels": {
          "description": "A list of alert channel strings.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "alert_name": {
          "description": "Name of the alert.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional labels to add to alert.",
          "type": "object"
        },
        "resolve_timeout": {
          "default": "5s",
          "description": "Duration of alert resolver.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "5s"
        },
        "severity": {
          "default": "info",
          "description": "Severity of the alert, one of 'info', 'warn' or 'crit'.\n\n",
          "enum": ["info", "warn", "crit"],
          "type": "string",
          "x-go-tag-default": "info",
          "x-go-tag-validate": "oneof=info warn crit",
          "x-oneof": "info | warn | crit"
        }
      },
      "required": ["alert_name"],
      "type": "object",
      "additionalProperties": false
    },
    "And": {
      "description": "Logical AND.\n\nSignals are mapped to Boolean values as follows:\n* Zero is treated as false.\n* Any non-zero is treated as true.\n* Invalid inputs are considered unknown.\n\n  :::note\n\n  Treating invalid inputs as \"unknowns\" has a consequence that the result\n  might end up being valid even when some inputs are invalid. For example, `unknown && false == false`,\n  because the result would end up false no matter if\n  first signal was true or false. Conversely, `unknown && true == unknown`.\n\n  :::",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/AndIns",
          "description": "Input ports for the And component."
        },
        "out_ports": {
          "$ref": "#/definitions/AndOuts",
          "description": "Output ports for the And component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AndIns": {
      "description": "Inputs for the And component.",
      "properties": {
        "inputs": {
          "description": "Array of input signals.\n\n",
          "items": {
            "$ref": "#/definitions/InPort",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AndOuts": {
      "description": "Output ports for the And component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Result of logical AND of all the input signals.\n\nWill always be 0 (false), 1 (true) or invalid (unknown)."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ArithmeticCombinator": {
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/ArithmeticCombinatorIns",
          "description": "Input ports for the Arithmetic Combinator component."
        },
        "operator": {
          "description": "Operator of the arithmetic operation.\n\nThe arithmetic operation can be addition, subtraction, multiplication, division, XOR, right bit shift or left bit shift.\nIn case of XOR and bit shifts, value of signals is cast to integers before performing the operation.\n\n",
          "enum": ["add", "sub", "mul", "div", "xor", "lshift", "rshift"],
          "type": "string",
          "x-go-tag-validate": "oneof=add sub mul div xor lshift rshift",
          "x-oneof": "add | sub | mul | div | xor | lshift | rshift"
        },
        "out_ports": {
          "$ref": "#/definitions/ArithmeticCombinatorOuts",
          "description": "Output ports for the Arithmetic Combinator component."
        }
      },
      "title": "Type of Combinator that computes the arithmetic operation on the operand signals",
      "type": "object",
      "additionalProperties": false
    },
    "ArithmeticCombinatorIns": {
      "description": "Inputs for the Arithmetic Combinator component.",
      "properties": {
        "lhs": {
          "$ref": "#/definitions/InPort",
          "description": "Left hand side of the arithmetic operation."
        },
        "rhs": {
          "$ref": "#/definitions/InPort",
          "description": "Right hand side of the arithmetic operation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ArithmeticCombinatorOuts": {
      "description": "Outputs for the Arithmetic Combinator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Result of arithmetic operation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AutoScale": {
      "description": "AutoScale components are used to scale a service.",
      "properties": {
        "auto_scaler": {
          "$ref": "#/definitions/AutoScaler",
          "description": "_AutoScaler_ provides auto-scaling functionality for any scalable resource."
        },
        "pod_scaler": {
          "$ref": "#/definitions/PodScaler",
          "description": "PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AutoScaler": {
      "description": "_AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.",
      "properties": {
        "dry_run": {
          "description": "Dry run mode ensures that no scaling is invoked by this auto scaler.\nThis is useful for observing the behavior of auto scaler without disrupting any real deployment.\nThis parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.",
          "type": "boolean"
        },
        "dry_run_config_key": {
          "description": "Configuration key for overriding dry run setting through dynamic configuration.",
          "type": "string"
        },
        "scale_in_controllers": {
          "description": "List of _Controllers_ for scaling in.\n\n",
          "items": {
            "$ref": "#/definitions/ScaleInController",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        },
        "scale_out_controllers": {
          "description": "List of _Controllers_ for scaling out.\n\n",
          "items": {
            "$ref": "#/definitions/ScaleOutController",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        },
        "scaling_backend": {
          "$ref": "#/definitions/AutoScalerScalingBackend",
          "x-go-tag-validate": "required"
        },
        "scaling_parameters": {
          "$ref": "#/definitions/AutoScalerScalingParameters",
          "description": "Parameters that define the scaling behavior.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AutoScalerScalingBackend": {
      "properties": {
        "kubernetes_replicas": {
          "$ref": "#/definitions/AutoScalerScalingBackendKubernetesReplicas"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AutoScalerScalingBackendKubernetesReplicas": {
      "description": "KubernetesReplicas defines a horizontal pod scaler for Kubernetes.",
      "properties": {
        "kubernetes_object_selector": {
          "$ref": "#/definitions/KubernetesObjectSelector",
          "description": "The Kubernetes object on which horizontal scaling is applied.\n\n",
          "x-go-tag-validate": "required"
        },
        "max_replicas": {
          "default": "9223372036854775807",
          "description": "The maximum replicas to which the _AutoScaler_ can scale-out.\n\n",
          "format": "int64",
          "minLength": 1,
          "type": "string",
          "x-go-tag-default": "9223372036854775807",
          "x-go-tag-validate": "gt=0"
        },
        "min_replicas": {
          "default": "0",
          "description": "The minimum replicas to which the _AutoScaler_ can scale-in.\n\n",
          "format": "int64",
          "minLength": 0,
          "type": "string",
          "x-go-tag-default": "0",
          "x-go-tag-validate": "gte=0"
        },
        "out_ports": {
          "$ref": "#/definitions/AutoScalerScalingBackendKubernetesReplicasOuts",
          "description": "Output ports for _Kubernetes Replicas_."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "AutoScalerScalingBackendKubernetesReplicasOuts": {
      "properties": {
        "actual_replicas": {
          "$ref": "#/definitions/OutPort"
        },
        "configured_replicas": {
          "$ref": "#/definitions/OutPort"
        },
        "desired_replicas": {
          "$ref": "#/definitions/OutPort"
        }
      },
      "title": "Outputs",
      "type": "object",
      "additionalProperties": false
    },
    "AutoScalerScalingParameters": {
      "properties": {
        "cooldown_override_percentage": {
          "default": 50,
          "description": "Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.\nFor example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the\nscale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "50"
        },
        "max_scale_in_percentage": {
          "default": 1,
          "description": "The maximum decrease of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1"
        },
        "max_scale_out_percentage": {
          "default": 10,
          "description": "The maximum increase of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "10"
        },
        "scale_in_alerter": {
          "$ref": "#/definitions/AlerterParameters",
          "description": "Configuration for scale-in Alerter.\n\n",
          "x-go-tag-validate": "required"
        },
        "scale_in_cooldown": {
          "default": "120s",
          "description": "The amount of time to wait after a scale-in operation for another scale-in operation.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "120s"
        },
        "scale_out_alerter": {
          "$ref": "#/definitions/AlerterParameters",
          "description": "Configuration for scale-out Alerter.\n\n",
          "x-go-tag-validate": "required"
        },
        "scale_out_cooldown": {
          "default": "30s",
          "description": "The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "30s"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "BoolVariable": {
      "description": "Component that emits a constant Boolean signal which can be changed at runtime through dynamic configuration.",
      "properties": {
        "config_key": {
          "description": "Configuration key for overriding value setting through dynamic configuration.",
          "type": "string"
        },
        "constant_output": {
          "description": "The constant Boolean signal emitted by this component. The value of the constant Boolean signal can be overridden at runtime through dynamic configuration.",
          "type": "boolean"
        },
        "out_ports": {
          "$ref": "#/definitions/BoolVariableOuts",
          "description": "Output ports for the BoolVariable component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "BoolVariableOuts": {
      "description": "Outputs for the BoolVariable component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "The value is emitted to the output port."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Circuit": {
      "description": "Circuit is graph of inter-connected signal processing components.\n\n:::info\n\nSee also [Circuit overview](/concepts/advanced/circuit.md).\n\n:::\n\nSignals flow between components through ports.\nAs signals traverse the circuit, they get processed, stored within components or get acted upon (for example, load-shed, rate-limit, auto-scale and so on).\nCircuit is evaluated periodically to respond to changes in signal readings.\n\n:::info Signals\n\nSignals are floating point values.\n\nA signal can also have a special **Invalid** value. It's usually used to\ncommunicate that signal does not have a meaningful value at the moment, for example,\n[PromQL](#prom-q-l) emits such a value if it cannot execute a query.\nComponents know when their input signals are invalid and can act\naccordingly. They can either propagate the invalid signal, by making their\noutput itself invalid (for example,\n[ArithmeticCombinator](#arithmetic-combinator)) or use some different\nlogic, for example, [Extrapolator](#extrapolator). Refer to a component's\ndocs on how exactly it handles invalid inputs.\n\n:::",
      "properties": {
        "components": {
          "description": "Defines a signal processing graph as a list of components.\n\n",
          "items": {
            "$ref": "#/definitions/Component",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        },
        "evaluation_interval": {
          "default": "10s",
          "description": "Evaluation interval (tick) is the time between consecutive runs of the policy circuit.\nThis interval is typically aligned with how often the corrective action (actuation) needs to be taken.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "10s"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Classifier": {
      "description": ":::info\n\nSee also [Classifier overview](/concepts/classifier.md).\n\n:::\nExample\n```yaml\nselectors:\n   - agent_group: demoapp\n     service: service1-demo-app.demoapp.svc.cluster.local\n     control_point: ingress\n     label_matcher:\n        match_labels:\n          user_tier: gold\n        match_expressions:\n          - key: user_type\n            operator: In\nrules:\n  user:\n   extractor:\n     from: request.http.headers.user-agent\n  telemetry: false\n```",
      "properties": {
        "rego": {
          "$ref": "#/definitions/Rego",
          "description": "Rego is a policy language used to express complex policies in a concise and declarative way.\nIt can be used to define flow classification rules by writing custom queries that extract values from request metadata.\nFor simple cases, such as directly reading a value from header or a field from JSON body, declarative extractors are recommended.",
          "title": "Rego based classification"
        },
        "rules": {
          "additionalProperties": {
            "$ref": "#/definitions/Rule"
          },
          "description": "A map of {key, value} pairs mapping from\n[flow label](/concepts/flow-label.md) keys to rules that define\nhow to extract and propagate flow labels with that key.\n\n",
          "type": "object",
          "x-go-tag-validate": "dive,keys,required,endkeys,required"
        },
        "selectors": {
          "description": "Selectors for flows that will be classified by this _Classifier_.\n\n",
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["selectors"],
      "title": "Set of classification rules sharing a common selector",
      "type": "object",
      "additionalProperties": false
    },
    "Component": {
      "description": ":::info\n\nSee also [Components overview](/concepts/advanced/circuit.md#components).\n\n:::\n\nSignals flow into the components from input ports and results are emitted on output ports.\nComponents are wired to each other based on signal names forming an execution graph of the circuit.\n\n:::note\n\nLoops are broken by the runtime at the earliest component index that is part of the loop.\nThe looped signals are saved in the tick they're generated and served in the subsequent tick.\n\n:::\n\nSee also [Policy](#policy) for a higher-level explanation of circuits.",
      "properties": {
        "alerter": {
          "$ref": "#/definitions/Alerter",
          "description": "Alerter reacts to a signal and generates alert to send to alert manager."
        },
        "and": {
          "$ref": "#/definitions/And",
          "description": "Logical AND."
        },
        "arithmetic_combinator": {
          "$ref": "#/definitions/ArithmeticCombinator",
          "description": "Applies the given operator on input operands (signals) and emits the result."
        },
        "auto_scale": {
          "$ref": "#/definitions/AutoScale",
          "description": "AutoScale components are used to scale the service."
        },
        "bool_variable": {
          "$ref": "#/definitions/BoolVariable",
          "description": "BoolVariable emits a constant Boolean signal which can be changed at runtime through dynamic configuration."
        },
        "decider": {
          "$ref": "#/definitions/Decider",
          "description": "Decider emits the binary result of comparison operator on two operands."
        },
        "differentiator": {
          "$ref": "#/definitions/Differentiator",
          "description": "Differentiator calculates rate of change per tick."
        },
        "ema": {
          "$ref": "#/definitions/EMA",
          "description": "Exponential Moving Average filter."
        },
        "extrapolator": {
          "$ref": "#/definitions/Extrapolator",
          "description": "Takes an input signal and emits the extrapolated value; either mirroring the input value or repeating the last known value up to the maximum extrapolation interval."
        },
        "first_valid": {
          "$ref": "#/definitions/FirstValid",
          "description": "Picks the first valid input signal and emits it."
        },
        "flow_control": {
          "$ref": "#/definitions/FlowControl",
          "description": "FlowControl components are used to regulate requests flow."
        },
        "gradient_controller": {
          "$ref": "#/definitions/GradientController",
          "description": "Gradient controller calculates the ratio between the signal and the setpoint to determine the magnitude of the correction that need to be applied.\nThis controller can be used to build AIMD (Additive Increase, Multiplicative Decrease) or MIMD style response."
        },
        "holder": {
          "$ref": "#/definitions/Holder",
          "description": "Holds the last valid signal value for the specified duration then waits for next valid value to hold."
        },
        "integrator": {
          "$ref": "#/definitions/Integrator",
          "description": "Accumulates sum of signal every tick."
        },
        "inverter": {
          "$ref": "#/definitions/Inverter",
          "description": "Logical NOT."
        },
        "max": {
          "$ref": "#/definitions/Max",
          "description": "Emits the maximum of the input signals."
        },
        "min": {
          "$ref": "#/definitions/Min",
          "description": "Emits the minimum of the input signals."
        },
        "nested_circuit": {
          "$ref": "#/definitions/NestedCircuit",
          "description": "Nested circuit defines a sub-circuit as a high-level component. It consists of a list of components and a map of input and output ports."
        },
        "nested_signal_egress": {
          "$ref": "#/definitions/NestedSignalEgress",
          "description": "Nested signal egress is a special type of component that allows to extract a signal from a nested circuit."
        },
        "nested_signal_ingress": {
          "$ref": "#/definitions/NestedSignalIngress",
          "description": "Nested signal ingress is a special type of component that allows to inject a signal into a nested circuit."
        },
        "or": {
          "$ref": "#/definitions/Or",
          "description": "Logical OR."
        },
        "pid_controller": {
          "$ref": "#/definitions/PIDController",
          "description": "PID Controller is a proportional\u2013integral\u2013derivative controller."
        },
        "pulse_generator": {
          "$ref": "#/definitions/PulseGenerator",
          "description": "Generates 0 and 1 in turns."
        },
        "query": {
          "$ref": "#/definitions/Query",
          "description": "Query components that are query databases such as Prometheus."
        },
        "signal_generator": {
          "$ref": "#/definitions/SignalGenerator",
          "description": "Generates the specified signal."
        },
        "sma": {
          "$ref": "#/definitions/SMA",
          "description": "Simple Moving Average filter."
        },
        "switcher": {
          "$ref": "#/definitions/Switcher",
          "description": "Switcher acts as a switch that emits one of the two signals based on third signal."
        },
        "unary_operator": {
          "$ref": "#/definitions/UnaryOperator",
          "description": "Takes an input signal and emits the square root of the input signal."
        },
        "variable": {
          "$ref": "#/definitions/Variable",
          "description": "Emits a variable signal which can be changed at runtime through dynamic configuration."
        }
      },
      "title": "Computational block that forms the circuit",
      "type": "object",
      "additionalProperties": false
    },
    "ConstantSignal": {
      "description": "Special constant input for ports and Variable component. Can provide either a constant value or special Nan/+-Inf value.",
      "properties": {
        "special_value": {
          "description": "A special value such as NaN, +Inf, -Inf.\n\n",
          "enum": ["NaN", "+Inf", "-Inf"],
          "type": "string",
          "x-go-tag-validate": "oneof=NaN +Inf -Inf",
          "x-oneof": "NaN | +Inf | -Inf"
        },
        "value": {
          "description": "A constant value.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Decider": {
      "description": "The comparison operator can be greater-than, less-than, greater-than-or-equal, less-than-or-equal, equal, or not-equal.\n\nThis component also supports time-based response (the output)\ntransitions between 1.0 or 0.0 signal if the decider condition is\ntrue or false for at least `true_for` or `false_for` duration. If\n`true_for` and `false_for` durations are zero then the transitions are\ninstantaneous.",
      "properties": {
        "false_for": {
          "default": "0s",
          "description": "Duration of time to wait before changing to false state.\nIf the duration is zero, the change will happen instantaneously.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "0s"
        },
        "in_ports": {
          "$ref": "#/definitions/DeciderIns",
          "description": "Input ports for the Decider component."
        },
        "operator": {
          "description": "Comparison operator that computes operation on LHS and RHS input signals.\n\n",
          "enum": ["gt", "lt", "gte", "lte", "eq", "neq"],
          "type": "string",
          "x-go-tag-validate": "oneof=gt lt gte lte eq neq",
          "x-oneof": "gt | lt | gte | lte | eq | neq"
        },
        "out_ports": {
          "$ref": "#/definitions/DeciderOuts",
          "description": "Output ports for the Decider component."
        },
        "true_for": {
          "default": "0s",
          "description": "Duration of time to wait before changing to true state.\nIf the duration is zero, the change will happen instantaneously.```\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "0s"
        }
      },
      "title": "Type of Combinator that computes the comparison operation on LHS and RHS signals",
      "type": "object",
      "additionalProperties": false
    },
    "DeciderIns": {
      "description": "Inputs for the Decider component.",
      "properties": {
        "lhs": {
          "$ref": "#/definitions/InPort",
          "description": "Left hand side input signal for the comparison operation."
        },
        "rhs": {
          "$ref": "#/definitions/InPort",
          "description": "Right hand side input signal for the comparison operation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DeciderOuts": {
      "description": "Outputs for the Decider component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Selected signal (1.0 or 0.0)."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DecreasingGradient": {
      "description": "Decreasing Gradient defines a controller for scaling in based on Gradient Controller.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/DecreasingGradientIns",
          "description": "Input ports for the Gradient."
        },
        "parameters": {
          "$ref": "#/definitions/DecreasingGradientParameters",
          "title": "Gradient parameters for the controller. Defaults and constraints:\n* `slope` = 1\n* `min_gradient` = -Inf (must be less than 1)\n* `max_gradient` = 1 (cannot be changed)"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DecreasingGradientIns": {
      "description": "Inputs for Gradient.",
      "properties": {
        "setpoint": {
          "$ref": "#/definitions/InPort",
          "description": "The setpoint to use for scale-in."
        },
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "The signal to use for scale-in."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DecreasingGradientParameters": {
      "description": "This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).",
      "properties": {
        "min_gradient": {
          "default": -1.7976931348623157e308,
          "format": "double",
          "type": "number",
          "x-go-tag-default": "-1.79769313486231570814527423731704356798070e+308",
          "x-go-tag-validate": "lte=1.0"
        },
        "slope": {
          "default": 1,
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1.0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Differentiator": {
      "description": "Differentiator calculates rate of change per tick.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/DifferentiatorIns",
          "description": "Input ports for the Differentiator component."
        },
        "out_ports": {
          "$ref": "#/definitions/DifferentiatorOuts",
          "description": "Output ports for the Differentiator component."
        },
        "window": {
          "default": "5s",
          "description": "The window of time over which differentiator operates.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "5s"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DifferentiatorIns": {
      "description": "Inputs for the Differentiator component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "DifferentiatorOuts": {
      "description": "Outputs for the Differentiator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EMA": {
      "description": "At any time EMA component operates in one of the following states:\n1. Warm up state: The first `warmup_window` samples are used to compute the initial EMA.\n   If an invalid reading is received during the `warmup_window`, the last good average is emitted and the state gets reset back to beginning of warm up state.\n2. Normal state: The EMA is computed using following formula.\n\nThe EMA for a series $Y$ is calculated recursively as:\n<!-- vale off -->\n$$\n\\text{EMA} _t =\n\\begin{cases}\n  Y_0, &\\text{for } t = 0 \\\\\n  \\alpha Y_t + (1 - \\alpha) \\text{EMA}_{t-1}, &\\text{for }t > 0\n\\end{cases}\n$$\n\nThe coefficient $\\alpha$ represents the degree of weighting decrease, a constant smoothing factor between 0 and 1.\nA higher $\\alpha$ discounts older observations faster.\nThe $\\alpha$ is computed using ema\\_window:\n\n$$\n\\alpha = \\frac{2}{N + 1} \\quad\\text{where } N = \\frac{\\text{ema\\_window}}{\\text{evaluation\\_period}}\n$$\n<!-- vale on -->",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/EMAIns",
          "description": "Input ports for the EMA component."
        },
        "out_ports": {
          "$ref": "#/definitions/EMAOuts",
          "description": "Output ports for the EMA component."
        },
        "parameters": {
          "$ref": "#/definitions/EMAParameters",
          "description": "Parameters for the EMA component.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "title": "Exponential Moving Average (EMA) is a type of moving average that applies exponentially more weight to recent signal readings",
      "type": "object",
      "additionalProperties": false
    },
    "EMAIns": {
      "description": "Inputs for the EMA component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "Input signal to be used for the EMA computation."
        },
        "max_envelope": {
          "$ref": "#/definitions/InPort",
          "description": "Upper bound of the moving average.\n\nWhen the signal exceeds `max_envelope` it is multiplied by\n`correction_factor_on_max_envelope_violation` **once per tick**.\n\n:::note\n\nIf the signal deviates from `max_envelope` faster than the correction\nfaster, it might end up exceeding the envelope.\n\n:::"
        },
        "min_envelope": {
          "$ref": "#/definitions/InPort",
          "description": "Lower bound of the moving average.\n\nBehavior is similar to `max_envelope`."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EMAOuts": {
      "description": "Outputs for the EMA component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Exponential moving average of the series of reading as an output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EMAParameters": {
      "description": "Parameters for the EMA component.",
      "properties": {
        "correction_factor_on_max_envelope_violation": {
          "default": 1,
          "description": "Correction factor to apply on the output value if its in violation of the max envelope.\n\n",
          "format": "double",
          "minimum": 0,
          "type": "number",
          "x-go-tag-default": "1.0",
          "x-go-tag-validate": "gte=0,lte=1.0"
        },
        "correction_factor_on_min_envelope_violation": {
          "default": 1,
          "description": "Correction factor to apply on the output value if its in violation of the min envelope.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1.0",
          "x-go-tag-validate": "gte=1.0"
        },
        "ema_window": {
          "description": "EMA window duration.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "valid_during_warmup": {
          "default": false,
          "description": "Whether the output is valid during the warm-up stage.\n\n",
          "type": "boolean",
          "x-go-tag-default": "false"
        },
        "warmup_window": {
          "description": "Duration of EMA warming up window.\n\nThe initial value of the EMA is the average of signal readings received during the warm up window.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["ema_window", "warmup_window"],
      "type": "object",
      "additionalProperties": false
    },
    "EqualsMatchExpression": {
      "description": "Label selector expression of the equal form `label == value`.",
      "properties": {
        "label": {
          "description": "Name of the label to equal match the value.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "value": {
          "description": "Exact value that the label should be equal to.",
          "type": "string"
        }
      },
      "required": ["label"],
      "type": "object",
      "additionalProperties": false
    },
    "Extractor": {
      "description": "There are multiple variants of extractor, specify exactly one.",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressExtractor",
          "description": "Display an address as a single string - `<ip>:<port>`."
        },
        "from": {
          "description": "Attribute path is a dot-separated path to attribute.\n\nShould be either:\n* one of the fields of [Attribute Context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/auth/v3/attribute_context.proto), or\n* a special `request.http.bearer` pseudo-attribute.\nFor example, `request.http.method` or `request.http.header.user-agent`\n\nNote: The same attribute path syntax is shared by other extractor variants,\nwherever attribute path is needed in their \"from\" syntax.\n\nExample:\n```yaml\nfrom: request.http.headers.user-agent\n```",
          "title": "Use an attribute with no conversion",
          "type": "string"
        },
        "json": {
          "$ref": "#/definitions/JSONExtractor",
          "description": "Parse JSON, and extract one of the fields."
        },
        "jwt": {
          "$ref": "#/definitions/JWTExtractor",
          "description": "Parse the attribute as JWT and read the payload."
        },
        "path_templates": {
          "$ref": "#/definitions/PathTemplateMatcher",
          "description": "Match HTTP Path to given path templates."
        }
      },
      "title": "Defines a high-level way to specify how to extract a flow label value given HTTP request metadata, without a need to write Rego code",
      "type": "object",
      "additionalProperties": false
    },
    "Extrapolator": {
      "description": "It does so until `maximum_extrapolation_interval` is reached, beyond which it emits invalid signal unless input signal becomes valid again.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/ExtrapolatorIns",
          "description": "Input ports for the Extrapolator component."
        },
        "out_ports": {
          "$ref": "#/definitions/ExtrapolatorOuts",
          "description": "Output ports for the Extrapolator component."
        },
        "parameters": {
          "$ref": "#/definitions/ExtrapolatorParameters",
          "description": "Parameters for the Extrapolator component.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "title": "Extrapolates the input signal by repeating the last valid value during the period in which it is invalid",
      "type": "object",
      "additionalProperties": false
    },
    "ExtrapolatorIns": {
      "description": "Inputs for the Extrapolator component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "Input signal for the Extrapolator component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExtrapolatorOuts": {
      "description": "Outputs for the Extrapolator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Extrapolated signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ExtrapolatorParameters": {
      "description": "Parameters for the Extrapolator component.",
      "properties": {
        "max_extrapolation_interval": {
          "description": "Maximum time interval to repeat the last valid value of input signal.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["max_extrapolation_interval"],
      "type": "object",
      "additionalProperties": false
    },
    "FirstValid": {
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/FirstValidIns",
          "description": "Input ports for the FirstValid component."
        },
        "out_ports": {
          "$ref": "#/definitions/FirstValidOuts",
          "description": "Output ports for the FirstValid component."
        }
      },
      "title": "Picks the first valid input signal from the array of input signals and emits it as an output signal",
      "type": "object",
      "additionalProperties": false
    },
    "FirstValidIns": {
      "description": "Inputs for the FirstValid component.",
      "properties": {
        "inputs": {
          "description": "Array of input signals.\n\n",
          "items": {
            "$ref": "#/definitions/InPort",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FirstValidOuts": {
      "description": "Outputs for the FirstValid component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "First valid input signal as an output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FlowControl": {
      "description": "_Flow Control_ encompasses components that manage the flow of requests or access to features within a service.",
      "properties": {
        "adaptive_load_scheduler": {
          "$ref": "#/definitions/AdaptiveLoadScheduler",
          "description": "_Adaptive Load Scheduler_ component is based on additive increase and multiplicative decrease of token rate. It takes a signal and setpoint as inputs and reduces token rate proportionally (or any arbitrary power) based on deviation of the signal from setpoint."
        },
        "load_ramp": {
          "$ref": "#/definitions/LoadRamp",
          "description": "_Load Ramp_ smoothly regulates the flow of requests over specified steps."
        },
        "load_scheduler": {
          "$ref": "#/definitions/LoadScheduler",
          "description": "_Load Scheduler_ provides service protection by creating a prioritized workload queue in front of the service using Weighted Fair Queuing."
        },
        "quota_scheduler": {
          "$ref": "#/definitions/QuotaScheduler"
        },
        "rate_limiter": {
          "$ref": "#/definitions/RateLimiter",
          "description": "_Rate Limiter_ provides service protection by applying rate limits using the token bucket algorithm."
        },
        "sampler": {
          "$ref": "#/definitions/Sampler",
          "description": "Sampler is a component that regulates the flow of requests to the service by allowing only the specified percentage of requests or sticky sessions."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FlowControlResources": {
      "properties": {
        "classifiers": {
          "description": "Classifiers are installed in the data-plane and are used to label the requests based on payload content.\n\nThe flow labels created by Classifiers can be matched by Flux Meters to create metrics for control purposes.\n\n",
          "items": {
            "$ref": "#/definitions/Classifier",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        },
        "flux_meters": {
          "additionalProperties": {
            "$ref": "#/definitions/FluxMeter"
          },
          "description": "Flux Meters are installed in the data-plane and form the observability leg of the feedback loop.\n\nFlux Meter created metrics can be consumed as input to the circuit through the PromQL component.\n\n",
          "type": "object",
          "x-go-tag-validate": "dive"
        }
      },
      "title": "FlowControl Resources",
      "type": "object",
      "additionalProperties": false
    },
    "FluxMeter": {
      "description": "Flux Meter gathers metrics for the traffic that matches its selector.\nThe histogram created by Flux Meter measures the workload latency by default.\n\n:::info\n\nSee also [Flux Meter overview](/concepts/flux-meter.md).\n\n:::\nExample:\n```yaml\nstatic_buckets:\n   buckets: [5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]\nselectors:\n   - agent_group: demoapp\n     service: service1-demo-app.demoapp.svc.cluster.local\n     control_point: ingress\nattribute_key: response_duration_ms\n```",
      "properties": {
        "attribute_key": {
          "default": "workload_duration_ms",
          "description": "Key of the attribute in access log or span from which the metric for this flux meter is read.\n\n:::info\n\nFor list of available attributes in Envoy access logs, refer\n[Envoy Filter](/integrations/istio/istio.md#envoy-filter)\n\n:::\n\n",
          "type": "string",
          "x-go-tag-default": "workload_duration_ms"
        },
        "exponential_buckets": {
          "$ref": "#/definitions/FluxMeterExponentialBuckets"
        },
        "exponential_buckets_range": {
          "$ref": "#/definitions/FluxMeterExponentialBucketsRange"
        },
        "linear_buckets": {
          "$ref": "#/definitions/FluxMeterLinearBuckets"
        },
        "selectors": {
          "description": "Selectors for flows that will be metered by this _Flux Meter_.\n\n",
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        },
        "static_buckets": {
          "$ref": "#/definitions/FluxMeterStaticBuckets"
        }
      },
      "required": ["selectors"],
      "type": "object",
      "additionalProperties": false
    },
    "FluxMeterExponentialBuckets": {
      "description": "ExponentialBuckets creates `count` number of buckets where the lowest bucket has an upper bound of `start`\nand each following bucket's upper bound is `factor` times the previous bucket's upper bound. The final +inf\nbucket is not counted.",
      "properties": {
        "count": {
          "description": "Number of buckets.\n\n",
          "exclusiveMinimum": 0,
          "format": "int32",
          "type": "integer",
          "x-go-tag-validate": "gt=0"
        },
        "factor": {
          "description": "Factor to be multiplied to the previous bucket's upper bound to calculate the following bucket's upper bound.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-validate": "gt=1.0"
        },
        "start": {
          "description": "Upper bound of the lowest bucket.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-validate": "gt=0.0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FluxMeterExponentialBucketsRange": {
      "description": "ExponentialBucketsRange creates `count` number of buckets where the lowest bucket is `min` and the highest\nbucket is `max`. The final +inf bucket is not counted.",
      "properties": {
        "count": {
          "description": "Number of buckets.\n\n",
          "exclusiveMinimum": 0,
          "format": "int32",
          "type": "integer",
          "x-go-tag-validate": "gt=0"
        },
        "max": {
          "description": "Highest bucket.",
          "format": "double",
          "type": "number"
        },
        "min": {
          "description": "Lowest bucket.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-validate": "gt=0.0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FluxMeterLinearBuckets": {
      "description": "LinearBuckets creates `count` number of buckets, each `width` wide, where the lowest bucket has an\nupper bound of `start`. The final +inf bucket is not counted.",
      "properties": {
        "count": {
          "description": "Number of buckets.\n\n",
          "exclusiveMinimum": 0,
          "format": "int32",
          "type": "integer",
          "x-go-tag-validate": "gt=0"
        },
        "start": {
          "description": "Upper bound of the lowest bucket.",
          "format": "double",
          "type": "number"
        },
        "width": {
          "description": "Width of each bucket.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "FluxMeterStaticBuckets": {
      "description": "StaticBuckets holds the static value of the buckets where latency histogram will be stored.",
      "properties": {
        "buckets": {
          "default": [5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000],
          "description": "The buckets in which latency histogram will be stored.\n\n",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array",
          "x-go-tag-default": "[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GradientController": {
      "description": "The `gradient` describes a corrective factor that should be applied to the\ncontrol variable to get the signal closer to the setpoint. It's computed as follows:\n\n$$\n\\text{gradient} = \\left(\\frac{\\text{signal}}{\\text{setpoint}}\\right)^{\\text{slope}}\n$$\n\n`gradient` is then clamped to `[min_gradient, max_gradient]` range.\n\nThe output of gradient controller is computed as follows:\n$$\n\\text{output} = \\text{gradient}_{\\text{clamped}} \\cdot \\text{control\\_variable} + \\text{optimize}.\n$$\n\nNote the additional `optimize` signal, that can be used to \"nudge\" the\ncontroller into desired idle state.\n\nThe output can be _optionally_ clamped to desired range using `max` and\n`min` input.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/GradientControllerIns",
          "description": "Input ports of the Gradient Controller."
        },
        "manual_mode": {
          "description": "In manual mode, the controller does not adjust the control variable. It emits the same output as the control variable input. This setting can be adjusted at runtime through dynamic configuration without restarting the policy.",
          "type": "boolean"
        },
        "manual_mode_config_key": {
          "description": "Configuration key for overriding `manual_mode` setting through dynamic configuration.",
          "type": "string"
        },
        "out_ports": {
          "$ref": "#/definitions/GradientControllerOuts",
          "description": "Output ports of the Gradient Controller."
        },
        "parameters": {
          "$ref": "#/definitions/GradientControllerParameters",
          "description": "Gradient Parameters.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "title": "Gradient controller is a type of controller which tries to adjust the\ncontrol variable proportionally to the relative difference between setpoint\nand actual value of the signal",
      "type": "object",
      "additionalProperties": false
    },
    "GradientControllerIns": {
      "description": "Inputs for the Gradient Controller component.",
      "properties": {
        "control_variable": {
          "$ref": "#/definitions/InPort",
          "description": "Actual current value of the control variable.\n\nThis signal is multiplied by the gradient to produce the output."
        },
        "max": {
          "$ref": "#/definitions/InPort",
          "description": "Maximum value to limit the output signal."
        },
        "min": {
          "$ref": "#/definitions/InPort",
          "description": "Minimum value to limit the output signal."
        },
        "setpoint": {
          "$ref": "#/definitions/InPort",
          "description": "Setpoint to be used for the gradient computation."
        },
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "Signal to be used for the gradient computation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GradientControllerOuts": {
      "description": "Outputs for the Gradient Controller component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Computed desired value of the control variable."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "GradientControllerParameters": {
      "description": "Gradient Parameters.",
      "properties": {
        "max_gradient": {
          "default": 1.7976931348623157e308,
          "description": "Maximum gradient which clamps the computed gradient value to the range, `[min_gradient, max_gradient]`.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1.79769313486231570814527423731704356798070e+308"
        },
        "min_gradient": {
          "default": -1.7976931348623157e308,
          "description": "Minimum gradient which clamps the computed gradient value to the range, `[min_gradient, max_gradient]`.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "-1.79769313486231570814527423731704356798070e+308"
        },
        "slope": {
          "description": "Slope controls the aggressiveness and direction of the Gradient Controller.\n\nSlope is used as exponent on the signal to setpoint ratio in computation\nof the gradient (see the [main description](#gradient-controller) for\nexact equation). This parameter decides how aggressive the controller\nresponds to the deviation of signal from the setpoint.\nfor example:\n* $\\text{slope} = 1$: when signal is too high, increase control variable,\n* $\\text{slope} = -1$: when signal is too high, decrease control variable,\n* $\\text{slope} = -0.5$: when signal is too high, decrease control variable gradually.\n\nThe sign of slope depends on correlation between the signal and control variable:\n* Use $\\text{slope} < 0$ if there is a _positive_ correlation between the signal and\nthe control variable (for example, Per-pod CPU usage and total concurrency).\n* Use $\\text{slope} > 0$ if there is a _negative_ correlation between the signal and\nthe control variable (for example, Per-pod CPU usage and number of pods).\n\n:::note\n\nYou need to set _negative_ slope for a _positive_ correlation, as you're\ndescribing the _action_ which controller should make when the signal\nincreases.\n\n:::\n\nThe magnitude of slope describes how aggressively should the controller\nreact to a deviation of signal.\nWith $|\\text{slope}| = 1$, the controller will aim to bring the signal to\nthe setpoint in one tick (assuming linear correlation with signal and setpoint).\nSmaller magnitudes of slope will make the controller adjust the control\nvariable gradually.\n\nSetting $|\\text{slope}| < 1$ (for example, $\\pm0.8$) is recommended.\nIf you experience overshooting, consider lowering the magnitude even more.\nValues of $|\\text{slope}| > 1$ aren't recommended.\n\n:::note\n\nRemember that the gradient and output signal can be (optionally) clamped,\nso the _slope_ might not fully describe aggressiveness of the controller.\n\n:::\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["slope"],
      "type": "object",
      "additionalProperties": false
    },
    "Holder": {
      "description": "Holds the last valid signal value for the specified duration then waits for next valid value to hold.\nIf it is holding a value that means it ignores both valid and invalid new signals until the `hold_for` duration is finished.",
      "properties": {
        "hold_for": {
          "default": "5s",
          "description": "Holding the last valid signal value for the `hold_for` duration.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "5s"
        },
        "in_ports": {
          "$ref": "#/definitions/HolderIns",
          "description": "Input ports for the Holder component."
        },
        "out_ports": {
          "$ref": "#/definitions/HolderOuts",
          "description": "Output ports for the Holder component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "HolderIns": {
      "description": "Inputs for the Holder component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "The input signal."
        },
        "reset": {
          "$ref": "#/definitions/InPort",
          "description": "Resets the holder output to the current input signal when reset signal is valid and non-zero."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "HolderOuts": {
      "description": "Outputs for the Holder component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "The output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InPort": {
      "properties": {
        "constant_signal": {
          "$ref": "#/definitions/ConstantSignal",
          "description": "Constant value to be used for this InPort instead of a signal."
        },
        "signal_name": {
          "description": "Name of the incoming Signal on the InPort.",
          "type": "string"
        }
      },
      "title": "Components receive input from other components through InPorts",
      "type": "object",
      "additionalProperties": false
    },
    "IncreasingGradient": {
      "description": "Increasing Gradient defines a controller for scaling out based on _Gradient Controller_.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/IncreasingGradientIns",
          "description": "Input ports for the Gradient."
        },
        "parameters": {
          "$ref": "#/definitions/IncreasingGradientParameters",
          "title": "Gradient parameters for the controller. Defaults and constraints:\n* `slope` = 1\n* `min_gradient` = 1 (cannot be changed)\n* `max_gradient` = +Inf (must be greater than 1)"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "IncreasingGradientIns": {
      "description": "Inputs for Gradient.",
      "properties": {
        "setpoint": {
          "$ref": "#/definitions/InPort",
          "description": "The setpoint to use for scale-out."
        },
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "The signal to use for scale-out."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "IncreasingGradientParameters": {
      "description": "This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).",
      "properties": {
        "max_gradient": {
          "default": 1.7976931348623157e308,
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1.79769313486231570814527423731704356798070e+308",
          "x-go-tag-validate": "gte=1.0"
        },
        "slope": {
          "default": 1,
          "format": "double",
          "type": "number",
          "x-go-tag-default": "1.0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InfraMeter": {
      "description": "InfraMeter is a resource that sets up OpenTelemetry pipelines.\nIt defines receivers, processors, and a single metrics pipeline\nwhich will be exported to the configured Prometheus instance.\nEnvironment variables can be used in the configuration using format `${ENV_VAR_NAME}`.\n\n:::info\n\nSee also [Get Started / Setup Integrations / Metrics](/integrations/metrics/metrics.md).\n\n:::",
      "properties": {
        "agent_group": {
          "default": "default",
          "description": "AgentGroup is the agent group to sync this InfraMeter with.\n\n",
          "type": "string",
          "x-go-tag-default": "default"
        },
        "per_agent_group": {
          "default": false,
          "description": "PerAgentGroup marks the pipeline to be instantiated only once per agent\ngroup. This is helpful for receivers that scrape for example, some cluster-wide\nmetrics. When not set, pipeline will be instantiated on every Agent.\n\n",
          "type": "boolean",
          "x-go-tag-default": "false"
        },
        "pipeline": {
          "$ref": "#/definitions/InfraMeterMetricsPipeline",
          "description": "Pipeline is an OTel metrics pipeline definition, which **only** uses receivers\nand processors defined above. Exporter would be added automatically.\n\nIf there are no processors defined or only one processor is defined, the\npipeline definition can be omitted. In such cases, the pipeline will\nautomatically use all given receivers and the defined processor (if\nany).  However, if there are more than one processor, the pipeline must\nbe defined explicitly."
        },
        "processors": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Processors define processors to be used in custom metrics pipelines. This should\nbe in [OTel format](https://opentelemetry.io/docs/collector/configuration/#processors).",
          "type": "object"
        },
        "receivers": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Receivers define receivers to be used in custom metrics pipelines. This should\nbe in [OTel format](https://opentelemetry.io/docs/collector/configuration/#receivers).",
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InfraMeterMetricsPipeline": {
      "description": "MetricsPipelineConfig defines a custom metrics pipeline.",
      "properties": {
        "processors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "receivers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Integrator": {
      "description": "Accumulates sum of signal every tick.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/IntegratorIns",
          "description": "Input ports for the Integrator component."
        },
        "initial_value": {
          "default": 0,
          "description": "Initial value of the integrator.\n\n",
          "format": "double",
          "type": "number",
          "x-go-tag-default": "0"
        },
        "out_ports": {
          "$ref": "#/definitions/IntegratorOuts",
          "description": "Output ports for the Integrator component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "IntegratorIns": {
      "description": "Inputs for the Integrator component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "The input signal."
        },
        "max": {
          "$ref": "#/definitions/InPort",
          "description": "The maximum output."
        },
        "min": {
          "$ref": "#/definitions/InPort",
          "description": "The minimum output."
        },
        "reset": {
          "$ref": "#/definitions/InPort",
          "description": "Resets the integrator output to zero when reset signal is valid and non-zero. Reset also resets the max and min constraints."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "IntegratorOuts": {
      "description": "Outputs for the Integrator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Inverter": {
      "description": "Logical NOT.\n\nSee [And component](#and) on how signals are mapped onto Boolean values.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/InverterIns",
          "description": "Input ports for the Inverter component."
        },
        "out_ports": {
          "$ref": "#/definitions/InverterOuts",
          "description": "Output ports for the Inverter component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InverterIns": {
      "description": "Inputs for the Inverter component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "Signal to be negated.\n\n",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "InverterOuts": {
      "description": "Output ports for the Inverter component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Logical negation of the input signal.\n\nWill always be 0 (false), 1 (true) or invalid (unknown)."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "JSONExtractor": {
      "description": "Example:\n```yaml\nfrom: request.http.body\npointer: /user/name\n```",
      "properties": {
        "from": {
          "description": "Attribute path pointing to some strings - for example, `request.http.body`.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "pointer": {
          "description": "JSON pointer represents a parsed JSON pointer which allows to select a specified field from the payload.\n\nNote: Uses [JSON pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,\nfor example, `/foo/bar`. If the pointer points into an object, it'd be converted to a string.",
          "type": "string"
        }
      },
      "required": ["from"],
      "title": "Parse JSON, and extract one of the fields",
      "type": "object",
      "additionalProperties": false
    },
    "JWTExtractor": {
      "description": "Specify a field to be extracted from payload using `json_pointer`.\n\nNote: The signature is not verified against the secret (assuming there's some\nother part of the system that handles such verification).\n\nExample:\n```yaml\nfrom: request.http.bearer\njson_pointer: /user/email\n```",
      "properties": {
        "from": {
          "description": "JWT (JSON Web Token) can be extracted from any input attribute, but most likely you'd want to use `request.http.bearer`.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "json_pointer": {
          "description": "JSON pointer allowing to select a specified field from the payload.\n\nNote: Uses [JSON pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,\nfor example, `/foo/bar`. If the pointer points into an object, it'd be converted to a string.",
          "type": "string"
        }
      },
      "required": ["from"],
      "title": "Parse the attribute as JWT and read the payload",
      "type": "object",
      "additionalProperties": false
    },
    "K8sLabelMatcherRequirement": {
      "description": "Label selector requirement which is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "description": "Label key that the selector applies to.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "operator": {
          "description": "Logical operator which represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.\n\n",
          "enum": ["In", "NotIn", "Exists", "DoesNotExists"],
          "type": "string",
          "x-go-tag-validate": "oneof=In NotIn Exists DoesNotExists",
          "x-oneof": "In | NotIn | Exists | DoesNotExists"
        },
        "values": {
          "description": "An array of string values that relates to the key by an operator.\nIf the operator is In or NotIn, the values array must be non-empty.\nIf the operator is Exists or DoesNotExist, the values array must be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["key"],
      "type": "object",
      "additionalProperties": false
    },
    "KubernetesObjectSelector": {
      "description": "Describes which pods a control or observability\ncomponent should apply to.",
      "properties": {
        "agent_group": {
          "default": "default",
          "description": "Which [agent-group](/concepts/selector.md#agent-group) this\nselector applies to.\n\n",
          "type": "string",
          "x-go-tag-default": "default"
        },
        "api_version": {
          "title": "API version of Kubernetes resource",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "kind": {
          "description": "Kubernetes resource type.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "name": {
          "description": "Kubernetes resource name.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "namespace": {
          "description": "Kubernetes namespace that the resource belongs to.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["api_version", "kind", "name", "namespace"],
      "type": "object",
      "additionalProperties": false
    },
    "LabelMatcher": {
      "description": "It provides three ways to define requirements:\n- match labels\n- match expressions\n- arbitrary expression\n\nIf multiple requirements are set, they're all combined using the logical AND operator.\nAn empty label matcher always matches.",
      "properties": {
        "expression": {
          "$ref": "#/definitions/MatchExpression",
          "description": "An arbitrary expression to be evaluated on the labels."
        },
        "match_expressions": {
          "description": "List of Kubernetes-style label matcher requirements.\n\nNote: The requirements are combined using the logical AND operator.",
          "items": {
            "$ref": "#/definitions/K8sLabelMatcherRequirement",
            "type": "object"
          },
          "type": "array"
        },
        "match_labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of {key,value} pairs representing labels to be matched.\nA single {key,value} in the `match_labels` requires that the label `key` is present and equal to `value`.\n\nNote: The requirements are combined using the logical AND operator.",
          "type": "object"
        }
      },
      "title": "Allows to define rules whether a map of\n[labels](/concepts/flow-label.md)\nshould be considered a match or not",
      "type": "object",
      "additionalProperties": false
    },
    "LoadRamp": {
      "description": "The _Load Ramp_ produces a smooth and continuous traffic load\nthat changes progressively over time, based on the specified steps.\n\nEach step is defined by two parameters:\n- The `target_accept_percentage`.\n- The `duration` for the signal to change from the\n  previous step's `target_accept_percentage` to the current step's\n  `target_accept_percentage`.\n\nThe percentage of requests accepted starts at the `target_accept_percentage`\ndefined in the first step and gradually ramps up or down linearly from\nthe previous step's `target_accept_percentage` to the next\n`target_accept_percentage`, over the `duration` specified for each step.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/LoadRampIns"
        },
        "out_ports": {
          "$ref": "#/definitions/LoadRampOuts"
        },
        "parameters": {
          "$ref": "#/definitions/LoadRampParameters",
          "x-go-tag-validate": "required"
        },
        "pass_through_label_values": {
          "description": "Specify certain label values to be always accepted by the _Sampler_ regardless of accept percentage.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pass_through_label_values_config_key": {
          "description": "Configuration key for setting pass through label values through dynamic configuration.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "LoadRampIns": {
      "description": "Inputs for the _Load Ramp_ component.",
      "properties": {
        "backward": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to progress the _Load Ramp_ towards the previous step."
        },
        "forward": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to progress the _Load Ramp_ towards the next step."
        },
        "reset": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to reset the _Load Ramp_ to the first step."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "LoadRampOuts": {
      "description": "Outputs for the _Load Ramp_ component.",
      "properties": {
        "accept_percentage": {
          "$ref": "#/definitions/OutPort",
          "description": "The percentage of flows being accepted by the _Load Ramp_."
        },
        "at_end": {
          "$ref": "#/definitions/OutPort",
          "description": "A Boolean signal indicating whether the _Load Ramp_ is at the end of signal generation."
        },
        "at_start": {
          "$ref": "#/definitions/OutPort",
          "description": "A Boolean signal indicating whether the _Load Ramp_ is at the start of signal generation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "LoadRampParameters": {
      "description": "Parameters for the _Load Ramp_ component.",
      "properties": {
        "sampler": {
          "$ref": "#/definitions/SamplerParameters",
          "description": "Parameters for the _Sampler_."
        },
        "steps": {
          "items": {
            "$ref": "#/definitions/LoadRampParametersStep",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["steps"],
      "type": "object",
      "additionalProperties": false
    },
    "LoadRampParametersStep": {
      "properties": {
        "denied_response_status_code": {
          "$ref": "#/definitions/StatusCode",
          "description": "This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied."
        },
        "duration": {
          "description": "Duration for which the step is active.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "target_accept_percentage": {
          "description": "The value of the step.\n\n",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number",
          "x-go-tag-validate": "gte=0,lte=100"
        }
      },
      "required": ["duration"],
      "type": "object",
      "additionalProperties": false
    },
    "LoadScheduler": {
      "description": ":::info\n\nSee also [_Load Scheduler_ overview](/concepts/scheduler/load-scheduler.md).\n\n:::\n\nTo make scheduling decisions the Flows are mapped into Workloads by providing match rules.\nA workload determines the priority and cost of admitting each Flow that belongs to it.\nScheduling of Flows is based on Weighted Fair Queuing principles.\n_Load Scheduler_ measures and controls the incoming tokens per second, which can translate\nto (avg. latency \\* in-flight requests) (Little's Law) in concurrency limiting use-case.\n\nThe signal at port `load_multiplier` determines the fraction of incoming tokens that get admitted.",
      "properties": {
        "dry_run": {
          "description": "Decides whether to run the load scheduler in dry-run mode. In dry run mode the scheduler acts as pass through to all flow and does not queue flows.\nIt is useful for observing the behavior of load scheduler without disrupting any real traffic.",
          "type": "boolean"
        },
        "dry_run_config_key": {
          "description": "Configuration key for setting dry run mode through dynamic configuration.",
          "type": "string"
        },
        "in_ports": {
          "$ref": "#/definitions/LoadSchedulerIns",
          "description": "Input ports for the LoadScheduler component.\n\n",
          "x-go-tag-validate": "required"
        },
        "out_ports": {
          "$ref": "#/definitions/LoadSchedulerOuts",
          "description": "Output ports for the LoadScheduler component."
        },
        "parameters": {
          "$ref": "#/definitions/LoadSchedulerParameters",
          "x-go-tag-validate": "required"
        }
      },
      "title": "_Load Scheduler_ creates a queue for flows in front of a service to provide active service protection",
      "type": "object",
      "additionalProperties": false
    },
    "LoadSchedulerIns": {
      "description": "Input for the LoadScheduler component.",
      "properties": {
        "load_multiplier": {
          "$ref": "#/definitions/InPort",
          "description": "Load multiplier is proportion of incoming\ntoken rate that needs to be accepted."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "LoadSchedulerOuts": {
      "description": "Output for the LoadScheduler component.",
      "properties": {
        "observed_load_multiplier": {
          "$ref": "#/definitions/OutPort",
          "description": "Observed load multiplier is the proportion of incoming token rate that is being accepted."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "LoadSchedulerParameters": {
      "properties": {
        "scheduler": {
          "$ref": "#/definitions/Scheduler",
          "description": "Configuration of Weighted Fair Queuing-based workload scheduler.\n\nContains configuration of per-agent scheduler"
        },
        "selectors": {
          "description": "Selectors for the component.\n\n",
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        },
        "workload_latency_based_tokens": {
          "default": true,
          "description": "Automatically estimate the size flows within each workload, based on\nhistorical latency. Each workload's `tokens` will be set to average\nlatency of flows in that workload during the last few seconds (exact duration\nof this average can change).\nThis setting is useful in concurrency limiting use-case, where the\nconcurrency is calculated as ``(avg. latency \\* in-flight flows)`.\n\nThe value of tokens estimated takes a lower precedence\nthan the value of `tokens` specified in the workload definition\nand `tokens` explicitly specified in the flow labels.\n\n",
          "type": "boolean",
          "x-go-tag-default": "true"
        }
      },
      "required": ["selectors"],
      "title": "Parameters for _Load Scheduler_ component",
      "type": "object",
      "additionalProperties": false
    },
    "MatchExpression": {
      "description": "MatchExpression has multiple variants, exactly one should be set.\n\nExample:\n```yaml\nall:\n  of:\n    - label_exists: foo\n    - label_equals:\n        label: app\n        value: frobnicator\n```",
      "properties": {
        "all": {
          "$ref": "#/definitions/MatchExpressionList",
          "description": "The expression is true when all sub expressions are true."
        },
        "any": {
          "$ref": "#/definitions/MatchExpressionList",
          "description": "The expression is true when any sub expression is true."
        },
        "label_equals": {
          "$ref": "#/definitions/EqualsMatchExpression",
          "description": "The expression is true when label value equals given value."
        },
        "label_exists": {
          "description": "The expression is true when label with given name exists.",
          "type": "string"
        },
        "label_matches": {
          "$ref": "#/definitions/MatchesMatchExpression",
          "description": "The expression is true when label matches given regular expression."
        },
        "not": {
          "$ref": "#/definitions/MatchExpression",
          "description": "The expression negates the result of sub expression."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MatchExpressionList": {
      "description": "for example, `{any: {of: [expr1, expr2]}}`.",
      "properties": {
        "of": {
          "description": "List of sub expressions of the match expression.",
          "items": {
            "$ref": "#/definitions/MatchExpression",
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "List of MatchExpressions that is used for all or any matching",
      "type": "object",
      "additionalProperties": false
    },
    "MatchesMatchExpression": {
      "description": "Label selector expression of the form `label matches regex`.",
      "properties": {
        "label": {
          "description": "Name of the label to match the regular expression.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "regex": {
          "description": "Regular expression that should match the label value.\nIt uses [Go's regular expression syntax](https://github.com/google/re2/wiki/Syntax).\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["label", "regex"],
      "type": "object",
      "additionalProperties": false
    },
    "Max": {
      "description": "Max: output = max([]inputs).",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/MaxIns",
          "description": "Input ports for the Max component."
        },
        "out_ports": {
          "$ref": "#/definitions/MaxOuts",
          "description": "Output ports for the Max component."
        }
      },
      "title": "Takes a list of input signals and emits the signal with the maximum value",
      "type": "object",
      "additionalProperties": false
    },
    "MaxIns": {
      "description": "Inputs for the Max component.",
      "properties": {
        "inputs": {
          "description": "Array of input signals.\n\n",
          "items": {
            "$ref": "#/definitions/InPort",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MaxOuts": {
      "description": "Output for the Max component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Signal with maximum value as an output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Min": {
      "description": "Takes an array of input signals and emits the signal with the minimum value\nMin: output = min([]inputs).",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/MinIns",
          "description": "Input ports for the Min component."
        },
        "out_ports": {
          "$ref": "#/definitions/MinOuts",
          "description": "Output ports for the Min component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MinIns": {
      "description": "Inputs for the Min component.",
      "properties": {
        "inputs": {
          "description": "Array of input signals.\n\n",
          "items": {
            "$ref": "#/definitions/InPort",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "MinOuts": {
      "description": "Output ports for the Min component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Signal with minimum value as an output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NestedCircuit": {
      "description": "Nested circuit defines a sub-circuit as a high-level component. It consists of a list of components and a map of input and output ports.",
      "properties": {
        "components": {
          "description": "List of components in the nested circuit.\n\n",
          "items": {
            "$ref": "#/definitions/Component",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        },
        "in_ports_map": {
          "additionalProperties": {
            "$ref": "#/definitions/InPort"
          },
          "description": "Maps input port names to input ports.",
          "type": "object"
        },
        "out_ports_map": {
          "additionalProperties": {
            "$ref": "#/definitions/OutPort"
          },
          "description": "Maps output port names to output ports.",
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NestedSignalEgress": {
      "description": "Nested signal egress is a special type of component that allows to extract a signal from a nested circuit.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/NestedSignalEgressIns",
          "description": "Input ports for the NestedSignalEgress component."
        },
        "port_name": {
          "description": "Name of the port.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NestedSignalEgressIns": {
      "description": "Inputs for the NestedSignalEgress component.",
      "properties": {
        "signal": {
          "$ref": "#/definitions/InPort",
          "description": "Egress signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NestedSignalIngress": {
      "description": "Nested signal ingress is a special type of component that allows to inject a signal into a nested circuit.",
      "properties": {
        "out_ports": {
          "$ref": "#/definitions/NestedSignalIngressOuts",
          "description": "Output ports for the NestedSignalIngress component."
        },
        "port_name": {
          "description": "Name of the port.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "NestedSignalIngressOuts": {
      "description": "Outputs for the NestedSignalIngress component.",
      "properties": {
        "signal": {
          "$ref": "#/definitions/OutPort",
          "description": "Ingress signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Or": {
      "description": "Logical OR.\n\nSee [And component](#and) on how signals are mapped onto Boolean values.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/OrIns",
          "description": "Input ports for the Or component."
        },
        "out_ports": {
          "$ref": "#/definitions/OrOuts",
          "description": "Output ports for the Or component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OrIns": {
      "description": "Inputs for the Or component.",
      "properties": {
        "inputs": {
          "description": "Array of input signals.\n\n",
          "items": {
            "$ref": "#/definitions/InPort",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OrOuts": {
      "description": "Output ports for the Or component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Result of logical OR of all the input signals.\n\nWill always be 0 (false), 1 (true) or invalid (unknown)."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "OutPort": {
      "properties": {
        "signal_name": {
          "description": "Name of the outgoing Signal on the OutPort.",
          "type": "string"
        }
      },
      "title": "Components produce output for other components through OutPorts",
      "type": "object",
      "additionalProperties": false
    },
    "PIDController": {
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/PIDControllerIns"
        },
        "out_ports": {
          "$ref": "#/definitions/PIDControllerOuts"
        },
        "parameters": {
          "$ref": "#/definitions/PIDControllerParameters",
          "x-go-tag-validate": "required"
        }
      },
      "title": "PID Controller is a popular control mechanism for closed-loop feedback control. It takes a signal and a setpoint as inputs and uses the PID algorithm to compute proportional (proportional to the magnitude of error), integral (proportional to accumulation of error), and derivative (proportional to how fast the signal is changing) terms which are summed up to get a desired output.\n<!-- vale off -->\n$$\nerror = setpoint - signal \\\\\nintegral_i = integral_{i-1} + k_i \\cdot error \\\\\noutput_i = k_p \\cdot error + k_d \\cdot (signal_i - signal_{i-1}) + integral_i\n$$\n<!-- vale on -->",
      "type": "object",
      "additionalProperties": false
    },
    "PIDControllerIns": {
      "properties": {
        "max": {
          "$ref": "#/definitions/InPort",
          "title": "Maximum allowed output"
        },
        "min": {
          "$ref": "#/definitions/InPort",
          "title": "Minimum allowed output"
        },
        "setpoint": {
          "$ref": "#/definitions/InPort",
          "title": "The desired setpoint for the signal"
        },
        "signal": {
          "$ref": "#/definitions/InPort",
          "title": "The signal to be controlled"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PIDControllerOuts": {
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "title": "Output of the PID controller"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PIDControllerParameters": {
      "properties": {
        "kd": {
          "default": 0,
          "description": "The derivative gain of the PID controller.\n\n",
          "format": "double",
          "minimum": 0,
          "type": "number",
          "x-go-tag-default": "0",
          "x-go-tag-validate": "gte=0"
        },
        "ki": {
          "default": 0,
          "description": "The integral gain of the PID controller.\n\n",
          "format": "double",
          "minimum": 0,
          "type": "number",
          "x-go-tag-default": "0",
          "x-go-tag-validate": "gte=0"
        },
        "kp": {
          "default": 0,
          "description": "The proportional gain of the PID controller.\n\n",
          "format": "double",
          "minimum": 0,
          "type": "number",
          "x-go-tag-default": "0",
          "x-go-tag-validate": "gte=0"
        },
        "reset_after_invalid_samples": {
          "default": 4,
          "description": "The integrator resets after the specified number of ticks if the signal or setpoint are continuously invalid. Defaults to 4 invalid samples.\n\n",
          "format": "int32",
          "minimum": 1,
          "type": "integer",
          "x-go-tag-default": "4",
          "x-go-tag-validate": "gte=1"
        },
        "sample_period": {
          "description": "The sampling period of the PID controller. This determines how often the PID output is computed. Defaults to the evaluation period of the circuit.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PathTemplateMatcher": {
      "description": "HTTP path will be matched against given path templates.\nIf a match occurs, the value associated with the path template will be treated as a result.\nIn case of multiple path templates matching, the most specific one will be chosen.",
      "properties": {
        "template_values": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Template value keys are OpenAPI-inspired path templates.\n\n* Static path segment `/foo` matches a path segment exactly\n* `/{param}` matches arbitrary path segment.\n  (The parameter name is ignored and can be omitted (`{}`))\n* The parameter must cover whole segment.\n* Additionally, path template can end with `/*` wildcard to match\n  arbitrary number of trailing segments (0 or more).\n* Multiple consecutive `/` are ignored, as well as trailing `/`.\n* Parametrized path segments must come after static segments.\n* `*`, if present, must come last.\n* Most specific template \"wins\" (`/foo` over `/{}` and `/{}` over `/*`).\n\nSee also <https://swagger.io/specification/#path-templating-matching>\n\nExample:\n```yaml\n/register: register\n\"/user/{userId}\": user\n/static/*: other\n```\n\n",
          "minProperties": 1,
          "type": "object",
          "x-go-tag-validate": "gt=0,dive,keys,required,endkeys,required"
        }
      },
      "title": "Matches HTTP Path to given path templates",
      "type": "object",
      "additionalProperties": false
    },
    "PeriodicDecrease": {
      "description": "PeriodicDecrease defines a controller for scaling in based on a periodic timer.",
      "properties": {
        "period": {
          "description": "The period of the timer.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "scale_in_percentage": {
          "description": "The percentage of scale to reduce.\n\n",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number",
          "x-go-tag-validate": "required,gte=0,lte=100"
        }
      },
      "required": ["period", "scale_in_percentage"],
      "type": "object",
      "additionalProperties": false
    },
    "PodScaler": {
      "description": "Component for scaling pods based on a signal.",
      "properties": {
        "dry_run": {
          "description": "Dry run mode ensures that no scaling is invoked by this pod scaler.\nThis is useful for observing the behavior of pod scaler without disrupting any real deployment.\nThis parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.",
          "type": "boolean"
        },
        "dry_run_config_key": {
          "description": "Configuration key for overriding dry run setting through dynamic configuration.",
          "type": "string"
        },
        "in_ports": {
          "$ref": "#/definitions/PodScalerIns",
          "description": "Input ports for the PodScaler component."
        },
        "kubernetes_object_selector": {
          "$ref": "#/definitions/KubernetesObjectSelector",
          "description": "The Kubernetes object to which this pod scaler applies.\n\n",
          "x-go-tag-validate": "required"
        },
        "out_ports": {
          "$ref": "#/definitions/PodScalerOuts",
          "description": "Output ports for the PodScaler component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PodScalerIns": {
      "description": "Inputs for the PodScaler component.",
      "properties": {
        "replicas": {
          "$ref": "#/definitions/InPort",
          "title": "The number of replicas to configure for the Kubernetes resource"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PodScalerOuts": {
      "description": "Outputs for the PodScaler component.",
      "properties": {
        "actual_replicas": {
          "$ref": "#/definitions/OutPort",
          "description": "The number of replicas that are currently running."
        },
        "configured_replicas": {
          "$ref": "#/definitions/OutPort",
          "description": "The number of replicas that are desired."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Policy": {
      "description": "Policy expresses observability-driven control logic.\n\n:::info\n\nSee also [Policy overview](/concepts/advanced/policy.md).\n\n:::\n\nPolicy specification contains a circuit that defines the controller logic and resources that need to be setup.",
      "properties": {
        "circuit": {
          "$ref": "#/definitions/Circuit",
          "description": "Defines the control-loop logic of the policy."
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "Resources (such as Flux Meters, Classifiers) to setup."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PromQL": {
      "properties": {
        "evaluation_interval": {
          "default": "10s",
          "description": "Describes the interval between successive evaluations of the Prometheus query.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "10s"
        },
        "out_ports": {
          "$ref": "#/definitions/PromQLOuts",
          "description": "Output ports for the PromQL component."
        },
        "query_string": {
          "description": "Describes the [PromQL](https://prometheus.io/docs/prometheus/latest/querying/basics/) query to be run.\n\n:::note\n\nThe query must return a single value either as a scalar or as a vector with a single element.\n\n:::\n\n:::info Usage with Flux Meter\n\n[Flux Meter](/concepts/flux-meter.md) metrics can be queried using PromQL. Flux Meter defines histogram type of metrics in Prometheus.\nTherefore, one can refer to `flux_meter_sum`, `flux_meter_count` and `flux_meter_bucket`.\nThe particular Flux Meter can be identified with the `flux_meter_name` label.\nThere are additional labels available on a Flux Meter such as `valid`, `flow_status`, `http_status_code` and `decision_type`.\n\n:::\n\n:::info Usage with OpenTelemetry Metrics\n\nAperture supports OpenTelemetry metrics. See [reference](/integrations/metrics/metrics.md) for more details.\n\n:::",
          "type": "string"
        }
      },
      "title": "Component that runs a Prometheus query periodically and returns the result as an output signal",
      "type": "object",
      "additionalProperties": false
    },
    "PromQLOuts": {
      "description": "Output for the PromQL component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "The result of the Prometheus query as an output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PulseGenerator": {
      "description": "Generates 0 and 1 in turns.",
      "properties": {
        "false_for": {
          "default": "5s",
          "description": "Emitting 0 for the `false_for` duration.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "5s"
        },
        "out_ports": {
          "$ref": "#/definitions/PulseGeneratorOuts",
          "description": "Output ports for the PulseGenerator component."
        },
        "true_for": {
          "default": "5s",
          "description": "Emitting 1 for the `true_for` duration.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "5s"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PulseGeneratorOuts": {
      "description": "Outputs for the PulseGenerator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Query": {
      "description": "Query components that are query databases such as Prometheus.",
      "properties": {
        "promql": {
          "$ref": "#/definitions/PromQL",
          "description": "Periodically runs a Prometheus query in the background and emits the result."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "QuotaScheduler": {
      "description": "Schedules the traffic based on token-bucket based quotas.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/RateLimiterIns",
          "x-go-tag-validate": "required"
        },
        "rate_limiter": {
          "$ref": "#/definitions/RateLimiterParameters",
          "x-go-tag-validate": "required"
        },
        "scheduler": {
          "$ref": "#/definitions/Scheduler"
        },
        "selectors": {
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["selectors"],
      "type": "object",
      "additionalProperties": false
    },
    "RateLimiter": {
      "description": ":::info\n\nSee also [_Rate Limiter_ overview](/concepts/rate-limiter.md).\n\n:::\n\nRateLimiting is done on per-label-value (`label_key`) basis and it uses the _Token Bucket Algorithm_.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/RateLimiterIns",
          "title": "Input ports for the RateLimiter component",
          "x-go-tag-validate": "required"
        },
        "parameters": {
          "$ref": "#/definitions/RateLimiterParameters",
          "title": "Parameters for the RateLimiter component",
          "x-go-tag-validate": "required"
        },
        "selectors": {
          "description": "Selectors for the component.\n\n",
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["selectors"],
      "title": "Limits the traffic on a control point to specified rate",
      "type": "object",
      "additionalProperties": false
    },
    "RateLimiterIns": {
      "properties": {
        "bucket_capacity": {
          "$ref": "#/definitions/InPort",
          "description": "Capacity of the bucket.\n\n",
          "x-go-tag-validate": "required"
        },
        "fill_amount": {
          "$ref": "#/definitions/InPort",
          "description": "Number of tokens to fill within an `interval`.\n\n",
          "x-go-tag-validate": "required"
        },
        "pass_through": {
          "$ref": "#/definitions/InPort",
          "title": "PassThrough port determines whether all requests"
        }
      },
      "title": "Inputs for the RateLimiter component",
      "type": "object",
      "additionalProperties": false
    },
    "RateLimiterParameters": {
      "properties": {
        "continuous_fill": {
          "default": true,
          "description": "Continuous fill determines whether the token bucket should be filled\ncontinuously or only on discrete intervals.\n\n",
          "type": "boolean",
          "x-go-tag-default": "true"
        },
        "denied_response_status_code": {
          "$ref": "#/definitions/StatusCode",
          "description": "This field allows you to override the default HTTP status code (`429 Too Many Requests`) that is returned when a request is denied."
        },
        "interval": {
          "description": "Interval defines the time interval in which the token bucket\nwill fill tokens specified by `fill_amount` signal.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "label_key": {
          "description": "Specifies which label the rate limiter should be keyed by.\n\nRate limiting is done independently for each value of the\n[label](/concepts/flow-label.md) with given key.\nFor example, to give each user a separate limit, assuming you\nhave a _user_ flow\nlabel set up, set `label_key: \"user\"`.\nIf no label key is specified, then all requests matching the\nselectors will be rate limited based on the global bucket.",
          "type": "string"
        },
        "lazy_sync": {
          "$ref": "#/definitions/RateLimiterParametersLazySync",
          "title": "Configuration of lazy-syncing behavior of rate limiter"
        },
        "max_idle_time": {
          "default": "7200s",
          "description": "Max idle time before token bucket state for a label is removed.\nIf set to 0, the state is never removed.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "7200s"
        },
        "tokens_label_key": {
          "description": "Flow label key that will be used to override the number of tokens\nfor this request.\nThis is an optional parameter and takes highest precedence\nwhen assigning tokens to a request.\nThe label value must be a valid uint64 number.",
          "type": "string"
        }
      },
      "required": ["interval"],
      "type": "object",
      "additionalProperties": false
    },
    "RateLimiterParametersLazySync": {
      "properties": {
        "enabled": {
          "default": false,
          "title": "Enables lazy sync",
          "type": "boolean",
          "x-go-tag-default": "false"
        },
        "num_sync": {
          "default": 4,
          "description": "Number of times to lazy sync within the `interval`.\n\n",
          "exclusiveMinimum": 0,
          "format": "int64",
          "type": "integer",
          "x-go-tag-default": "4",
          "x-go-tag-validate": "gt=0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Rego": {
      "description": "Rego define a set of labels that are extracted after evaluating a Rego module.\n\n:::info\n\nYou can use the [live-preview](/concepts/classifier.md#live-previewing-requests) feature to first preview the input to the classifier before writing the labeling logic.\n\n:::\n\nExample of Rego module which also disables telemetry visibility of label:\n```yaml\nrego:\n  labels:\n    user:\n      telemetry: false\n  module: |\n    package user_from_cookie\n    cookies := split(input.attributes.request.http.headers.cookie, \"; \")\n    user := user {\n        cookie := cookies[_]\n        startswith(cookie, \"session=\")\n        session := substring(cookie, count(\"session=\"), -1)\n        parts := split(session, \".\")\n        object := json.unmarshal(base64url.decode(parts[0]))\n        user := object.user\n    }\n```",
      "properties": {
        "labels": {
          "additionalProperties": {
            "$ref": "#/definitions/RegoLabelProperties"
          },
          "description": "A map of {key, value} pairs mapping from\n[flow label](/concepts/flow-label.md) keys to queries that define\nhow to extract and propagate flow labels with that key.\nThe name of the label maps to a variable in the Rego module. It maps to `data.<package>.<label>` variable.\n\n",
          "minProperties": 1,
          "type": "object",
          "x-go-tag-validate": "required,gt=0,dive,keys,required,endkeys,required"
        },
        "module": {
          "description": "Source code of the Rego module.\n\n:::note\n\nMust include a \"package\" declaration.\n\n:::\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        }
      },
      "required": ["labels", "module"],
      "type": "object",
      "additionalProperties": false
    },
    "RegoLabelProperties": {
      "properties": {
        "telemetry": {
          "default": true,
          "description": ":::note\n\nThe flow label is always accessible in Aperture Policies regardless of this setting.\n\n:::\n\n:::caution\n\nWhen using [FluxNinja extension](/reference/fluxninja.md), telemetry enabled\nlabels are sent to Aperture Cloud for observability. Telemetry should\nbe disabled for sensitive labels.\n\n:::\n\n",
          "title": "Decides if the created flow label should be available as an attribute in OLAP telemetry and\npropagated in [baggage](/concepts/flow-label.md#baggage)",
          "type": "boolean",
          "x-go-tag-default": "true"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Resources": {
      "description": ":::info\n\nSee also [Resources overview](/concepts/advanced/policy.md).\n\n:::",
      "properties": {
        "flow_control": {
          "$ref": "#/definitions/FlowControlResources",
          "description": "FlowControlResources are resources that are provided by flow control integration."
        },
        "infra_meters": {
          "additionalProperties": {
            "$ref": "#/definitions/InfraMeter"
          },
          "description": "_Infra Meters_ configure custom metrics OpenTelemetry collector pipelines, which will\nreceive and process telemetry at the agents and send metrics to the configured Prometheus.\nKey in this map refers to OTel pipeline name. Prefixing pipeline name with `metrics/`\nis optional, as all the components and pipeline names would be normalized.\n\nExample:\n\n```yaml\ninfra_meters:\n  rabbitmq:\n    agent_group: default\n    per_agent_group: true\n    processors:\n\t     batch:\n\t       send_batch_size: 10\n\t       timeout: 10s\n\t   receivers:\n\t     rabbitmq:\n\t       collection_interval: 10s\n        endpoint: http://<rabbitmq-svc-fqdn>:15672\n        password: secretpassword\n        username: admin\n\n```\n\n:::caution\n\nValidate the OTel configuration before applying it to the\nproduction cluster.\nIncorrect configuration will get rejected at the agents and might cause\nshutdown of the agent(s).\n\n:::",
          "type": "object"
        },
        "telemetry_collectors": {
          "description": "TelemetryCollector configures OpenTelemetry collector integration.\nDeprecated: v3.0.0. Use `infra_meters` instead.",
          "items": {
            "$ref": "#/definitions/TelemetryCollector",
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "Resources that need to be setup for the policy to function",
      "type": "object",
      "additionalProperties": false
    },
    "Rule": {
      "description": "Example of a JSON extractor:\n```yaml\nextractor:\n  json:\n    from: request.http.body\n    pointer: /user/name\n```",
      "properties": {
        "extractor": {
          "$ref": "#/definitions/Extractor",
          "description": "High-level declarative extractor."
        },
        "telemetry": {
          "default": true,
          "description": ":::note\n\nThe flow label is always accessible in Aperture Policies regardless of this setting.\n\n:::\n\n:::caution\n\nWhen using [FluxNinja extension](/reference/fluxninja.md), telemetry enabled\nlabels are sent to Aperture Cloud for observability. Telemetry should be\ndisabled for sensitive labels.\n\n:::\n\n",
          "title": "Decides if the created flow label should be available as an attribute in OLAP telemetry and\npropagated in [baggage](/concepts/flow-label.md#baggage)",
          "type": "boolean",
          "x-go-tag-default": "true"
        }
      },
      "title": "Rule describes a single classification Rule",
      "type": "object",
      "additionalProperties": false
    },
    "SMA": {
      "description": "Simple Moving Average (SMA) is a type of moving average that computes the average of a fixed number of signal readings.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/SMAIns",
          "description": "Input ports for the SMA component."
        },
        "out_ports": {
          "$ref": "#/definitions/SMAOuts",
          "description": "Output ports for the SMA component."
        },
        "parameters": {
          "$ref": "#/definitions/SMAParameters",
          "description": "Parameters for the SMA component.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SMAIns": {
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "Signal to be used for the moving average computation."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SMAOuts": {
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Computed moving average."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SMAParameters": {
      "properties": {
        "sma_window": {
          "description": "Window of time over which the moving average is computed.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "valid_during_warmup": {
          "default": false,
          "description": "Whether the output is valid during the warm-up stage.\n\n",
          "type": "boolean",
          "x-go-tag-default": "false"
        }
      },
      "required": ["sma_window"],
      "type": "object",
      "additionalProperties": false
    },
    "Sampler": {
      "description": "_Sampler_ is a component that regulates the load at a\n[_Control Point_](/concepts/selector.md/#control-point) by allowing only a specified percentage of\nflows at random or by sticky sessions.\n\n:::info\n\nSee also [_Sampler_ overview](/concepts/load-ramp.md#sampler).\n\n:::",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/SamplerIns",
          "description": "Input ports for the _Sampler_."
        },
        "parameters": {
          "$ref": "#/definitions/SamplerParameters",
          "description": "Parameters for the _Sampler_."
        },
        "pass_through_label_values": {
          "description": "Specify certain label values to be always accepted by this _Sampler_ regardless of accept percentage.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pass_through_label_values_config_key": {
          "description": "Configuration key for setting pass through label values through dynamic configuration.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SamplerIns": {
      "properties": {
        "accept_percentage": {
          "$ref": "#/definitions/InPort",
          "description": "The percentage of requests to accept."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SamplerParameters": {
      "properties": {
        "denied_response_status_code": {
          "$ref": "#/definitions/StatusCode",
          "description": "This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied."
        },
        "label_key": {
          "description": "The flow label key for identifying sessions.\n- When label key is specified, _Sampler_ acts as a sticky filter.\n  The series of flows with the same value of label key get the same\n  decision provided that the `accept_percentage` is same or higher.\n- When label key is not specified, _Sampler_ acts as a stateless filter.\n  Percentage of flows are selected randomly for rejection.",
          "type": "string"
        },
        "selectors": {
          "description": "Selectors for the component.\n\n",
          "items": {
            "$ref": "#/definitions/Selector",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["selectors"],
      "type": "object",
      "additionalProperties": false
    },
    "ScaleInController": {
      "properties": {
        "alerter": {
          "$ref": "#/definitions/AlerterParameters",
          "description": "Configuration for embedded Alerter.\n\n",
          "x-go-tag-validate": "required"
        },
        "controller": {
          "$ref": "#/definitions/ScaleInControllerController",
          "title": "Controller",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ScaleInControllerController": {
      "properties": {
        "gradient": {
          "$ref": "#/definitions/DecreasingGradient"
        },
        "periodic": {
          "$ref": "#/definitions/PeriodicDecrease"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ScaleOutController": {
      "properties": {
        "alerter": {
          "$ref": "#/definitions/AlerterParameters",
          "description": "Configuration for embedded Alerter.\n\n",
          "x-go-tag-validate": "required"
        },
        "controller": {
          "$ref": "#/definitions/ScaleOutControllerController",
          "title": "Controller",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "ScaleOutControllerController": {
      "properties": {
        "gradient": {
          "$ref": "#/definitions/IncreasingGradient"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Scheduler": {
      "description": ":::note\n\nEach Agent instantiates an independent copy of the scheduler, but output\nsignals for accepted and incoming token rate are aggregated across all agents.\n\n:::",
      "properties": {
        "decision_deadline_margin": {
          "default": "0.01s",
          "description": "Decision deadline margin is the amount of time that the scheduler will\nsubtract from the request deadline to determine the deadline for the\ndecision. This is to ensure that the scheduler has enough time to\nmake a decision before the request deadline happens, accounting for\nprocessing delays.\nThe request deadline is based on the\n[gRPC deadline](https://grpc.io/blog/deadlines) or the\n[`grpc-timeout` HTTP header](https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests).\n\nFail-open logic is use for flow control APIs, so if the gRPC deadline\nreaches, the flow will end up being unconditionally allowed while\nit is still waiting on the scheduler.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-default": "0.01s"
        },
        "default_workload_parameters": {
          "$ref": "#/definitions/SchedulerWorkloadParameters",
          "description": "Parameters to be used if none of workloads specified in `workloads` match."
        },
        "denied_response_status_code": {
          "$ref": "#/definitions/StatusCode",
          "description": "This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied."
        },
        "priorities_label_key": {
          "description": "* Key for a flow label that can be used to override the default priority for this flow.\n* The value associated with this key must be a valid uint64 number. Higher numbers means higher priority.\n* If this parameter is not provided, the priority for the flow will be determined by the matched workload's priority.",
          "type": "string"
        },
        "tokens_label_key": {
          "description": "* Key for a flow label that can be used to override the default number of tokens for this flow.\n* The value associated with this key must be a valid uint64 number.\n* If this parameter is not provided, the number of tokens for the flow will be determined by the matched workload's token count.",
          "type": "string"
        },
        "workloads": {
          "description": "List of workloads to be used in scheduler.\n\nCategorizing flows into workloads\nallows for load throttling to be \"intelligent\" instead of queueing flows in an arbitrary order.\nThere are two aspects of this \"intelligence\":\n* Scheduler can more precisely calculate concurrency if it understands\n  that flows belonging to different classes have different weights (for example, insert queries compared to select queries).\n* Setting different priorities to different workloads lets the scheduler\n  avoid dropping important traffic during overload.\n\nEach workload in this list specifies also a matcher that is used to\ndetermine which flow will be categorized into which workload.\nIn case of multiple matching workloads, the first matching one will be used.\nIf none of workloads match, `default_workload` will be used.\n\n:::info\n\nSee also [workload definition in the concepts\nsection](/concepts/scheduler/scheduler.md#workload).\n\n:::\n\n",
          "items": {
            "$ref": "#/definitions/SchedulerWorkload",
            "type": "object"
          },
          "type": "array",
          "x-go-tag-validate": "dive"
        }
      },
      "title": "Weighted Fair Queuing-based workload scheduler",
      "type": "object",
      "additionalProperties": false
    },
    "SchedulerWorkload": {
      "description": "Workload defines a class of flows that preferably have similar properties such as response latency and desired priority.",
      "properties": {
        "label_matcher": {
          "$ref": "#/definitions/LabelMatcher",
          "description": "Label Matcher to select a Workload based on\n[flow labels](/concepts/flow-label.md).\n\n",
          "x-go-tag-validate": "required"
        },
        "name": {
          "description": "Name of the workload.",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/SchedulerWorkloadParameters",
          "description": "Parameters associated with flows matching the label matcher."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SchedulerWorkloadParameters": {
      "description": "Parameters such as priority and tokens that are applicable to flows within a workload.",
      "properties": {
        "priority": {
          "default": 1,
          "description": "$$\ninverted\\_priority = {\\frac {1} {priority}}\n$$\n\n$$\nvirtual\\_finish\\_time = virtual\\_time + \\left(tokens \\cdot inverted\\_priority\\right)\n$$\n\n",
          "exclusiveMinimum": 0,
          "format": "double",
          "title": "Describes priority level of the flows within the workload.\nPriority level is unbounded and can be any positive number.\nHigher numbers means higher priority level.\nThe following formula is used to determine the position of a flow in the queue based on virtual finish time:",
          "type": "number",
          "x-go-tag-default": "1.0",
          "x-go-tag-validate": "gt=0"
        },
        "queue_timeout": {
          "description": "Timeout for the flow in the workload.\nIf timeout is provided on the Check call as well, the minimum of the two is picked.\nIf this override is not provided, the timeout provided in the check call is used.\n0 timeout value implies that the request will not wait in the queue and will be accepted or dropped immediately.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.",
          "type": "string"
        },
        "tokens": {
          "description": "Tokens determines the cost of admitting a single flow in the workload,\nwhich is typically defined as milliseconds of flow latency (time to response or duration of a feature) or\nsimply equal to 1 if the resource being accessed is constrained by the\nnumber of flows (3rd party rate limiters).\nThis override is applicable only if tokens for the flow aren't specified\nin the flow labels.\n\n",
          "format": "int64",
          "minLength": 0,
          "type": "string",
          "x-go-tag-validate": "gte=0"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Selector": {
      "description": "Selects flows based on control point, flow labels, agent group and the service\nthat the flow control component\nwill operate on.\n\n:::info\n\nSee also [Selector overview](/concepts/selector.md).\n\n:::\n\nExample:\n```yaml\ncontrol_point: ingress\nlabel_matcher:\n  match_labels:\n    user_tier: gold\n  match_expressions:\n    - key: query\n      operator: In\n      values:\n        - insert\n        - delete\n  expression:\n    label_matches:\n        - label: user_agent\n          regex: ^(?!.*Chrome).*Safari\n```",
      "properties": {
        "agent_group": {
          "default": "default",
          "description": "[_Agent Group_](/concepts/selector.md#agent-group) this\nselector applies to.\n\n:::info\n\nAgent Groups are used to scope policies to a subset of agents connected to the same controller.\nThe agents within an agent group receive exact same policy configuration and\nform a peer to peer cluster to constantly share state.\n\n:::\n\n",
          "type": "string",
          "x-go-tag-default": "default"
        },
        "control_point": {
          "description": "[Control Point](/concepts/control-point.md)\nidentifies location within services where policies can act on flows.\nFor an SDK based insertion,\na _Control Point_ can represent a particular feature or execution\nblock within a service. In case of service mesh or middleware insertion, a\n_Control Point_ can identify ingress or egress calls or distinct listeners\nor filter chains.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "label_matcher": {
          "$ref": "#/definitions/LabelMatcher",
          "description": "[Label Matcher](/concepts/selector.md#label-matcher)\ncan be used to match flows based on flow labels."
        },
        "service": {
          "default": "any",
          "description": "The Fully Qualified Domain Name of the\n[service](/concepts/selector.md) to select.\n\nIn Kubernetes, this is the FQDN of the Service object.\n\n:::info\n\n`any` matches all services.\n\n:::\n\n:::info\n\nAn entity (for example, Kubernetes pod) might belong to multiple services.\n\n:::\n\n",
          "type": "string",
          "x-go-tag-default": "any"
        }
      },
      "required": ["control_point"],
      "type": "object",
      "additionalProperties": false
    },
    "SignalGenerator": {
      "description": "The _Signal Generator_ component generates a smooth and continuous signal\nby following a sequence of specified steps. Each step has two parameters:\n- `target_output`: The desired output value at the end of the step.\n- `duration`: The time it takes for the signal to change linearly from the\n  previous step's `target_output` to the current step's `target_output`.\n\nThe output signal starts at the `target_output` of the first step and\nchanges linearly between steps based on their `duration`. The _Signal\nGenerator_ can be controlled to move forwards, backwards, or reset to the\nbeginning based on input signals.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/SignalGeneratorIns"
        },
        "out_ports": {
          "$ref": "#/definitions/SignalGeneratorOuts"
        },
        "parameters": {
          "$ref": "#/definitions/SignalGeneratorParameters",
          "description": "Parameters for the _Signal Generator_ component.\n\n",
          "x-go-tag-validate": "required"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SignalGeneratorIns": {
      "description": "Inputs for the _Signal Generator_ component.",
      "properties": {
        "backward": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to progress the _Signal Generator_ towards the previous step."
        },
        "forward": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to progress the _Signal Generator_ towards the next step."
        },
        "reset": {
          "$ref": "#/definitions/InPort",
          "description": "Whether to reset the _Signal Generator_ to the first step."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SignalGeneratorOuts": {
      "description": "Outputs for the _Signal Generator_ component.",
      "properties": {
        "at_end": {
          "$ref": "#/definitions/OutPort",
          "description": "A Boolean signal indicating whether the _Signal Generator_ is at the end of signal generation."
        },
        "at_start": {
          "$ref": "#/definitions/OutPort",
          "description": "A Boolean signal indicating whether the _Signal Generator_ is at the start of signal generation."
        },
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "The generated signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SignalGeneratorParameters": {
      "description": "Parameters for the _Signal Generator_ component.",
      "properties": {
        "steps": {
          "items": {
            "$ref": "#/definitions/SignalGeneratorParametersStep",
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-go-tag-validate": "required,gt=0,dive"
        }
      },
      "required": ["steps"],
      "type": "object",
      "additionalProperties": false
    },
    "SignalGeneratorParametersStep": {
      "properties": {
        "duration": {
          "description": "Duration for which the step is active.\nThis field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an \"s\" to indicate 'seconds.' For example, a value of \"10s\" would signify a duration of 10 seconds.\n\n",
          "type": "string",
          "x-go-tag-validate": "required"
        },
        "target_output": {
          "$ref": "#/definitions/ConstantSignal",
          "description": "The value of the step."
        }
      },
      "required": ["duration"],
      "type": "object",
      "additionalProperties": false
    },
    "StatusCode": {
      "default": "Empty",
      "description": "- Empty: Empty - This code not part of the HTTP status code specification, but it is needed for `enum` type.",
      "enum": [
        "Empty",
        "Continue",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "IMUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "PayloadTooLarge",
        "URITooLong",
        "UnsupportedMediaType",
        "RangeNotSatisfiable",
        "ExpectationFailed",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HTTPVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired"
      ],
      "title": "HTTP response codes.\nFor more details: https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml",
      "type": "string"
    },
    "Switcher": {
      "description": "`on_signal` will be returned if switch input is valid and not equal to 0.0 ,\n otherwise `off_signal` will be returned.",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/SwitcherIns",
          "description": "Input ports for the Switcher component."
        },
        "out_ports": {
          "$ref": "#/definitions/SwitcherOuts",
          "description": "Output ports for the Switcher component."
        }
      },
      "title": "Type of Combinator that switches between `on_signal` and `off_signal` signals based on switch input",
      "type": "object",
      "additionalProperties": false
    },
    "SwitcherIns": {
      "description": "Inputs for the Switcher component.",
      "properties": {
        "off_signal": {
          "$ref": "#/definitions/InPort",
          "description": "Output signal when switch is invalid or 0.0."
        },
        "on_signal": {
          "$ref": "#/definitions/InPort",
          "description": "Output signal when switch is valid and not 0.0."
        },
        "switch": {
          "$ref": "#/definitions/InPort",
          "description": "Decides whether to return `on_signal` or `off_signal`."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "SwitcherOuts": {
      "description": "Outputs for the Switcher component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Selected signal (`on_signal` or `off_signal`)."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "TelemetryCollector": {
      "properties": {
        "agent_group": {
          "default": "default",
          "type": "string",
          "x-go-tag-default": "default"
        },
        "infra_meters": {
          "additionalProperties": {
            "$ref": "#/definitions/InfraMeter"
          },
          "description": "_Infra Meters_ configure custom metrics OpenTelemetry collector pipelines, which will\nreceive and process telemetry at the agents and send metrics to the configured Prometheus.\nKey in this map refers to OTel pipeline name. Prefixing pipeline name with `metrics/`\nis optional, as all the components and pipeline names would be normalized.\n\nExample:\n\n```yaml\n telemetry_collectors:\n   - agent_group: default\n     infra_meters:\n\t      rabbitmq:\n\t        processors:\n\t          batch:\n\t            send_batch_size: 10\n\t            timeout: 10s\n\t        receivers:\n\t          rabbitmq:\n\t            collection_interval: 10s\n\t            endpoint: http://<rabbitmq-svc-fqdn>:15672\n\t            password: secretpassword\n\t            username: admin\n\t        per_agent_group: true\n\n```\n\n:::caution\n\nValidate the OTel configuration before applying it to the\nproduction cluster.\nIncorrect configuration will get rejected at the agents and might cause\nshutdown of the agent(s).\n\n:::",
          "type": "object"
        }
      },
      "title": "TelemetryCollector defines the telemetry configuration to be synced with the agents.\nDeprecated: v3.0.0. Use `InfraMeter` instead.\nIt consists of two parts:\n- Agent Group: Agent group to sync telemetry configuration with\n- Infra Meters: OTel compatible metrics pipelines",
      "type": "object",
      "additionalProperties": false
    },
    "UnaryOperator": {
      "description": "$$\n\\text{output} = \\unary_operator{\\text{input}}\n$$",
      "properties": {
        "in_ports": {
          "$ref": "#/definitions/UnaryOperatorIns",
          "description": "Input ports for the UnaryOperator component."
        },
        "operator": {
          "description": "Unary Operator to apply.\n\nThe unary operator can be one of the following:\n* `abs`: Absolute value with the sign removed.\n* `acos`: `arccosine`, in radians.\n* `acosh`: Inverse hyperbolic cosine.\n* `asin`: `arcsine`, in radians.\n* `asinh`: Inverse hyperbolic sine.\n* `atan`: `arctangent`, in radians.\n* `atanh`: Inverse hyperbolic tangent.\n* `cbrt`: Cube root.\n* `ceil`: Least integer value greater than or equal to input signal.\n* `cos`: `cosine`, in radians.\n* `cosh`: Hyperbolic cosine.\n* `erf`: Error function.\n* `erfc`: Complementary error function.\n* `erfcinv`: Inverse complementary error function.\n* `erfinv`: Inverse error function.\n* `exp`: The base-e exponential of input signal.\n* `exp2`: The base-2 exponential of input signal.\n* `expm1`: The base-e exponential of input signal minus 1.\n* `floor`: Greatest integer value less than or equal to input signal.\n* `gamma`: Gamma function.\n* `j0`: Bessel function of the first kind of order 0.\n* `j1`: Bessel function of the first kind of order 1.\n* `lgamma`: Natural logarithm of the absolute value of the gamma function.\n* `log`: Natural logarithm of input signal.\n* `log10`: Base-10 logarithm of input signal.\n* `log1p`: Natural logarithm of input signal plus 1.\n* `log2`: Base-2 logarithm of input signal.\n* `round`: Round to nearest integer.\n* `roundtoeven`: Round to nearest integer, with ties going to the nearest even integer.\n* `sin`: `sine`, in radians.\n* `sinh`: Hyperbolic sine.\n* `sqrt`: Square root.\n* `tan`: `tangent`, in radians.\n* `tanh`: Hyperbolic tangent.\n* `trunc`: Truncate to integer.\n* `y0`: Bessel function of the second kind of order 0.\n* `y1`: Bessel function of the second kind of order 1.\n\n",
          "enum": [
            "abs",
            "acos",
            "acosh",
            "asin",
            "asinh",
            "atan",
            "atanh",
            "cbrt",
            "ceil",
            "cos",
            "cosh",
            "erf",
            "erfc",
            "erfcinv",
            "erfinv",
            "exp",
            "exp2",
            "expm1",
            "floor",
            "gamma",
            "j0",
            "j1",
            "lgamma",
            "log",
            "log10",
            "log1p",
            "log2",
            "round",
            "roundtoeven",
            "sin",
            "sinh",
            "sqrt",
            "tan",
            "tanh",
            "trunc",
            "y0",
            "y1"
          ],
          "type": "string",
          "x-go-tag-validate": "oneof=abs acos acosh asin asinh atan atanh cbrt ceil cos cosh erf erfc erfcinv erfinv exp exp2 expm1 floor gamma j0 j1 lgamma log log10 log1p log2 round roundtoeven sin sinh sqrt tan tanh trunc y0 y1",
          "x-oneof": "abs | acos | acosh | asin | asinh | atan | atanh | cbrt | ceil | cos | cosh | erf | erfc | erfcinv | erfinv | exp | exp2 | expm1 | floor | gamma | j0 | j1 | lgamma | log | log10 | log1p | log2 | round | roundtoeven | sin | sinh | sqrt | tan | tanh | trunc | y0 | y1"
        },
        "out_ports": {
          "$ref": "#/definitions/UnaryOperatorOuts",
          "description": "Output ports for the UnaryOperator component."
        }
      },
      "title": "Takes an input signal and emits the output after applying the specified unary operator",
      "type": "object",
      "additionalProperties": false
    },
    "UnaryOperatorIns": {
      "description": "Inputs for the UnaryOperator component.",
      "properties": {
        "input": {
          "$ref": "#/definitions/InPort",
          "description": "Input signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "UnaryOperatorOuts": {
      "description": "Outputs for the UnaryOperator component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "Output signal."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "Variable": {
      "description": "Component that emits a constant signal which can be changed at runtime through dynamic configuration.",
      "properties": {
        "config_key": {
          "description": "Configuration key for overriding value setting through dynamic configuration.",
          "type": "string"
        },
        "constant_output": {
          "$ref": "#/definitions/ConstantSignal",
          "description": "The constant signal emitted by this component. The value of the constant signal can be overridden at runtime through dynamic configuration.\n\n",
          "x-go-tag-validate": "required"
        },
        "out_ports": {
          "$ref": "#/definitions/VariableOuts",
          "description": "Output ports for the Variable component."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "VariableOuts": {
      "description": "Outputs for the Variable component.",
      "properties": {
        "output": {
          "$ref": "#/definitions/OutPort",
          "description": "The value is emitted to the output port."
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "PolicyCustomResource": {
      "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.",
      "type": "object",
      "title": "Policy CustomResourceDefinition",
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "x-order": 0,
          "type": ["string", "null"],
          "enum": ["fluxninja.com/v1alpha1"]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "x-order": 1,
          "type": ["string", "null"],
          "enum": ["Policy"]
        },
        "metadata": {
          "x-order": 2,
          "$ref": "https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Aperture Policy Object",
          "x-order": 3,
          "$ref": "#/definitions/Policy"
        },
        "dynamicConfig": {
          "description": "DynamicConfig provides dynamic configuration for the policy.",
          "x-order": 4,
          "type": ["object", "null"]
        },
        "status": {
          "description": "Status indicates the actual state of the CustomResourceDefinition",
          "x-order": 5,
          "$ref": "https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus"
        }
      }
    }
  }
}
