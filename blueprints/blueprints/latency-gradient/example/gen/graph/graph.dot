digraph  {
	subgraph cluster_s27 {
		label="ArithmeticCombinator (10)";margin="50.0";
		n28[label="lhs"];
		n30[label="output"];
		n29[label="rhs"];
		n29->n30[style="invis"];
		{rank=same; n28;n29;};
		{rank=same; n30;};
		
	}
	subgraph cluster_s31 {
		label="ArithmeticCombinator (11)";margin="50.0";
		n32[label="lhs"];
		n34[label="output"];
		n33[label="rhs"];
		n33->n34[style="invis"];
		{rank=same; n32;n33;};
		{rank=same; n34;};
		
	}
	subgraph cluster_s35 {
		label="ArithmeticCombinator (12)";margin="50.0";
		n36[label="lhs"];
		n38[label="output"];
		n37[label="rhs"];
		n37->n38[style="invis"];
		{rank=same; n36;n37;};
		{rank=same; n38;};
		
	}
	subgraph cluster_s39 {
		label="ArithmeticCombinator (13)";margin="50.0";
		n40[label="lhs"];
		n42[label="output"];
		n41[label="rhs"];
		n41->n42[style="invis"];
		{rank=same; n40;n41;};
		{rank=same; n42;};
		
	}
	subgraph cluster_s43 {
		label="ArithmeticCombinator (14)";margin="50.0";
		n45[label="lhs"];
		n46[label="output"];
		n44[label="rhs"];
		n45->n46[style="invis"];
		{rank=same; n44;n45;};
		{rank=same; n46;};
		
	}
	subgraph cluster_s15 {
		label="ArithmeticCombinator (7)";margin="50.0";
		n16[label="lhs"];
		n18[label="output"];
		n17[label="rhs"];
		n17->n18[style="invis"];
		{rank=same; n16;n17;};
		{rank=same; n18;};
		
	}
	subgraph cluster_s19 {
		label="ArithmeticCombinator (8)";margin="50.0";
		n20[label="lhs"];
		n22[label="output"];
		n21[label="rhs"];
		n21->n22[style="invis"];
		{rank=same; n20;n21;};
		{rank=same; n22;};
		
	}
	subgraph cluster_s23 {
		label="ArithmeticCombinator (9)";margin="50.0";
		n25[label="lhs"];
		n26[label="output"];
		n24[label="rhs"];
		n25->n26[style="invis"];
		{rank=same; n24;n25;};
		{rank=same; n26;};
		
	}
	subgraph cluster_s69 {
		subgraph cluster_s73 {
			label="LoadShedActuator (21.LoadShedActuator)";margin="50.0";
			n74[label="load_shed_factor"];
			{rank=same; n74;};
			
		}
		subgraph cluster_s70 {
			label="Scheduler (21.Scheduler)";margin="50.0";
			n71[label="accepted_concurrency"];
			n72[label="incoming_concurrency"];
			{rank=same; n71;n72;};
			
		}
		label="ConcurrencyLimiter (21)";margin="50.0";
		
	}
	subgraph cluster_s1 {
		label="Constant (0)";margin="50.0";
		n2[label="output"];
		{rank=same; n2;};
		
	}
	subgraph cluster_s3 {
		label="Constant (1)";margin="50.0";
		n4[label="output"];
		{rank=same; n4;};
		
	}
	subgraph cluster_s5 {
		label="Constant (2)";margin="50.0";
		n6[label="output"];
		{rank=same; n6;};
		
	}
	subgraph cluster_s7 {
		label="Constant (3)";margin="50.0";
		n8[label="output"];
		{rank=same; n8;};
		
	}
	subgraph cluster_s9 {
		label="Constant (4)";margin="50.0";
		n10[label="output"];
		{rank=same; n10;};
		
	}
	subgraph cluster_s11 {
		label="Constant (5)";margin="50.0";
		n12[label="output"];
		{rank=same; n12;};
		
	}
	subgraph cluster_s13 {
		label="Constant (6)";margin="50.0";
		n14[label="output"];
		{rank=same; n14;};
		
	}
	subgraph cluster_s75 {
		label="Decider (22)";margin="50.0";
		n76[label="lhs"];
		n78[label="output"];
		n77[label="rhs"];
		n77->n78[style="invis"];
		{rank=same; n76;n77;};
		{rank=same; n78;};
		
	}
	subgraph cluster_s58 {
		label="EMA (19)";margin="50.0";
		n59[label="input"];
		n60[label="max_envelope"];
		n61[label="output"];
		n60->n61[style="invis"];
		{rank=same; n59;n60;};
		{rank=same; n61;};
		
	}
	subgraph cluster_s62 {
		label="Gradient (20)";margin="50.0";
		n66[label="control_variable"];
		n65[label="max"];
		n64[label="optimize"];
		n68[label="output"];
		n63[label="setpoint"];
		n67[label="signal"];
		n67->n68[style="invis"];
		{rank=same; n63;n64;n65;n66;n67;};
		{rank=same; n68;};
		
	}
	subgraph cluster_s50 {
		label="Max (16)";margin="50.0";
		n51[label="inputs"];
		n52[label="output"];
		n51->n52[style="invis"];
		{rank=same; n51;};
		{rank=same; n52;};
		
	}
	subgraph cluster_s47 {
		label="Min (15)";margin="50.0";
		n48[label="inputs"];
		n49[label="output"];
		n48->n49[style="invis"];
		{rank=same; n48;};
		{rank=same; n49;};
		
	}
	subgraph cluster_s56 {
		label="PromQL (18)";margin="50.0";
		n57[label="output"];
		{rank=same; n57;};
		
	}
	subgraph cluster_s53 {
		label="Sqrt (17)";margin="50.0";
		n54[label="input"];
		n55[label="output"];
		n54->n55[style="invis"];
		{rank=same; n54;};
		{rank=same; n55;};
		
	}
	subgraph cluster_s79 {
		label="Switcher (23)";margin="50.0";
		n81[label="on_false"];
		n80[label="on_true"];
		n83[label="output"];
		n82[label="switch"];
		n82->n83[style="invis"];
		{rank=same; n80;n81;n82;};
		{rank=same; n83;};
		
	}
	subgraph cluster_s84 {
		label="Switcher (24)";margin="50.0";
		n86[label="on_false"];
		n85[label="on_true"];
		n88[label="output"];
		n87[label="switch"];
		n87->n88[style="invis"];
		{rank=same; n88;};
		{rank=same; n85;n86;n87;};
		
	}
	rankdir="LR";splines="ortho";
	n71->n33[label="ACCEPTED_CONCURRENCY"];
	n71->n54[label="ACCEPTED_CONCURRENCY"];
	n71->n66[label="ACCEPTED_CONCURRENCY"];
	n72->n25[label="INCOMING_CONCURRENCY"];
	n72->n29[label="INCOMING_CONCURRENCY"];
	n18->n60[label="MAX_EMA"];
	n26->n28[label="DELTA_CONCURRENCY"];
	n30->n74[label="LSF"];
	n55->n41[label="SQRT_CONCURRENCY_INCREMENT"];
	n2->n17[label="EMA_LIMIT_MULTIPLIER"];
	n22->n63[label="LATENCY_SETPOINT"];
	n38->n77[label="LATENCY_OVERLOAD"];
	n52->n65[label="MAX_CONCURRENCY"];
	n68->n24[label="DESIRED_CONCURRENCY"];
	n78->n82[label="IS_OVERLOAD_SWITCH"];
	n78->n87[label="IS_OVERLOAD_SWITCH"];
	n88->n44[label="CONCURRENCY_INCREMENT_FEEDBACK"];
	n4->n32[label="CONCURRENCY_LIMIT_MULTIPLIER"];
	n46->n48[label="CONCURRENCY_INCREMENT_INTEGRAL"];
	n49->n81[label="CONCURRENCY_INCREMENT_NORMAL"];
	n49->n86[label="CONCURRENCY_INCREMENT_NORMAL"];
	n57->n16[label="LATENCY"];
	n57->n59[label="LATENCY"];
	n57->n67[label="LATENCY"];
	n57->n76[label="LATENCY"];
	n83->n64[label="CONCURRENCY_INCREMENT"];
	n10->n80[label="CONCURRENCY_INCREMENT_OVERLOAD"];
	n12->n21[label="TOLERANCE"];
	n12->n37[label="TOLERANCE"];
	n14->n85[label="ZERO"];
	n34->n51[label="UPPER_CONCURRENCY_LIMIT"];
	n42->n45[label="CONCURRENCY_INCREMENT_SINGLE_TICK"];
	n61->n20[label="LATENCY_EMA"];
	n61->n36[label="LATENCY_EMA"];
	n8->n40[label="LINEAR_CONCURRENCY_INCREMENT"];
	
}
