digraph  {
	subgraph cluster_s1 {
		label="ArithmeticCombinator[0]";margin="50.0";
		n4[label="2.00"];
		n2[label="lhs"];
		n5[label="output"];
		n3[label="rhs"];
		n4->n3;
		n3->n5[style="invis"];
		{rank=same; n2;n3;};
		{rank=same; n5;};
		
	}
	subgraph cluster_s6 {
		label="ArithmeticCombinator[1]";margin="50.0";
		n9[label="1.10"];
		n7[label="lhs"];
		n10[label="output"];
		n8[label="rhs"];
		n9->n8;
		n8->n10[style="invis"];
		{rank=same; n10;};
		{rank=same; n7;n8;};
		
	}
	subgraph cluster_s11 {
		label="ArithmeticCombinator[2]";margin="50.0";
		n12[label="lhs"];
		n14[label="output"];
		n13[label="rhs"];
		n13->n14[style="invis"];
		{rank=same; n12;n13;};
		{rank=same; n14;};
		
	}
	subgraph cluster_s15 {
		label="ArithmeticCombinator[3]";margin="50.0";
		n17[label="2.00"];
		n16[label="lhs"];
		n19[label="output"];
		n18[label="rhs"];
		n17->n16;
		n18->n19[style="invis"];
		{rank=same; n16;n18;};
		{rank=same; n19;};
		
	}
	subgraph cluster_s20 {
		label="ArithmeticCombinator[4]";margin="50.0";
		n22[label="5.00"];
		n21[label="lhs"];
		n24[label="output"];
		n23[label="rhs"];
		n22->n21;
		n23->n24[style="invis"];
		{rank=same; n21;n23;};
		{rank=same; n24;};
		
	}
	subgraph cluster_s25 {
		label="ArithmeticCombinator[5]";margin="50.0";
		n26[label="lhs"];
		n28[label="output"];
		n27[label="rhs"];
		n27->n28[style="invis"];
		{rank=same; n26;n27;};
		{rank=same; n28;};
		
	}
	subgraph cluster_s55 {
		subgraph cluster_s59 {
			label="LoadActuator[13.LoadActuator]";margin="50.0";
			n60[label="load_multiplier"];
			{rank=same; n60;};
			
		}
		subgraph cluster_s56 {
			label="Scheduler[13.Scheduler]";margin="50.0";
			n57[label="accepted_concurrency"];
			n58[label="incoming_concurrency"];
			{rank=same; n57;n58;};
			
		}
		label="ConcurrencyLimiter[13]";margin="50.0";
		
	}
	subgraph cluster_s61 {
		label="Decider[14]";margin="50.0";
		n62[label="lhs"];
		n64[label="output"];
		n63[label="rhs"];
		n63->n64[style="invis"];
		{rank=same; n64;};
		{rank=same; n62;n63;};
		
	}
	subgraph cluster_s41 {
		label="EMA[10]";margin="50.0";
		n42[label="input"];
		n43[label="max_envelope"];
		n44[label="output"];
		n43->n44[style="invis"];
		{rank=same; n42;n43;};
		{rank=same; n44;};
		
	}
	subgraph cluster_s52 {
		label="Extrapolator[12]";margin="50.0";
		n53[label="input"];
		n54[label="output"];
		n53->n54[style="invis"];
		{rank=same; n53;};
		{rank=same; n54;};
		
	}
	subgraph cluster_s32 {
		label="FirstValid[7]";margin="50.0";
		n34[label="0.00"];
		n33[label="inputs"];
		n35[label="output"];
		n34->n33;
		n33->n35[style="invis"];
		{rank=same; n33;n33;};
		{rank=same; n35;};
		
	}
	subgraph cluster_s45 {
		label="Gradient[11]";margin="50.0";
		n46[label="control_variable"];
		n50[label="max"];
		n49[label="optimize"];
		n51[label="output"];
		n48[label="setpoint"];
		n47[label="signal"];
		n50->n51[style="invis"];
		{rank=same; n46;n47;n48;n49;n50;};
		{rank=same; n51;};
		
	}
	subgraph cluster_s29 {
		label="Min[6]";margin="50.0";
		n30[label="inputs"];
		n31[label="output"];
		n30->n31[style="invis"];
		{rank=same; n30;n30;};
		{rank=same; n31;};
		
	}
	subgraph cluster_s39 {
		label="PromQL[9]";margin="50.0";
		n40[label="output"];
		{rank=same; n40;};
		
	}
	subgraph cluster_s36 {
		label="Sqrt[8]";margin="50.0";
		n37[label="input"];
		n38[label="output"];
		n37->n38[style="invis"];
		{rank=same; n38;};
		{rank=same; n37;};
		
	}
	subgraph cluster_s65 {
		label="Switcher[15]";margin="50.0";
		n67[label="0.00"];
		n68[label="on_false"];
		n66[label="on_true"];
		n70[label="output"];
		n69[label="switch"];
		n67->n66;
		n69->n70[style="invis"];
		{rank=same; n70;};
		{rank=same; n66;n68;n69;};
		
	}
	rankdir="LR";splines="ortho";
	n57->n18[label="ACCEPTED_CONCURRENCY"];
	n57->n30[label="ACCEPTED_CONCURRENCY"];
	n57->n37[label="ACCEPTED_CONCURRENCY"];
	n57->n46[label="ACCEPTED_CONCURRENCY"];
	n58->n13[label="INCOMING_CONCURRENCY"];
	n44->n7[label="LATENCY_EMA"];
	n14->n53[label="DESIRED_CONCURRENCY_RATIO"];
	n70->n27[label="CONCURRENCY_INCREMENT"];
	n70->n49[label="CONCURRENCY_INCREMENT"];
	n54->n60[label="LOAD_MULTIPLIER"];
	n64->n69[label="IS_OVERLOAD"];
	n28->n30[label="CONCURRENCY_INCREMENT_INTEGRAL"];
	n38->n23[label="SQRT_CONCURRENCY_INCREMENT"];
	n40->n2[label="LATENCY"];
	n40->n42[label="LATENCY"];
	n40->n47[label="LATENCY"];
	n40->n62[label="LATENCY"];
	n24->n26[label="CONCURRENCY_INCREMENT_SINGLE_TICK"];
	n31->n33[label="CONCURRENCY_INCREMENT_INTEGRAL_CAPPED"];
	n35->n68[label="CONCURRENCY_INCREMENT_NORMAL"];
	n51->n12[label="DESIRED_CONCURRENCY"];
	n5->n43[label="MAX_EMA"];
	n10->n48[label="LATENCY_SETPOINT"];
	n10->n63[label="LATENCY_SETPOINT"];
	n19->n50[label="NORMAL_CONCURRENCY_LIMIT"];
	
}
