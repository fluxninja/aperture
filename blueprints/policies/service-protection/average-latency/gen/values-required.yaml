# Generated values file for policies/service-protection/average-latency blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/blueprints/policies/service-protection/average-latency

policy:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: __REQUIRED_FIELD__
  # List of additional circuit components.
  # Type: []aperture.spec.v1.Component
  components: []
  # Additional resources.
  # Type: aperture.spec.v1.Resources
  resources:
    flow_control:
      classifiers: []
  # The interval between successive evaluations of the Circuit.
  # Type: string
  evaluation_interval: "1s"
  service_protection_core:
    # List of overload confirmation criteria. Load scheduler can throttle flows when all of the specified overload confirmation criteria are met.
    # Type: []overload_confirmation
    overload_confirmations: []
    # Parameters for Adaptive Load Scheduler.
    # Type: aperture.spec.v1.AdaptiveLoadSchedulerParameters
    # Required: True
    adaptive_load_scheduler:
      alerter:
        alert_name: "Load Throttling Event"
      gradient:
        max_gradient: 1
        min_gradient: 0.1
        slope: -1
      load_multiplier_linear_increment: 0.0025
      load_scheduler:
        selectors:
          - control_point: __REQUIRED_FIELD__
            service: __REQUIRED_FIELD__
      max_load_multiplier: 2
    # Default configuration for setting dry run mode on Load Scheduler. In dry run mode, the Load Scheduler acts as a passthrough and does not throttle flows. This config can be updated at runtime without restarting the policy.
    # Type: bool
    dry_run: false
  auto_scaling:
    # Dry run mode ensures that no scaling is invoked by the auto scaler escalation. This config can be updated at runtime without restarting the policy.
    # Type: bool
    dry_run: null
    # List of scale out controllers.
    # Type: []promql_scale_out_controller
    promql_scale_out_controllers: null
    # List of scale in controllers.
    # Type: []promql_scale_in_controller
    promql_scale_in_controllers: null
    # Parameters that define the scaling behavior.
    # Type: aperture.spec.v1.AutoScalerScalingParameters
    scaling_parameters: null
    # Scaling backend for the policy.
    # Type: aperture.spec.v1.AutoScalerScalingBackend
    scaling_backend: null
    periodic_decrease:
      # Period for periodic scale in.
      # Type: string
      period: null
      # Percentage of replicas to scale in.
      # Type: float64
      scale_in_percentage: null
  latency_baseliner:
    # Flux Meter defines the scope of latency measurements.
    # Type: aperture.spec.v1.FluxMeter
    # Required: True
    flux_meter:
      selectors:
        - control_point: __REQUIRED_FIELD__
          service: __REQUIRED_FIELD__
    # EMA parameters.
    # Type: aperture.spec.v1.EMAParameters
    ema:
      correction_factor_on_max_envelope_violation: 0.95
      ema_window: "1500s"
      warmup_window: "60s"
    # Tolerance factor beyond which the service is considered to be in overloaded state. E.g. if EMA of latency is 50ms and if Tolerance is 1.1, then service is considered to be in overloaded state if current latency is more than 55ms.
    # Type: float64
    latency_tolerance_multiplier: __REQUIRED_FIELD__
    # Current latency value is multiplied with this factor to calculate maximum envelope of Latency EMA.
    # Type: float64
    latency_ema_limit_multiplier: 2
