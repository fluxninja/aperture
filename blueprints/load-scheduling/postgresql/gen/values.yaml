# Generated values file for load-scheduling/postgresql blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/blueprints/load-scheduling/postgresql

policy:
  # List of additional circuit components.
  # Type: []aperture.spec.v1.Component
  components: []
  # The interval between successive evaluations of the Circuit.
  # Type: string
  evaluation_interval: "10s"
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: __REQUIRED_FIELD__
  # Additional resources.
  # Type: aperture.spec.v1.Resources
  resources:
    flow_control:
      classifiers: []
  service_protection_core:
    # Parameters for Adaptive Load Scheduler.
    # Type: aperture.spec.v1.AdaptiveLoadSchedulerParameters
    # Required: True
    adaptive_load_scheduler:
      alerter:
        alert_name: "Load Throttling Event"
      gradient:
        max_gradient: 1
        min_gradient: 0.1
        slope: -1
      load_multiplier_linear_increment: 0.025
      load_scheduler:
        selectors:
          - control_point: __REQUIRED_FIELD__
            service: __REQUIRED_FIELD__
      max_load_multiplier: 2
    # Default configuration for setting dry run mode on Load Scheduler. In dry run mode, the Load Scheduler acts as a passthrough and does not throttle flows. This config can be updated at runtime without restarting the policy.
    # Type: bool
    dry_run: false
    # List of overload confirmation criteria. Load scheduler can throttle flows when all of the specified overload confirmation criteria are met.
    # Type: []overload_confirmation
    overload_confirmations: []
    cpu_overload_confirmation:
      # The operator for the overload confirmation criteria. oneof: `gt | lt | gte | lte | eq | neq`.
      # Type: string
      operator: "gte"
      # The Prometheus query to be run to get the PostgreSQL CPU utilization. Must return a scalar or a vector with a single element.
      # Type: string
      query_string: 'avg(k8s_pod_cpu_utilization_ratio{k8s_statefulset_name="__REQUIRED_FIELD__"})'
      # Threshold value for CPU utilizatio if it has to be used as overload confirmation.
      # Type: float64
      threshold: null
  # PromQL query to detect PostgreSQL overload.
  # Type: string
  promql_query:
    "(sum(postgresql_backends) / sum(postgresql_connection_max)) * 100"
  # Setpoint.
  # Type: float64
  # Required: True
  setpoint: __REQUIRED_FIELD__
  # Configuration for PostgreSQL OpenTelemetry receiver. Refer https://docs.fluxninja.com/integrations/metrics/postgresql for more information.
  # Type: postgresql
  # Required: True
  postgresql:
    agent_group: "default"
    endpoint: __REQUIRED_FIELD__
    password: __REQUIRED_FIELD__
    username: __REQUIRED_FIELD__

dashboard:
  # Additional filters to pass to each query to Grafana datasource.
  # Type: map[string]string
  extra_filters: {}
  # Refresh interval for dashboard panels.
  # Type: string
  refresh_interval: "15s"
  # Time from of dashboard.
  # Type: string
  time_from: "now-15m"
  # Time to of dashboard.
  # Type: string
  time_to: "now"
  # Name of the main dashboard.
  # Type: string
  title: "Aperture Service Protection for PostgreSQL"
  datasource:
    # Datasource filter regex.
    # Type: string
    filter_regex: ""
    # Datasource name.
    # Type: string
    name: "$datasource"
