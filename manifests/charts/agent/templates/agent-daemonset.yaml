apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "common.names.fullname" . }}-agent
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: agent
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: agent
  template:
    metadata:
      {{- if .Values.agent.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.agent.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: agent
        {{- if .Values.agent.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.agent.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName:  {{ template "common.names.fullname" . }}-agent
      {{- include "aperture-agent.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.agent.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.agent.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.agent.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.agent.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.agent.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.agent.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.agent.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.agent.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.agent.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.agent.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.agent.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" (dict "value" .Values.agent.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: aperture-agent
          image: {{ template "aperture-agent.image" . }}
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          {{- if .Values.agent.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.agent.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.agent.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.agent.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: APERTURE_AGENT_OTEL_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: APERTURE_AGENT_SERVICE_DISCOVERY_KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if and .Values.fluxninjaPlugin.apiKeySecret.agent.create .Values.fluxninjaPlugin.enabled }}
            - name: APERTURE_AGENT_FLUXNINJA_PLUGIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "aperture-agent.apiKeySecretRefName" . }}
                  key: {{ .Values.fluxninjaPlugin.apiKeySecret.agent.secretKeyRef.key }}
                  optional: false
            {{- end }}
            {{- if .Values.agent.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.agent.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.agent.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.agent.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.agent.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.agent.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - containerPort: 4317
              name: "grpc-otel"
            - containerPort: {{ .Values.agent.serverPort }}
              name: "grpc"
            - containerPort: {{ .Values.agent.distributedCachePort }}
              name: "dist-cache"
            - containerPort: {{ .Values.agent.memberListPort }}
              name: "memberlist"
          {{- if .Values.agent.resources }}
          resources: {{- toYaml .Values.agent.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.agent.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /v1/status/liveness
              port: grpc
          {{- else if .Values.agent.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.agent.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.agent.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /v1/status/readiness
              port: grpc
          {{- else if .Values.agent.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.agent.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.agent.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: aperture-agent-config
              mountPath: /etc/aperture/aperture-agent/config
            {{- if .Values.agent.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.agent.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.agent.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.agent.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          emptyDir: { }
        - name: aperture-agent-config
          configMap:
            name: {{ template "common.names.fullname" . }}-agent
        {{- if .Values.agent.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.agent.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
