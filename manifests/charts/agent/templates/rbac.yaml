---
{{ if .Values.agent.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "common.names.fullname" . }}-agent
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: agent
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.agent.serviceAccount.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.agent.serviceAccount.annotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.agent.serviceAccount.annotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
automountServiceAccountToken: {{ .Values.agent.serviceAccount.automountServiceAccountToken }}
{{- end }}

---
{{ if .Values.agentController.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "common.names.fullname" . }}-controller
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: controller
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.agentController.serviceAccount.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.agentController.serviceAccount.annotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.agentController.serviceAccount.annotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
automountServiceAccountToken: {{ .Values.agentController.serviceAccount.automountServiceAccountToken }}
{{- end }}

---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: agent
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "common.names.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "common.names.fullname" . }}-agent
    namespace: {{ template "common.names.namespace" . }}
  - kind: ServiceAccount
    name: {{ template "common.names.fullname" . }}-controller
    namespace: {{ template "common.names.namespace" . }}

---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: agent
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
rules:
- apiGroups:
    - ""
  resources:
    - services
    - events
    - endpoints
    - pods
    - nodes
    - namespaces
    - componentstatuses
  verbs:
    - get
    - list
    - watch
- apiGroups: ["quota.openshift.io"]
  resources:
    - clusterresourcequotas
  verbs:
    - get
    - list
- nonResourceURLs:
    - "/version"
    - "/healthz"
  verbs:
    - get
- nonResourceURLs:
    - "/metrics"
  verbs:
    - get
- apiGroups:  # Kubelet connectivity
    - ""
  resources:
    - nodes/metrics
    - nodes/spec
    - nodes/proxy
    - nodes/stats
  verbs:
    - get
- apiGroups:  # leader election check
    - ""
  resources:
    - endpoints
  verbs:
    - get
- apiGroups:
    - policy
  resources:
    - podsecuritypolicies
  verbs:
    - use
  resourceNames:
    -  {{ template "common.names.fullname" . }}
- apiGroups:
    - "security.openshift.io"
  resources:
    - securitycontextconstraints
  verbs:
    - use
  resourceNames:
    -  {{ template "common.names.fullname" . }}
- apiGroups:  # leader election check
    - "coordination.k8s.io"
  resources:
    - leases
  verbs:
    - get
