kind: ConfigMap
metadata:
  name: flowcontrol
  namespace: aperture-system
  labels:
    aperture.tech/validate: "true"
apiVersion: v1
data:
  latency-gradient.yaml: |
    evaluation_interval: "0.5s"
    flux_meters:
      - name: "demo1_latency"
        selector:
          service: "demo1-demo-app.demoapp.svc.cluster.local"
          control_point:
            traffic: "ingress"
    circuit:
      - promql:
          query_string: "sum(increase(demo1_latency_sum[5s]))/sum(increase(demo1_latency_count[5s]))"
          evaluation_interval: "1s"
          out_ports:
            output:
              signal_name: "LATENCY"
      - constant:
          value: "2.0"
          out_ports:
            output:
              signal_name: "EMA_LIMIT_MULTIPLIER"
      - arithmetic_combinator:
          operator: "mul"
          in_ports:
            lhs:
              signal_name: "LATENCY"
            rhs:
              signal_name: "EMA_LIMIT_MULTIPLIER"
          out_ports:
            output:
              signal_name: "MAX_EMA"
      - ema:
          ema_window: "300s"
          warm_up_window: "10s"
          correction_factor_on_max_envelope_violation: "0.95"
          in_ports:
            input:
              signal_name: "LATENCY"
            max_envelope:
              signal_name: "MAX_EMA"
          out_ports:
            output:
              signal_name: "LATENCY_EMA"
      - gradient_controller:
          tolerance: "1.1"
          min_gradient: "0.1"
          max_gradient: "1.0"
          in_ports:
            signal:
              signal_name: "LATENCY"
            setpoint:
              signal_name: "LATENCY_EMA"
            max:
              signal_name: "MAX_CONCURRENCY"
            control_variable:
              signal_name: "ACCEPTED_CONCURRENCY"
            optimize:
              signal_name: "CONCURRENCY_INCREMENT"
          out_ports:
            output:
              signal_name: "DESIRED_CONCURRENCY"
      - arithmetic_combinator:
          operator: "sub"
          in_ports:
            lhs:
              signal_name: "INCOMING_CONCURRENCY"
            rhs:
              signal_name: "DESIRED_CONCURRENCY"
          out_ports:
            output:
              signal_name: "DELTA_CONCURRENCY"
      - arithmetic_combinator:
          operator: "div"
          in_ports:
            lhs:
              signal_name: "DELTA_CONCURRENCY"
            rhs:
              signal_name: "INCOMING_CONCURRENCY"
          out_ports:
            output:
              signal_name: "LSF"
      - concurrency_limiter:
          scheduler:
            selector:
              service: "demo1-demo-app.demoapp.svc.cluster.local"
              control_point:
                traffic: "ingress"
            auto_tokens: true
            default_workload:
              priority: 20
              timeout: "0.005s"
            workloads:
              - workload:
                  priority: 50
                  timeout: "0.005s"
                label_matcher:
                  match_labels:
                    request_header_user: "A"
              - workload:
                  priority: 200
                  timeout: "0.005s"
                label_matcher:
                  match_labels:
                    request_header_user: "B"
            out_ports:
              accepted_concurrency:
                signal_name: "ACCEPTED_CONCURRENCY"
              incoming_concurrency:
                signal_name: "INCOMING_CONCURRENCY"
          load_shed_actuator:
            in_ports:
              load_shed_factor:
                signal_name: "LSF"
      - constant:
          value: "2.0"
          out_ports:
            output:
              signal_name: "CONCURRENCY_LIMIT_MULTIPLIER"
      - constant:
          value: "10.0"
          out_ports:
            output:
              signal_name: "MIN_CONCURRENCY"
      - constant:
          value: "5.0"
          out_ports:
            output:
              signal_name: "LINEAR_CONCURRENCY_INCREMENT"
      - arithmetic_combinator:
          operator: "mul"
          in_ports:
            lhs:
              signal_name: "CONCURRENCY_LIMIT_MULTIPLIER"
            rhs:
              signal_name: "ACCEPTED_CONCURRENCY"
          out_ports:
            output:
              signal_name: "UPPER_CONCURRENCY_LIMIT"
      - max:
          in_ports:
            inputs:
              - signal_name: "UPPER_CONCURRENCY_LIMIT"
              - signal_name: "MIN_CONCURRENCY"
          out_ports:
            output:
              signal_name: "MAX_CONCURRENCY"
      - sqrt:
          scale: "0.5"
          in_ports:
            input:
              signal_name: "ACCEPTED_CONCURRENCY"
          out_ports:
            output:
              signal_name: "SQRT_CONCURRENCY_INCREMENT"
      - arithmetic_combinator:
          operator: "add"
          in_ports:
            lhs:
              signal_name: "LINEAR_CONCURRENCY_INCREMENT"
            rhs:
              signal_name: "SQRT_CONCURRENCY_INCREMENT"
          out_ports:
            output:
              signal_name: "CONCURRENCY_INCREMENT_NORMAL"
      - constant:
          value: "1.2"
          out_ports:
            output:
              signal_name: "OVERLOAD_MULTIPLIER"
      - arithmetic_combinator:
          operator: "mul"
          in_ports:
            lhs:
              signal_name: "LATENCY_EMA"
            rhs:
              signal_name: "OVERLOAD_MULTIPLIER"
          out_ports:
            output:
              signal_name: "LATENCY_OVERLOAD"
      - constant:
          value: "10.0"
          out_ports:
            output:
              signal_name: "CONCURRENCY_INCREMENT_OVERLOAD"
      - decider:
          operator: "gt"
          in_ports:
            lhs:
              signal_name: "LATENCY"
            rhs:
              signal_name: "LATENCY_OVERLOAD"
            on_true:
              signal_name: "CONCURRENCY_INCREMENT_OVERLOAD"
            on_false:
              signal_name: "CONCURRENCY_INCREMENT_NORMAL"
          out_ports:
            output:
              signal_name: "CONCURRENCY_INCREMENT"
