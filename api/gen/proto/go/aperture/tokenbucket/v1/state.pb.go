// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aperture/tokenbucket/v1/state.proto

package tokenbucketv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartFillAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_fill_at,json=startFillAt,proto3" json:"start_fill_at,omitempty"`
	LastFillAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_fill_at,json=lastFillAt,proto3" json:"last_fill_at,omitempty"`
	Available   float64                `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_aperture_tokenbucket_v1_state_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetStartFillAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartFillAt
	}
	return nil
}

func (x *State) GetLastFillAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastFillAt
	}
	return nil
}

func (x *State) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

type TakeNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deadline *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Want     float64                `protobuf:"fixed64,2,opt,name=want,proto3" json:"want,omitempty"`
	CanWait  bool                   `protobuf:"varint,3,opt,name=can_wait,json=canWait,proto3" json:"can_wait,omitempty"`
}

func (x *TakeNRequest) Reset() {
	*x = TakeNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeNRequest) ProtoMessage() {}

func (x *TakeNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeNRequest.ProtoReflect.Descriptor instead.
func (*TakeNRequest) Descriptor() ([]byte, []int) {
	return file_aperture_tokenbucket_v1_state_proto_rawDescGZIP(), []int{1}
}

func (x *TakeNRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TakeNRequest) GetWant() float64 {
	if x != nil {
		return x.Want
	}
	return 0
}

func (x *TakeNRequest) GetCanWait() bool {
	if x != nil {
		return x.CanWait
	}
	return false
}

type TakeNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=available_at,json=availableAt,proto3" json:"available_at,omitempty"`
	Current     float64                `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	Remaining   float64                `protobuf:"fixed64,3,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Ok          bool                   `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *TakeNResponse) Reset() {
	*x = TakeNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeNResponse) ProtoMessage() {}

func (x *TakeNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokenbucket_v1_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeNResponse.ProtoReflect.Descriptor instead.
func (*TakeNResponse) Descriptor() ([]byte, []int) {
	return file_aperture_tokenbucket_v1_state_proto_rawDescGZIP(), []int{2}
}

func (x *TakeNResponse) GetAvailableAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableAt
	}
	return nil
}

func (x *TakeNResponse) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TakeNResponse) GetRemaining() float64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *TakeNResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_aperture_tokenbucket_v1_state_proto protoreflect.FileDescriptor

var file_aperture_tokenbucket_v1_state_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa3, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x75, 0x0a, 0x0c, 0x54, 0x61, 0x6b, 0x65, 0x4e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x77, 0x61, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x22, 0x96, 0x01, 0x0a,
	0x0d, 0x54, 0x61, 0x6b, 0x65, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x42, 0x94, 0x02, 0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c,
	0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2f, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x41, 0x54, 0x58, 0xaa, 0x02, 0x17, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x17, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x41, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x19, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aperture_tokenbucket_v1_state_proto_rawDescOnce sync.Once
	file_aperture_tokenbucket_v1_state_proto_rawDescData = file_aperture_tokenbucket_v1_state_proto_rawDesc
)

func file_aperture_tokenbucket_v1_state_proto_rawDescGZIP() []byte {
	file_aperture_tokenbucket_v1_state_proto_rawDescOnce.Do(func() {
		file_aperture_tokenbucket_v1_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_aperture_tokenbucket_v1_state_proto_rawDescData)
	})
	return file_aperture_tokenbucket_v1_state_proto_rawDescData
}

var file_aperture_tokenbucket_v1_state_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_aperture_tokenbucket_v1_state_proto_goTypes = []interface{}{
	(*State)(nil),                 // 0: aperture.tokenbucket.v1.State
	(*TakeNRequest)(nil),          // 1: aperture.tokenbucket.v1.TakeNRequest
	(*TakeNResponse)(nil),         // 2: aperture.tokenbucket.v1.TakeNResponse
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_aperture_tokenbucket_v1_state_proto_depIdxs = []int32{
	3, // 0: aperture.tokenbucket.v1.State.start_fill_at:type_name -> google.protobuf.Timestamp
	3, // 1: aperture.tokenbucket.v1.State.last_fill_at:type_name -> google.protobuf.Timestamp
	3, // 2: aperture.tokenbucket.v1.TakeNRequest.deadline:type_name -> google.protobuf.Timestamp
	3, // 3: aperture.tokenbucket.v1.TakeNResponse.available_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_aperture_tokenbucket_v1_state_proto_init() }
func file_aperture_tokenbucket_v1_state_proto_init() {
	if File_aperture_tokenbucket_v1_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aperture_tokenbucket_v1_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokenbucket_v1_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokenbucket_v1_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aperture_tokenbucket_v1_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aperture_tokenbucket_v1_state_proto_goTypes,
		DependencyIndexes: file_aperture_tokenbucket_v1_state_proto_depIdxs,
		MessageInfos:      file_aperture_tokenbucket_v1_state_proto_msgTypes,
	}.Build()
	File_aperture_tokenbucket_v1_state_proto = out.File
	file_aperture_tokenbucket_v1_state_proto_rawDesc = nil
	file_aperture_tokenbucket_v1_state_proto_goTypes = nil
	file_aperture_tokenbucket_v1_state_proto_depIdxs = nil
}
