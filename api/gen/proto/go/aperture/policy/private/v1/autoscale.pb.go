// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: aperture/policy/private/v1/autoscale.proto

package privatev1

import (
	v1 "github.com/fluxninja/aperture/v2/api/gen/proto/go/aperture/policy/language/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PodScaleActuator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InPorts              *PodScaleActuator_Ins `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	DryRun               bool                  `protobuf:"varint,2,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	DryRunConfigKey      string                `protobuf:"bytes,3,opt,name=dry_run_config_key,json=dryRunConfigKey,proto3" json:"dry_run_config_key,omitempty"`
	PodScalerComponentId string                `protobuf:"bytes,4,opt,name=pod_scaler_component_id,json=podScalerComponentId,proto3" json:"pod_scaler_component_id,omitempty"`
	AgentGroup           string                `protobuf:"bytes,5,opt,name=agent_group,json=agentGroup,proto3" json:"agent_group,omitempty"`
}

func (x *PodScaleActuator) Reset() {
	*x = PodScaleActuator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaleActuator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaleActuator) ProtoMessage() {}

func (x *PodScaleActuator) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaleActuator.ProtoReflect.Descriptor instead.
func (*PodScaleActuator) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{0}
}

func (x *PodScaleActuator) GetInPorts() *PodScaleActuator_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *PodScaleActuator) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *PodScaleActuator) GetDryRunConfigKey() string {
	if x != nil {
		return x.DryRunConfigKey
	}
	return ""
}

func (x *PodScaleActuator) GetPodScalerComponentId() string {
	if x != nil {
		return x.PodScalerComponentId
	}
	return ""
}

func (x *PodScaleActuator) GetAgentGroup() string {
	if x != nil {
		return x.AgentGroup
	}
	return ""
}

type PodScaleReporter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutPorts             *PodScaleReporter_Outs `protobuf:"bytes,1,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
	PodScalerComponentId string                 `protobuf:"bytes,2,opt,name=pod_scaler_component_id,json=podScalerComponentId,proto3" json:"pod_scaler_component_id,omitempty"`
	AgentGroup           string                 `protobuf:"bytes,3,opt,name=agent_group,json=agentGroup,proto3" json:"agent_group,omitempty"`
}

func (x *PodScaleReporter) Reset() {
	*x = PodScaleReporter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaleReporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaleReporter) ProtoMessage() {}

func (x *PodScaleReporter) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaleReporter.ProtoReflect.Descriptor instead.
func (*PodScaleReporter) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{1}
}

func (x *PodScaleReporter) GetOutPorts() *PodScaleReporter_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

func (x *PodScaleReporter) GetPodScalerComponentId() string {
	if x != nil {
		return x.PodScalerComponentId
	}
	return ""
}

func (x *PodScaleReporter) GetAgentGroup() string {
	if x != nil {
		return x.AgentGroup
	}
	return ""
}

type AutoScaleGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InPorts            *AutoScaleGradient_Ins            `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	OutPorts           *AutoScaleGradient_Outs           `protobuf:"bytes,2,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
	GradientController *v1.GradientController_Parameters `protobuf:"bytes,3,opt,name=gradient_controller,json=gradientController,proto3" json:"gradient_controller,omitempty"`
}

func (x *AutoScaleGradient) Reset() {
	*x = AutoScaleGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleGradient) ProtoMessage() {}

func (x *AutoScaleGradient) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleGradient.ProtoReflect.Descriptor instead.
func (*AutoScaleGradient) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{2}
}

func (x *AutoScaleGradient) GetInPorts() *AutoScaleGradient_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *AutoScaleGradient) GetOutPorts() *AutoScaleGradient_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

func (x *AutoScaleGradient) GetGradientController() *v1.GradientController_Parameters {
	if x != nil {
		return x.GradientController
	}
	return nil
}

type AutoScalePeriodic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InPorts          *AutoScalePeriodic_Ins  `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	OutPorts         *AutoScalePeriodic_Outs `protobuf:"bytes,2,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
	PeriodicDecrease *v1.PeriodicDecrease    `protobuf:"bytes,3,opt,name=periodic_decrease,json=periodicDecrease,proto3" json:"periodic_decrease,omitempty"`
}

func (x *AutoScalePeriodic) Reset() {
	*x = AutoScalePeriodic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScalePeriodic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScalePeriodic) ProtoMessage() {}

func (x *AutoScalePeriodic) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScalePeriodic.ProtoReflect.Descriptor instead.
func (*AutoScalePeriodic) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{3}
}

func (x *AutoScalePeriodic) GetInPorts() *AutoScalePeriodic_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *AutoScalePeriodic) GetOutPorts() *AutoScalePeriodic_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

func (x *AutoScalePeriodic) GetPeriodicDecrease() *v1.PeriodicDecrease {
	if x != nil {
		return x.PeriodicDecrease
	}
	return nil
}

type AutoScaleControllerOutputProcessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InPorts  *AutoScaleControllerOutputProcessor_Ins  `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	OutPorts *AutoScaleControllerOutputProcessor_Outs `protobuf:"bytes,2,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
}

func (x *AutoScaleControllerOutputProcessor) Reset() {
	*x = AutoScaleControllerOutputProcessor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleControllerOutputProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleControllerOutputProcessor) ProtoMessage() {}

func (x *AutoScaleControllerOutputProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleControllerOutputProcessor.ProtoReflect.Descriptor instead.
func (*AutoScaleControllerOutputProcessor) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{4}
}

func (x *AutoScaleControllerOutputProcessor) GetInPorts() *AutoScaleControllerOutputProcessor_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *AutoScaleControllerOutputProcessor) GetOutPorts() *AutoScaleControllerOutputProcessor_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

type PodScaleActuator_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replicas *v1.InPort `protobuf:"bytes,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *PodScaleActuator_Ins) Reset() {
	*x = PodScaleActuator_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaleActuator_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaleActuator_Ins) ProtoMessage() {}

func (x *PodScaleActuator_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaleActuator_Ins.ProtoReflect.Descriptor instead.
func (*PodScaleActuator_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PodScaleActuator_Ins) GetReplicas() *v1.InPort {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type PodScaleReporter_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualReplicas     *v1.OutPort `protobuf:"bytes,1,opt,name=actual_replicas,json=actualReplicas,proto3" json:"actual_replicas,omitempty"`
	ConfiguredReplicas *v1.OutPort `protobuf:"bytes,2,opt,name=configured_replicas,json=configuredReplicas,proto3" json:"configured_replicas,omitempty"`
}

func (x *PodScaleReporter_Outs) Reset() {
	*x = PodScaleReporter_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaleReporter_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaleReporter_Outs) ProtoMessage() {}

func (x *PodScaleReporter_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaleReporter_Outs.ProtoReflect.Descriptor instead.
func (*PodScaleReporter_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PodScaleReporter_Outs) GetActualReplicas() *v1.OutPort {
	if x != nil {
		return x.ActualReplicas
	}
	return nil
}

func (x *PodScaleReporter_Outs) GetConfiguredReplicas() *v1.OutPort {
	if x != nil {
		return x.ConfiguredReplicas
	}
	return nil
}

type AutoScaleGradient_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal      *v1.InPort `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	Setpoint    *v1.InPort `protobuf:"bytes,2,opt,name=setpoint,proto3" json:"setpoint,omitempty"`
	ActualScale *v1.InPort `protobuf:"bytes,3,opt,name=actual_scale,json=actualScale,proto3" json:"actual_scale,omitempty"`
}

func (x *AutoScaleGradient_Ins) Reset() {
	*x = AutoScaleGradient_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleGradient_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleGradient_Ins) ProtoMessage() {}

func (x *AutoScaleGradient_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleGradient_Ins.ProtoReflect.Descriptor instead.
func (*AutoScaleGradient_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AutoScaleGradient_Ins) GetSignal() *v1.InPort {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *AutoScaleGradient_Ins) GetSetpoint() *v1.InPort {
	if x != nil {
		return x.Setpoint
	}
	return nil
}

func (x *AutoScaleGradient_Ins) GetActualScale() *v1.InPort {
	if x != nil {
		return x.ActualScale
	}
	return nil
}

type AutoScaleGradient_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale *v1.OutPort `protobuf:"bytes,1,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *AutoScaleGradient_Outs) Reset() {
	*x = AutoScaleGradient_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleGradient_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleGradient_Outs) ProtoMessage() {}

func (x *AutoScaleGradient_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleGradient_Outs.ProtoReflect.Descriptor instead.
func (*AutoScaleGradient_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AutoScaleGradient_Outs) GetScale() *v1.OutPort {
	if x != nil {
		return x.Scale
	}
	return nil
}

type AutoScalePeriodic_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualScale *v1.InPort `protobuf:"bytes,1,opt,name=actual_scale,json=actualScale,proto3" json:"actual_scale,omitempty"`
}

func (x *AutoScalePeriodic_Ins) Reset() {
	*x = AutoScalePeriodic_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScalePeriodic_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScalePeriodic_Ins) ProtoMessage() {}

func (x *AutoScalePeriodic_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScalePeriodic_Ins.ProtoReflect.Descriptor instead.
func (*AutoScalePeriodic_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AutoScalePeriodic_Ins) GetActualScale() *v1.InPort {
	if x != nil {
		return x.ActualScale
	}
	return nil
}

type AutoScalePeriodic_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale *v1.OutPort `protobuf:"bytes,1,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *AutoScalePeriodic_Outs) Reset() {
	*x = AutoScalePeriodic_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScalePeriodic_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScalePeriodic_Outs) ProtoMessage() {}

func (x *AutoScalePeriodic_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScalePeriodic_Outs.ProtoReflect.Descriptor instead.
func (*AutoScalePeriodic_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AutoScalePeriodic_Outs) GetScale() *v1.OutPort {
	if x != nil {
		return x.Scale
	}
	return nil
}

type AutoScaleControllerOutputProcessor_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale *v1.InPort `protobuf:"bytes,1,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *AutoScaleControllerOutputProcessor_Ins) Reset() {
	*x = AutoScaleControllerOutputProcessor_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleControllerOutputProcessor_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleControllerOutputProcessor_Ins) ProtoMessage() {}

func (x *AutoScaleControllerOutputProcessor_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleControllerOutputProcessor_Ins.ProtoReflect.Descriptor instead.
func (*AutoScaleControllerOutputProcessor_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AutoScaleControllerOutputProcessor_Ins) GetScale() *v1.InPort {
	if x != nil {
		return x.Scale
	}
	return nil
}

type AutoScaleControllerOutputProcessor_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposedScale *v1.OutPort `protobuf:"bytes,1,opt,name=proposed_scale,json=proposedScale,proto3" json:"proposed_scale,omitempty"`
}

func (x *AutoScaleControllerOutputProcessor_Outs) Reset() {
	*x = AutoScaleControllerOutputProcessor_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaleControllerOutputProcessor_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaleControllerOutputProcessor_Outs) ProtoMessage() {}

func (x *AutoScaleControllerOutputProcessor_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_private_v1_autoscale_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaleControllerOutputProcessor_Outs.ProtoReflect.Descriptor instead.
func (*AutoScaleControllerOutputProcessor_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP(), []int{4, 1}
}

func (x *AutoScaleControllerOutputProcessor_Outs) GetProposedScale() *v1.OutPort {
	if x != nil {
		return x.ProposedScale
	}
	return nil
}

var File_aperture_policy_private_v1_autoscale_proto protoreflect.FileDescriptor

var file_aperture_policy_private_v1_autoscale_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2b, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x64, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc5, 0x02, 0x0a, 0x10, 0x50, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x64,
	0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x6f, 0x64, 0x5f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x6f, 0x64, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x1a, 0x46, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0xe9, 0x02, 0x0a, 0x10, 0x50, 0x6f, 0x64,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x4e, 0x0a,
	0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x4f,
	0x75, 0x74, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x35, 0x0a,
	0x17, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x70, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0xac, 0x01, 0x0a, 0x04, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x4d,
	0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0e, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x55, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x22, 0xb1, 0x04, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x08, 0x69, 0x6e,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x52,
	0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x73, 0x52,
	0x08, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x6b, 0x0a, 0x13, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0xcb, 0x01, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x08, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x1a, 0x42, 0x0a, 0x04, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xa1, 0x03, 0x0a, 0x11, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x12, 0x4c,
	0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x2e,
	0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x09,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x2e, 0x4f,
	0x75, 0x74, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x5a, 0x0a,
	0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x44,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x4d, 0x0a, 0x03, 0x49, 0x6e, 0x73,
	0x12, 0x46, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x1a, 0x42, 0x0a, 0x04, 0x4f, 0x75, 0x74, 0x73,
	0x12, 0x3a, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xfc, 0x02, 0x0a,
	0x22, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x60, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x1a, 0x53, 0x0a, 0x04, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x42, 0xa9, 0x02, 0x0a, 0x32,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x42, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2f, 0x61, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x50, 0x50, 0xaa, 0x02, 0x1a, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x1b, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x27,
	0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x3a, 0x3a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x3a, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aperture_policy_private_v1_autoscale_proto_rawDescOnce sync.Once
	file_aperture_policy_private_v1_autoscale_proto_rawDescData = file_aperture_policy_private_v1_autoscale_proto_rawDesc
)

func file_aperture_policy_private_v1_autoscale_proto_rawDescGZIP() []byte {
	file_aperture_policy_private_v1_autoscale_proto_rawDescOnce.Do(func() {
		file_aperture_policy_private_v1_autoscale_proto_rawDescData = protoimpl.X.CompressGZIP(file_aperture_policy_private_v1_autoscale_proto_rawDescData)
	})
	return file_aperture_policy_private_v1_autoscale_proto_rawDescData
}

var file_aperture_policy_private_v1_autoscale_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aperture_policy_private_v1_autoscale_proto_goTypes = []interface{}{
	(*PodScaleActuator)(nil),                        // 0: aperture.policy.private.v1.PodScaleActuator
	(*PodScaleReporter)(nil),                        // 1: aperture.policy.private.v1.PodScaleReporter
	(*AutoScaleGradient)(nil),                       // 2: aperture.policy.private.v1.AutoScaleGradient
	(*AutoScalePeriodic)(nil),                       // 3: aperture.policy.private.v1.AutoScalePeriodic
	(*AutoScaleControllerOutputProcessor)(nil),      // 4: aperture.policy.private.v1.AutoScaleControllerOutputProcessor
	(*PodScaleActuator_Ins)(nil),                    // 5: aperture.policy.private.v1.PodScaleActuator.Ins
	(*PodScaleReporter_Outs)(nil),                   // 6: aperture.policy.private.v1.PodScaleReporter.Outs
	(*AutoScaleGradient_Ins)(nil),                   // 7: aperture.policy.private.v1.AutoScaleGradient.Ins
	(*AutoScaleGradient_Outs)(nil),                  // 8: aperture.policy.private.v1.AutoScaleGradient.Outs
	(*AutoScalePeriodic_Ins)(nil),                   // 9: aperture.policy.private.v1.AutoScalePeriodic.Ins
	(*AutoScalePeriodic_Outs)(nil),                  // 10: aperture.policy.private.v1.AutoScalePeriodic.Outs
	(*AutoScaleControllerOutputProcessor_Ins)(nil),  // 11: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Ins
	(*AutoScaleControllerOutputProcessor_Outs)(nil), // 12: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Outs
	(*v1.GradientController_Parameters)(nil),        // 13: aperture.policy.language.v1.GradientController.Parameters
	(*v1.PeriodicDecrease)(nil),                     // 14: aperture.policy.language.v1.PeriodicDecrease
	(*v1.InPort)(nil),                               // 15: aperture.policy.language.v1.InPort
	(*v1.OutPort)(nil),                              // 16: aperture.policy.language.v1.OutPort
}
var file_aperture_policy_private_v1_autoscale_proto_depIdxs = []int32{
	5,  // 0: aperture.policy.private.v1.PodScaleActuator.in_ports:type_name -> aperture.policy.private.v1.PodScaleActuator.Ins
	6,  // 1: aperture.policy.private.v1.PodScaleReporter.out_ports:type_name -> aperture.policy.private.v1.PodScaleReporter.Outs
	7,  // 2: aperture.policy.private.v1.AutoScaleGradient.in_ports:type_name -> aperture.policy.private.v1.AutoScaleGradient.Ins
	8,  // 3: aperture.policy.private.v1.AutoScaleGradient.out_ports:type_name -> aperture.policy.private.v1.AutoScaleGradient.Outs
	13, // 4: aperture.policy.private.v1.AutoScaleGradient.gradient_controller:type_name -> aperture.policy.language.v1.GradientController.Parameters
	9,  // 5: aperture.policy.private.v1.AutoScalePeriodic.in_ports:type_name -> aperture.policy.private.v1.AutoScalePeriodic.Ins
	10, // 6: aperture.policy.private.v1.AutoScalePeriodic.out_ports:type_name -> aperture.policy.private.v1.AutoScalePeriodic.Outs
	14, // 7: aperture.policy.private.v1.AutoScalePeriodic.periodic_decrease:type_name -> aperture.policy.language.v1.PeriodicDecrease
	11, // 8: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.in_ports:type_name -> aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Ins
	12, // 9: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.out_ports:type_name -> aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Outs
	15, // 10: aperture.policy.private.v1.PodScaleActuator.Ins.replicas:type_name -> aperture.policy.language.v1.InPort
	16, // 11: aperture.policy.private.v1.PodScaleReporter.Outs.actual_replicas:type_name -> aperture.policy.language.v1.OutPort
	16, // 12: aperture.policy.private.v1.PodScaleReporter.Outs.configured_replicas:type_name -> aperture.policy.language.v1.OutPort
	15, // 13: aperture.policy.private.v1.AutoScaleGradient.Ins.signal:type_name -> aperture.policy.language.v1.InPort
	15, // 14: aperture.policy.private.v1.AutoScaleGradient.Ins.setpoint:type_name -> aperture.policy.language.v1.InPort
	15, // 15: aperture.policy.private.v1.AutoScaleGradient.Ins.actual_scale:type_name -> aperture.policy.language.v1.InPort
	16, // 16: aperture.policy.private.v1.AutoScaleGradient.Outs.scale:type_name -> aperture.policy.language.v1.OutPort
	15, // 17: aperture.policy.private.v1.AutoScalePeriodic.Ins.actual_scale:type_name -> aperture.policy.language.v1.InPort
	16, // 18: aperture.policy.private.v1.AutoScalePeriodic.Outs.scale:type_name -> aperture.policy.language.v1.OutPort
	15, // 19: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Ins.scale:type_name -> aperture.policy.language.v1.InPort
	16, // 20: aperture.policy.private.v1.AutoScaleControllerOutputProcessor.Outs.proposed_scale:type_name -> aperture.policy.language.v1.OutPort
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_aperture_policy_private_v1_autoscale_proto_init() }
func file_aperture_policy_private_v1_autoscale_proto_init() {
	if File_aperture_policy_private_v1_autoscale_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaleActuator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaleReporter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScalePeriodic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleControllerOutputProcessor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaleActuator_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaleReporter_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleGradient_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleGradient_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScalePeriodic_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScalePeriodic_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleControllerOutputProcessor_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_private_v1_autoscale_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaleControllerOutputProcessor_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aperture_policy_private_v1_autoscale_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aperture_policy_private_v1_autoscale_proto_goTypes,
		DependencyIndexes: file_aperture_policy_private_v1_autoscale_proto_depIdxs,
		MessageInfos:      file_aperture_policy_private_v1_autoscale_proto_msgTypes,
	}.Build()
	File_aperture_policy_private_v1_autoscale_proto = out.File
	file_aperture_policy_private_v1_autoscale_proto_rawDesc = nil
	file_aperture_policy_private_v1_autoscale_proto_goTypes = nil
	file_aperture_policy_private_v1_autoscale_proto_depIdxs = nil
}
