// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: aperture/policy/language/v1/autoscale.proto

package languagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes which pods a control or observability
// component should apply to.
type KubernetesObjectSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Which [agent-group](/concepts/flow-control/selector.md#agent-group) this
	// selector applies to.
	AgentGroup string `protobuf:"bytes,1,opt,name=agent_group,json=agentGroup,proto3" json:"agent_group,omitempty" default:"default"` // @gotags: default:"default"
	// Kubernetes namespace that the resource belongs to.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" validate:"required"` // @gotags: validate:"required"
	// API version of Kubernetes resource
	ApiVersion string `protobuf:"bytes,3,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty" validate:"required"` // @gotags: validate:"required"
	// Kubernetes resource type.
	Kind string `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty" validate:"required"` // @gotags: validate:"required"
	// Kubernetes resource name.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *KubernetesObjectSelector) Reset() {
	*x = KubernetesObjectSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesObjectSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesObjectSelector) ProtoMessage() {}

func (x *KubernetesObjectSelector) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesObjectSelector.ProtoReflect.Descriptor instead.
func (*KubernetesObjectSelector) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{0}
}

func (x *KubernetesObjectSelector) GetAgentGroup() string {
	if x != nil {
		return x.AgentGroup
	}
	return ""
}

func (x *KubernetesObjectSelector) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesObjectSelector) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *KubernetesObjectSelector) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *KubernetesObjectSelector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// AutoScale components are used to scale a service.
type AutoScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Component:
	//
	//	*AutoScale_PodScaler
	//	*AutoScale_AutoScaler
	//	*AutoScale_Private
	Component isAutoScale_Component `protobuf_oneof:"component"`
}

func (x *AutoScale) Reset() {
	*x = AutoScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScale) ProtoMessage() {}

func (x *AutoScale) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScale.ProtoReflect.Descriptor instead.
func (*AutoScale) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{1}
}

func (m *AutoScale) GetComponent() isAutoScale_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (x *AutoScale) GetPodScaler() *PodScaler {
	if x, ok := x.GetComponent().(*AutoScale_PodScaler); ok {
		return x.PodScaler
	}
	return nil
}

func (x *AutoScale) GetAutoScaler() *AutoScaler {
	if x, ok := x.GetComponent().(*AutoScale_AutoScaler); ok {
		return x.AutoScaler
	}
	return nil
}

func (x *AutoScale) GetPrivate() *anypb.Any {
	if x, ok := x.GetComponent().(*AutoScale_Private); ok {
		return x.Private
	}
	return nil
}

type isAutoScale_Component interface {
	isAutoScale_Component()
}

type AutoScale_PodScaler struct {
	// PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
	PodScaler *PodScaler `protobuf:"bytes,1,opt,name=pod_scaler,json=podScaler,proto3,oneof"`
}

type AutoScale_AutoScaler struct {
	// _AutoScaler_ provides auto-scaling functionality for any scalable resource.
	AutoScaler *AutoScaler `protobuf:"bytes,2,opt,name=auto_scaler,json=autoScaler,proto3,oneof"`
}

type AutoScale_Private struct {
	// Extends auto scale with private components.
	Private *anypb.Any `protobuf:"bytes,1000,opt,name=private,proto3,oneof"`
}

func (*AutoScale_PodScaler) isAutoScale_Component() {}

func (*AutoScale_AutoScaler) isAutoScale_Component() {}

func (*AutoScale_Private) isAutoScale_Component() {}

// Component for scaling pods based on a signal.
type PodScaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input ports for the PodScaler component.
	InPorts *PodScaler_Ins `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	// Output ports for the PodScaler component.
	OutPorts *PodScaler_Outs `protobuf:"bytes,2,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
	// Dry run mode ensures that no scaling is invoked by this pod scaler.
	// This is useful for observing the behavior of pod scaler without disrupting any real deployment.
	// This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// Configuration key for overriding dry run setting through dynamic configuration.
	DryRunConfigKey string `protobuf:"bytes,4,opt,name=dry_run_config_key,json=dryRunConfigKey,proto3" json:"dry_run_config_key,omitempty"`
	// The Kubernetes object to which this pod scaler applies.
	KubernetesObjectSelector *KubernetesObjectSelector `protobuf:"bytes,5,opt,name=kubernetes_object_selector,json=kubernetesObjectSelector,proto3" json:"kubernetes_object_selector,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *PodScaler) Reset() {
	*x = PodScaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaler) ProtoMessage() {}

func (x *PodScaler) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaler.ProtoReflect.Descriptor instead.
func (*PodScaler) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{2}
}

func (x *PodScaler) GetInPorts() *PodScaler_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *PodScaler) GetOutPorts() *PodScaler_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

func (x *PodScaler) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *PodScaler) GetDryRunConfigKey() string {
	if x != nil {
		return x.DryRunConfigKey
	}
	return ""
}

func (x *PodScaler) GetKubernetesObjectSelector() *KubernetesObjectSelector {
	if x != nil {
		return x.KubernetesObjectSelector
	}
	return nil
}

// Increasing Gradient defines a controller for scaling out based on _Gradient Controller_.
type IncreasingGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input ports for the Gradient.
	InPorts *IncreasingGradient_Ins `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	// Gradient parameters for the controller. Defaults and constraints:
	// * `slope` = 1
	// * `min_gradient` = 1 (cannot be changed)
	// * `max_gradient` = +Inf (must be greater than 1)
	Parameters *IncreasingGradient_Parameters `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *IncreasingGradient) Reset() {
	*x = IncreasingGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreasingGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreasingGradient) ProtoMessage() {}

func (x *IncreasingGradient) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreasingGradient.ProtoReflect.Descriptor instead.
func (*IncreasingGradient) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{3}
}

func (x *IncreasingGradient) GetInPorts() *IncreasingGradient_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *IncreasingGradient) GetParameters() *IncreasingGradient_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
type DecreasingGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input ports for the Gradient.
	InPorts *DecreasingGradient_Ins `protobuf:"bytes,1,opt,name=in_ports,json=inPorts,proto3" json:"in_ports,omitempty"`
	// Gradient parameters for the controller. Defaults and constraints:
	// * `slope` = 1
	// * `min_gradient` = -Inf (must be less than 1)
	// * `max_gradient` = 1 (cannot be changed)
	Parameters *DecreasingGradient_Parameters `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *DecreasingGradient) Reset() {
	*x = DecreasingGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreasingGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreasingGradient) ProtoMessage() {}

func (x *DecreasingGradient) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreasingGradient.ProtoReflect.Descriptor instead.
func (*DecreasingGradient) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{4}
}

func (x *DecreasingGradient) GetInPorts() *DecreasingGradient_Ins {
	if x != nil {
		return x.InPorts
	}
	return nil
}

func (x *DecreasingGradient) GetParameters() *DecreasingGradient_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// PeriodicDecrease defines a controller for scaling in based on a periodic timer.
type PeriodicDecrease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The period of the timer.
	Period *durationpb.Duration `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty" validate:"required"` // @gotags: validate:"required"
	// The percentage of scale to reduce.
	ScaleInPercentage float64 `protobuf:"fixed64,2,opt,name=scale_in_percentage,json=scaleInPercentage,proto3" json:"scale_in_percentage,omitempty" validate:"required,gte=0,lte=100"` // @gotags: validate:"required,gte=0,lte=100"
}

func (x *PeriodicDecrease) Reset() {
	*x = PeriodicDecrease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicDecrease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicDecrease) ProtoMessage() {}

func (x *PeriodicDecrease) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicDecrease.ProtoReflect.Descriptor instead.
func (*PeriodicDecrease) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{5}
}

func (x *PeriodicDecrease) GetPeriod() *durationpb.Duration {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *PeriodicDecrease) GetScaleInPercentage() float64 {
	if x != nil {
		return x.ScaleInPercentage
	}
	return 0
}

type ScaleOutController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Controller
	Controller *ScaleOutController_Controller `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty" validate:"required"` // @gotags: validate:"required"
	// Configuration for embedded Alerter.
	Alerter *Alerter_Parameters `protobuf:"bytes,2,opt,name=alerter,proto3" json:"alerter,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *ScaleOutController) Reset() {
	*x = ScaleOutController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleOutController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleOutController) ProtoMessage() {}

func (x *ScaleOutController) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleOutController.ProtoReflect.Descriptor instead.
func (*ScaleOutController) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{6}
}

func (x *ScaleOutController) GetController() *ScaleOutController_Controller {
	if x != nil {
		return x.Controller
	}
	return nil
}

func (x *ScaleOutController) GetAlerter() *Alerter_Parameters {
	if x != nil {
		return x.Alerter
	}
	return nil
}

type ScaleInController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Controller
	Controller *ScaleInController_Controller `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty" validate:"required"` // @gotags: validate:"required"
	// Configuration for embedded Alerter.
	Alerter *Alerter_Parameters `protobuf:"bytes,2,opt,name=alerter,proto3" json:"alerter,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *ScaleInController) Reset() {
	*x = ScaleInController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleInController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleInController) ProtoMessage() {}

func (x *ScaleInController) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleInController.ProtoReflect.Descriptor instead.
func (*ScaleInController) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{7}
}

func (x *ScaleInController) GetController() *ScaleInController_Controller {
	if x != nil {
		return x.Controller
	}
	return nil
}

func (x *ScaleInController) GetAlerter() *Alerter_Parameters {
	if x != nil {
		return x.Alerter
	}
	return nil
}

// _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
type AutoScaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScalingBackend *AutoScaler_ScalingBackend `protobuf:"bytes,1,opt,name=scaling_backend,json=scalingBackend,proto3" json:"scaling_backend,omitempty" validate:"required"` // @gotags: validate:"required"
	// List of _Controllers_ for scaling out.
	ScaleOutControllers []*ScaleOutController `protobuf:"bytes,2,rep,name=scale_out_controllers,json=scaleOutControllers,proto3" json:"scale_out_controllers,omitempty" validate:"dive"` // @gotags: validate:"dive"
	// List of _Controllers_ for scaling in.
	ScaleInControllers []*ScaleInController `protobuf:"bytes,3,rep,name=scale_in_controllers,json=scaleInControllers,proto3" json:"scale_in_controllers,omitempty" validate:"dive"` // @gotags: validate:"dive"
	// Parameters that define the scaling behavior.
	ScalingParameters *AutoScaler_ScalingParameters `protobuf:"bytes,4,opt,name=scaling_parameters,json=scalingParameters,proto3" json:"scaling_parameters,omitempty" validate:"required"` // @gotags: validate:"required"
	// Dry run mode ensures that no scaling is invoked by this auto scaler.
	// This is useful for observing the behavior of auto scaler without disrupting any real deployment.
	// This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
	DryRun bool `protobuf:"varint,5,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// Configuration key for overriding dry run setting through dynamic configuration.
	DryRunConfigKey string `protobuf:"bytes,6,opt,name=dry_run_config_key,json=dryRunConfigKey,proto3" json:"dry_run_config_key,omitempty"`
}

func (x *AutoScaler) Reset() {
	*x = AutoScaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaler) ProtoMessage() {}

func (x *AutoScaler) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaler.ProtoReflect.Descriptor instead.
func (*AutoScaler) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{8}
}

func (x *AutoScaler) GetScalingBackend() *AutoScaler_ScalingBackend {
	if x != nil {
		return x.ScalingBackend
	}
	return nil
}

func (x *AutoScaler) GetScaleOutControllers() []*ScaleOutController {
	if x != nil {
		return x.ScaleOutControllers
	}
	return nil
}

func (x *AutoScaler) GetScaleInControllers() []*ScaleInController {
	if x != nil {
		return x.ScaleInControllers
	}
	return nil
}

func (x *AutoScaler) GetScalingParameters() *AutoScaler_ScalingParameters {
	if x != nil {
		return x.ScalingParameters
	}
	return nil
}

func (x *AutoScaler) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *AutoScaler) GetDryRunConfigKey() string {
	if x != nil {
		return x.DryRunConfigKey
	}
	return ""
}

// Inputs for the PodScaler component.
type PodScaler_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of replicas to configure for the Kubernetes resource
	Replicas *InPort `protobuf:"bytes,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *PodScaler_Ins) Reset() {
	*x = PodScaler_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaler_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaler_Ins) ProtoMessage() {}

func (x *PodScaler_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaler_Ins.ProtoReflect.Descriptor instead.
func (*PodScaler_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PodScaler_Ins) GetReplicas() *InPort {
	if x != nil {
		return x.Replicas
	}
	return nil
}

// Outputs for the PodScaler component.
type PodScaler_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of replicas that are currently running.
	ActualReplicas *OutPort `protobuf:"bytes,1,opt,name=actual_replicas,json=actualReplicas,proto3" json:"actual_replicas,omitempty"`
	// The number of replicas that are desired.
	ConfiguredReplicas *OutPort `protobuf:"bytes,2,opt,name=configured_replicas,json=configuredReplicas,proto3" json:"configured_replicas,omitempty"`
}

func (x *PodScaler_Outs) Reset() {
	*x = PodScaler_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodScaler_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodScaler_Outs) ProtoMessage() {}

func (x *PodScaler_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodScaler_Outs.ProtoReflect.Descriptor instead.
func (*PodScaler_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{2, 1}
}

func (x *PodScaler_Outs) GetActualReplicas() *OutPort {
	if x != nil {
		return x.ActualReplicas
	}
	return nil
}

func (x *PodScaler_Outs) GetConfiguredReplicas() *OutPort {
	if x != nil {
		return x.ConfiguredReplicas
	}
	return nil
}

// This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
type IncreasingGradient_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slope       float64 `protobuf:"fixed64,1,opt,name=slope,proto3" json:"slope,omitempty" default:"1.0"`                                // @gotags: default:"1.0"
	MaxGradient float64 `protobuf:"fixed64,3,opt,name=max_gradient,json=maxGradient,proto3" json:"max_gradient,omitempty" default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"` // @gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
}

func (x *IncreasingGradient_Parameters) Reset() {
	*x = IncreasingGradient_Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreasingGradient_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreasingGradient_Parameters) ProtoMessage() {}

func (x *IncreasingGradient_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreasingGradient_Parameters.ProtoReflect.Descriptor instead.
func (*IncreasingGradient_Parameters) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{3, 0}
}

func (x *IncreasingGradient_Parameters) GetSlope() float64 {
	if x != nil {
		return x.Slope
	}
	return 0
}

func (x *IncreasingGradient_Parameters) GetMaxGradient() float64 {
	if x != nil {
		return x.MaxGradient
	}
	return 0
}

// Inputs for Gradient.
type IncreasingGradient_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The signal to use for scale-out.
	Signal *InPort `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	// The setpoint to use for scale-out.
	Setpoint *InPort `protobuf:"bytes,2,opt,name=setpoint,proto3" json:"setpoint,omitempty"`
}

func (x *IncreasingGradient_Ins) Reset() {
	*x = IncreasingGradient_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreasingGradient_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreasingGradient_Ins) ProtoMessage() {}

func (x *IncreasingGradient_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreasingGradient_Ins.ProtoReflect.Descriptor instead.
func (*IncreasingGradient_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{3, 1}
}

func (x *IncreasingGradient_Ins) GetSignal() *InPort {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *IncreasingGradient_Ins) GetSetpoint() *InPort {
	if x != nil {
		return x.Setpoint
	}
	return nil
}

// This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
type DecreasingGradient_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slope       float64 `protobuf:"fixed64,1,opt,name=slope,proto3" json:"slope,omitempty" default:"1.0"`                                // @gotags: default:"1.0"
	MinGradient float64 `protobuf:"fixed64,2,opt,name=min_gradient,json=minGradient,proto3" json:"min_gradient,omitempty" default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"` // @gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
}

func (x *DecreasingGradient_Parameters) Reset() {
	*x = DecreasingGradient_Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreasingGradient_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreasingGradient_Parameters) ProtoMessage() {}

func (x *DecreasingGradient_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreasingGradient_Parameters.ProtoReflect.Descriptor instead.
func (*DecreasingGradient_Parameters) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DecreasingGradient_Parameters) GetSlope() float64 {
	if x != nil {
		return x.Slope
	}
	return 0
}

func (x *DecreasingGradient_Parameters) GetMinGradient() float64 {
	if x != nil {
		return x.MinGradient
	}
	return 0
}

// Inputs for Gradient.
type DecreasingGradient_Ins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The signal to use for scale-in.
	Signal *InPort `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	// The setpoint to use for scale-in.
	Setpoint *InPort `protobuf:"bytes,2,opt,name=setpoint,proto3" json:"setpoint,omitempty"`
}

func (x *DecreasingGradient_Ins) Reset() {
	*x = DecreasingGradient_Ins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreasingGradient_Ins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreasingGradient_Ins) ProtoMessage() {}

func (x *DecreasingGradient_Ins) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreasingGradient_Ins.ProtoReflect.Descriptor instead.
func (*DecreasingGradient_Ins) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{4, 1}
}

func (x *DecreasingGradient_Ins) GetSignal() *InPort {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *DecreasingGradient_Ins) GetSetpoint() *InPort {
	if x != nil {
		return x.Setpoint
	}
	return nil
}

type ScaleOutController_Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Controller:
	//
	//	*ScaleOutController_Controller_Gradient
	Controller isScaleOutController_Controller_Controller `protobuf_oneof:"controller"`
}

func (x *ScaleOutController_Controller) Reset() {
	*x = ScaleOutController_Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleOutController_Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleOutController_Controller) ProtoMessage() {}

func (x *ScaleOutController_Controller) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleOutController_Controller.ProtoReflect.Descriptor instead.
func (*ScaleOutController_Controller) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{6, 0}
}

func (m *ScaleOutController_Controller) GetController() isScaleOutController_Controller_Controller {
	if m != nil {
		return m.Controller
	}
	return nil
}

func (x *ScaleOutController_Controller) GetGradient() *IncreasingGradient {
	if x, ok := x.GetController().(*ScaleOutController_Controller_Gradient); ok {
		return x.Gradient
	}
	return nil
}

type isScaleOutController_Controller_Controller interface {
	isScaleOutController_Controller_Controller()
}

type ScaleOutController_Controller_Gradient struct {
	Gradient *IncreasingGradient `protobuf:"bytes,1,opt,name=gradient,proto3,oneof"`
}

func (*ScaleOutController_Controller_Gradient) isScaleOutController_Controller_Controller() {}

type ScaleInController_Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Controller:
	//
	//	*ScaleInController_Controller_Gradient
	//	*ScaleInController_Controller_Periodic
	Controller isScaleInController_Controller_Controller `protobuf_oneof:"controller"`
}

func (x *ScaleInController_Controller) Reset() {
	*x = ScaleInController_Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleInController_Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleInController_Controller) ProtoMessage() {}

func (x *ScaleInController_Controller) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleInController_Controller.ProtoReflect.Descriptor instead.
func (*ScaleInController_Controller) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{7, 0}
}

func (m *ScaleInController_Controller) GetController() isScaleInController_Controller_Controller {
	if m != nil {
		return m.Controller
	}
	return nil
}

func (x *ScaleInController_Controller) GetGradient() *DecreasingGradient {
	if x, ok := x.GetController().(*ScaleInController_Controller_Gradient); ok {
		return x.Gradient
	}
	return nil
}

func (x *ScaleInController_Controller) GetPeriodic() *PeriodicDecrease {
	if x, ok := x.GetController().(*ScaleInController_Controller_Periodic); ok {
		return x.Periodic
	}
	return nil
}

type isScaleInController_Controller_Controller interface {
	isScaleInController_Controller_Controller()
}

type ScaleInController_Controller_Gradient struct {
	Gradient *DecreasingGradient `protobuf:"bytes,1,opt,name=gradient,proto3,oneof"`
}

type ScaleInController_Controller_Periodic struct {
	Periodic *PeriodicDecrease `protobuf:"bytes,2,opt,name=periodic,proto3,oneof"`
}

func (*ScaleInController_Controller_Gradient) isScaleInController_Controller_Controller() {}

func (*ScaleInController_Controller_Periodic) isScaleInController_Controller_Controller() {}

type AutoScaler_ScalingParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum increase of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
	MaxScaleOutPercentage float64 `protobuf:"fixed64,1,opt,name=max_scale_out_percentage,json=maxScaleOutPercentage,proto3" json:"max_scale_out_percentage,omitempty" default:"10"` // @gotags: default:"10"
	// The maximum decrease of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
	MaxScaleInPercentage float64 `protobuf:"fixed64,2,opt,name=max_scale_in_percentage,json=maxScaleInPercentage,proto3" json:"max_scale_in_percentage,omitempty" default:"1"` // @gotags: default:"1"
	// The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
	ScaleOutCooldown *durationpb.Duration `protobuf:"bytes,3,opt,name=scale_out_cooldown,json=scaleOutCooldown,proto3" json:"scale_out_cooldown,omitempty" default:"30s"` // @gotags: default:"30s"
	// The amount of time to wait after a scale-in operation for another scale-in operation.
	ScaleInCooldown *durationpb.Duration `protobuf:"bytes,4,opt,name=scale_in_cooldown,json=scaleInCooldown,proto3" json:"scale_in_cooldown,omitempty" default:"120s"` // @gotags: default:"120s"
	// Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
	// For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
	// scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
	CooldownOverridePercentage float64 `protobuf:"fixed64,5,opt,name=cooldown_override_percentage,json=cooldownOverridePercentage,proto3" json:"cooldown_override_percentage,omitempty" default:"50"` // @gotags: default:"50"
	// Configuration for scale-out Alerter.
	ScaleOutAlerter *Alerter_Parameters `protobuf:"bytes,6,opt,name=scale_out_alerter,json=scaleOutAlerter,proto3" json:"scale_out_alerter,omitempty" validate:"required"` // @gotags: validate:"required"
	// Configuration for scale-in Alerter.
	ScaleInAlerter *Alerter_Parameters `protobuf:"bytes,7,opt,name=scale_in_alerter,json=scaleInAlerter,proto3" json:"scale_in_alerter,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *AutoScaler_ScalingParameters) Reset() {
	*x = AutoScaler_ScalingParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaler_ScalingParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaler_ScalingParameters) ProtoMessage() {}

func (x *AutoScaler_ScalingParameters) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaler_ScalingParameters.ProtoReflect.Descriptor instead.
func (*AutoScaler_ScalingParameters) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AutoScaler_ScalingParameters) GetMaxScaleOutPercentage() float64 {
	if x != nil {
		return x.MaxScaleOutPercentage
	}
	return 0
}

func (x *AutoScaler_ScalingParameters) GetMaxScaleInPercentage() float64 {
	if x != nil {
		return x.MaxScaleInPercentage
	}
	return 0
}

func (x *AutoScaler_ScalingParameters) GetScaleOutCooldown() *durationpb.Duration {
	if x != nil {
		return x.ScaleOutCooldown
	}
	return nil
}

func (x *AutoScaler_ScalingParameters) GetScaleInCooldown() *durationpb.Duration {
	if x != nil {
		return x.ScaleInCooldown
	}
	return nil
}

func (x *AutoScaler_ScalingParameters) GetCooldownOverridePercentage() float64 {
	if x != nil {
		return x.CooldownOverridePercentage
	}
	return 0
}

func (x *AutoScaler_ScalingParameters) GetScaleOutAlerter() *Alerter_Parameters {
	if x != nil {
		return x.ScaleOutAlerter
	}
	return nil
}

func (x *AutoScaler_ScalingParameters) GetScaleInAlerter() *Alerter_Parameters {
	if x != nil {
		return x.ScaleInAlerter
	}
	return nil
}

type AutoScaler_ScalingBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Scaler:
	//
	//	*AutoScaler_ScalingBackend_KubernetesReplicas_
	Scaler isAutoScaler_ScalingBackend_Scaler `protobuf_oneof:"scaler"`
}

func (x *AutoScaler_ScalingBackend) Reset() {
	*x = AutoScaler_ScalingBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaler_ScalingBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaler_ScalingBackend) ProtoMessage() {}

func (x *AutoScaler_ScalingBackend) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaler_ScalingBackend.ProtoReflect.Descriptor instead.
func (*AutoScaler_ScalingBackend) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{8, 1}
}

func (m *AutoScaler_ScalingBackend) GetScaler() isAutoScaler_ScalingBackend_Scaler {
	if m != nil {
		return m.Scaler
	}
	return nil
}

func (x *AutoScaler_ScalingBackend) GetKubernetesReplicas() *AutoScaler_ScalingBackend_KubernetesReplicas {
	if x, ok := x.GetScaler().(*AutoScaler_ScalingBackend_KubernetesReplicas_); ok {
		return x.KubernetesReplicas
	}
	return nil
}

type isAutoScaler_ScalingBackend_Scaler interface {
	isAutoScaler_ScalingBackend_Scaler()
}

type AutoScaler_ScalingBackend_KubernetesReplicas_ struct {
	KubernetesReplicas *AutoScaler_ScalingBackend_KubernetesReplicas `protobuf:"bytes,1,opt,name=kubernetes_replicas,json=kubernetesReplicas,proto3,oneof"`
}

func (*AutoScaler_ScalingBackend_KubernetesReplicas_) isAutoScaler_ScalingBackend_Scaler() {}

// KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
type AutoScaler_ScalingBackend_KubernetesReplicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Kubernetes object on which horizontal scaling is applied.
	KubernetesObjectSelector *KubernetesObjectSelector `protobuf:"bytes,1,opt,name=kubernetes_object_selector,json=kubernetesObjectSelector,proto3" json:"kubernetes_object_selector,omitempty" validate:"required"` // @gotags: validate:"required"
	// The minimum replicas to which the _AutoScaler_ can scale-in.
	MinReplicas int64 `protobuf:"varint,2,opt,name=min_replicas,json=minReplicas,proto3" json:"min_replicas,omitempty" default:"0" validate:"gte=0"` // @gotags: default:"0" validate:"gte=0"
	// The maximum replicas to which the _AutoScaler_ can scale-out.
	MaxReplicas int64 `protobuf:"varint,3,opt,name=max_replicas,json=maxReplicas,proto3" json:"max_replicas,omitempty" default:"9223372036854775807" validate:"gt=0"` // @gotags: default:"9223372036854775807" validate:"gt=0"
	// Output ports for _Kubernetes Replicas_.
	OutPorts *AutoScaler_ScalingBackend_KubernetesReplicas_Outs `protobuf:"bytes,4,opt,name=out_ports,json=outPorts,proto3" json:"out_ports,omitempty"`
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) Reset() {
	*x = AutoScaler_ScalingBackend_KubernetesReplicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaler_ScalingBackend_KubernetesReplicas) ProtoMessage() {}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaler_ScalingBackend_KubernetesReplicas.ProtoReflect.Descriptor instead.
func (*AutoScaler_ScalingBackend_KubernetesReplicas) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) GetKubernetesObjectSelector() *KubernetesObjectSelector {
	if x != nil {
		return x.KubernetesObjectSelector
	}
	return nil
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) GetMinReplicas() int64 {
	if x != nil {
		return x.MinReplicas
	}
	return 0
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) GetMaxReplicas() int64 {
	if x != nil {
		return x.MaxReplicas
	}
	return 0
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas) GetOutPorts() *AutoScaler_ScalingBackend_KubernetesReplicas_Outs {
	if x != nil {
		return x.OutPorts
	}
	return nil
}

// Outputs
type AutoScaler_ScalingBackend_KubernetesReplicas_Outs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualReplicas     *OutPort `protobuf:"bytes,1,opt,name=actual_replicas,json=actualReplicas,proto3" json:"actual_replicas,omitempty"`
	ConfiguredReplicas *OutPort `protobuf:"bytes,2,opt,name=configured_replicas,json=configuredReplicas,proto3" json:"configured_replicas,omitempty"`
	DesiredReplicas    *OutPort `protobuf:"bytes,3,opt,name=desired_replicas,json=desiredReplicas,proto3" json:"desired_replicas,omitempty"`
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) Reset() {
	*x = AutoScaler_ScalingBackend_KubernetesReplicas_Outs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaler_ScalingBackend_KubernetesReplicas_Outs) ProtoMessage() {}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_policy_language_v1_autoscale_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaler_ScalingBackend_KubernetesReplicas_Outs.ProtoReflect.Descriptor instead.
func (*AutoScaler_ScalingBackend_KubernetesReplicas_Outs) Descriptor() ([]byte, []int) {
	return file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP(), []int{8, 1, 0, 0}
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) GetActualReplicas() *OutPort {
	if x != nil {
		return x.ActualReplicas
	}
	return nil
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) GetConfiguredReplicas() *OutPort {
	if x != nil {
		return x.ConfiguredReplicas
	}
	return nil
}

func (x *AutoScaler_ScalingBackend_KubernetesReplicas_Outs) GetDesiredReplicas() *OutPort {
	if x != nil {
		return x.DesiredReplicas
	}
	return nil
}

var File_aperture_policy_language_v1_autoscale_proto protoreflect.FileDescriptor

var file_aperture_policy_language_v1_autoscale_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x61,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x61, 0x70, 0x65, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa2, 0x01, 0x0a, 0x18, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x09, 0x70, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xce, 0x04, 0x0a, 0x09, 0x50, 0x6f, 0x64,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x48, 0x0a,
	0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x08, 0x6f,
	0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72,
	0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e,
	0x12, 0x2b, 0x0a, 0x12, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72,
	0x79, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x73, 0x0a,
	0x1a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x46, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x1a, 0xac, 0x01, 0x0a, 0x04, 0x4f,
	0x75, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x8d, 0x03, 0x0a, 0x12, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x4e, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x1a, 0x83, 0x01, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x8d, 0x03, 0x0a, 0x12, 0x44, 0x65,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x4e, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x1a, 0x83, 0x01, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x10, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x22, 0xa6, 0x02, 0x0a, 0x12, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4f,
	0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x1a, 0x69,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x08,
	0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0xf2, 0x02, 0x0a, 0x11, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x59, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x1a, 0xb6, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x44, 0x65, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0xce,
	0x0d, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x5f, 0x0a,
	0x0f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x0e,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x63,
	0x0a, 0x15, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x13,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x68, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x73, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x64, 0x72, 0x79, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4b, 0x65, 0x79, 0x1a, 0x8d, 0x04, 0x0a, 0x11, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x6d,
	0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x49,
	0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x45, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x40, 0x0a, 0x1c, 0x63,
	0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x1a, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x5b, 0x0a,
	0x11, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x10, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x1a, 0xd7, 0x05, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x7c, 0x0a, 0x13, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x48, 0x00, 0x52, 0x12, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x1a, 0xbc, 0x04, 0x0a, 0x12, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x73, 0x0a,
	0x1a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x6b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x70,
	0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0xfd, 0x01, 0x0a, 0x04, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x4d,
	0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0e, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x55, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x42,
	0xae, 0x02, 0x0a, 0x33, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a,
	0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x65, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2f,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x50, 0x4c, 0xaa, 0x02, 0x1b, 0x41, 0x70, 0x65, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1b, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x5c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x27, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x5c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x1e, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x3a, 0x3a, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aperture_policy_language_v1_autoscale_proto_rawDescOnce sync.Once
	file_aperture_policy_language_v1_autoscale_proto_rawDescData = file_aperture_policy_language_v1_autoscale_proto_rawDesc
)

func file_aperture_policy_language_v1_autoscale_proto_rawDescGZIP() []byte {
	file_aperture_policy_language_v1_autoscale_proto_rawDescOnce.Do(func() {
		file_aperture_policy_language_v1_autoscale_proto_rawDescData = protoimpl.X.CompressGZIP(file_aperture_policy_language_v1_autoscale_proto_rawDescData)
	})
	return file_aperture_policy_language_v1_autoscale_proto_rawDescData
}

var file_aperture_policy_language_v1_autoscale_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_aperture_policy_language_v1_autoscale_proto_goTypes = []interface{}{
	(*KubernetesObjectSelector)(nil),                          // 0: aperture.policy.language.v1.KubernetesObjectSelector
	(*AutoScale)(nil),                                         // 1: aperture.policy.language.v1.AutoScale
	(*PodScaler)(nil),                                         // 2: aperture.policy.language.v1.PodScaler
	(*IncreasingGradient)(nil),                                // 3: aperture.policy.language.v1.IncreasingGradient
	(*DecreasingGradient)(nil),                                // 4: aperture.policy.language.v1.DecreasingGradient
	(*PeriodicDecrease)(nil),                                  // 5: aperture.policy.language.v1.PeriodicDecrease
	(*ScaleOutController)(nil),                                // 6: aperture.policy.language.v1.ScaleOutController
	(*ScaleInController)(nil),                                 // 7: aperture.policy.language.v1.ScaleInController
	(*AutoScaler)(nil),                                        // 8: aperture.policy.language.v1.AutoScaler
	(*PodScaler_Ins)(nil),                                     // 9: aperture.policy.language.v1.PodScaler.Ins
	(*PodScaler_Outs)(nil),                                    // 10: aperture.policy.language.v1.PodScaler.Outs
	(*IncreasingGradient_Parameters)(nil),                     // 11: aperture.policy.language.v1.IncreasingGradient.Parameters
	(*IncreasingGradient_Ins)(nil),                            // 12: aperture.policy.language.v1.IncreasingGradient.Ins
	(*DecreasingGradient_Parameters)(nil),                     // 13: aperture.policy.language.v1.DecreasingGradient.Parameters
	(*DecreasingGradient_Ins)(nil),                            // 14: aperture.policy.language.v1.DecreasingGradient.Ins
	(*ScaleOutController_Controller)(nil),                     // 15: aperture.policy.language.v1.ScaleOutController.Controller
	(*ScaleInController_Controller)(nil),                      // 16: aperture.policy.language.v1.ScaleInController.Controller
	(*AutoScaler_ScalingParameters)(nil),                      // 17: aperture.policy.language.v1.AutoScaler.ScalingParameters
	(*AutoScaler_ScalingBackend)(nil),                         // 18: aperture.policy.language.v1.AutoScaler.ScalingBackend
	(*AutoScaler_ScalingBackend_KubernetesReplicas)(nil),      // 19: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas
	(*AutoScaler_ScalingBackend_KubernetesReplicas_Outs)(nil), // 20: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.Outs
	(*anypb.Any)(nil),                                         // 21: google.protobuf.Any
	(*durationpb.Duration)(nil),                               // 22: google.protobuf.Duration
	(*Alerter_Parameters)(nil),                                // 23: aperture.policy.language.v1.Alerter.Parameters
	(*InPort)(nil),                                            // 24: aperture.policy.language.v1.InPort
	(*OutPort)(nil),                                           // 25: aperture.policy.language.v1.OutPort
}
var file_aperture_policy_language_v1_autoscale_proto_depIdxs = []int32{
	2,  // 0: aperture.policy.language.v1.AutoScale.pod_scaler:type_name -> aperture.policy.language.v1.PodScaler
	8,  // 1: aperture.policy.language.v1.AutoScale.auto_scaler:type_name -> aperture.policy.language.v1.AutoScaler
	21, // 2: aperture.policy.language.v1.AutoScale.private:type_name -> google.protobuf.Any
	9,  // 3: aperture.policy.language.v1.PodScaler.in_ports:type_name -> aperture.policy.language.v1.PodScaler.Ins
	10, // 4: aperture.policy.language.v1.PodScaler.out_ports:type_name -> aperture.policy.language.v1.PodScaler.Outs
	0,  // 5: aperture.policy.language.v1.PodScaler.kubernetes_object_selector:type_name -> aperture.policy.language.v1.KubernetesObjectSelector
	12, // 6: aperture.policy.language.v1.IncreasingGradient.in_ports:type_name -> aperture.policy.language.v1.IncreasingGradient.Ins
	11, // 7: aperture.policy.language.v1.IncreasingGradient.parameters:type_name -> aperture.policy.language.v1.IncreasingGradient.Parameters
	14, // 8: aperture.policy.language.v1.DecreasingGradient.in_ports:type_name -> aperture.policy.language.v1.DecreasingGradient.Ins
	13, // 9: aperture.policy.language.v1.DecreasingGradient.parameters:type_name -> aperture.policy.language.v1.DecreasingGradient.Parameters
	22, // 10: aperture.policy.language.v1.PeriodicDecrease.period:type_name -> google.protobuf.Duration
	15, // 11: aperture.policy.language.v1.ScaleOutController.controller:type_name -> aperture.policy.language.v1.ScaleOutController.Controller
	23, // 12: aperture.policy.language.v1.ScaleOutController.alerter:type_name -> aperture.policy.language.v1.Alerter.Parameters
	16, // 13: aperture.policy.language.v1.ScaleInController.controller:type_name -> aperture.policy.language.v1.ScaleInController.Controller
	23, // 14: aperture.policy.language.v1.ScaleInController.alerter:type_name -> aperture.policy.language.v1.Alerter.Parameters
	18, // 15: aperture.policy.language.v1.AutoScaler.scaling_backend:type_name -> aperture.policy.language.v1.AutoScaler.ScalingBackend
	6,  // 16: aperture.policy.language.v1.AutoScaler.scale_out_controllers:type_name -> aperture.policy.language.v1.ScaleOutController
	7,  // 17: aperture.policy.language.v1.AutoScaler.scale_in_controllers:type_name -> aperture.policy.language.v1.ScaleInController
	17, // 18: aperture.policy.language.v1.AutoScaler.scaling_parameters:type_name -> aperture.policy.language.v1.AutoScaler.ScalingParameters
	24, // 19: aperture.policy.language.v1.PodScaler.Ins.replicas:type_name -> aperture.policy.language.v1.InPort
	25, // 20: aperture.policy.language.v1.PodScaler.Outs.actual_replicas:type_name -> aperture.policy.language.v1.OutPort
	25, // 21: aperture.policy.language.v1.PodScaler.Outs.configured_replicas:type_name -> aperture.policy.language.v1.OutPort
	24, // 22: aperture.policy.language.v1.IncreasingGradient.Ins.signal:type_name -> aperture.policy.language.v1.InPort
	24, // 23: aperture.policy.language.v1.IncreasingGradient.Ins.setpoint:type_name -> aperture.policy.language.v1.InPort
	24, // 24: aperture.policy.language.v1.DecreasingGradient.Ins.signal:type_name -> aperture.policy.language.v1.InPort
	24, // 25: aperture.policy.language.v1.DecreasingGradient.Ins.setpoint:type_name -> aperture.policy.language.v1.InPort
	3,  // 26: aperture.policy.language.v1.ScaleOutController.Controller.gradient:type_name -> aperture.policy.language.v1.IncreasingGradient
	4,  // 27: aperture.policy.language.v1.ScaleInController.Controller.gradient:type_name -> aperture.policy.language.v1.DecreasingGradient
	5,  // 28: aperture.policy.language.v1.ScaleInController.Controller.periodic:type_name -> aperture.policy.language.v1.PeriodicDecrease
	22, // 29: aperture.policy.language.v1.AutoScaler.ScalingParameters.scale_out_cooldown:type_name -> google.protobuf.Duration
	22, // 30: aperture.policy.language.v1.AutoScaler.ScalingParameters.scale_in_cooldown:type_name -> google.protobuf.Duration
	23, // 31: aperture.policy.language.v1.AutoScaler.ScalingParameters.scale_out_alerter:type_name -> aperture.policy.language.v1.Alerter.Parameters
	23, // 32: aperture.policy.language.v1.AutoScaler.ScalingParameters.scale_in_alerter:type_name -> aperture.policy.language.v1.Alerter.Parameters
	19, // 33: aperture.policy.language.v1.AutoScaler.ScalingBackend.kubernetes_replicas:type_name -> aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas
	0,  // 34: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.kubernetes_object_selector:type_name -> aperture.policy.language.v1.KubernetesObjectSelector
	20, // 35: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.out_ports:type_name -> aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.Outs
	25, // 36: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.Outs.actual_replicas:type_name -> aperture.policy.language.v1.OutPort
	25, // 37: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.Outs.configured_replicas:type_name -> aperture.policy.language.v1.OutPort
	25, // 38: aperture.policy.language.v1.AutoScaler.ScalingBackend.KubernetesReplicas.Outs.desired_replicas:type_name -> aperture.policy.language.v1.OutPort
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_aperture_policy_language_v1_autoscale_proto_init() }
func file_aperture_policy_language_v1_autoscale_proto_init() {
	if File_aperture_policy_language_v1_autoscale_proto != nil {
		return
	}
	file_aperture_policy_language_v1_ports_proto_init()
	file_aperture_policy_language_v1_std_components_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesObjectSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreasingGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreasingGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicDecrease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleOutController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleInController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaler_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodScaler_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreasingGradient_Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreasingGradient_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreasingGradient_Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreasingGradient_Ins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleOutController_Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleInController_Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaler_ScalingParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaler_ScalingBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaler_ScalingBackend_KubernetesReplicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_policy_language_v1_autoscale_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaler_ScalingBackend_KubernetesReplicas_Outs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aperture_policy_language_v1_autoscale_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AutoScale_PodScaler)(nil),
		(*AutoScale_AutoScaler)(nil),
		(*AutoScale_Private)(nil),
	}
	file_aperture_policy_language_v1_autoscale_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ScaleOutController_Controller_Gradient)(nil),
	}
	file_aperture_policy_language_v1_autoscale_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ScaleInController_Controller_Gradient)(nil),
		(*ScaleInController_Controller_Periodic)(nil),
	}
	file_aperture_policy_language_v1_autoscale_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*AutoScaler_ScalingBackend_KubernetesReplicas_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aperture_policy_language_v1_autoscale_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aperture_policy_language_v1_autoscale_proto_goTypes,
		DependencyIndexes: file_aperture_policy_language_v1_autoscale_proto_depIdxs,
		MessageInfos:      file_aperture_policy_language_v1_autoscale_proto_msgTypes,
	}.Build()
	File_aperture_policy_language_v1_autoscale_proto = out.File
	file_aperture_policy_language_v1_autoscale_proto_rawDesc = nil
	file_aperture_policy_language_v1_autoscale_proto_goTypes = nil
	file_aperture_policy_language_v1_autoscale_proto_depIdxs = nil
}
