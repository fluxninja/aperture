// Code generated by protoc-gen-deepcopy. DO NOT EDIT.
package languagev1

import (
	proto "google.golang.org/protobuf/proto"
)

// DeepCopyInto supports using Query within kubernetes types, where deepcopy-gen is used.
func (in *Query) DeepCopyInto(out *Query) {
	p := proto.Clone(in).(*Query)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Query. Required by controller-gen.
func (in *Query) DeepCopy() *Query {
	if in == nil {
		return nil
	}
	out := new(Query)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new Query. Required by controller-gen.
func (in *Query) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using PromQL within kubernetes types, where deepcopy-gen is used.
func (in *PromQL) DeepCopyInto(out *PromQL) {
	p := proto.Clone(in).(*PromQL)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromQL. Required by controller-gen.
func (in *PromQL) DeepCopy() *PromQL {
	if in == nil {
		return nil
	}
	out := new(PromQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new PromQL. Required by controller-gen.
func (in *PromQL) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using PromQL_Outs within kubernetes types, where deepcopy-gen is used.
func (in *PromQL_Outs) DeepCopyInto(out *PromQL_Outs) {
	p := proto.Clone(in).(*PromQL_Outs)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromQL_Outs. Required by controller-gen.
func (in *PromQL_Outs) DeepCopy() *PromQL_Outs {
	if in == nil {
		return nil
	}
	out := new(PromQL_Outs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new PromQL_Outs. Required by controller-gen.
func (in *PromQL_Outs) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
