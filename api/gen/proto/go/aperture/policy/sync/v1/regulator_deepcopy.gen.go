// Code generated by protoc-gen-deepcopy. DO NOT EDIT.
package syncv1

import (
	proto "google.golang.org/protobuf/proto"
)

// DeepCopyInto supports using RegulatorWrapper within kubernetes types, where deepcopy-gen is used.
func (in *RegulatorWrapper) DeepCopyInto(out *RegulatorWrapper) {
	p := proto.Clone(in).(*RegulatorWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorWrapper. Required by controller-gen.
func (in *RegulatorWrapper) DeepCopy() *RegulatorWrapper {
	if in == nil {
		return nil
	}
	out := new(RegulatorWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorWrapper. Required by controller-gen.
func (in *RegulatorWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RegulatorDynamicConfigWrapper within kubernetes types, where deepcopy-gen is used.
func (in *RegulatorDynamicConfigWrapper) DeepCopyInto(out *RegulatorDynamicConfigWrapper) {
	p := proto.Clone(in).(*RegulatorDynamicConfigWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDynamicConfigWrapper. Required by controller-gen.
func (in *RegulatorDynamicConfigWrapper) DeepCopy() *RegulatorDynamicConfigWrapper {
	if in == nil {
		return nil
	}
	out := new(RegulatorDynamicConfigWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDynamicConfigWrapper. Required by controller-gen.
func (in *RegulatorDynamicConfigWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RegulatorDecisionWrapper within kubernetes types, where deepcopy-gen is used.
func (in *RegulatorDecisionWrapper) DeepCopyInto(out *RegulatorDecisionWrapper) {
	p := proto.Clone(in).(*RegulatorDecisionWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDecisionWrapper. Required by controller-gen.
func (in *RegulatorDecisionWrapper) DeepCopy() *RegulatorDecisionWrapper {
	if in == nil {
		return nil
	}
	out := new(RegulatorDecisionWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDecisionWrapper. Required by controller-gen.
func (in *RegulatorDecisionWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RegulatorDecision within kubernetes types, where deepcopy-gen is used.
func (in *RegulatorDecision) DeepCopyInto(out *RegulatorDecision) {
	p := proto.Clone(in).(*RegulatorDecision)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDecision. Required by controller-gen.
func (in *RegulatorDecision) DeepCopy() *RegulatorDecision {
	if in == nil {
		return nil
	}
	out := new(RegulatorDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RegulatorDecision. Required by controller-gen.
func (in *RegulatorDecision) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
