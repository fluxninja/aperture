// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: aperture/flowcontrol/v1/envoy.proto

package flowcontrolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthzResponse_Status int32

const (
	AuthzResponse_STATUS_NO_ERROR                  AuthzResponse_Status = 0
	AuthzResponse_STATUS_INVALID_TRAFFIC_DIRECTION AuthzResponse_Status = 1
	AuthzResponse_STATUS_CONVERT_TO_MAP_STRUCT     AuthzResponse_Status = 2
	AuthzResponse_STATUS_CONVERT_TO_REGO_AST       AuthzResponse_Status = 3
	AuthzResponse_STATUS_CLASSIFY_FLOW_LABELS      AuthzResponse_Status = 4
)

// Enum value maps for AuthzResponse_Status.
var (
	AuthzResponse_Status_name = map[int32]string{
		0: "STATUS_NO_ERROR",
		1: "STATUS_INVALID_TRAFFIC_DIRECTION",
		2: "STATUS_CONVERT_TO_MAP_STRUCT",
		3: "STATUS_CONVERT_TO_REGO_AST",
		4: "STATUS_CLASSIFY_FLOW_LABELS",
	}
	AuthzResponse_Status_value = map[string]int32{
		"STATUS_NO_ERROR":                  0,
		"STATUS_INVALID_TRAFFIC_DIRECTION": 1,
		"STATUS_CONVERT_TO_MAP_STRUCT":     2,
		"STATUS_CONVERT_TO_REGO_AST":       3,
		"STATUS_CLASSIFY_FLOW_LABELS":      4,
	}
)

func (x AuthzResponse_Status) Enum() *AuthzResponse_Status {
	p := new(AuthzResponse_Status)
	*p = x
	return p
}

func (x AuthzResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthzResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aperture_flowcontrol_v1_envoy_proto_enumTypes[0].Descriptor()
}

func (AuthzResponse_Status) Type() protoreflect.EnumType {
	return &file_aperture_flowcontrol_v1_envoy_proto_enumTypes[0]
}

func (x AuthzResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthzResponse_Status.Descriptor instead.
func (AuthzResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_aperture_flowcontrol_v1_envoy_proto_rawDescGZIP(), []int{0, 0}
}

type AuthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status AuthzResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=aperture.flowcontrol.v1.AuthzResponse_Status" json:"status,omitempty"`
}

func (x *AuthzResponse) Reset() {
	*x = AuthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_flowcontrol_v1_envoy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthzResponse) ProtoMessage() {}

func (x *AuthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_flowcontrol_v1_envoy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthzResponse.ProtoReflect.Descriptor instead.
func (*AuthzResponse) Descriptor() ([]byte, []int) {
	return file_aperture_flowcontrol_v1_envoy_proto_rawDescGZIP(), []int{0}
}

func (x *AuthzResponse) GetStatus() AuthzResponse_Status {
	if x != nil {
		return x.Status
	}
	return AuthzResponse_STATUS_NO_ERROR
}

var File_aperture_flowcontrol_v1_envoy_proto protoreflect.FileDescriptor

var file_aperture_flowcontrol_v1_envoy_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0xff,
	0x01, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x7a,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49,
	0x43, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x5f,
	0x54, 0x4f, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x10, 0x02, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52,
	0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x52, 0x45, 0x47, 0x4f, 0x5f, 0x41, 0x53, 0x54, 0x10, 0x03, 0x12,
	0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49,
	0x46, 0x59, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x53, 0x10, 0x04,
	0x42, 0xfd, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x75, 0x78, 0x6e,
	0x69, 0x6e, 0x6a, 0x61, 0x2f, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x61,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x46, 0x58, 0xaa, 0x02, 0x17, 0x41, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c,
	0x46, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x23, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x46, 0x6c, 0x6f, 0x77, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x3a,
	0x3a, 0x46, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aperture_flowcontrol_v1_envoy_proto_rawDescOnce sync.Once
	file_aperture_flowcontrol_v1_envoy_proto_rawDescData = file_aperture_flowcontrol_v1_envoy_proto_rawDesc
)

func file_aperture_flowcontrol_v1_envoy_proto_rawDescGZIP() []byte {
	file_aperture_flowcontrol_v1_envoy_proto_rawDescOnce.Do(func() {
		file_aperture_flowcontrol_v1_envoy_proto_rawDescData = protoimpl.X.CompressGZIP(file_aperture_flowcontrol_v1_envoy_proto_rawDescData)
	})
	return file_aperture_flowcontrol_v1_envoy_proto_rawDescData
}

var file_aperture_flowcontrol_v1_envoy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aperture_flowcontrol_v1_envoy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_aperture_flowcontrol_v1_envoy_proto_goTypes = []interface{}{
	(AuthzResponse_Status)(0), // 0: aperture.flowcontrol.v1.AuthzResponse.Status
	(*AuthzResponse)(nil),     // 1: aperture.flowcontrol.v1.AuthzResponse
}
var file_aperture_flowcontrol_v1_envoy_proto_depIdxs = []int32{
	0, // 0: aperture.flowcontrol.v1.AuthzResponse.status:type_name -> aperture.flowcontrol.v1.AuthzResponse.Status
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_aperture_flowcontrol_v1_envoy_proto_init() }
func file_aperture_flowcontrol_v1_envoy_proto_init() {
	if File_aperture_flowcontrol_v1_envoy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aperture_flowcontrol_v1_envoy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aperture_flowcontrol_v1_envoy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aperture_flowcontrol_v1_envoy_proto_goTypes,
		DependencyIndexes: file_aperture_flowcontrol_v1_envoy_proto_depIdxs,
		EnumInfos:         file_aperture_flowcontrol_v1_envoy_proto_enumTypes,
		MessageInfos:      file_aperture_flowcontrol_v1_envoy_proto_msgTypes,
	}.Build()
	File_aperture_flowcontrol_v1_envoy_proto = out.File
	file_aperture_flowcontrol_v1_envoy_proto_rawDesc = nil
	file_aperture_flowcontrol_v1_envoy_proto_goTypes = nil
	file_aperture_flowcontrol_v1_envoy_proto_depIdxs = nil
}
