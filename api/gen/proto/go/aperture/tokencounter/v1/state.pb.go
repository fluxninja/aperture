// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: aperture/tokencounter/v1/state.proto

package tokencounterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestsQueued   []*Request         `protobuf:"bytes,1,rep,name=requests_queued,json=requestsQueued,proto3" json:"requests_queued,omitempty"`
	RequestsInflight []*Request         `protobuf:"bytes,2,rep,name=requests_inflight,json=requestsInflight,proto3" json:"requests_inflight,omitempty"`
	TokenWindow      *State_TokenWindow `protobuf:"bytes,3,opt,name=token_window,json=tokenWindow,proto3" json:"token_window,omitempty"`
	TokenRate        float64            `protobuf:"fixed64,4,opt,name=token_rate,json=tokenRate,proto3" json:"token_rate,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetRequestsQueued() []*Request {
	if x != nil {
		return x.RequestsQueued
	}
	return nil
}

func (x *State) GetRequestsInflight() []*Request {
	if x != nil {
		return x.RequestsInflight
	}
	return nil
}

func (x *State) GetTokenWindow() *State_TokenWindow {
	if x != nil {
		return x.TokenWindow
	}
	return nil
}

func (x *State) GetTokenRate() float64 {
	if x != nil {
		return x.TokenRate
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Tokens     float64                `protobuf:"fixed64,3,opt,name=tokens,proto3" json:"tokens,omitempty"`
	WaitFor    *durationpb.Duration   `protobuf:"bytes,4,opt,name=wait_for,json=waitFor,proto3" json:"wait_for,omitempty"`
	NumRetries int32                  `protobuf:"varint,5,opt,name=num_retries,json=numRetries,proto3" json:"num_retries,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Request) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Request) GetTokens() float64 {
	if x != nil {
		return x.Tokens
	}
	return 0
}

func (x *Request) GetWaitFor() *durationpb.Duration {
	if x != nil {
		return x.WaitFor
	}
	return nil
}

func (x *Request) GetNumRetries() int32 {
	if x != nil {
		return x.NumRetries
	}
	return 0
}

type TakeNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Deadline  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Tokens    float64                `protobuf:"fixed64,3,opt,name=tokens,proto3" json:"tokens,omitempty"`
	CanWait   bool                   `protobuf:"varint,4,opt,name=can_wait,json=canWait,proto3" json:"can_wait,omitempty"`
}

func (x *TakeNRequest) Reset() {
	*x = TakeNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeNRequest) ProtoMessage() {}

func (x *TakeNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeNRequest.ProtoReflect.Descriptor instead.
func (*TakeNRequest) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{2}
}

func (x *TakeNRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TakeNRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TakeNRequest) GetTokens() float64 {
	if x != nil {
		return x.Tokens
	}
	return 0
}

func (x *TakeNRequest) GetCanWait() bool {
	if x != nil {
		return x.CanWait
	}
	return false
}

type TakeNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableNow bool                   `protobuf:"varint,1,opt,name=available_now,json=availableNow,proto3" json:"available_now,omitempty"`
	Current      float64                `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	Remaining    float64                `protobuf:"fixed64,3,opt,name=remaining,proto3" json:"remaining,omitempty"`
	CheckBackAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=check_back_at,json=checkBackAt,proto3" json:"check_back_at,omitempty"`
	Ok           bool                   `protobuf:"varint,5,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *TakeNResponse) Reset() {
	*x = TakeNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeNResponse) ProtoMessage() {}

func (x *TakeNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeNResponse.ProtoReflect.Descriptor instead.
func (*TakeNResponse) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{3}
}

func (x *TakeNResponse) GetAvailableNow() bool {
	if x != nil {
		return x.AvailableNow
	}
	return false
}

func (x *TakeNResponse) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TakeNResponse) GetRemaining() float64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *TakeNResponse) GetCheckBackAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckBackAt
	}
	return nil
}

func (x *TakeNResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ReturnNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Tokens    float64 `protobuf:"fixed64,2,opt,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ReturnNRequest) Reset() {
	*x = ReturnNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnNRequest) ProtoMessage() {}

func (x *ReturnNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnNRequest.ProtoReflect.Descriptor instead.
func (*ReturnNRequest) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{4}
}

func (x *ReturnNRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ReturnNRequest) GetTokens() float64 {
	if x != nil {
		return x.Tokens
	}
	return 0
}

type ReturnNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ReturnNResponse) Reset() {
	*x = ReturnNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnNResponse) ProtoMessage() {}

func (x *ReturnNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnNResponse.ProtoReflect.Descriptor instead.
func (*ReturnNResponse) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{5}
}

func (x *ReturnNResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CancelQueuedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CancelQueuedRequest) Reset() {
	*x = CancelQueuedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueuedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueuedRequest) ProtoMessage() {}

func (x *CancelQueuedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueuedRequest.ProtoReflect.Descriptor instead.
func (*CancelQueuedRequest) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{6}
}

func (x *CancelQueuedRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CancelQueuedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CancelQueuedResponse) Reset() {
	*x = CancelQueuedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueuedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueuedResponse) ProtoMessage() {}

func (x *CancelQueuedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueuedResponse.ProtoReflect.Descriptor instead.
func (*CancelQueuedResponse) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{7}
}

func (x *CancelQueuedResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CancelInflightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CancelInflightRequest) Reset() {
	*x = CancelInflightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelInflightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInflightRequest) ProtoMessage() {}

func (x *CancelInflightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInflightRequest.ProtoReflect.Descriptor instead.
func (*CancelInflightRequest) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{8}
}

func (x *CancelInflightRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CancelInflightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CancelInflightResponse) Reset() {
	*x = CancelInflightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelInflightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInflightResponse) ProtoMessage() {}

func (x *CancelInflightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInflightResponse.ProtoReflect.Descriptor instead.
func (*CancelInflightResponse) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{9}
}

func (x *CancelInflightResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type State_TokenWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Sum   float64                `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Count float64                `protobuf:"fixed64,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *State_TokenWindow) Reset() {
	*x = State_TokenWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State_TokenWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State_TokenWindow) ProtoMessage() {}

func (x *State_TokenWindow) ProtoReflect() protoreflect.Message {
	mi := &file_aperture_tokencounter_v1_state_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State_TokenWindow.ProtoReflect.Descriptor instead.
func (*State_TokenWindow) Descriptor() ([]byte, []int) {
	return file_aperture_tokencounter_v1_state_proto_rawDescGZIP(), []int{0, 0}
}

func (x *State_TokenWindow) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *State_TokenWindow) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *State_TokenWindow) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *State_TokenWindow) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_aperture_tokencounter_v1_state_proto protoreflect.FileDescriptor

var file_aperture_tokencounter_v1_state_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xaa, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x49,
	0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x95, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x08,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x6b, 0x65, 0x4e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x22, 0xbc,
	0x01, 0x0a, 0x0d, 0x54, 0x61, 0x6b, 0x65, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a,
	0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x47, 0x0a,
	0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x26, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x28, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x42, 0x9b, 0x02, 0x0a, 0x30, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x75, 0x78, 0x6e, 0x69, 0x6e,
	0x6a, 0x61, 0x2f, 0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f,
	0x61, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x54, 0x58, 0xaa, 0x02, 0x18,
	0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x18, 0x41, 0x70, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x5c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x41, 0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aperture_tokencounter_v1_state_proto_rawDescOnce sync.Once
	file_aperture_tokencounter_v1_state_proto_rawDescData = file_aperture_tokencounter_v1_state_proto_rawDesc
)

func file_aperture_tokencounter_v1_state_proto_rawDescGZIP() []byte {
	file_aperture_tokencounter_v1_state_proto_rawDescOnce.Do(func() {
		file_aperture_tokencounter_v1_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_aperture_tokencounter_v1_state_proto_rawDescData)
	})
	return file_aperture_tokencounter_v1_state_proto_rawDescData
}

var file_aperture_tokencounter_v1_state_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_aperture_tokencounter_v1_state_proto_goTypes = []interface{}{
	(*State)(nil),                  // 0: aperture.tokencounter.v1.State
	(*Request)(nil),                // 1: aperture.tokencounter.v1.Request
	(*TakeNRequest)(nil),           // 2: aperture.tokencounter.v1.TakeNRequest
	(*TakeNResponse)(nil),          // 3: aperture.tokencounter.v1.TakeNResponse
	(*ReturnNRequest)(nil),         // 4: aperture.tokencounter.v1.ReturnNRequest
	(*ReturnNResponse)(nil),        // 5: aperture.tokencounter.v1.ReturnNResponse
	(*CancelQueuedRequest)(nil),    // 6: aperture.tokencounter.v1.CancelQueuedRequest
	(*CancelQueuedResponse)(nil),   // 7: aperture.tokencounter.v1.CancelQueuedResponse
	(*CancelInflightRequest)(nil),  // 8: aperture.tokencounter.v1.CancelInflightRequest
	(*CancelInflightResponse)(nil), // 9: aperture.tokencounter.v1.CancelInflightResponse
	(*State_TokenWindow)(nil),      // 10: aperture.tokencounter.v1.State.TokenWindow
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 12: google.protobuf.Duration
}
var file_aperture_tokencounter_v1_state_proto_depIdxs = []int32{
	1,  // 0: aperture.tokencounter.v1.State.requests_queued:type_name -> aperture.tokencounter.v1.Request
	1,  // 1: aperture.tokencounter.v1.State.requests_inflight:type_name -> aperture.tokencounter.v1.Request
	10, // 2: aperture.tokencounter.v1.State.token_window:type_name -> aperture.tokencounter.v1.State.TokenWindow
	11, // 3: aperture.tokencounter.v1.Request.expires_at:type_name -> google.protobuf.Timestamp
	12, // 4: aperture.tokencounter.v1.Request.wait_for:type_name -> google.protobuf.Duration
	11, // 5: aperture.tokencounter.v1.TakeNRequest.deadline:type_name -> google.protobuf.Timestamp
	11, // 6: aperture.tokencounter.v1.TakeNResponse.check_back_at:type_name -> google.protobuf.Timestamp
	11, // 7: aperture.tokencounter.v1.State.TokenWindow.start:type_name -> google.protobuf.Timestamp
	11, // 8: aperture.tokencounter.v1.State.TokenWindow.end:type_name -> google.protobuf.Timestamp
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_aperture_tokencounter_v1_state_proto_init() }
func file_aperture_tokencounter_v1_state_proto_init() {
	if File_aperture_tokencounter_v1_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aperture_tokencounter_v1_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueuedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueuedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelInflightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelInflightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aperture_tokencounter_v1_state_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State_TokenWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aperture_tokencounter_v1_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aperture_tokencounter_v1_state_proto_goTypes,
		DependencyIndexes: file_aperture_tokencounter_v1_state_proto_depIdxs,
		MessageInfos:      file_aperture_tokencounter_v1_state_proto_msgTypes,
	}.Build()
	File_aperture_tokencounter_v1_state_proto = out.File
	file_aperture_tokencounter_v1_state_proto_rawDesc = nil
	file_aperture_tokencounter_v1_state_proto_goTypes = nil
	file_aperture_tokencounter_v1_state_proto_depIdxs = nil
}
