// Code generated by protoc-gen-deepcopy. DO NOT EDIT.
package configv1

import (
	proto "github.com/golang/protobuf/proto"
)

// DeepCopyInto supports using PolicyWrapper within kubernetes types, where deepcopy-gen is used.
func (in *PolicyWrapper) DeepCopyInto(out *PolicyWrapper) {
	p := proto.Clone(in).(*PolicyWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyWrapper. Required by controller-gen.
func (in *PolicyWrapper) DeepCopy() *PolicyWrapper {
	if in == nil {
		return nil
	}
	out := new(PolicyWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new PolicyWrapper. Required by controller-gen.
func (in *PolicyWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using FluxMeterWrapper within kubernetes types, where deepcopy-gen is used.
func (in *FluxMeterWrapper) DeepCopyInto(out *FluxMeterWrapper) {
	p := proto.Clone(in).(*FluxMeterWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluxMeterWrapper. Required by controller-gen.
func (in *FluxMeterWrapper) DeepCopy() *FluxMeterWrapper {
	if in == nil {
		return nil
	}
	out := new(FluxMeterWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new FluxMeterWrapper. Required by controller-gen.
func (in *FluxMeterWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using ConcurrencyLimiterWrapper within kubernetes types, where deepcopy-gen is used.
func (in *ConcurrencyLimiterWrapper) DeepCopyInto(out *ConcurrencyLimiterWrapper) {
	p := proto.Clone(in).(*ConcurrencyLimiterWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyLimiterWrapper. Required by controller-gen.
func (in *ConcurrencyLimiterWrapper) DeepCopy() *ConcurrencyLimiterWrapper {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyLimiterWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyLimiterWrapper. Required by controller-gen.
func (in *ConcurrencyLimiterWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RateLimiterWrapper within kubernetes types, where deepcopy-gen is used.
func (in *RateLimiterWrapper) DeepCopyInto(out *RateLimiterWrapper) {
	p := proto.Clone(in).(*RateLimiterWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterWrapper. Required by controller-gen.
func (in *RateLimiterWrapper) DeepCopy() *RateLimiterWrapper {
	if in == nil {
		return nil
	}
	out := new(RateLimiterWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterWrapper. Required by controller-gen.
func (in *RateLimiterWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using LoadShedDecsisionWrapper within kubernetes types, where deepcopy-gen is used.
func (in *LoadShedDecsisionWrapper) DeepCopyInto(out *LoadShedDecsisionWrapper) {
	p := proto.Clone(in).(*LoadShedDecsisionWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadShedDecsisionWrapper. Required by controller-gen.
func (in *LoadShedDecsisionWrapper) DeepCopy() *LoadShedDecsisionWrapper {
	if in == nil {
		return nil
	}
	out := new(LoadShedDecsisionWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new LoadShedDecsisionWrapper. Required by controller-gen.
func (in *LoadShedDecsisionWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using TokensDecisionWrapper within kubernetes types, where deepcopy-gen is used.
func (in *TokensDecisionWrapper) DeepCopyInto(out *TokensDecisionWrapper) {
	p := proto.Clone(in).(*TokensDecisionWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensDecisionWrapper. Required by controller-gen.
func (in *TokensDecisionWrapper) DeepCopy() *TokensDecisionWrapper {
	if in == nil {
		return nil
	}
	out := new(TokensDecisionWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new TokensDecisionWrapper. Required by controller-gen.
func (in *TokensDecisionWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RateLimiterDecisionWrapper within kubernetes types, where deepcopy-gen is used.
func (in *RateLimiterDecisionWrapper) DeepCopyInto(out *RateLimiterDecisionWrapper) {
	p := proto.Clone(in).(*RateLimiterDecisionWrapper)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterDecisionWrapper. Required by controller-gen.
func (in *RateLimiterDecisionWrapper) DeepCopy() *RateLimiterDecisionWrapper {
	if in == nil {
		return nil
	}
	out := new(RateLimiterDecisionWrapper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterDecisionWrapper. Required by controller-gen.
func (in *RateLimiterDecisionWrapper) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
