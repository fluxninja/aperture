// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/decisions/v1/policydecisions.proto

package com.aperture.policy.decisions.v1;

public interface TokensDecisionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.decisions.v1.TokensDecision)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Key is workload index and value is tokens.
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; tokens_by_workload_index = 1 [json_name = "tokensByWorkloadIndex"];</code>
   */
  int getTokensByWorkloadIndexCount();
  /**
   * <pre>
   * Key is workload index and value is tokens.
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; tokens_by_workload_index = 1 [json_name = "tokensByWorkloadIndex"];</code>
   */
  boolean containsTokensByWorkloadIndex(
      java.lang.String key);
  /**
   * Use {@link #getTokensByWorkloadIndexMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Long>
  getTokensByWorkloadIndex();
  /**
   * <pre>
   * Key is workload index and value is tokens.
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; tokens_by_workload_index = 1 [json_name = "tokensByWorkloadIndex"];</code>
   */
  java.util.Map<java.lang.String, java.lang.Long>
  getTokensByWorkloadIndexMap();
  /**
   * <pre>
   * Key is workload index and value is tokens.
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; tokens_by_workload_index = 1 [json_name = "tokensByWorkloadIndex"];</code>
   */

  long getTokensByWorkloadIndexOrDefault(
      java.lang.String key,
      long defaultValue);
  /**
   * <pre>
   * Key is workload index and value is tokens.
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; tokens_by_workload_index = 1 [json_name = "tokensByWorkloadIndex"];</code>
   */

  long getTokensByWorkloadIndexOrThrow(
      java.lang.String key);
}
