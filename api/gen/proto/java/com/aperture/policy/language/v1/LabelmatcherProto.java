// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/labelmatcher.proto

package com.aperture.policy.language.v1;

public final class LabelmatcherProto {
  private LabelmatcherProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LabelMatcher_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LabelMatcher_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchExpression_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchExpression_List_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_EqualsMatchExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchesMatchExpression_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.aperture/policy/language/v1/labelmatch" +
      "er.proto\022\033aperture.policy.language.v1\032.p" +
      "rotoc-gen-openapiv2/options/annotations." +
      "proto\"\341\002\n\014LabelMatcher\022]\n\014match_labels\030\001" +
      " \003(\0132:.aperture.policy.language.v1.Label" +
      "Matcher.MatchLabelsEntryR\013matchLabels\022d\n" +
      "\021match_expressions\030\002 \003(\01327.aperture.poli" +
      "cy.language.v1.K8sLabelMatcherRequiremen" +
      "tR\020matchExpressions\022L\n\nexpression\030\003 \001(\0132" +
      ",.aperture.policy.language.v1.MatchExpre" +
      "ssionR\nexpression\032>\n\020MatchLabelsEntry\022\020\n" +
      "\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028" +
      "\001\"\303\001\n\032K8sLabelMatcherRequirement\0223\n\003key\030" +
      "\001 \001(\tB!\222A\036\202\003\033\n\rx-go-validate\022\n\032\010required" +
      "R\003key\022X\n\010operator\030\002 \001(\tB<\222A9\202\0036\n\rx-go-va" +
      "lidate\022%\032#oneof=In NotIn Exists DoesNotE" +
      "xistsR\010operator\022\026\n\006values\030\003 \003(\tR\006values\"" +
      "\257\004\n\017MatchExpression\022@\n\003not\030\001 \001(\0132,.apert" +
      "ure.policy.language.v1.MatchExpressionH\000" +
      "R\003not\022E\n\003all\030\002 \001(\01321.aperture.policy.lan" +
      "guage.v1.MatchExpression.ListH\000R\003all\022E\n\003" +
      "any\030\003 \001(\01321.aperture.policy.language.v1." +
      "MatchExpression.ListH\000R\003any\022F\n\014label_exi" +
      "sts\030\004 \001(\tB!\222A\036\202\003\033\n\rx-go-validate\022\n\032\010requ" +
      "iredH\000R\013labelExists\022W\n\014label_equals\030\005 \001(" +
      "\01322.aperture.policy.language.v1.EqualsMa" +
      "tchExpressionH\000R\013labelEquals\022Z\n\rlabel_ma" +
      "tches\030\006 \001(\01323.aperture.policy.language.v" +
      "1.MatchesMatchExpressionH\000R\014labelMatches" +
      "\032D\n\004List\022<\n\002of\030\001 \003(\0132,.aperture.policy.l" +
      "anguage.v1.MatchExpressionR\002ofB\t\n\007varian" +
      "t\"f\n\025EqualsMatchExpression\0227\n\005label\030\001 \001(" +
      "\tB!\222A\036\202\003\033\n\rx-go-validate\022\n\032\010requiredR\005la" +
      "bel\022\024\n\005value\030\002 \001(\tR\005value\"\212\001\n\026MatchesMat" +
      "chExpression\0227\n\005label\030\001 \001(\tB!\222A\036\202\003\033\n\rx-g" +
      "o-validate\022\n\032\010requiredR\005label\0227\n\005regex\030\002" +
      " \001(\tB!\222A\036\202\003\033\n\rx-go-validate\022\n\032\010requiredR" +
      "\005regexB\232\002\n\037com.aperture.policy.language." +
      "v1B\021LabelmatcherProtoP\001ZUgithub.com/flux" +
      "ninja/aperture/api/gen/proto/go/aperture" +
      "/policy/language/v1;languagev1\242\002\003APL\252\002\033A" +
      "perture.Policy.Language.V1\312\002\033Aperture\\Po" +
      "licy\\Language\\V1\342\002\'Aperture\\Policy\\Langu" +
      "age\\V1\\GPBMetadata\352\002\036Aperture::Policy::L" +
      "anguage::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_aperture_policy_language_v1_LabelMatcher_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_LabelMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LabelMatcher_descriptor,
        new java.lang.String[] { "MatchLabels", "MatchExpressions", "Expression", });
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor =
      internal_static_aperture_policy_language_v1_LabelMatcher_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor,
        new java.lang.String[] { "Key", "Operator", "Values", });
    internal_static_aperture_policy_language_v1_MatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_policy_language_v1_MatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchExpression_descriptor,
        new java.lang.String[] { "Not", "All", "Any", "LabelExists", "LabelEquals", "LabelMatches", "Variant", });
    internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor =
      internal_static_aperture_policy_language_v1_MatchExpression_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_MatchExpression_List_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor,
        new java.lang.String[] { "Of", });
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor,
        new java.lang.String[] { "Label", "Value", });
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor,
        new java.lang.String[] { "Label", "Regex", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
