// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/policy.proto

package com.aperture.policy.language.v1;

public interface RateLimiterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the inPorts field is set.
   */
  boolean hasInPorts();
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The inPorts.
   */
  com.aperture.policy.language.v1.RateLimiter.Ins getInPorts();
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.aperture.policy.language.v1.RateLimiter.InsOrBuilder getInPortsOrBuilder();

  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the selector field is set.
   */
  boolean hasSelector();
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The selector.
   */
  com.aperture.policy.language.v1.Selector getSelector();
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.aperture.policy.language.v1.SelectorOrBuilder getSelectorOrBuilder();

  /**
   * <pre>
   * &#64;gotags: default:"60s"
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the limitResetInterval field is set.
   */
  boolean hasLimitResetInterval();
  /**
   * <pre>
   * &#64;gotags: default:"60s"
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The limitResetInterval.
   */
  com.google.protobuf.Duration getLimitResetInterval();
  /**
   * <pre>
   * &#64;gotags: default:"60s"
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getLimitResetIntervalOrBuilder();

  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The labelKey.
   */
  java.lang.String getLabelKey();
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for labelKey.
   */
  com.google.protobuf.ByteString
      getLabelKeyBytes();

  /**
   * <code>repeated .aperture.policy.language.v1.RateLimiter.OverrideConfig overrides = 5 [json_name = "overrides"];</code>
   */
  java.util.List<com.aperture.policy.language.v1.RateLimiter.OverrideConfig>
      getOverridesList();
  /**
   * <code>repeated .aperture.policy.language.v1.RateLimiter.OverrideConfig overrides = 5 [json_name = "overrides"];</code>
   */
  com.aperture.policy.language.v1.RateLimiter.OverrideConfig getOverrides(int index);
  /**
   * <code>repeated .aperture.policy.language.v1.RateLimiter.OverrideConfig overrides = 5 [json_name = "overrides"];</code>
   */
  int getOverridesCount();
  /**
   * <code>repeated .aperture.policy.language.v1.RateLimiter.OverrideConfig overrides = 5 [json_name = "overrides"];</code>
   */
  java.util.List<? extends com.aperture.policy.language.v1.RateLimiter.OverrideConfigOrBuilder>
      getOverridesOrBuilderList();
  /**
   * <code>repeated .aperture.policy.language.v1.RateLimiter.OverrideConfig overrides = 5 [json_name = "overrides"];</code>
   */
  com.aperture.policy.language.v1.RateLimiter.OverrideConfigOrBuilder getOverridesOrBuilder(
      int index);

  /**
   * <code>.aperture.policy.language.v1.RateLimiter.LazySyncConfig lazy_sync_config = 6 [json_name = "lazySyncConfig"];</code>
   * @return Whether the lazySyncConfig field is set.
   */
  boolean hasLazySyncConfig();
  /**
   * <code>.aperture.policy.language.v1.RateLimiter.LazySyncConfig lazy_sync_config = 6 [json_name = "lazySyncConfig"];</code>
   * @return The lazySyncConfig.
   */
  com.aperture.policy.language.v1.RateLimiter.LazySyncConfig getLazySyncConfig();
  /**
   * <code>.aperture.policy.language.v1.RateLimiter.LazySyncConfig lazy_sync_config = 6 [json_name = "lazySyncConfig"];</code>
   */
  com.aperture.policy.language.v1.RateLimiter.LazySyncConfigOrBuilder getLazySyncConfigOrBuilder();
}
