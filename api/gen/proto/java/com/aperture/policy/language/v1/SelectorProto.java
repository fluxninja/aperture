// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/selector.proto

package com.aperture.policy.language.v1;

public final class SelectorProto {
  private SelectorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Selector_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Selector_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_ControlPoint_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_ControlPoint_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*aperture/policy/language/v1/selector.p" +
      "roto\022\033aperture.policy.language.v1\032.apert" +
      "ure/policy/language/v1/labelmatcher.prot" +
      "o\032.protoc-gen-openapiv2/options/annotati" +
      "ons.proto\"\251\002\n\010Selector\022@\n\013agent_group\030\001 " +
      "\001(\tB\037\222A\034\202\003\031\n\014x-go-default\022\t\032\007defaultR\nag" +
      "entGroup\022\030\n\007service\030\002 \001(\tR\007service\022q\n\rco" +
      "ntrol_point\030\003 \001(\0132).aperture.policy.lang" +
      "uage.v1.ControlPointB!\222A\036\202\003\033\n\rx-go-valid" +
      "ate\022\n\032\010requiredR\014controlPoint\022N\n\rlabel_m" +
      "atcher\030\004 \001(\0132).aperture.policy.language." +
      "v1.LabelMatcherR\014labelMatcher\"\261\001\n\014Contro" +
      "lPoint\022=\n\007feature\030\001 \001(\tB!\222A\036\202\003\033\n\rx-go-va" +
      "lidate\022\n\032\010requiredH\000R\007feature\022R\n\007traffic" +
      "\030\002 \001(\tB6\222A3\202\0030\n\rx-go-validate\022\037\032\035require" +
      "d,oneof=ingress egressH\000R\007trafficB\016\n\014con" +
      "trolpointB\226\002\n\037com.aperture.policy.langua" +
      "ge.v1B\rSelectorProtoP\001ZUgithub.com/fluxn" +
      "inja/aperture/api/gen/proto/go/aperture/" +
      "policy/language/v1;languagev1\242\002\003APL\252\002\033Ap" +
      "erture.Policy.Language.V1\312\002\033Aperture\\Pol" +
      "icy\\Language\\V1\342\002\'Aperture\\Policy\\Langua" +
      "ge\\V1\\GPBMetadata\352\002\036Aperture::Policy::La" +
      "nguage::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aperture.policy.language.v1.LabelmatcherProto.getDescriptor(),
          com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_aperture_policy_language_v1_Selector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_Selector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Selector_descriptor,
        new java.lang.String[] { "AgentGroup", "Service", "ControlPoint", "LabelMatcher", });
    internal_static_aperture_policy_language_v1_ControlPoint_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_policy_language_v1_ControlPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_ControlPoint_descriptor,
        new java.lang.String[] { "Feature", "Traffic", "Controlpoint", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.aperture.policy.language.v1.LabelmatcherProto.getDescriptor();
    com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
