// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/common/watchdog/v1/watchdog.proto

package com.aperture.common.watchdog.v1;

public interface HeapResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.common.watchdog.v1.HeapResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 limit = 1 [json_name = "limit"];</code>
   * @return The limit.
   */
  long getLimit();

  /**
   * <code>uint64 heap_marked = 2 [json_name = "heapMarked"];</code>
   * @return The heapMarked.
   */
  long getHeapMarked();

  /**
   * <code>uint64 threshold = 3 [json_name = "threshold"];</code>
   * @return The threshold.
   */
  long getThreshold();

  /**
   * <code>int32 curr_gogc = 4 [json_name = "currGogc"];</code>
   * @return The currGogc.
   */
  int getCurrGogc();

  /**
   * <code>int32 original_gogc = 5 [json_name = "originalGogc"];</code>
   * @return The originalGogc.
   */
  int getOriginalGogc();

  /**
   * <code>uint64 total_alloc = 6 [json_name = "totalAlloc"];</code>
   * @return The totalAlloc.
   */
  long getTotalAlloc();

  /**
   * <code>uint64 sys = 7 [json_name = "sys"];</code>
   * @return The sys.
   */
  long getSys();

  /**
   * <code>uint64 mallocs = 8 [json_name = "mallocs"];</code>
   * @return The mallocs.
   */
  long getMallocs();

  /**
   * <code>uint64 frees = 9 [json_name = "frees"];</code>
   * @return The frees.
   */
  long getFrees();

  /**
   * <code>uint64 heap_alloc = 10 [json_name = "heapAlloc"];</code>
   * @return The heapAlloc.
   */
  long getHeapAlloc();

  /**
   * <code>uint64 heap_sys = 11 [json_name = "heapSys"];</code>
   * @return The heapSys.
   */
  long getHeapSys();

  /**
   * <code>uint64 heap_idle = 12 [json_name = "heapIdle"];</code>
   * @return The heapIdle.
   */
  long getHeapIdle();

  /**
   * <code>uint64 heap_inuse = 13 [json_name = "heapInuse"];</code>
   * @return The heapInuse.
   */
  long getHeapInuse();

  /**
   * <code>uint64 heap_released = 14 [json_name = "heapReleased"];</code>
   * @return The heapReleased.
   */
  long getHeapReleased();

  /**
   * <code>uint64 heap_objects = 15 [json_name = "heapObjects"];</code>
   * @return The heapObjects.
   */
  long getHeapObjects();

  /**
   * <code>uint64 next_gc = 16 [json_name = "nextGc"];</code>
   * @return The nextGc.
   */
  long getNextGc();

  /**
   * <code>uint64 last_gc = 17 [json_name = "lastGc"];</code>
   * @return The lastGc.
   */
  long getLastGc();

  /**
   * <code>uint64 pause_total_ns = 18 [json_name = "pauseTotalNs"];</code>
   * @return The pauseTotalNs.
   */
  long getPauseTotalNs();

  /**
   * <code>uint32 num_gc = 19 [json_name = "numGc"];</code>
   * @return The numGc.
   */
  int getNumGc();

  /**
   * <code>uint32 num_forced_gc = 20 [json_name = "numForcedGc"];</code>
   * @return The numForcedGc.
   */
  int getNumForcedGc();
}
