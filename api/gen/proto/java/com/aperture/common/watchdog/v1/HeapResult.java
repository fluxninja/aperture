// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/common/watchdog/v1/watchdog.proto

package com.aperture.common.watchdog.v1;

/**
 * Protobuf type {@code aperture.common.watchdog.v1.HeapResult}
 */
public final class HeapResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.common.watchdog.v1.HeapResult)
    HeapResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HeapResult.newBuilder() to construct.
  private HeapResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HeapResult() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HeapResult();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HeapResult(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            limit_ = input.readUInt64();
            break;
          }
          case 16: {

            heapMarked_ = input.readUInt64();
            break;
          }
          case 24: {

            threshold_ = input.readUInt64();
            break;
          }
          case 32: {

            currGogc_ = input.readInt32();
            break;
          }
          case 40: {

            originalGogc_ = input.readInt32();
            break;
          }
          case 48: {

            totalAlloc_ = input.readUInt64();
            break;
          }
          case 56: {

            sys_ = input.readUInt64();
            break;
          }
          case 64: {

            mallocs_ = input.readUInt64();
            break;
          }
          case 72: {

            frees_ = input.readUInt64();
            break;
          }
          case 80: {

            heapAlloc_ = input.readUInt64();
            break;
          }
          case 88: {

            heapSys_ = input.readUInt64();
            break;
          }
          case 96: {

            heapIdle_ = input.readUInt64();
            break;
          }
          case 104: {

            heapInuse_ = input.readUInt64();
            break;
          }
          case 112: {

            heapReleased_ = input.readUInt64();
            break;
          }
          case 120: {

            heapObjects_ = input.readUInt64();
            break;
          }
          case 128: {

            nextGc_ = input.readUInt64();
            break;
          }
          case 136: {

            lastGc_ = input.readUInt64();
            break;
          }
          case 144: {

            pauseTotalNs_ = input.readUInt64();
            break;
          }
          case 152: {

            numGc_ = input.readUInt32();
            break;
          }
          case 160: {

            numForcedGc_ = input.readUInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.aperture.common.watchdog.v1.WatchdogProto.internal_static_aperture_common_watchdog_v1_HeapResult_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.aperture.common.watchdog.v1.WatchdogProto.internal_static_aperture_common_watchdog_v1_HeapResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.aperture.common.watchdog.v1.HeapResult.class, com.aperture.common.watchdog.v1.HeapResult.Builder.class);
  }

  public static final int LIMIT_FIELD_NUMBER = 1;
  private long limit_;
  /**
   * <code>uint64 limit = 1 [json_name = "limit"];</code>
   * @return The limit.
   */
  @java.lang.Override
  public long getLimit() {
    return limit_;
  }

  public static final int HEAP_MARKED_FIELD_NUMBER = 2;
  private long heapMarked_;
  /**
   * <code>uint64 heap_marked = 2 [json_name = "heapMarked"];</code>
   * @return The heapMarked.
   */
  @java.lang.Override
  public long getHeapMarked() {
    return heapMarked_;
  }

  public static final int THRESHOLD_FIELD_NUMBER = 3;
  private long threshold_;
  /**
   * <code>uint64 threshold = 3 [json_name = "threshold"];</code>
   * @return The threshold.
   */
  @java.lang.Override
  public long getThreshold() {
    return threshold_;
  }

  public static final int CURR_GOGC_FIELD_NUMBER = 4;
  private int currGogc_;
  /**
   * <code>int32 curr_gogc = 4 [json_name = "currGogc"];</code>
   * @return The currGogc.
   */
  @java.lang.Override
  public int getCurrGogc() {
    return currGogc_;
  }

  public static final int ORIGINAL_GOGC_FIELD_NUMBER = 5;
  private int originalGogc_;
  /**
   * <code>int32 original_gogc = 5 [json_name = "originalGogc"];</code>
   * @return The originalGogc.
   */
  @java.lang.Override
  public int getOriginalGogc() {
    return originalGogc_;
  }

  public static final int TOTAL_ALLOC_FIELD_NUMBER = 6;
  private long totalAlloc_;
  /**
   * <code>uint64 total_alloc = 6 [json_name = "totalAlloc"];</code>
   * @return The totalAlloc.
   */
  @java.lang.Override
  public long getTotalAlloc() {
    return totalAlloc_;
  }

  public static final int SYS_FIELD_NUMBER = 7;
  private long sys_;
  /**
   * <code>uint64 sys = 7 [json_name = "sys"];</code>
   * @return The sys.
   */
  @java.lang.Override
  public long getSys() {
    return sys_;
  }

  public static final int MALLOCS_FIELD_NUMBER = 8;
  private long mallocs_;
  /**
   * <code>uint64 mallocs = 8 [json_name = "mallocs"];</code>
   * @return The mallocs.
   */
  @java.lang.Override
  public long getMallocs() {
    return mallocs_;
  }

  public static final int FREES_FIELD_NUMBER = 9;
  private long frees_;
  /**
   * <code>uint64 frees = 9 [json_name = "frees"];</code>
   * @return The frees.
   */
  @java.lang.Override
  public long getFrees() {
    return frees_;
  }

  public static final int HEAP_ALLOC_FIELD_NUMBER = 10;
  private long heapAlloc_;
  /**
   * <code>uint64 heap_alloc = 10 [json_name = "heapAlloc"];</code>
   * @return The heapAlloc.
   */
  @java.lang.Override
  public long getHeapAlloc() {
    return heapAlloc_;
  }

  public static final int HEAP_SYS_FIELD_NUMBER = 11;
  private long heapSys_;
  /**
   * <code>uint64 heap_sys = 11 [json_name = "heapSys"];</code>
   * @return The heapSys.
   */
  @java.lang.Override
  public long getHeapSys() {
    return heapSys_;
  }

  public static final int HEAP_IDLE_FIELD_NUMBER = 12;
  private long heapIdle_;
  /**
   * <code>uint64 heap_idle = 12 [json_name = "heapIdle"];</code>
   * @return The heapIdle.
   */
  @java.lang.Override
  public long getHeapIdle() {
    return heapIdle_;
  }

  public static final int HEAP_INUSE_FIELD_NUMBER = 13;
  private long heapInuse_;
  /**
   * <code>uint64 heap_inuse = 13 [json_name = "heapInuse"];</code>
   * @return The heapInuse.
   */
  @java.lang.Override
  public long getHeapInuse() {
    return heapInuse_;
  }

  public static final int HEAP_RELEASED_FIELD_NUMBER = 14;
  private long heapReleased_;
  /**
   * <code>uint64 heap_released = 14 [json_name = "heapReleased"];</code>
   * @return The heapReleased.
   */
  @java.lang.Override
  public long getHeapReleased() {
    return heapReleased_;
  }

  public static final int HEAP_OBJECTS_FIELD_NUMBER = 15;
  private long heapObjects_;
  /**
   * <code>uint64 heap_objects = 15 [json_name = "heapObjects"];</code>
   * @return The heapObjects.
   */
  @java.lang.Override
  public long getHeapObjects() {
    return heapObjects_;
  }

  public static final int NEXT_GC_FIELD_NUMBER = 16;
  private long nextGc_;
  /**
   * <code>uint64 next_gc = 16 [json_name = "nextGc"];</code>
   * @return The nextGc.
   */
  @java.lang.Override
  public long getNextGc() {
    return nextGc_;
  }

  public static final int LAST_GC_FIELD_NUMBER = 17;
  private long lastGc_;
  /**
   * <code>uint64 last_gc = 17 [json_name = "lastGc"];</code>
   * @return The lastGc.
   */
  @java.lang.Override
  public long getLastGc() {
    return lastGc_;
  }

  public static final int PAUSE_TOTAL_NS_FIELD_NUMBER = 18;
  private long pauseTotalNs_;
  /**
   * <code>uint64 pause_total_ns = 18 [json_name = "pauseTotalNs"];</code>
   * @return The pauseTotalNs.
   */
  @java.lang.Override
  public long getPauseTotalNs() {
    return pauseTotalNs_;
  }

  public static final int NUM_GC_FIELD_NUMBER = 19;
  private int numGc_;
  /**
   * <code>uint32 num_gc = 19 [json_name = "numGc"];</code>
   * @return The numGc.
   */
  @java.lang.Override
  public int getNumGc() {
    return numGc_;
  }

  public static final int NUM_FORCED_GC_FIELD_NUMBER = 20;
  private int numForcedGc_;
  /**
   * <code>uint32 num_forced_gc = 20 [json_name = "numForcedGc"];</code>
   * @return The numForcedGc.
   */
  @java.lang.Override
  public int getNumForcedGc() {
    return numForcedGc_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (limit_ != 0L) {
      output.writeUInt64(1, limit_);
    }
    if (heapMarked_ != 0L) {
      output.writeUInt64(2, heapMarked_);
    }
    if (threshold_ != 0L) {
      output.writeUInt64(3, threshold_);
    }
    if (currGogc_ != 0) {
      output.writeInt32(4, currGogc_);
    }
    if (originalGogc_ != 0) {
      output.writeInt32(5, originalGogc_);
    }
    if (totalAlloc_ != 0L) {
      output.writeUInt64(6, totalAlloc_);
    }
    if (sys_ != 0L) {
      output.writeUInt64(7, sys_);
    }
    if (mallocs_ != 0L) {
      output.writeUInt64(8, mallocs_);
    }
    if (frees_ != 0L) {
      output.writeUInt64(9, frees_);
    }
    if (heapAlloc_ != 0L) {
      output.writeUInt64(10, heapAlloc_);
    }
    if (heapSys_ != 0L) {
      output.writeUInt64(11, heapSys_);
    }
    if (heapIdle_ != 0L) {
      output.writeUInt64(12, heapIdle_);
    }
    if (heapInuse_ != 0L) {
      output.writeUInt64(13, heapInuse_);
    }
    if (heapReleased_ != 0L) {
      output.writeUInt64(14, heapReleased_);
    }
    if (heapObjects_ != 0L) {
      output.writeUInt64(15, heapObjects_);
    }
    if (nextGc_ != 0L) {
      output.writeUInt64(16, nextGc_);
    }
    if (lastGc_ != 0L) {
      output.writeUInt64(17, lastGc_);
    }
    if (pauseTotalNs_ != 0L) {
      output.writeUInt64(18, pauseTotalNs_);
    }
    if (numGc_ != 0) {
      output.writeUInt32(19, numGc_);
    }
    if (numForcedGc_ != 0) {
      output.writeUInt32(20, numForcedGc_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (limit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, limit_);
    }
    if (heapMarked_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, heapMarked_);
    }
    if (threshold_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, threshold_);
    }
    if (currGogc_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, currGogc_);
    }
    if (originalGogc_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, originalGogc_);
    }
    if (totalAlloc_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, totalAlloc_);
    }
    if (sys_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, sys_);
    }
    if (mallocs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, mallocs_);
    }
    if (frees_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, frees_);
    }
    if (heapAlloc_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, heapAlloc_);
    }
    if (heapSys_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(11, heapSys_);
    }
    if (heapIdle_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(12, heapIdle_);
    }
    if (heapInuse_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(13, heapInuse_);
    }
    if (heapReleased_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(14, heapReleased_);
    }
    if (heapObjects_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(15, heapObjects_);
    }
    if (nextGc_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(16, nextGc_);
    }
    if (lastGc_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(17, lastGc_);
    }
    if (pauseTotalNs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(18, pauseTotalNs_);
    }
    if (numGc_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(19, numGc_);
    }
    if (numForcedGc_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(20, numForcedGc_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.aperture.common.watchdog.v1.HeapResult)) {
      return super.equals(obj);
    }
    com.aperture.common.watchdog.v1.HeapResult other = (com.aperture.common.watchdog.v1.HeapResult) obj;

    if (getLimit()
        != other.getLimit()) return false;
    if (getHeapMarked()
        != other.getHeapMarked()) return false;
    if (getThreshold()
        != other.getThreshold()) return false;
    if (getCurrGogc()
        != other.getCurrGogc()) return false;
    if (getOriginalGogc()
        != other.getOriginalGogc()) return false;
    if (getTotalAlloc()
        != other.getTotalAlloc()) return false;
    if (getSys()
        != other.getSys()) return false;
    if (getMallocs()
        != other.getMallocs()) return false;
    if (getFrees()
        != other.getFrees()) return false;
    if (getHeapAlloc()
        != other.getHeapAlloc()) return false;
    if (getHeapSys()
        != other.getHeapSys()) return false;
    if (getHeapIdle()
        != other.getHeapIdle()) return false;
    if (getHeapInuse()
        != other.getHeapInuse()) return false;
    if (getHeapReleased()
        != other.getHeapReleased()) return false;
    if (getHeapObjects()
        != other.getHeapObjects()) return false;
    if (getNextGc()
        != other.getNextGc()) return false;
    if (getLastGc()
        != other.getLastGc()) return false;
    if (getPauseTotalNs()
        != other.getPauseTotalNs()) return false;
    if (getNumGc()
        != other.getNumGc()) return false;
    if (getNumForcedGc()
        != other.getNumForcedGc()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLimit());
    hash = (37 * hash) + HEAP_MARKED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapMarked());
    hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getThreshold());
    hash = (37 * hash) + CURR_GOGC_FIELD_NUMBER;
    hash = (53 * hash) + getCurrGogc();
    hash = (37 * hash) + ORIGINAL_GOGC_FIELD_NUMBER;
    hash = (53 * hash) + getOriginalGogc();
    hash = (37 * hash) + TOTAL_ALLOC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalAlloc());
    hash = (37 * hash) + SYS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSys());
    hash = (37 * hash) + MALLOCS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMallocs());
    hash = (37 * hash) + FREES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFrees());
    hash = (37 * hash) + HEAP_ALLOC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapAlloc());
    hash = (37 * hash) + HEAP_SYS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapSys());
    hash = (37 * hash) + HEAP_IDLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapIdle());
    hash = (37 * hash) + HEAP_INUSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapInuse());
    hash = (37 * hash) + HEAP_RELEASED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapReleased());
    hash = (37 * hash) + HEAP_OBJECTS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapObjects());
    hash = (37 * hash) + NEXT_GC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNextGc());
    hash = (37 * hash) + LAST_GC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastGc());
    hash = (37 * hash) + PAUSE_TOTAL_NS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPauseTotalNs());
    hash = (37 * hash) + NUM_GC_FIELD_NUMBER;
    hash = (53 * hash) + getNumGc();
    hash = (37 * hash) + NUM_FORCED_GC_FIELD_NUMBER;
    hash = (53 * hash) + getNumForcedGc();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aperture.common.watchdog.v1.HeapResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.aperture.common.watchdog.v1.HeapResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.common.watchdog.v1.HeapResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.common.watchdog.v1.HeapResult)
      com.aperture.common.watchdog.v1.HeapResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aperture.common.watchdog.v1.WatchdogProto.internal_static_aperture_common_watchdog_v1_HeapResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aperture.common.watchdog.v1.WatchdogProto.internal_static_aperture_common_watchdog_v1_HeapResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aperture.common.watchdog.v1.HeapResult.class, com.aperture.common.watchdog.v1.HeapResult.Builder.class);
    }

    // Construct using com.aperture.common.watchdog.v1.HeapResult.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      limit_ = 0L;

      heapMarked_ = 0L;

      threshold_ = 0L;

      currGogc_ = 0;

      originalGogc_ = 0;

      totalAlloc_ = 0L;

      sys_ = 0L;

      mallocs_ = 0L;

      frees_ = 0L;

      heapAlloc_ = 0L;

      heapSys_ = 0L;

      heapIdle_ = 0L;

      heapInuse_ = 0L;

      heapReleased_ = 0L;

      heapObjects_ = 0L;

      nextGc_ = 0L;

      lastGc_ = 0L;

      pauseTotalNs_ = 0L;

      numGc_ = 0;

      numForcedGc_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.aperture.common.watchdog.v1.WatchdogProto.internal_static_aperture_common_watchdog_v1_HeapResult_descriptor;
    }

    @java.lang.Override
    public com.aperture.common.watchdog.v1.HeapResult getDefaultInstanceForType() {
      return com.aperture.common.watchdog.v1.HeapResult.getDefaultInstance();
    }

    @java.lang.Override
    public com.aperture.common.watchdog.v1.HeapResult build() {
      com.aperture.common.watchdog.v1.HeapResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.aperture.common.watchdog.v1.HeapResult buildPartial() {
      com.aperture.common.watchdog.v1.HeapResult result = new com.aperture.common.watchdog.v1.HeapResult(this);
      result.limit_ = limit_;
      result.heapMarked_ = heapMarked_;
      result.threshold_ = threshold_;
      result.currGogc_ = currGogc_;
      result.originalGogc_ = originalGogc_;
      result.totalAlloc_ = totalAlloc_;
      result.sys_ = sys_;
      result.mallocs_ = mallocs_;
      result.frees_ = frees_;
      result.heapAlloc_ = heapAlloc_;
      result.heapSys_ = heapSys_;
      result.heapIdle_ = heapIdle_;
      result.heapInuse_ = heapInuse_;
      result.heapReleased_ = heapReleased_;
      result.heapObjects_ = heapObjects_;
      result.nextGc_ = nextGc_;
      result.lastGc_ = lastGc_;
      result.pauseTotalNs_ = pauseTotalNs_;
      result.numGc_ = numGc_;
      result.numForcedGc_ = numForcedGc_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.aperture.common.watchdog.v1.HeapResult) {
        return mergeFrom((com.aperture.common.watchdog.v1.HeapResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.aperture.common.watchdog.v1.HeapResult other) {
      if (other == com.aperture.common.watchdog.v1.HeapResult.getDefaultInstance()) return this;
      if (other.getLimit() != 0L) {
        setLimit(other.getLimit());
      }
      if (other.getHeapMarked() != 0L) {
        setHeapMarked(other.getHeapMarked());
      }
      if (other.getThreshold() != 0L) {
        setThreshold(other.getThreshold());
      }
      if (other.getCurrGogc() != 0) {
        setCurrGogc(other.getCurrGogc());
      }
      if (other.getOriginalGogc() != 0) {
        setOriginalGogc(other.getOriginalGogc());
      }
      if (other.getTotalAlloc() != 0L) {
        setTotalAlloc(other.getTotalAlloc());
      }
      if (other.getSys() != 0L) {
        setSys(other.getSys());
      }
      if (other.getMallocs() != 0L) {
        setMallocs(other.getMallocs());
      }
      if (other.getFrees() != 0L) {
        setFrees(other.getFrees());
      }
      if (other.getHeapAlloc() != 0L) {
        setHeapAlloc(other.getHeapAlloc());
      }
      if (other.getHeapSys() != 0L) {
        setHeapSys(other.getHeapSys());
      }
      if (other.getHeapIdle() != 0L) {
        setHeapIdle(other.getHeapIdle());
      }
      if (other.getHeapInuse() != 0L) {
        setHeapInuse(other.getHeapInuse());
      }
      if (other.getHeapReleased() != 0L) {
        setHeapReleased(other.getHeapReleased());
      }
      if (other.getHeapObjects() != 0L) {
        setHeapObjects(other.getHeapObjects());
      }
      if (other.getNextGc() != 0L) {
        setNextGc(other.getNextGc());
      }
      if (other.getLastGc() != 0L) {
        setLastGc(other.getLastGc());
      }
      if (other.getPauseTotalNs() != 0L) {
        setPauseTotalNs(other.getPauseTotalNs());
      }
      if (other.getNumGc() != 0) {
        setNumGc(other.getNumGc());
      }
      if (other.getNumForcedGc() != 0) {
        setNumForcedGc(other.getNumForcedGc());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.aperture.common.watchdog.v1.HeapResult parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.aperture.common.watchdog.v1.HeapResult) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long limit_ ;
    /**
     * <code>uint64 limit = 1 [json_name = "limit"];</code>
     * @return The limit.
     */
    @java.lang.Override
    public long getLimit() {
      return limit_;
    }
    /**
     * <code>uint64 limit = 1 [json_name = "limit"];</code>
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(long value) {

      limit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 limit = 1 [json_name = "limit"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLimit() {

      limit_ = 0L;
      onChanged();
      return this;
    }

    private long heapMarked_ ;
    /**
     * <code>uint64 heap_marked = 2 [json_name = "heapMarked"];</code>
     * @return The heapMarked.
     */
    @java.lang.Override
    public long getHeapMarked() {
      return heapMarked_;
    }
    /**
     * <code>uint64 heap_marked = 2 [json_name = "heapMarked"];</code>
     * @param value The heapMarked to set.
     * @return This builder for chaining.
     */
    public Builder setHeapMarked(long value) {

      heapMarked_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_marked = 2 [json_name = "heapMarked"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapMarked() {

      heapMarked_ = 0L;
      onChanged();
      return this;
    }

    private long threshold_ ;
    /**
     * <code>uint64 threshold = 3 [json_name = "threshold"];</code>
     * @return The threshold.
     */
    @java.lang.Override
    public long getThreshold() {
      return threshold_;
    }
    /**
     * <code>uint64 threshold = 3 [json_name = "threshold"];</code>
     * @param value The threshold to set.
     * @return This builder for chaining.
     */
    public Builder setThreshold(long value) {

      threshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 threshold = 3 [json_name = "threshold"];</code>
     * @return This builder for chaining.
     */
    public Builder clearThreshold() {

      threshold_ = 0L;
      onChanged();
      return this;
    }

    private int currGogc_ ;
    /**
     * <code>int32 curr_gogc = 4 [json_name = "currGogc"];</code>
     * @return The currGogc.
     */
    @java.lang.Override
    public int getCurrGogc() {
      return currGogc_;
    }
    /**
     * <code>int32 curr_gogc = 4 [json_name = "currGogc"];</code>
     * @param value The currGogc to set.
     * @return This builder for chaining.
     */
    public Builder setCurrGogc(int value) {

      currGogc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 curr_gogc = 4 [json_name = "currGogc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCurrGogc() {

      currGogc_ = 0;
      onChanged();
      return this;
    }

    private int originalGogc_ ;
    /**
     * <code>int32 original_gogc = 5 [json_name = "originalGogc"];</code>
     * @return The originalGogc.
     */
    @java.lang.Override
    public int getOriginalGogc() {
      return originalGogc_;
    }
    /**
     * <code>int32 original_gogc = 5 [json_name = "originalGogc"];</code>
     * @param value The originalGogc to set.
     * @return This builder for chaining.
     */
    public Builder setOriginalGogc(int value) {

      originalGogc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 original_gogc = 5 [json_name = "originalGogc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOriginalGogc() {

      originalGogc_ = 0;
      onChanged();
      return this;
    }

    private long totalAlloc_ ;
    /**
     * <code>uint64 total_alloc = 6 [json_name = "totalAlloc"];</code>
     * @return The totalAlloc.
     */
    @java.lang.Override
    public long getTotalAlloc() {
      return totalAlloc_;
    }
    /**
     * <code>uint64 total_alloc = 6 [json_name = "totalAlloc"];</code>
     * @param value The totalAlloc to set.
     * @return This builder for chaining.
     */
    public Builder setTotalAlloc(long value) {

      totalAlloc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 total_alloc = 6 [json_name = "totalAlloc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalAlloc() {

      totalAlloc_ = 0L;
      onChanged();
      return this;
    }

    private long sys_ ;
    /**
     * <code>uint64 sys = 7 [json_name = "sys"];</code>
     * @return The sys.
     */
    @java.lang.Override
    public long getSys() {
      return sys_;
    }
    /**
     * <code>uint64 sys = 7 [json_name = "sys"];</code>
     * @param value The sys to set.
     * @return This builder for chaining.
     */
    public Builder setSys(long value) {

      sys_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 sys = 7 [json_name = "sys"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSys() {

      sys_ = 0L;
      onChanged();
      return this;
    }

    private long mallocs_ ;
    /**
     * <code>uint64 mallocs = 8 [json_name = "mallocs"];</code>
     * @return The mallocs.
     */
    @java.lang.Override
    public long getMallocs() {
      return mallocs_;
    }
    /**
     * <code>uint64 mallocs = 8 [json_name = "mallocs"];</code>
     * @param value The mallocs to set.
     * @return This builder for chaining.
     */
    public Builder setMallocs(long value) {

      mallocs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 mallocs = 8 [json_name = "mallocs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMallocs() {

      mallocs_ = 0L;
      onChanged();
      return this;
    }

    private long frees_ ;
    /**
     * <code>uint64 frees = 9 [json_name = "frees"];</code>
     * @return The frees.
     */
    @java.lang.Override
    public long getFrees() {
      return frees_;
    }
    /**
     * <code>uint64 frees = 9 [json_name = "frees"];</code>
     * @param value The frees to set.
     * @return This builder for chaining.
     */
    public Builder setFrees(long value) {

      frees_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 frees = 9 [json_name = "frees"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFrees() {

      frees_ = 0L;
      onChanged();
      return this;
    }

    private long heapAlloc_ ;
    /**
     * <code>uint64 heap_alloc = 10 [json_name = "heapAlloc"];</code>
     * @return The heapAlloc.
     */
    @java.lang.Override
    public long getHeapAlloc() {
      return heapAlloc_;
    }
    /**
     * <code>uint64 heap_alloc = 10 [json_name = "heapAlloc"];</code>
     * @param value The heapAlloc to set.
     * @return This builder for chaining.
     */
    public Builder setHeapAlloc(long value) {

      heapAlloc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_alloc = 10 [json_name = "heapAlloc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapAlloc() {

      heapAlloc_ = 0L;
      onChanged();
      return this;
    }

    private long heapSys_ ;
    /**
     * <code>uint64 heap_sys = 11 [json_name = "heapSys"];</code>
     * @return The heapSys.
     */
    @java.lang.Override
    public long getHeapSys() {
      return heapSys_;
    }
    /**
     * <code>uint64 heap_sys = 11 [json_name = "heapSys"];</code>
     * @param value The heapSys to set.
     * @return This builder for chaining.
     */
    public Builder setHeapSys(long value) {

      heapSys_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_sys = 11 [json_name = "heapSys"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapSys() {

      heapSys_ = 0L;
      onChanged();
      return this;
    }

    private long heapIdle_ ;
    /**
     * <code>uint64 heap_idle = 12 [json_name = "heapIdle"];</code>
     * @return The heapIdle.
     */
    @java.lang.Override
    public long getHeapIdle() {
      return heapIdle_;
    }
    /**
     * <code>uint64 heap_idle = 12 [json_name = "heapIdle"];</code>
     * @param value The heapIdle to set.
     * @return This builder for chaining.
     */
    public Builder setHeapIdle(long value) {

      heapIdle_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_idle = 12 [json_name = "heapIdle"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapIdle() {

      heapIdle_ = 0L;
      onChanged();
      return this;
    }

    private long heapInuse_ ;
    /**
     * <code>uint64 heap_inuse = 13 [json_name = "heapInuse"];</code>
     * @return The heapInuse.
     */
    @java.lang.Override
    public long getHeapInuse() {
      return heapInuse_;
    }
    /**
     * <code>uint64 heap_inuse = 13 [json_name = "heapInuse"];</code>
     * @param value The heapInuse to set.
     * @return This builder for chaining.
     */
    public Builder setHeapInuse(long value) {

      heapInuse_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_inuse = 13 [json_name = "heapInuse"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapInuse() {

      heapInuse_ = 0L;
      onChanged();
      return this;
    }

    private long heapReleased_ ;
    /**
     * <code>uint64 heap_released = 14 [json_name = "heapReleased"];</code>
     * @return The heapReleased.
     */
    @java.lang.Override
    public long getHeapReleased() {
      return heapReleased_;
    }
    /**
     * <code>uint64 heap_released = 14 [json_name = "heapReleased"];</code>
     * @param value The heapReleased to set.
     * @return This builder for chaining.
     */
    public Builder setHeapReleased(long value) {

      heapReleased_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_released = 14 [json_name = "heapReleased"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapReleased() {

      heapReleased_ = 0L;
      onChanged();
      return this;
    }

    private long heapObjects_ ;
    /**
     * <code>uint64 heap_objects = 15 [json_name = "heapObjects"];</code>
     * @return The heapObjects.
     */
    @java.lang.Override
    public long getHeapObjects() {
      return heapObjects_;
    }
    /**
     * <code>uint64 heap_objects = 15 [json_name = "heapObjects"];</code>
     * @param value The heapObjects to set.
     * @return This builder for chaining.
     */
    public Builder setHeapObjects(long value) {

      heapObjects_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 heap_objects = 15 [json_name = "heapObjects"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeapObjects() {

      heapObjects_ = 0L;
      onChanged();
      return this;
    }

    private long nextGc_ ;
    /**
     * <code>uint64 next_gc = 16 [json_name = "nextGc"];</code>
     * @return The nextGc.
     */
    @java.lang.Override
    public long getNextGc() {
      return nextGc_;
    }
    /**
     * <code>uint64 next_gc = 16 [json_name = "nextGc"];</code>
     * @param value The nextGc to set.
     * @return This builder for chaining.
     */
    public Builder setNextGc(long value) {

      nextGc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 next_gc = 16 [json_name = "nextGc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNextGc() {

      nextGc_ = 0L;
      onChanged();
      return this;
    }

    private long lastGc_ ;
    /**
     * <code>uint64 last_gc = 17 [json_name = "lastGc"];</code>
     * @return The lastGc.
     */
    @java.lang.Override
    public long getLastGc() {
      return lastGc_;
    }
    /**
     * <code>uint64 last_gc = 17 [json_name = "lastGc"];</code>
     * @param value The lastGc to set.
     * @return This builder for chaining.
     */
    public Builder setLastGc(long value) {

      lastGc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 last_gc = 17 [json_name = "lastGc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastGc() {

      lastGc_ = 0L;
      onChanged();
      return this;
    }

    private long pauseTotalNs_ ;
    /**
     * <code>uint64 pause_total_ns = 18 [json_name = "pauseTotalNs"];</code>
     * @return The pauseTotalNs.
     */
    @java.lang.Override
    public long getPauseTotalNs() {
      return pauseTotalNs_;
    }
    /**
     * <code>uint64 pause_total_ns = 18 [json_name = "pauseTotalNs"];</code>
     * @param value The pauseTotalNs to set.
     * @return This builder for chaining.
     */
    public Builder setPauseTotalNs(long value) {

      pauseTotalNs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 pause_total_ns = 18 [json_name = "pauseTotalNs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPauseTotalNs() {

      pauseTotalNs_ = 0L;
      onChanged();
      return this;
    }

    private int numGc_ ;
    /**
     * <code>uint32 num_gc = 19 [json_name = "numGc"];</code>
     * @return The numGc.
     */
    @java.lang.Override
    public int getNumGc() {
      return numGc_;
    }
    /**
     * <code>uint32 num_gc = 19 [json_name = "numGc"];</code>
     * @param value The numGc to set.
     * @return This builder for chaining.
     */
    public Builder setNumGc(int value) {

      numGc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 num_gc = 19 [json_name = "numGc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumGc() {

      numGc_ = 0;
      onChanged();
      return this;
    }

    private int numForcedGc_ ;
    /**
     * <code>uint32 num_forced_gc = 20 [json_name = "numForcedGc"];</code>
     * @return The numForcedGc.
     */
    @java.lang.Override
    public int getNumForcedGc() {
      return numForcedGc_;
    }
    /**
     * <code>uint32 num_forced_gc = 20 [json_name = "numForcedGc"];</code>
     * @param value The numForcedGc to set.
     * @return This builder for chaining.
     */
    public Builder setNumForcedGc(int value) {

      numForcedGc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 num_forced_gc = 20 [json_name = "numForcedGc"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumForcedGc() {

      numForcedGc_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.common.watchdog.v1.HeapResult)
  }

  // @@protoc_insertion_point(class_scope:aperture.common.watchdog.v1.HeapResult)
  private static final com.aperture.common.watchdog.v1.HeapResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.aperture.common.watchdog.v1.HeapResult();
  }

  public static com.aperture.common.watchdog.v1.HeapResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HeapResult>
      PARSER = new com.google.protobuf.AbstractParser<HeapResult>() {
    @java.lang.Override
    public HeapResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HeapResult(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HeapResult> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HeapResult> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.aperture.common.watchdog.v1.HeapResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}
