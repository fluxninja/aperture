// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/plugins/fluxninja/v1/heartbeat.proto

package com.aperture.plugins.fluxninja.v1;

public interface ReportRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.plugins.fluxninja.v1.ReportRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.aperture.common.info.v1.VersionInfo version_info = 1 [json_name = "versionInfo"];</code>
   * @return Whether the versionInfo field is set.
   */
  boolean hasVersionInfo();
  /**
   * <code>.aperture.common.info.v1.VersionInfo version_info = 1 [json_name = "versionInfo"];</code>
   * @return The versionInfo.
   */
  com.aperture.common.info.v1.VersionInfo getVersionInfo();
  /**
   * <code>.aperture.common.info.v1.VersionInfo version_info = 1 [json_name = "versionInfo"];</code>
   */
  com.aperture.common.info.v1.VersionInfoOrBuilder getVersionInfoOrBuilder();

  /**
   * <code>.aperture.common.info.v1.ProcessInfo process_info = 2 [json_name = "processInfo"];</code>
   * @return Whether the processInfo field is set.
   */
  boolean hasProcessInfo();
  /**
   * <code>.aperture.common.info.v1.ProcessInfo process_info = 2 [json_name = "processInfo"];</code>
   * @return The processInfo.
   */
  com.aperture.common.info.v1.ProcessInfo getProcessInfo();
  /**
   * <code>.aperture.common.info.v1.ProcessInfo process_info = 2 [json_name = "processInfo"];</code>
   */
  com.aperture.common.info.v1.ProcessInfoOrBuilder getProcessInfoOrBuilder();

  /**
   * <code>.aperture.common.info.v1.HostInfo host_info = 3 [json_name = "hostInfo"];</code>
   * @return Whether the hostInfo field is set.
   */
  boolean hasHostInfo();
  /**
   * <code>.aperture.common.info.v1.HostInfo host_info = 3 [json_name = "hostInfo"];</code>
   * @return The hostInfo.
   */
  com.aperture.common.info.v1.HostInfo getHostInfo();
  /**
   * <code>.aperture.common.info.v1.HostInfo host_info = 3 [json_name = "hostInfo"];</code>
   */
  com.aperture.common.info.v1.HostInfoOrBuilder getHostInfoOrBuilder();

  /**
   * <code>string agent_group = 4 [json_name = "agentGroup"];</code>
   * @return The agentGroup.
   */
  java.lang.String getAgentGroup();
  /**
   * <code>string agent_group = 4 [json_name = "agentGroup"];</code>
   * @return The bytes for agentGroup.
   */
  com.google.protobuf.ByteString
      getAgentGroupBytes();

  /**
   * <code>.aperture.plugins.fluxninja.v1.ControllerInfo controller_info = 5 [json_name = "controllerInfo"];</code>
   * @return Whether the controllerInfo field is set.
   */
  boolean hasControllerInfo();
  /**
   * <code>.aperture.plugins.fluxninja.v1.ControllerInfo controller_info = 5 [json_name = "controllerInfo"];</code>
   * @return The controllerInfo.
   */
  com.aperture.plugins.fluxninja.v1.ControllerInfo getControllerInfo();
  /**
   * <code>.aperture.plugins.fluxninja.v1.ControllerInfo controller_info = 5 [json_name = "controllerInfo"];</code>
   */
  com.aperture.plugins.fluxninja.v1.ControllerInfoOrBuilder getControllerInfoOrBuilder();

  /**
   * <code>repeated .aperture.common.peers.v1.PeerInfo peer_infos = 6 [json_name = "peerInfos"];</code>
   */
  java.util.List<com.aperture.common.peers.v1.PeerInfo>
      getPeerInfosList();
  /**
   * <code>repeated .aperture.common.peers.v1.PeerInfo peer_infos = 6 [json_name = "peerInfos"];</code>
   */
  com.aperture.common.peers.v1.PeerInfo getPeerInfos(int index);
  /**
   * <code>repeated .aperture.common.peers.v1.PeerInfo peer_infos = 6 [json_name = "peerInfos"];</code>
   */
  int getPeerInfosCount();
  /**
   * <code>repeated .aperture.common.peers.v1.PeerInfo peer_infos = 6 [json_name = "peerInfos"];</code>
   */
  java.util.List<? extends com.aperture.common.peers.v1.PeerInfoOrBuilder>
      getPeerInfosOrBuilderList();
  /**
   * <code>repeated .aperture.common.peers.v1.PeerInfo peer_infos = 6 [json_name = "peerInfos"];</code>
   */
  com.aperture.common.peers.v1.PeerInfoOrBuilder getPeerInfosOrBuilder(
      int index);

  /**
   * <code>map&lt;string, .google.protobuf.Any&gt; all_statuses = 7 [json_name = "allStatuses"];</code>
   */
  int getAllStatusesCount();
  /**
   * <code>map&lt;string, .google.protobuf.Any&gt; all_statuses = 7 [json_name = "allStatuses"];</code>
   */
  boolean containsAllStatuses(
      java.lang.String key);
  /**
   * Use {@link #getAllStatusesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getAllStatuses();
  /**
   * <code>map&lt;string, .google.protobuf.Any&gt; all_statuses = 7 [json_name = "allStatuses"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getAllStatusesMap();
  /**
   * <code>map&lt;string, .google.protobuf.Any&gt; all_statuses = 7 [json_name = "allStatuses"];</code>
   */

  /* nullable */
com.google.protobuf.Any getAllStatusesOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Any defaultValue);
  /**
   * <code>map&lt;string, .google.protobuf.Any&gt; all_statuses = 7 [json_name = "allStatuses"];</code>
   */

  com.google.protobuf.Any getAllStatusesOrThrow(
      java.lang.String key);
}
