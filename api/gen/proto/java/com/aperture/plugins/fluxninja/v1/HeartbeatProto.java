// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/plugins/fluxninja/v1/heartbeat.proto

package com.aperture.plugins.fluxninja.v1;

public final class HeartbeatProto {
  private HeartbeatProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_AllStatusesEntry_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportRequest_AllStatusesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_Services_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_Services_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_OverlappingServices_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_OverlappingServices_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-aperture/plugins/fluxninja/v1/heartbea" +
      "t.proto\022\035aperture.plugins.fluxninja.v1\032\"" +
      "aperture/common/info/v1/info.proto\032$aper" +
      "ture/common/peers/v1/peers.proto\032\034google" +
      "/api/annotations.proto\032\031google/protobuf/" +
      "any.proto\"\325\004\n\rReportRequest\022G\n\014version_i" +
      "nfo\030\001 \001(\0132$.aperture.common.info.v1.Vers" +
      "ionInfoR\013versionInfo\022G\n\014process_info\030\002 \001" +
      "(\0132$.aperture.common.info.v1.ProcessInfo" +
      "R\013processInfo\022>\n\thost_info\030\003 \001(\0132!.apert" +
      "ure.common.info.v1.HostInfoR\010hostInfo\022\037\n" +
      "\013agent_group\030\004 \001(\tR\nagentGroup\022V\n\017contro" +
      "ller_info\030\005 \001(\0132-.aperture.plugins.fluxn" +
      "inja.v1.ControllerInfoR\016controllerInfo\022A" +
      "\n\npeer_infos\030\006 \003(\0132\".aperture.common.pee" +
      "rs.v1.PeerInfoR\tpeerInfos\022`\n\014all_statuse" +
      "s\030\007 \003(\0132=.aperture.plugins.fluxninja.v1." +
      "ReportRequest.AllStatusesEntryR\013allStatu" +
      "ses\032T\n\020AllStatusesEntry\022\020\n\003key\030\001 \001(\tR\003ke" +
      "y\022*\n\005value\030\002 \001(\0132\024.google.protobuf.AnyR\005" +
      "value:\0028\001\"\020\n\016ReportResponse\"N\n\010Services\022" +
      "B\n\010services\030\001 \003(\0132&.aperture.plugins.flu" +
      "xninja.v1.ServiceR\010services\"D\n\007Service\022\022" +
      "\n\004name\030\001 \001(\tR\004name\022%\n\016entities_count\030\002 \001" +
      "(\005R\rentitiesCount\"{\n\023OverlappingServices" +
      "\022d\n\024overlapping_services\030\001 \003(\01321.apertur" +
      "e.plugins.fluxninja.v1.OverlappingServic" +
      "eR\023overlappingServices\"s\n\022OverlappingSer" +
      "vice\022\032\n\010service1\030\001 \001(\tR\010service1\022\032\n\010serv" +
      "ice2\030\002 \001(\tR\010service2\022%\n\016entities_count\030\003" +
      " \001(\005R\rentitiesCount\" \n\016ControllerInfo\022\016\n" +
      "\002id\030\001 \001(\tR\002id2\243\001\n\020FluxNinjaService\022\216\001\n\006R" +
      "eport\022,.aperture.plugins.fluxninja.v1.Re" +
      "portRequest\032-.aperture.plugins.fluxninja" +
      ".v1.ReportResponse\"\'\202\323\344\223\002!:\001*\"\034/plugins/" +
      "fluxninja/v1/reportB\244\002\n!com.aperture.plu" +
      "gins.fluxninja.v1B\016HeartbeatProtoP\001ZXgit" +
      "hub.com/fluxninja/aperture/api/gen/proto" +
      "/go/aperture/plugins/fluxninja/v1;fluxni" +
      "njav1\242\002\003APF\252\002\035Aperture.Plugins.Fluxninja" +
      ".V1\312\002\035Aperture\\Plugins\\Fluxninja\\V1\342\002)Ap" +
      "erture\\Plugins\\Fluxninja\\V1\\GPBMetadata\352" +
      "\002 Aperture::Plugins::Fluxninja::V1b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aperture.common.info.v1.InfoProto.getDescriptor(),
          com.aperture.common.peers.v1.PeersProto.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
        });
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor,
        new java.lang.String[] { "VersionInfo", "ProcessInfo", "HostInfo", "AgentGroup", "ControllerInfo", "PeerInfos", "AllStatuses", });
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_AllStatusesEntry_descriptor =
      internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor.getNestedTypes().get(0);
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_AllStatusesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportRequest_AllStatusesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor,
        new java.lang.String[] { });
    internal_static_aperture_plugins_fluxninja_v1_Services_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_plugins_fluxninja_v1_Services_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_Services_descriptor,
        new java.lang.String[] { "Services", });
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_Service_descriptor,
        new java.lang.String[] { "Name", "EntitiesCount", });
    internal_static_aperture_plugins_fluxninja_v1_OverlappingServices_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_plugins_fluxninja_v1_OverlappingServices_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_OverlappingServices_descriptor,
        new java.lang.String[] { "OverlappingServices", });
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor,
        new java.lang.String[] { "Service1", "Service2", "EntitiesCount", });
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor,
        new java.lang.String[] { "Id", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.aperture.common.info.v1.InfoProto.getDescriptor();
    com.aperture.common.peers.v1.PeersProto.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
