// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/v1/flowcontrol.proto

package com.aperture.flowcontrol.v1;

public interface CheckResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.v1.CheckResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * decision_type contains what the decision was.
   * </pre>
   *
   * <code>.aperture.flowcontrol.v1.DecisionType decision_type = 1 [json_name = "decisionType"];</code>
   * @return The enum numeric value on the wire for decisionType.
   */
  int getDecisionTypeValue();
  /**
   * <pre>
   * decision_type contains what the decision was.
   * </pre>
   *
   * <code>.aperture.flowcontrol.v1.DecisionType decision_type = 1 [json_name = "decisionType"];</code>
   * @return The decisionType.
   */
  com.aperture.flowcontrol.v1.DecisionType getDecisionType();

  /**
   * <pre>
   * reason contains information in the case of an error or rejection.
   * </pre>
   *
   * <code>.aperture.flowcontrol.v1.DecisionReason decision_reason = 2 [json_name = "decisionReason"];</code>
   * @return Whether the decisionReason field is set.
   */
  boolean hasDecisionReason();
  /**
   * <pre>
   * reason contains information in the case of an error or rejection.
   * </pre>
   *
   * <code>.aperture.flowcontrol.v1.DecisionReason decision_reason = 2 [json_name = "decisionReason"];</code>
   * @return The decisionReason.
   */
  com.aperture.flowcontrol.v1.DecisionReason getDecisionReason();
  /**
   * <pre>
   * reason contains information in the case of an error or rejection.
   * </pre>
   *
   * <code>.aperture.flowcontrol.v1.DecisionReason decision_reason = 2 [json_name = "decisionReason"];</code>
   */
  com.aperture.flowcontrol.v1.DecisionReasonOrBuilder getDecisionReasonOrBuilder();

  /**
   * <pre>
   * limiter_decisions contains information about decision made by each limiter.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.LimiterDecision limiter_decisions = 3 [json_name = "limiterDecisions"];</code>
   */
  java.util.List<com.aperture.flowcontrol.v1.LimiterDecision>
      getLimiterDecisionsList();
  /**
   * <pre>
   * limiter_decisions contains information about decision made by each limiter.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.LimiterDecision limiter_decisions = 3 [json_name = "limiterDecisions"];</code>
   */
  com.aperture.flowcontrol.v1.LimiterDecision getLimiterDecisions(int index);
  /**
   * <pre>
   * limiter_decisions contains information about decision made by each limiter.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.LimiterDecision limiter_decisions = 3 [json_name = "limiterDecisions"];</code>
   */
  int getLimiterDecisionsCount();
  /**
   * <pre>
   * limiter_decisions contains information about decision made by each limiter.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.LimiterDecision limiter_decisions = 3 [json_name = "limiterDecisions"];</code>
   */
  java.util.List<? extends com.aperture.flowcontrol.v1.LimiterDecisionOrBuilder>
      getLimiterDecisionsOrBuilderList();
  /**
   * <pre>
   * limiter_decisions contains information about decision made by each limiter.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.LimiterDecision limiter_decisions = 3 [json_name = "limiterDecisions"];</code>
   */
  com.aperture.flowcontrol.v1.LimiterDecisionOrBuilder getLimiterDecisionsOrBuilder(
      int index);

  /**
   * <pre>
   * flux meters that were matched for this request.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.FluxMeter flux_meters = 4 [json_name = "fluxMeters"];</code>
   */
  java.util.List<com.aperture.flowcontrol.v1.FluxMeter>
      getFluxMetersList();
  /**
   * <pre>
   * flux meters that were matched for this request.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.FluxMeter flux_meters = 4 [json_name = "fluxMeters"];</code>
   */
  com.aperture.flowcontrol.v1.FluxMeter getFluxMeters(int index);
  /**
   * <pre>
   * flux meters that were matched for this request.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.FluxMeter flux_meters = 4 [json_name = "fluxMeters"];</code>
   */
  int getFluxMetersCount();
  /**
   * <pre>
   * flux meters that were matched for this request.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.FluxMeter flux_meters = 4 [json_name = "fluxMeters"];</code>
   */
  java.util.List<? extends com.aperture.flowcontrol.v1.FluxMeterOrBuilder>
      getFluxMetersOrBuilderList();
  /**
   * <pre>
   * flux meters that were matched for this request.
   * </pre>
   *
   * <code>repeated .aperture.flowcontrol.v1.FluxMeter flux_meters = 4 [json_name = "fluxMeters"];</code>
   */
  com.aperture.flowcontrol.v1.FluxMeterOrBuilder getFluxMetersOrBuilder(
      int index);
}
