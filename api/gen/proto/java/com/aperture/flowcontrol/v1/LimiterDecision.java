// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/v1/flowcontrol.proto

package com.aperture.flowcontrol.v1;

/**
 * <pre>
 * LimiterDecision describes details for each limiter.
 * </pre>
 *
 * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision}
 */
public final class LimiterDecision extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.flowcontrol.v1.LimiterDecision)
    LimiterDecisionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LimiterDecision.newBuilder() to construct.
  private LimiterDecision(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LimiterDecision() {
    policyName_ = "";
    policyHash_ = "";
    reason_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LimiterDecision();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LimiterDecision(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            policyName_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            policyHash_ = s;
            break;
          }
          case 24: {

            componentIndex_ = input.readInt64();
            break;
          }
          case 32: {

            dropped_ = input.readBool();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            reason_ = rawValue;
            break;
          }
          case 50: {
            com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder subBuilder = null;
            if (detailsCase_ == 6) {
              subBuilder = ((com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_).toBuilder();
            }
            details_ =
                input.readMessage(com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_);
              details_ = subBuilder.buildPartial();
            }
            detailsCase_ = 6;
            break;
          }
          case 58: {
            com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder subBuilder = null;
            if (detailsCase_ == 7) {
              subBuilder = ((com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_).toBuilder();
            }
            details_ =
                input.readMessage(com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_);
              details_ = subBuilder.buildPartial();
            }
            detailsCase_ = 7;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.aperture.flowcontrol.v1.LimiterDecision.class, com.aperture.flowcontrol.v1.LimiterDecision.Builder.class);
  }

  /**
   * Protobuf enum {@code aperture.flowcontrol.v1.LimiterDecision.LimiterReason}
   */
  public enum LimiterReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LIMITER_REASON_UNSPECIFIED = 0;</code>
     */
    LIMITER_REASON_UNSPECIFIED(0),
    /**
     * <code>LIMITER_REASON_KEY_NOT_FOUND = 1;</code>
     */
    LIMITER_REASON_KEY_NOT_FOUND(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LIMITER_REASON_UNSPECIFIED = 0;</code>
     */
    public static final int LIMITER_REASON_UNSPECIFIED_VALUE = 0;
    /**
     * <code>LIMITER_REASON_KEY_NOT_FOUND = 1;</code>
     */
    public static final int LIMITER_REASON_KEY_NOT_FOUND_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LimiterReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LimiterReason forNumber(int value) {
      switch (value) {
        case 0: return LIMITER_REASON_UNSPECIFIED;
        case 1: return LIMITER_REASON_KEY_NOT_FOUND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LimiterReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LimiterReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LimiterReason>() {
            public LimiterReason findValueByNumber(int number) {
              return LimiterReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aperture.flowcontrol.v1.LimiterDecision.getDescriptor().getEnumTypes().get(0);
    }

    private static final LimiterReason[] VALUES = values();

    public static LimiterReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LimiterReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:aperture.flowcontrol.v1.LimiterDecision.LimiterReason)
  }

  public interface RateLimiterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.v1.LimiterDecision.RateLimiter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 remaining = 1 [json_name = "remaining"];</code>
     * @return The remaining.
     */
    long getRemaining();

    /**
     * <code>int64 current = 2 [json_name = "current"];</code>
     * @return The current.
     */
    long getCurrent();

    /**
     * <code>string label = 3 [json_name = "label"];</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>string label = 3 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision.RateLimiter}
   */
  public static final class RateLimiter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.v1.LimiterDecision.RateLimiter)
      RateLimiterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RateLimiter.newBuilder() to construct.
    private RateLimiter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RateLimiter() {
      label_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RateLimiter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RateLimiter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              remaining_ = input.readInt64();
              break;
            }
            case 16: {

              current_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_RateLimiter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_RateLimiter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.class, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder.class);
    }

    public static final int REMAINING_FIELD_NUMBER = 1;
    private long remaining_;
    /**
     * <code>int64 remaining = 1 [json_name = "remaining"];</code>
     * @return The remaining.
     */
    @java.lang.Override
    public long getRemaining() {
      return remaining_;
    }

    public static final int CURRENT_FIELD_NUMBER = 2;
    private long current_;
    /**
     * <code>int64 current = 2 [json_name = "current"];</code>
     * @return The current.
     */
    @java.lang.Override
    public long getCurrent() {
      return current_;
    }

    public static final int LABEL_FIELD_NUMBER = 3;
    private volatile java.lang.Object label_;
    /**
     * <code>string label = 3 [json_name = "label"];</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 3 [json_name = "label"];</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (remaining_ != 0L) {
        output.writeInt64(1, remaining_);
      }
      if (current_ != 0L) {
        output.writeInt64(2, current_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, label_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (remaining_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, remaining_);
      }
      if (current_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, current_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, label_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter)) {
        return super.equals(obj);
      }
      com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter other = (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) obj;

      if (getRemaining()
          != other.getRemaining()) return false;
      if (getCurrent()
          != other.getCurrent()) return false;
      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRemaining());
      hash = (37 * hash) + CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrent());
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision.RateLimiter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.v1.LimiterDecision.RateLimiter)
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_RateLimiter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_RateLimiter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.class, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder.class);
      }

      // Construct using com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        remaining_ = 0L;

        current_ = 0L;

        label_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_RateLimiter_descriptor;
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter getDefaultInstanceForType() {
        return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter build() {
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter buildPartial() {
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter result = new com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter(this);
        result.remaining_ = remaining_;
        result.current_ = current_;
        result.label_ = label_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) {
          return mergeFrom((com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter other) {
        if (other == com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance()) return this;
        if (other.getRemaining() != 0L) {
          setRemaining(other.getRemaining());
        }
        if (other.getCurrent() != 0L) {
          setCurrent(other.getCurrent());
        }
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long remaining_ ;
      /**
       * <code>int64 remaining = 1 [json_name = "remaining"];</code>
       * @return The remaining.
       */
      @java.lang.Override
      public long getRemaining() {
        return remaining_;
      }
      /**
       * <code>int64 remaining = 1 [json_name = "remaining"];</code>
       * @param value The remaining to set.
       * @return This builder for chaining.
       */
      public Builder setRemaining(long value) {

        remaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 remaining = 1 [json_name = "remaining"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRemaining() {

        remaining_ = 0L;
        onChanged();
        return this;
      }

      private long current_ ;
      /**
       * <code>int64 current = 2 [json_name = "current"];</code>
       * @return The current.
       */
      @java.lang.Override
      public long getCurrent() {
        return current_;
      }
      /**
       * <code>int64 current = 2 [json_name = "current"];</code>
       * @param value The current to set.
       * @return This builder for chaining.
       */
      public Builder setCurrent(long value) {

        current_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 current = 2 [json_name = "current"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrent() {

        current_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <code>string label = 3 [json_name = "label"];</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string label = 3 [json_name = "label"];</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 3 [json_name = "label"];</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3 [json_name = "label"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {

        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3 [json_name = "label"];</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        label_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.v1.LimiterDecision.RateLimiter)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.v1.LimiterDecision.RateLimiter)
    private static final com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter();
    }

    public static com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RateLimiter>
        PARSER = new com.google.protobuf.AbstractParser<RateLimiter>() {
      @java.lang.Override
      public RateLimiter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RateLimiter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RateLimiter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RateLimiter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConcurrencyLimiterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    java.lang.String getWorkloadIndex();
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    com.google.protobuf.ByteString
        getWorkloadIndexBytes();
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter}
   */
  public static final class ConcurrencyLimiter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)
      ConcurrencyLimiterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConcurrencyLimiter.newBuilder() to construct.
    private ConcurrencyLimiter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConcurrencyLimiter() {
      workloadIndex_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConcurrencyLimiter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConcurrencyLimiter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              workloadIndex_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_ConcurrencyLimiter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_ConcurrencyLimiter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.class, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder.class);
    }

    public static final int WORKLOAD_INDEX_FIELD_NUMBER = 1;
    private volatile java.lang.Object workloadIndex_;
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The workloadIndex.
     */
    @java.lang.Override
    public java.lang.String getWorkloadIndex() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workloadIndex_ = s;
        return s;
      }
    }
    /**
     * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
     * @return The bytes for workloadIndex.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkloadIndexBytes() {
      java.lang.Object ref = workloadIndex_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workloadIndex_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, workloadIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadIndex_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, workloadIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)) {
        return super.equals(obj);
      }
      com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter other = (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) obj;

      if (!getWorkloadIndex()
          .equals(other.getWorkloadIndex())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WORKLOAD_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadIndex().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_ConcurrencyLimiter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_ConcurrencyLimiter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.class, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder.class);
      }

      // Construct using com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        workloadIndex_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_ConcurrencyLimiter_descriptor;
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter getDefaultInstanceForType() {
        return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter build() {
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter buildPartial() {
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter result = new com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter(this);
        result.workloadIndex_ = workloadIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) {
          return mergeFrom((com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter other) {
        if (other == com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance()) return this;
        if (!other.getWorkloadIndex().isEmpty()) {
          workloadIndex_ = other.workloadIndex_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object workloadIndex_ = "";
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return The workloadIndex.
       */
      public java.lang.String getWorkloadIndex() {
        java.lang.Object ref = workloadIndex_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workloadIndex_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return The bytes for workloadIndex.
       */
      public com.google.protobuf.ByteString
          getWorkloadIndexBytes() {
        java.lang.Object ref = workloadIndex_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workloadIndex_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @param value The workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndex(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        workloadIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkloadIndex() {

        workloadIndex_ = getDefaultInstance().getWorkloadIndex();
        onChanged();
        return this;
      }
      /**
       * <code>string workload_index = 1 [json_name = "workloadIndex"];</code>
       * @param value The bytes for workloadIndex to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadIndexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        workloadIndex_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)
    }

    // @@protoc_insertion_point(class_scope:aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter)
    private static final com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter();
    }

    public static com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConcurrencyLimiter>
        PARSER = new com.google.protobuf.AbstractParser<ConcurrencyLimiter>() {
      @java.lang.Override
      public ConcurrencyLimiter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConcurrencyLimiter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConcurrencyLimiter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConcurrencyLimiter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int detailsCase_ = 0;
  private java.lang.Object details_;
  public enum DetailsCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RATE_LIMITER(6),
    CONCURRENCY_LIMITER(7),
    DETAILS_NOT_SET(0);
    private final int value;
    private DetailsCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DetailsCase valueOf(int value) {
      return forNumber(value);
    }

    public static DetailsCase forNumber(int value) {
      switch (value) {
        case 6: return RATE_LIMITER;
        case 7: return CONCURRENCY_LIMITER;
        case 0: return DETAILS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DetailsCase
  getDetailsCase() {
    return DetailsCase.forNumber(
        detailsCase_);
  }

  public static final int POLICY_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object policyName_;
  /**
   * <code>string policy_name = 1 [json_name = "policyName"];</code>
   * @return The policyName.
   */
  @java.lang.Override
  public java.lang.String getPolicyName() {
    java.lang.Object ref = policyName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      policyName_ = s;
      return s;
    }
  }
  /**
   * <code>string policy_name = 1 [json_name = "policyName"];</code>
   * @return The bytes for policyName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPolicyNameBytes() {
    java.lang.Object ref = policyName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      policyName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POLICY_HASH_FIELD_NUMBER = 2;
  private volatile java.lang.Object policyHash_;
  /**
   * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
   * @return The policyHash.
   */
  @java.lang.Override
  public java.lang.String getPolicyHash() {
    java.lang.Object ref = policyHash_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      policyHash_ = s;
      return s;
    }
  }
  /**
   * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
   * @return The bytes for policyHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPolicyHashBytes() {
    java.lang.Object ref = policyHash_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      policyHash_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPONENT_INDEX_FIELD_NUMBER = 3;
  private long componentIndex_;
  /**
   * <code>int64 component_index = 3 [json_name = "componentIndex"];</code>
   * @return The componentIndex.
   */
  @java.lang.Override
  public long getComponentIndex() {
    return componentIndex_;
  }

  public static final int DROPPED_FIELD_NUMBER = 4;
  private boolean dropped_;
  /**
   * <code>bool dropped = 4 [json_name = "dropped"];</code>
   * @return The dropped.
   */
  @java.lang.Override
  public boolean getDropped() {
    return dropped_;
  }

  public static final int REASON_FIELD_NUMBER = 5;
  private int reason_;
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
   * @return The enum numeric value on the wire for reason.
   */
  @java.lang.Override public int getReasonValue() {
    return reason_;
  }
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
   * @return The reason.
   */
  @java.lang.Override public com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason getReason() {
    @SuppressWarnings("deprecation")
    com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason result = com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.valueOf(reason_);
    return result == null ? com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.UNRECOGNIZED : result;
  }

  public static final int RATE_LIMITER_FIELD_NUMBER = 6;
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
   * @return Whether the rateLimiter field is set.
   */
  @java.lang.Override
  public boolean hasRateLimiter() {
    return detailsCase_ == 6;
  }
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
   * @return The rateLimiter.
   */
  @java.lang.Override
  public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter getRateLimiter() {
    if (detailsCase_ == 6) {
       return (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_;
    }
    return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
   */
  @java.lang.Override
  public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder getRateLimiterOrBuilder() {
    if (detailsCase_ == 6) {
       return (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_;
    }
    return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
  }

  public static final int CONCURRENCY_LIMITER_FIELD_NUMBER = 7;
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
   * @return Whether the concurrencyLimiter field is set.
   */
  @java.lang.Override
  public boolean hasConcurrencyLimiter() {
    return detailsCase_ == 7;
  }
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
   * @return The concurrencyLimiter.
   */
  @java.lang.Override
  public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter getConcurrencyLimiter() {
    if (detailsCase_ == 7) {
       return (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_;
    }
    return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
  }
  /**
   * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
   */
  @java.lang.Override
  public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder getConcurrencyLimiterOrBuilder() {
    if (detailsCase_ == 7) {
       return (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_;
    }
    return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, policyName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyHash_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, policyHash_);
    }
    if (componentIndex_ != 0L) {
      output.writeInt64(3, componentIndex_);
    }
    if (dropped_ != false) {
      output.writeBool(4, dropped_);
    }
    if (reason_ != com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.LIMITER_REASON_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, reason_);
    }
    if (detailsCase_ == 6) {
      output.writeMessage(6, (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_);
    }
    if (detailsCase_ == 7) {
      output.writeMessage(7, (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, policyName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyHash_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, policyHash_);
    }
    if (componentIndex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, componentIndex_);
    }
    if (dropped_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, dropped_);
    }
    if (reason_ != com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.LIMITER_REASON_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, reason_);
    }
    if (detailsCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_);
    }
    if (detailsCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.aperture.flowcontrol.v1.LimiterDecision)) {
      return super.equals(obj);
    }
    com.aperture.flowcontrol.v1.LimiterDecision other = (com.aperture.flowcontrol.v1.LimiterDecision) obj;

    if (!getPolicyName()
        .equals(other.getPolicyName())) return false;
    if (!getPolicyHash()
        .equals(other.getPolicyHash())) return false;
    if (getComponentIndex()
        != other.getComponentIndex()) return false;
    if (getDropped()
        != other.getDropped()) return false;
    if (reason_ != other.reason_) return false;
    if (!getDetailsCase().equals(other.getDetailsCase())) return false;
    switch (detailsCase_) {
      case 6:
        if (!getRateLimiter()
            .equals(other.getRateLimiter())) return false;
        break;
      case 7:
        if (!getConcurrencyLimiter()
            .equals(other.getConcurrencyLimiter())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POLICY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPolicyName().hashCode();
    hash = (37 * hash) + POLICY_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getPolicyHash().hashCode();
    hash = (37 * hash) + COMPONENT_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getComponentIndex());
    hash = (37 * hash) + DROPPED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDropped());
    hash = (37 * hash) + REASON_FIELD_NUMBER;
    hash = (53 * hash) + reason_;
    switch (detailsCase_) {
      case 6:
        hash = (37 * hash) + RATE_LIMITER_FIELD_NUMBER;
        hash = (53 * hash) + getRateLimiter().hashCode();
        break;
      case 7:
        hash = (37 * hash) + CONCURRENCY_LIMITER_FIELD_NUMBER;
        hash = (53 * hash) + getConcurrencyLimiter().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aperture.flowcontrol.v1.LimiterDecision parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.aperture.flowcontrol.v1.LimiterDecision prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LimiterDecision describes details for each limiter.
   * </pre>
   *
   * Protobuf type {@code aperture.flowcontrol.v1.LimiterDecision}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.v1.LimiterDecision)
      com.aperture.flowcontrol.v1.LimiterDecisionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aperture.flowcontrol.v1.LimiterDecision.class, com.aperture.flowcontrol.v1.LimiterDecision.Builder.class);
    }

    // Construct using com.aperture.flowcontrol.v1.LimiterDecision.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      policyName_ = "";

      policyHash_ = "";

      componentIndex_ = 0L;

      dropped_ = false;

      reason_ = 0;

      detailsCase_ = 0;
      details_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.aperture.flowcontrol.v1.FlowcontrolProto.internal_static_aperture_flowcontrol_v1_LimiterDecision_descriptor;
    }

    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision getDefaultInstanceForType() {
      return com.aperture.flowcontrol.v1.LimiterDecision.getDefaultInstance();
    }

    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision build() {
      com.aperture.flowcontrol.v1.LimiterDecision result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision buildPartial() {
      com.aperture.flowcontrol.v1.LimiterDecision result = new com.aperture.flowcontrol.v1.LimiterDecision(this);
      result.policyName_ = policyName_;
      result.policyHash_ = policyHash_;
      result.componentIndex_ = componentIndex_;
      result.dropped_ = dropped_;
      result.reason_ = reason_;
      if (detailsCase_ == 6) {
        if (rateLimiterBuilder_ == null) {
          result.details_ = details_;
        } else {
          result.details_ = rateLimiterBuilder_.build();
        }
      }
      if (detailsCase_ == 7) {
        if (concurrencyLimiterBuilder_ == null) {
          result.details_ = details_;
        } else {
          result.details_ = concurrencyLimiterBuilder_.build();
        }
      }
      result.detailsCase_ = detailsCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.aperture.flowcontrol.v1.LimiterDecision) {
        return mergeFrom((com.aperture.flowcontrol.v1.LimiterDecision)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.aperture.flowcontrol.v1.LimiterDecision other) {
      if (other == com.aperture.flowcontrol.v1.LimiterDecision.getDefaultInstance()) return this;
      if (!other.getPolicyName().isEmpty()) {
        policyName_ = other.policyName_;
        onChanged();
      }
      if (!other.getPolicyHash().isEmpty()) {
        policyHash_ = other.policyHash_;
        onChanged();
      }
      if (other.getComponentIndex() != 0L) {
        setComponentIndex(other.getComponentIndex());
      }
      if (other.getDropped() != false) {
        setDropped(other.getDropped());
      }
      if (other.reason_ != 0) {
        setReasonValue(other.getReasonValue());
      }
      switch (other.getDetailsCase()) {
        case RATE_LIMITER: {
          mergeRateLimiter(other.getRateLimiter());
          break;
        }
        case CONCURRENCY_LIMITER: {
          mergeConcurrencyLimiter(other.getConcurrencyLimiter());
          break;
        }
        case DETAILS_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.aperture.flowcontrol.v1.LimiterDecision parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.aperture.flowcontrol.v1.LimiterDecision) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int detailsCase_ = 0;
    private java.lang.Object details_;
    public DetailsCase
        getDetailsCase() {
      return DetailsCase.forNumber(
          detailsCase_);
    }

    public Builder clearDetails() {
      detailsCase_ = 0;
      details_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object policyName_ = "";
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return The policyName.
     */
    public java.lang.String getPolicyName() {
      java.lang.Object ref = policyName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return The bytes for policyName.
     */
    public com.google.protobuf.ByteString
        getPolicyNameBytes() {
      java.lang.Object ref = policyName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @param value The policyName to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      policyName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPolicyName() {

      policyName_ = getDefaultInstance().getPolicyName();
      onChanged();
      return this;
    }
    /**
     * <code>string policy_name = 1 [json_name = "policyName"];</code>
     * @param value The bytes for policyName to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      policyName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object policyHash_ = "";
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return The policyHash.
     */
    public java.lang.String getPolicyHash() {
      java.lang.Object ref = policyHash_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyHash_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return The bytes for policyHash.
     */
    public com.google.protobuf.ByteString
        getPolicyHashBytes() {
      java.lang.Object ref = policyHash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @param value The policyHash to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyHash(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      policyHash_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPolicyHash() {

      policyHash_ = getDefaultInstance().getPolicyHash();
      onChanged();
      return this;
    }
    /**
     * <code>string policy_hash = 2 [json_name = "policyHash"];</code>
     * @param value The bytes for policyHash to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyHashBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      policyHash_ = value;
      onChanged();
      return this;
    }

    private long componentIndex_ ;
    /**
     * <code>int64 component_index = 3 [json_name = "componentIndex"];</code>
     * @return The componentIndex.
     */
    @java.lang.Override
    public long getComponentIndex() {
      return componentIndex_;
    }
    /**
     * <code>int64 component_index = 3 [json_name = "componentIndex"];</code>
     * @param value The componentIndex to set.
     * @return This builder for chaining.
     */
    public Builder setComponentIndex(long value) {

      componentIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 component_index = 3 [json_name = "componentIndex"];</code>
     * @return This builder for chaining.
     */
    public Builder clearComponentIndex() {

      componentIndex_ = 0L;
      onChanged();
      return this;
    }

    private boolean dropped_ ;
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @return The dropped.
     */
    @java.lang.Override
    public boolean getDropped() {
      return dropped_;
    }
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @param value The dropped to set.
     * @return This builder for chaining.
     */
    public Builder setDropped(boolean value) {

      dropped_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool dropped = 4 [json_name = "dropped"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDropped() {

      dropped_ = false;
      onChanged();
      return this;
    }

    private int reason_ = 0;
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return The enum numeric value on the wire for reason.
     */
    @java.lang.Override public int getReasonValue() {
      return reason_;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @param value The enum numeric value on the wire for reason to set.
     * @return This builder for chaining.
     */
    public Builder setReasonValue(int value) {

      reason_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return The reason.
     */
    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason getReason() {
      @SuppressWarnings("deprecation")
      com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason result = com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.valueOf(reason_);
      return result == null ? com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason.UNRECOGNIZED : result;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @param value The reason to set.
     * @return This builder for chaining.
     */
    public Builder setReason(com.aperture.flowcontrol.v1.LimiterDecision.LimiterReason value) {
      if (value == null) {
        throw new NullPointerException();
      }

      reason_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.LimiterReason reason = 5 [json_name = "reason"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReason() {

      reason_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder> rateLimiterBuilder_;
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     * @return Whether the rateLimiter field is set.
     */
    @java.lang.Override
    public boolean hasRateLimiter() {
      return detailsCase_ == 6;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     * @return The rateLimiter.
     */
    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter getRateLimiter() {
      if (rateLimiterBuilder_ == null) {
        if (detailsCase_ == 6) {
          return (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_;
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
      } else {
        if (detailsCase_ == 6) {
          return rateLimiterBuilder_.getMessage();
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    public Builder setRateLimiter(com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter value) {
      if (rateLimiterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        rateLimiterBuilder_.setMessage(value);
      }
      detailsCase_ = 6;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    public Builder setRateLimiter(
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder builderForValue) {
      if (rateLimiterBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        rateLimiterBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 6;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    public Builder mergeRateLimiter(com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter value) {
      if (rateLimiterBuilder_ == null) {
        if (detailsCase_ == 6 &&
            details_ != com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance()) {
          details_ = com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.newBuilder((com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 6) {
          rateLimiterBuilder_.mergeFrom(value);
        } else {
          rateLimiterBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 6;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    public Builder clearRateLimiter() {
      if (rateLimiterBuilder_ == null) {
        if (detailsCase_ == 6) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 6) {
          detailsCase_ = 0;
          details_ = null;
        }
        rateLimiterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder getRateLimiterBuilder() {
      return getRateLimiterFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder getRateLimiterOrBuilder() {
      if ((detailsCase_ == 6) && (rateLimiterBuilder_ != null)) {
        return rateLimiterBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 6) {
          return (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_;
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.RateLimiter rate_limiter = 6 [json_name = "rateLimiter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder>
        getRateLimiterFieldBuilder() {
      if (rateLimiterBuilder_ == null) {
        if (!(detailsCase_ == 6)) {
          details_ = com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.getDefaultInstance();
        }
        rateLimiterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.RateLimiterOrBuilder>(
                (com.aperture.flowcontrol.v1.LimiterDecision.RateLimiter) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 6;
      onChanged();;
      return rateLimiterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder> concurrencyLimiterBuilder_;
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     * @return Whether the concurrencyLimiter field is set.
     */
    @java.lang.Override
    public boolean hasConcurrencyLimiter() {
      return detailsCase_ == 7;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     * @return The concurrencyLimiter.
     */
    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter getConcurrencyLimiter() {
      if (concurrencyLimiterBuilder_ == null) {
        if (detailsCase_ == 7) {
          return (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_;
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
      } else {
        if (detailsCase_ == 7) {
          return concurrencyLimiterBuilder_.getMessage();
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    public Builder setConcurrencyLimiter(com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter value) {
      if (concurrencyLimiterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        concurrencyLimiterBuilder_.setMessage(value);
      }
      detailsCase_ = 7;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    public Builder setConcurrencyLimiter(
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder builderForValue) {
      if (concurrencyLimiterBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        concurrencyLimiterBuilder_.setMessage(builderForValue.build());
      }
      detailsCase_ = 7;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    public Builder mergeConcurrencyLimiter(com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter value) {
      if (concurrencyLimiterBuilder_ == null) {
        if (detailsCase_ == 7 &&
            details_ != com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance()) {
          details_ = com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.newBuilder((com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_)
              .mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        if (detailsCase_ == 7) {
          concurrencyLimiterBuilder_.mergeFrom(value);
        } else {
          concurrencyLimiterBuilder_.setMessage(value);
        }
      }
      detailsCase_ = 7;
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    public Builder clearConcurrencyLimiter() {
      if (concurrencyLimiterBuilder_ == null) {
        if (detailsCase_ == 7) {
          detailsCase_ = 0;
          details_ = null;
          onChanged();
        }
      } else {
        if (detailsCase_ == 7) {
          detailsCase_ = 0;
          details_ = null;
        }
        concurrencyLimiterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder getConcurrencyLimiterBuilder() {
      return getConcurrencyLimiterFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    @java.lang.Override
    public com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder getConcurrencyLimiterOrBuilder() {
      if ((detailsCase_ == 7) && (concurrencyLimiterBuilder_ != null)) {
        return concurrencyLimiterBuilder_.getMessageOrBuilder();
      } else {
        if (detailsCase_ == 7) {
          return (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_;
        }
        return com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter concurrency_limiter = 7 [json_name = "concurrencyLimiter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder>
        getConcurrencyLimiterFieldBuilder() {
      if (concurrencyLimiterBuilder_ == null) {
        if (!(detailsCase_ == 7)) {
          details_ = com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.getDefaultInstance();
        }
        concurrencyLimiterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter.Builder, com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiterOrBuilder>(
                (com.aperture.flowcontrol.v1.LimiterDecision.ConcurrencyLimiter) details_,
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      detailsCase_ = 7;
      onChanged();;
      return concurrencyLimiterBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.v1.LimiterDecision)
  }

  // @@protoc_insertion_point(class_scope:aperture.flowcontrol.v1.LimiterDecision)
  private static final com.aperture.flowcontrol.v1.LimiterDecision DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.aperture.flowcontrol.v1.LimiterDecision();
  }

  public static com.aperture.flowcontrol.v1.LimiterDecision getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LimiterDecision>
      PARSER = new com.google.protobuf.AbstractParser<LimiterDecision>() {
    @java.lang.Override
    public LimiterDecision parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LimiterDecision(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LimiterDecision> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LimiterDecision> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.aperture.flowcontrol.v1.LimiterDecision getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}
