// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate/validate.proto

package com.fluxninja.generated.validate;

/**
 * <pre>
 * StringRules describe the constraints applied to `string` values
 * </pre>
 *
 * Protobuf type {@code validate.StringRules}
 */
public final class StringRules extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:validate.StringRules)
    StringRulesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StringRules.newBuilder() to construct.
  private StringRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StringRules() {
    const_ = "";
    pattern_ = "";
    prefix_ = "";
    suffix_ = "";
    contains_ = "";
    notContains_ = "";
    in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    strict_ = true;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StringRules();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StringRules(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            const_ = bs;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000004;
            minLen_ = input.readUInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000008;
            maxLen_ = input.readUInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000020;
            minBytes_ = input.readUInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000040;
            maxBytes_ = input.readUInt64();
            break;
          }
          case 50: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000080;
            pattern_ = bs;
            break;
          }
          case 58: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000100;
            prefix_ = bs;
            break;
          }
          case 66: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000200;
            suffix_ = bs;
            break;
          }
          case 74: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000400;
            contains_ = bs;
            break;
          }
          case 82: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00001000) != 0)) {
              in_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00001000;
            }
            in_.add(bs);
            break;
          }
          case 90: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00002000) != 0)) {
              notIn_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00002000;
            }
            notIn_.add(bs);
            break;
          }
          case 96: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 12;
            break;
          }
          case 104: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 13;
            break;
          }
          case 112: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 14;
            break;
          }
          case 120: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 15;
            break;
          }
          case 128: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 16;
            break;
          }
          case 136: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 17;
            break;
          }
          case 144: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 18;
            break;
          }
          case 152: {
            bitField0_ |= 0x00000002;
            len_ = input.readUInt64();
            break;
          }
          case 160: {
            bitField0_ |= 0x00000010;
            lenBytes_ = input.readUInt64();
            break;
          }
          case 168: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 21;
            break;
          }
          case 176: {
            wellKnown_ = input.readBool();
            wellKnownCase_ = 22;
            break;
          }
          case 186: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000800;
            notContains_ = bs;
            break;
          }
          case 192: {
            int rawValue = input.readEnum();
            @SuppressWarnings("deprecation")
            com.fluxninja.generated.validate.KnownRegex value = com.fluxninja.generated.validate.KnownRegex.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(24, rawValue);
            } else {
              wellKnownCase_ = 24;
              wellKnown_ = rawValue;
            }
            break;
          }
          case 200: {
            bitField0_ |= 0x00400000;
            strict_ = input.readBool();
            break;
          }
          case 208: {
            bitField0_ |= 0x00800000;
            ignoreEmpty_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00001000) != 0)) {
        in_ = in_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00002000) != 0)) {
        notIn_ = notIn_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.validate.ValidateProto.internal_static_validate_StringRules_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.validate.ValidateProto.internal_static_validate_StringRules_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.validate.StringRules.class, com.fluxninja.generated.validate.StringRules.Builder.class);
  }

  private int bitField0_;
  private int wellKnownCase_ = 0;
  private java.lang.Object wellKnown_;
  public enum WellKnownCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EMAIL(12),
    HOSTNAME(13),
    IP(14),
    IPV4(15),
    IPV6(16),
    URI(17),
    URI_REF(18),
    ADDRESS(21),
    UUID(22),
    WELL_KNOWN_REGEX(24),
    WELLKNOWN_NOT_SET(0);
    private final int value;
    private WellKnownCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WellKnownCase valueOf(int value) {
      return forNumber(value);
    }

    public static WellKnownCase forNumber(int value) {
      switch (value) {
        case 12: return EMAIL;
        case 13: return HOSTNAME;
        case 14: return IP;
        case 15: return IPV4;
        case 16: return IPV6;
        case 17: return URI;
        case 18: return URI_REF;
        case 21: return ADDRESS;
        case 22: return UUID;
        case 24: return WELL_KNOWN_REGEX;
        case 0: return WELLKNOWN_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public WellKnownCase
  getWellKnownCase() {
    return WellKnownCase.forNumber(
        wellKnownCase_);
  }

  public static final int CONST_FIELD_NUMBER = 1;
  private volatile java.lang.Object const_;
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1 [json_name = "const"];</code>
   * @return Whether the const field is set.
   */
  @java.lang.Override
  public boolean hasConst() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1 [json_name = "const"];</code>
   * @return The const.
   */
  @java.lang.Override
  public java.lang.String getConst() {
    java.lang.Object ref = const_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        const_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1 [json_name = "const"];</code>
   * @return The bytes for const.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConstBytes() {
    java.lang.Object ref = const_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      const_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LEN_FIELD_NUMBER = 19;
  private long len_;
  /**
   * <pre>
   * Len specifies that this field must be the specified number of
   * characters (Unicode code points). Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 len = 19 [json_name = "len"];</code>
   * @return Whether the len field is set.
   */
  @java.lang.Override
  public boolean hasLen() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Len specifies that this field must be the specified number of
   * characters (Unicode code points). Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 len = 19 [json_name = "len"];</code>
   * @return The len.
   */
  @java.lang.Override
  public long getLen() {
    return len_;
  }

  public static final int MIN_LEN_FIELD_NUMBER = 2;
  private long minLen_;
  /**
   * <pre>
   * MinLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a minimum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
   * @return Whether the minLen field is set.
   */
  @java.lang.Override
  public boolean hasMinLen() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * MinLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a minimum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
   * @return The minLen.
   */
  @java.lang.Override
  public long getMinLen() {
    return minLen_;
  }

  public static final int MAX_LEN_FIELD_NUMBER = 3;
  private long maxLen_;
  /**
   * <pre>
   * MaxLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a maximum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
   * @return Whether the maxLen field is set.
   */
  @java.lang.Override
  public boolean hasMaxLen() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * MaxLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a maximum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
   * @return The maxLen.
   */
  @java.lang.Override
  public long getMaxLen() {
    return maxLen_;
  }

  public static final int LEN_BYTES_FIELD_NUMBER = 20;
  private long lenBytes_;
  /**
   * <pre>
   * LenBytes specifies that this field must be the specified number of bytes
   * </pre>
   *
   * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
   * @return Whether the lenBytes field is set.
   */
  @java.lang.Override
  public boolean hasLenBytes() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * LenBytes specifies that this field must be the specified number of bytes
   * </pre>
   *
   * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
   * @return The lenBytes.
   */
  @java.lang.Override
  public long getLenBytes() {
    return lenBytes_;
  }

  public static final int MIN_BYTES_FIELD_NUMBER = 4;
  private long minBytes_;
  /**
   * <pre>
   * MinBytes specifies that this field must be the specified number of bytes
   * at a minimum
   * </pre>
   *
   * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
   * @return Whether the minBytes field is set.
   */
  @java.lang.Override
  public boolean hasMinBytes() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * MinBytes specifies that this field must be the specified number of bytes
   * at a minimum
   * </pre>
   *
   * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
   * @return The minBytes.
   */
  @java.lang.Override
  public long getMinBytes() {
    return minBytes_;
  }

  public static final int MAX_BYTES_FIELD_NUMBER = 5;
  private long maxBytes_;
  /**
   * <pre>
   * MaxBytes specifies that this field must be the specified number of bytes
   * at a maximum
   * </pre>
   *
   * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
   * @return Whether the maxBytes field is set.
   */
  @java.lang.Override
  public boolean hasMaxBytes() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * MaxBytes specifies that this field must be the specified number of bytes
   * at a maximum
   * </pre>
   *
   * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
   * @return The maxBytes.
   */
  @java.lang.Override
  public long getMaxBytes() {
    return maxBytes_;
  }

  public static final int PATTERN_FIELD_NUMBER = 6;
  private volatile java.lang.Object pattern_;
  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6 [json_name = "pattern"];</code>
   * @return Whether the pattern field is set.
   */
  @java.lang.Override
  public boolean hasPattern() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6 [json_name = "pattern"];</code>
   * @return The pattern.
   */
  @java.lang.Override
  public java.lang.String getPattern() {
    java.lang.Object ref = pattern_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        pattern_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6 [json_name = "pattern"];</code>
   * @return The bytes for pattern.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPatternBytes() {
    java.lang.Object ref = pattern_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pattern_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREFIX_FIELD_NUMBER = 7;
  private volatile java.lang.Object prefix_;
  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7 [json_name = "prefix"];</code>
   * @return Whether the prefix field is set.
   */
  @java.lang.Override
  public boolean hasPrefix() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7 [json_name = "prefix"];</code>
   * @return The prefix.
   */
  @java.lang.Override
  public java.lang.String getPrefix() {
    java.lang.Object ref = prefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        prefix_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7 [json_name = "prefix"];</code>
   * @return The bytes for prefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPrefixBytes() {
    java.lang.Object ref = prefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      prefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUFFIX_FIELD_NUMBER = 8;
  private volatile java.lang.Object suffix_;
  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8 [json_name = "suffix"];</code>
   * @return Whether the suffix field is set.
   */
  @java.lang.Override
  public boolean hasSuffix() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8 [json_name = "suffix"];</code>
   * @return The suffix.
   */
  @java.lang.Override
  public java.lang.String getSuffix() {
    java.lang.Object ref = suffix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        suffix_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8 [json_name = "suffix"];</code>
   * @return The bytes for suffix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSuffixBytes() {
    java.lang.Object ref = suffix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      suffix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTAINS_FIELD_NUMBER = 9;
  private volatile java.lang.Object contains_;
  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9 [json_name = "contains"];</code>
   * @return Whether the contains field is set.
   */
  @java.lang.Override
  public boolean hasContains() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9 [json_name = "contains"];</code>
   * @return The contains.
   */
  @java.lang.Override
  public java.lang.String getContains() {
    java.lang.Object ref = contains_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        contains_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9 [json_name = "contains"];</code>
   * @return The bytes for contains.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContainsBytes() {
    java.lang.Object ref = contains_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      contains_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NOT_CONTAINS_FIELD_NUMBER = 23;
  private volatile java.lang.Object notContains_;
  /**
   * <pre>
   * NotContains specifies that this field cannot have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
   * @return Whether the notContains field is set.
   */
  @java.lang.Override
  public boolean hasNotContains() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * NotContains specifies that this field cannot have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
   * @return The notContains.
   */
  @java.lang.Override
  public java.lang.String getNotContains() {
    java.lang.Object ref = notContains_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        notContains_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * NotContains specifies that this field cannot have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
   * @return The bytes for notContains.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNotContainsBytes() {
    java.lang.Object ref = notContains_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      notContains_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IN_FIELD_NUMBER = 10;
  private com.google.protobuf.LazyStringList in_;
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10 [json_name = "in"];</code>
   * @return A list containing the in.
   */
  public com.google.protobuf.ProtocolStringList
      getInList() {
    return in_;
  }
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10 [json_name = "in"];</code>
   * @return The count of in.
   */
  public int getInCount() {
    return in_.size();
  }
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10 [json_name = "in"];</code>
   * @param index The index of the element to return.
   * @return The in at the given index.
   */
  public java.lang.String getIn(int index) {
    return in_.get(index);
  }
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10 [json_name = "in"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the in at the given index.
   */
  public com.google.protobuf.ByteString
      getInBytes(int index) {
    return in_.getByteString(index);
  }

  public static final int NOT_IN_FIELD_NUMBER = 11;
  private com.google.protobuf.LazyStringList notIn_;
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
   * @return A list containing the notIn.
   */
  public com.google.protobuf.ProtocolStringList
      getNotInList() {
    return notIn_;
  }
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
   * @return The count of notIn.
   */
  public int getNotInCount() {
    return notIn_.size();
  }
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
   * @param index The index of the element to return.
   * @return The notIn at the given index.
   */
  public java.lang.String getNotIn(int index) {
    return notIn_.get(index);
  }
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the notIn at the given index.
   */
  public com.google.protobuf.ByteString
      getNotInBytes(int index) {
    return notIn_.getByteString(index);
  }

  public static final int EMAIL_FIELD_NUMBER = 12;
  /**
   * <pre>
   * Email specifies that the field must be a valid email address as
   * defined by RFC 5322
   * </pre>
   *
   * <code>bool email = 12 [json_name = "email"];</code>
   * @return Whether the email field is set.
   */
  @java.lang.Override
  public boolean hasEmail() {
    return wellKnownCase_ == 12;
  }
  /**
   * <pre>
   * Email specifies that the field must be a valid email address as
   * defined by RFC 5322
   * </pre>
   *
   * <code>bool email = 12 [json_name = "email"];</code>
   * @return The email.
   */
  @java.lang.Override
  public boolean getEmail() {
    if (wellKnownCase_ == 12) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int HOSTNAME_FIELD_NUMBER = 13;
  /**
   * <pre>
   * Hostname specifies that the field must be a valid hostname as
   * defined by RFC 1034. This constraint does not support
   * internationalized domain names (IDNs).
   * </pre>
   *
   * <code>bool hostname = 13 [json_name = "hostname"];</code>
   * @return Whether the hostname field is set.
   */
  @java.lang.Override
  public boolean hasHostname() {
    return wellKnownCase_ == 13;
  }
  /**
   * <pre>
   * Hostname specifies that the field must be a valid hostname as
   * defined by RFC 1034. This constraint does not support
   * internationalized domain names (IDNs).
   * </pre>
   *
   * <code>bool hostname = 13 [json_name = "hostname"];</code>
   * @return The hostname.
   */
  @java.lang.Override
  public boolean getHostname() {
    if (wellKnownCase_ == 13) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int IP_FIELD_NUMBER = 14;
  /**
   * <pre>
   * Ip specifies that the field must be a valid IP (v4 or v6) address.
   * Valid IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>bool ip = 14 [json_name = "ip"];</code>
   * @return Whether the ip field is set.
   */
  @java.lang.Override
  public boolean hasIp() {
    return wellKnownCase_ == 14;
  }
  /**
   * <pre>
   * Ip specifies that the field must be a valid IP (v4 or v6) address.
   * Valid IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>bool ip = 14 [json_name = "ip"];</code>
   * @return The ip.
   */
  @java.lang.Override
  public boolean getIp() {
    if (wellKnownCase_ == 14) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int IPV4_FIELD_NUMBER = 15;
  /**
   * <pre>
   * Ipv4 specifies that the field must be a valid IPv4 address.
   * </pre>
   *
   * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
   * @return Whether the ipv4 field is set.
   */
  @java.lang.Override
  public boolean hasIpv4() {
    return wellKnownCase_ == 15;
  }
  /**
   * <pre>
   * Ipv4 specifies that the field must be a valid IPv4 address.
   * </pre>
   *
   * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
   * @return The ipv4.
   */
  @java.lang.Override
  public boolean getIpv4() {
    if (wellKnownCase_ == 15) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int IPV6_FIELD_NUMBER = 16;
  /**
   * <pre>
   * Ipv6 specifies that the field must be a valid IPv6 address. Valid
   * IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
   * @return Whether the ipv6 field is set.
   */
  @java.lang.Override
  public boolean hasIpv6() {
    return wellKnownCase_ == 16;
  }
  /**
   * <pre>
   * Ipv6 specifies that the field must be a valid IPv6 address. Valid
   * IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
   * @return The ipv6.
   */
  @java.lang.Override
  public boolean getIpv6() {
    if (wellKnownCase_ == 16) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int URI_FIELD_NUMBER = 17;
  /**
   * <pre>
   * Uri specifies that the field must be a valid, absolute URI as defined
   * by RFC 3986
   * </pre>
   *
   * <code>bool uri = 17 [json_name = "uri"];</code>
   * @return Whether the uri field is set.
   */
  @java.lang.Override
  public boolean hasUri() {
    return wellKnownCase_ == 17;
  }
  /**
   * <pre>
   * Uri specifies that the field must be a valid, absolute URI as defined
   * by RFC 3986
   * </pre>
   *
   * <code>bool uri = 17 [json_name = "uri"];</code>
   * @return The uri.
   */
  @java.lang.Override
  public boolean getUri() {
    if (wellKnownCase_ == 17) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int URI_REF_FIELD_NUMBER = 18;
  /**
   * <pre>
   * UriRef specifies that the field must be a valid URI as defined by RFC
   * 3986 and may be relative or absolute.
   * </pre>
   *
   * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
   * @return Whether the uriRef field is set.
   */
  @java.lang.Override
  public boolean hasUriRef() {
    return wellKnownCase_ == 18;
  }
  /**
   * <pre>
   * UriRef specifies that the field must be a valid URI as defined by RFC
   * 3986 and may be relative or absolute.
   * </pre>
   *
   * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
   * @return The uriRef.
   */
  @java.lang.Override
  public boolean getUriRef() {
    if (wellKnownCase_ == 18) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int ADDRESS_FIELD_NUMBER = 21;
  /**
   * <pre>
   * Address specifies that the field must be either a valid hostname as
   * defined by RFC 1034 (which does not support internationalized domain
   * names or IDNs), or it can be a valid IP (v4 or v6).
   * </pre>
   *
   * <code>bool address = 21 [json_name = "address"];</code>
   * @return Whether the address field is set.
   */
  @java.lang.Override
  public boolean hasAddress() {
    return wellKnownCase_ == 21;
  }
  /**
   * <pre>
   * Address specifies that the field must be either a valid hostname as
   * defined by RFC 1034 (which does not support internationalized domain
   * names or IDNs), or it can be a valid IP (v4 or v6).
   * </pre>
   *
   * <code>bool address = 21 [json_name = "address"];</code>
   * @return The address.
   */
  @java.lang.Override
  public boolean getAddress() {
    if (wellKnownCase_ == 21) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int UUID_FIELD_NUMBER = 22;
  /**
   * <pre>
   * Uuid specifies that the field must be a valid UUID as defined by
   * RFC 4122
   * </pre>
   *
   * <code>bool uuid = 22 [json_name = "uuid"];</code>
   * @return Whether the uuid field is set.
   */
  @java.lang.Override
  public boolean hasUuid() {
    return wellKnownCase_ == 22;
  }
  /**
   * <pre>
   * Uuid specifies that the field must be a valid UUID as defined by
   * RFC 4122
   * </pre>
   *
   * <code>bool uuid = 22 [json_name = "uuid"];</code>
   * @return The uuid.
   */
  @java.lang.Override
  public boolean getUuid() {
    if (wellKnownCase_ == 22) {
      return (java.lang.Boolean) wellKnown_;
    }
    return false;
  }

  public static final int WELL_KNOWN_REGEX_FIELD_NUMBER = 24;
  /**
   * <pre>
   * WellKnownRegex specifies a common well known pattern defined as a regex.
   * </pre>
   *
   * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
   * @return Whether the wellKnownRegex field is set.
   */
  public boolean hasWellKnownRegex() {
    return wellKnownCase_ == 24;
  }
  /**
   * <pre>
   * WellKnownRegex specifies a common well known pattern defined as a regex.
   * </pre>
   *
   * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
   * @return The wellKnownRegex.
   */
  public com.fluxninja.generated.validate.KnownRegex getWellKnownRegex() {
    if (wellKnownCase_ == 24) {
      @SuppressWarnings("deprecation")
      com.fluxninja.generated.validate.KnownRegex result = com.fluxninja.generated.validate.KnownRegex.valueOf(
          (java.lang.Integer) wellKnown_);
      return result == null ? com.fluxninja.generated.validate.KnownRegex.UNKNOWN : result;
    }
    return com.fluxninja.generated.validate.KnownRegex.UNKNOWN;
  }

  public static final int STRICT_FIELD_NUMBER = 25;
  private boolean strict_;
  /**
   * <pre>
   * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
   * strict header validation.
   * By default, this is true, and HTTP header validations are RFC-compliant.
   * Setting to false will enable a looser validations that only disallows
   * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
   * </pre>
   *
   * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
   * @return Whether the strict field is set.
   */
  @java.lang.Override
  public boolean hasStrict() {
    return ((bitField0_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
   * strict header validation.
   * By default, this is true, and HTTP header validations are RFC-compliant.
   * Setting to false will enable a looser validations that only disallows
   * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
   * </pre>
   *
   * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
   * @return The strict.
   */
  @java.lang.Override
  public boolean getStrict() {
    return strict_;
  }

  public static final int IGNORE_EMPTY_FIELD_NUMBER = 26;
  private boolean ignoreEmpty_;
  /**
   * <pre>
   * IgnoreEmpty specifies that the validation rules of this field should be
   * evaluated only if the field is not empty
   * </pre>
   *
   * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
   * @return Whether the ignoreEmpty field is set.
   */
  @java.lang.Override
  public boolean hasIgnoreEmpty() {
    return ((bitField0_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * IgnoreEmpty specifies that the validation rules of this field should be
   * evaluated only if the field is not empty
   * </pre>
   *
   * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
   * @return The ignoreEmpty.
   */
  @java.lang.Override
  public boolean getIgnoreEmpty() {
    return ignoreEmpty_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, const_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt64(2, minLen_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt64(3, maxLen_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeUInt64(4, minBytes_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeUInt64(5, maxBytes_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, pattern_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, prefix_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, suffix_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, contains_);
    }
    for (int i = 0; i < in_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, in_.getRaw(i));
    }
    for (int i = 0; i < notIn_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, notIn_.getRaw(i));
    }
    if (wellKnownCase_ == 12) {
      output.writeBool(
          12, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 13) {
      output.writeBool(
          13, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 14) {
      output.writeBool(
          14, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 15) {
      output.writeBool(
          15, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 16) {
      output.writeBool(
          16, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 17) {
      output.writeBool(
          17, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 18) {
      output.writeBool(
          18, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(19, len_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt64(20, lenBytes_);
    }
    if (wellKnownCase_ == 21) {
      output.writeBool(
          21, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 22) {
      output.writeBool(
          22, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 23, notContains_);
    }
    if (wellKnownCase_ == 24) {
      output.writeEnum(24, ((java.lang.Integer) wellKnown_));
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      output.writeBool(25, strict_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      output.writeBool(26, ignoreEmpty_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, const_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, minLen_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, maxLen_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, minBytes_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, maxBytes_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, pattern_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, prefix_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, suffix_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, contains_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < in_.size(); i++) {
        dataSize += computeStringSizeNoTag(in_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getInList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < notIn_.size(); i++) {
        dataSize += computeStringSizeNoTag(notIn_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getNotInList().size();
    }
    if (wellKnownCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            12, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            13, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            14, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            15, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            16, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            17, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            18, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(19, len_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(20, lenBytes_);
    }
    if (wellKnownCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            21, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (wellKnownCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            22, (boolean)((java.lang.Boolean) wellKnown_));
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, notContains_);
    }
    if (wellKnownCase_ == 24) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(24, ((java.lang.Integer) wellKnown_));
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(25, strict_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(26, ignoreEmpty_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.validate.StringRules)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.validate.StringRules other = (com.fluxninja.generated.validate.StringRules) obj;

    if (hasConst() != other.hasConst()) return false;
    if (hasConst()) {
      if (!getConst()
          .equals(other.getConst())) return false;
    }
    if (hasLen() != other.hasLen()) return false;
    if (hasLen()) {
      if (getLen()
          != other.getLen()) return false;
    }
    if (hasMinLen() != other.hasMinLen()) return false;
    if (hasMinLen()) {
      if (getMinLen()
          != other.getMinLen()) return false;
    }
    if (hasMaxLen() != other.hasMaxLen()) return false;
    if (hasMaxLen()) {
      if (getMaxLen()
          != other.getMaxLen()) return false;
    }
    if (hasLenBytes() != other.hasLenBytes()) return false;
    if (hasLenBytes()) {
      if (getLenBytes()
          != other.getLenBytes()) return false;
    }
    if (hasMinBytes() != other.hasMinBytes()) return false;
    if (hasMinBytes()) {
      if (getMinBytes()
          != other.getMinBytes()) return false;
    }
    if (hasMaxBytes() != other.hasMaxBytes()) return false;
    if (hasMaxBytes()) {
      if (getMaxBytes()
          != other.getMaxBytes()) return false;
    }
    if (hasPattern() != other.hasPattern()) return false;
    if (hasPattern()) {
      if (!getPattern()
          .equals(other.getPattern())) return false;
    }
    if (hasPrefix() != other.hasPrefix()) return false;
    if (hasPrefix()) {
      if (!getPrefix()
          .equals(other.getPrefix())) return false;
    }
    if (hasSuffix() != other.hasSuffix()) return false;
    if (hasSuffix()) {
      if (!getSuffix()
          .equals(other.getSuffix())) return false;
    }
    if (hasContains() != other.hasContains()) return false;
    if (hasContains()) {
      if (!getContains()
          .equals(other.getContains())) return false;
    }
    if (hasNotContains() != other.hasNotContains()) return false;
    if (hasNotContains()) {
      if (!getNotContains()
          .equals(other.getNotContains())) return false;
    }
    if (!getInList()
        .equals(other.getInList())) return false;
    if (!getNotInList()
        .equals(other.getNotInList())) return false;
    if (hasStrict() != other.hasStrict()) return false;
    if (hasStrict()) {
      if (getStrict()
          != other.getStrict()) return false;
    }
    if (hasIgnoreEmpty() != other.hasIgnoreEmpty()) return false;
    if (hasIgnoreEmpty()) {
      if (getIgnoreEmpty()
          != other.getIgnoreEmpty()) return false;
    }
    if (!getWellKnownCase().equals(other.getWellKnownCase())) return false;
    switch (wellKnownCase_) {
      case 12:
        if (getEmail()
            != other.getEmail()) return false;
        break;
      case 13:
        if (getHostname()
            != other.getHostname()) return false;
        break;
      case 14:
        if (getIp()
            != other.getIp()) return false;
        break;
      case 15:
        if (getIpv4()
            != other.getIpv4()) return false;
        break;
      case 16:
        if (getIpv6()
            != other.getIpv6()) return false;
        break;
      case 17:
        if (getUri()
            != other.getUri()) return false;
        break;
      case 18:
        if (getUriRef()
            != other.getUriRef()) return false;
        break;
      case 21:
        if (getAddress()
            != other.getAddress()) return false;
        break;
      case 22:
        if (getUuid()
            != other.getUuid()) return false;
        break;
      case 24:
        if (!getWellKnownRegex()
            .equals(other.getWellKnownRegex())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasConst()) {
      hash = (37 * hash) + CONST_FIELD_NUMBER;
      hash = (53 * hash) + getConst().hashCode();
    }
    if (hasLen()) {
      hash = (37 * hash) + LEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLen());
    }
    if (hasMinLen()) {
      hash = (37 * hash) + MIN_LEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinLen());
    }
    if (hasMaxLen()) {
      hash = (37 * hash) + MAX_LEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxLen());
    }
    if (hasLenBytes()) {
      hash = (37 * hash) + LEN_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLenBytes());
    }
    if (hasMinBytes()) {
      hash = (37 * hash) + MIN_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinBytes());
    }
    if (hasMaxBytes()) {
      hash = (37 * hash) + MAX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxBytes());
    }
    if (hasPattern()) {
      hash = (37 * hash) + PATTERN_FIELD_NUMBER;
      hash = (53 * hash) + getPattern().hashCode();
    }
    if (hasPrefix()) {
      hash = (37 * hash) + PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getPrefix().hashCode();
    }
    if (hasSuffix()) {
      hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
      hash = (53 * hash) + getSuffix().hashCode();
    }
    if (hasContains()) {
      hash = (37 * hash) + CONTAINS_FIELD_NUMBER;
      hash = (53 * hash) + getContains().hashCode();
    }
    if (hasNotContains()) {
      hash = (37 * hash) + NOT_CONTAINS_FIELD_NUMBER;
      hash = (53 * hash) + getNotContains().hashCode();
    }
    if (getInCount() > 0) {
      hash = (37 * hash) + IN_FIELD_NUMBER;
      hash = (53 * hash) + getInList().hashCode();
    }
    if (getNotInCount() > 0) {
      hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
      hash = (53 * hash) + getNotInList().hashCode();
    }
    if (hasStrict()) {
      hash = (37 * hash) + STRICT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStrict());
    }
    if (hasIgnoreEmpty()) {
      hash = (37 * hash) + IGNORE_EMPTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIgnoreEmpty());
    }
    switch (wellKnownCase_) {
      case 12:
        hash = (37 * hash) + EMAIL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEmail());
        break;
      case 13:
        hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHostname());
        break;
      case 14:
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIp());
        break;
      case 15:
        hash = (37 * hash) + IPV4_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIpv4());
        break;
      case 16:
        hash = (37 * hash) + IPV6_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIpv6());
        break;
      case 17:
        hash = (37 * hash) + URI_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUri());
        break;
      case 18:
        hash = (37 * hash) + URI_REF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUriRef());
        break;
      case 21:
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAddress());
        break;
      case 22:
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUuid());
        break;
      case 24:
        hash = (37 * hash) + WELL_KNOWN_REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getWellKnownRegex().getNumber();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.validate.StringRules parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.validate.StringRules parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.validate.StringRules parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.validate.StringRules parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.validate.StringRules prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * StringRules describe the constraints applied to `string` values
   * </pre>
   *
   * Protobuf type {@code validate.StringRules}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:validate.StringRules)
      com.fluxninja.generated.validate.StringRulesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.validate.ValidateProto.internal_static_validate_StringRules_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.validate.ValidateProto.internal_static_validate_StringRules_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.validate.StringRules.class, com.fluxninja.generated.validate.StringRules.Builder.class);
    }

    // Construct using com.fluxninja.generated.validate.StringRules.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      const_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      len_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      minLen_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      maxLen_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      lenBytes_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      minBytes_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      maxBytes_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      pattern_ = "";
      bitField0_ = (bitField0_ & ~0x00000080);
      prefix_ = "";
      bitField0_ = (bitField0_ & ~0x00000100);
      suffix_ = "";
      bitField0_ = (bitField0_ & ~0x00000200);
      contains_ = "";
      bitField0_ = (bitField0_ & ~0x00000400);
      notContains_ = "";
      bitField0_ = (bitField0_ & ~0x00000800);
      in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00001000);
      notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00002000);
      strict_ = true;
      bitField0_ = (bitField0_ & ~0x01000000);
      ignoreEmpty_ = false;
      bitField0_ = (bitField0_ & ~0x02000000);
      wellKnownCase_ = 0;
      wellKnown_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.validate.ValidateProto.internal_static_validate_StringRules_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.validate.StringRules getDefaultInstanceForType() {
      return com.fluxninja.generated.validate.StringRules.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.validate.StringRules build() {
      com.fluxninja.generated.validate.StringRules result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.validate.StringRules buildPartial() {
      com.fluxninja.generated.validate.StringRules result = new com.fluxninja.generated.validate.StringRules(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.const_ = const_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.len_ = len_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minLen_ = minLen_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxLen_ = maxLen_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.lenBytes_ = lenBytes_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.minBytes_ = minBytes_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.maxBytes_ = maxBytes_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        to_bitField0_ |= 0x00000080;
      }
      result.pattern_ = pattern_;
      if (((from_bitField0_ & 0x00000100) != 0)) {
        to_bitField0_ |= 0x00000100;
      }
      result.prefix_ = prefix_;
      if (((from_bitField0_ & 0x00000200) != 0)) {
        to_bitField0_ |= 0x00000200;
      }
      result.suffix_ = suffix_;
      if (((from_bitField0_ & 0x00000400) != 0)) {
        to_bitField0_ |= 0x00000400;
      }
      result.contains_ = contains_;
      if (((from_bitField0_ & 0x00000800) != 0)) {
        to_bitField0_ |= 0x00000800;
      }
      result.notContains_ = notContains_;
      if (((bitField0_ & 0x00001000) != 0)) {
        in_ = in_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00001000);
      }
      result.in_ = in_;
      if (((bitField0_ & 0x00002000) != 0)) {
        notIn_ = notIn_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00002000);
      }
      result.notIn_ = notIn_;
      if (wellKnownCase_ == 12) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 13) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 14) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 15) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 16) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 17) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 18) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 21) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 22) {
        result.wellKnown_ = wellKnown_;
      }
      if (wellKnownCase_ == 24) {
        result.wellKnown_ = wellKnown_;
      }
      if (((from_bitField0_ & 0x01000000) != 0)) {
        to_bitField0_ |= 0x00400000;
      }
      result.strict_ = strict_;
      if (((from_bitField0_ & 0x02000000) != 0)) {
        result.ignoreEmpty_ = ignoreEmpty_;
        to_bitField0_ |= 0x00800000;
      }
      result.bitField0_ = to_bitField0_;
      result.wellKnownCase_ = wellKnownCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.validate.StringRules) {
        return mergeFrom((com.fluxninja.generated.validate.StringRules)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.validate.StringRules other) {
      if (other == com.fluxninja.generated.validate.StringRules.getDefaultInstance()) return this;
      if (other.hasConst()) {
        bitField0_ |= 0x00000001;
        const_ = other.const_;
        onChanged();
      }
      if (other.hasLen()) {
        setLen(other.getLen());
      }
      if (other.hasMinLen()) {
        setMinLen(other.getMinLen());
      }
      if (other.hasMaxLen()) {
        setMaxLen(other.getMaxLen());
      }
      if (other.hasLenBytes()) {
        setLenBytes(other.getLenBytes());
      }
      if (other.hasMinBytes()) {
        setMinBytes(other.getMinBytes());
      }
      if (other.hasMaxBytes()) {
        setMaxBytes(other.getMaxBytes());
      }
      if (other.hasPattern()) {
        bitField0_ |= 0x00000080;
        pattern_ = other.pattern_;
        onChanged();
      }
      if (other.hasPrefix()) {
        bitField0_ |= 0x00000100;
        prefix_ = other.prefix_;
        onChanged();
      }
      if (other.hasSuffix()) {
        bitField0_ |= 0x00000200;
        suffix_ = other.suffix_;
        onChanged();
      }
      if (other.hasContains()) {
        bitField0_ |= 0x00000400;
        contains_ = other.contains_;
        onChanged();
      }
      if (other.hasNotContains()) {
        bitField0_ |= 0x00000800;
        notContains_ = other.notContains_;
        onChanged();
      }
      if (!other.in_.isEmpty()) {
        if (in_.isEmpty()) {
          in_ = other.in_;
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          ensureInIsMutable();
          in_.addAll(other.in_);
        }
        onChanged();
      }
      if (!other.notIn_.isEmpty()) {
        if (notIn_.isEmpty()) {
          notIn_ = other.notIn_;
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          ensureNotInIsMutable();
          notIn_.addAll(other.notIn_);
        }
        onChanged();
      }
      if (other.hasStrict()) {
        setStrict(other.getStrict());
      }
      if (other.hasIgnoreEmpty()) {
        setIgnoreEmpty(other.getIgnoreEmpty());
      }
      switch (other.getWellKnownCase()) {
        case EMAIL: {
          setEmail(other.getEmail());
          break;
        }
        case HOSTNAME: {
          setHostname(other.getHostname());
          break;
        }
        case IP: {
          setIp(other.getIp());
          break;
        }
        case IPV4: {
          setIpv4(other.getIpv4());
          break;
        }
        case IPV6: {
          setIpv6(other.getIpv6());
          break;
        }
        case URI: {
          setUri(other.getUri());
          break;
        }
        case URI_REF: {
          setUriRef(other.getUriRef());
          break;
        }
        case ADDRESS: {
          setAddress(other.getAddress());
          break;
        }
        case UUID: {
          setUuid(other.getUuid());
          break;
        }
        case WELL_KNOWN_REGEX: {
          setWellKnownRegex(other.getWellKnownRegex());
          break;
        }
        case WELLKNOWN_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.validate.StringRules parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.validate.StringRules) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int wellKnownCase_ = 0;
    private java.lang.Object wellKnown_;
    public WellKnownCase
        getWellKnownCase() {
      return WellKnownCase.forNumber(
          wellKnownCase_);
    }

    public Builder clearWellKnown() {
      wellKnownCase_ = 0;
      wellKnown_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object const_ = "";
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @return Whether the const field is set.
     */
    public boolean hasConst() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @return The const.
     */
    public java.lang.String getConst() {
      java.lang.Object ref = const_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          const_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @return The bytes for const.
     */
    public com.google.protobuf.ByteString
        getConstBytes() {
      java.lang.Object ref = const_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        const_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @param value The const to set.
     * @return This builder for chaining.
     */
    public Builder setConst(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      const_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConst() {
      bitField0_ = (bitField0_ & ~0x00000001);
      const_ = getDefaultInstance().getConst();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Const specifies that this field must be exactly the specified value
     * </pre>
     *
     * <code>optional string const = 1 [json_name = "const"];</code>
     * @param value The bytes for const to set.
     * @return This builder for chaining.
     */
    public Builder setConstBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      const_ = value;
      onChanged();
      return this;
    }

    private long len_ ;
    /**
     * <pre>
     * Len specifies that this field must be the specified number of
     * characters (Unicode code points). Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 len = 19 [json_name = "len"];</code>
     * @return Whether the len field is set.
     */
    @java.lang.Override
    public boolean hasLen() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Len specifies that this field must be the specified number of
     * characters (Unicode code points). Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 len = 19 [json_name = "len"];</code>
     * @return The len.
     */
    @java.lang.Override
    public long getLen() {
      return len_;
    }
    /**
     * <pre>
     * Len specifies that this field must be the specified number of
     * characters (Unicode code points). Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 len = 19 [json_name = "len"];</code>
     * @param value The len to set.
     * @return This builder for chaining.
     */
    public Builder setLen(long value) {
      bitField0_ |= 0x00000002;
      len_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Len specifies that this field must be the specified number of
     * characters (Unicode code points). Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 len = 19 [json_name = "len"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLen() {
      bitField0_ = (bitField0_ & ~0x00000002);
      len_ = 0L;
      onChanged();
      return this;
    }

    private long minLen_ ;
    /**
     * <pre>
     * MinLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a minimum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
     * @return Whether the minLen field is set.
     */
    @java.lang.Override
    public boolean hasMinLen() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * MinLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a minimum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
     * @return The minLen.
     */
    @java.lang.Override
    public long getMinLen() {
      return minLen_;
    }
    /**
     * <pre>
     * MinLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a minimum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
     * @param value The minLen to set.
     * @return This builder for chaining.
     */
    public Builder setMinLen(long value) {
      bitField0_ |= 0x00000004;
      minLen_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MinLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a minimum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 min_len = 2 [json_name = "minLen"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinLen() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minLen_ = 0L;
      onChanged();
      return this;
    }

    private long maxLen_ ;
    /**
     * <pre>
     * MaxLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a maximum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
     * @return Whether the maxLen field is set.
     */
    @java.lang.Override
    public boolean hasMaxLen() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * MaxLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a maximum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
     * @return The maxLen.
     */
    @java.lang.Override
    public long getMaxLen() {
      return maxLen_;
    }
    /**
     * <pre>
     * MaxLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a maximum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
     * @param value The maxLen to set.
     * @return This builder for chaining.
     */
    public Builder setMaxLen(long value) {
      bitField0_ |= 0x00000008;
      maxLen_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxLen specifies that this field must be the specified number of
     * characters (Unicode code points) at a maximum. Note that the number of
     * characters may differ from the number of bytes in the string.
     * </pre>
     *
     * <code>optional uint64 max_len = 3 [json_name = "maxLen"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxLen() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxLen_ = 0L;
      onChanged();
      return this;
    }

    private long lenBytes_ ;
    /**
     * <pre>
     * LenBytes specifies that this field must be the specified number of bytes
     * </pre>
     *
     * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
     * @return Whether the lenBytes field is set.
     */
    @java.lang.Override
    public boolean hasLenBytes() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * LenBytes specifies that this field must be the specified number of bytes
     * </pre>
     *
     * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
     * @return The lenBytes.
     */
    @java.lang.Override
    public long getLenBytes() {
      return lenBytes_;
    }
    /**
     * <pre>
     * LenBytes specifies that this field must be the specified number of bytes
     * </pre>
     *
     * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
     * @param value The lenBytes to set.
     * @return This builder for chaining.
     */
    public Builder setLenBytes(long value) {
      bitField0_ |= 0x00000010;
      lenBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LenBytes specifies that this field must be the specified number of bytes
     * </pre>
     *
     * <code>optional uint64 len_bytes = 20 [json_name = "lenBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLenBytes() {
      bitField0_ = (bitField0_ & ~0x00000010);
      lenBytes_ = 0L;
      onChanged();
      return this;
    }

    private long minBytes_ ;
    /**
     * <pre>
     * MinBytes specifies that this field must be the specified number of bytes
     * at a minimum
     * </pre>
     *
     * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
     * @return Whether the minBytes field is set.
     */
    @java.lang.Override
    public boolean hasMinBytes() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * MinBytes specifies that this field must be the specified number of bytes
     * at a minimum
     * </pre>
     *
     * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
     * @return The minBytes.
     */
    @java.lang.Override
    public long getMinBytes() {
      return minBytes_;
    }
    /**
     * <pre>
     * MinBytes specifies that this field must be the specified number of bytes
     * at a minimum
     * </pre>
     *
     * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
     * @param value The minBytes to set.
     * @return This builder for chaining.
     */
    public Builder setMinBytes(long value) {
      bitField0_ |= 0x00000020;
      minBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MinBytes specifies that this field must be the specified number of bytes
     * at a minimum
     * </pre>
     *
     * <code>optional uint64 min_bytes = 4 [json_name = "minBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinBytes() {
      bitField0_ = (bitField0_ & ~0x00000020);
      minBytes_ = 0L;
      onChanged();
      return this;
    }

    private long maxBytes_ ;
    /**
     * <pre>
     * MaxBytes specifies that this field must be the specified number of bytes
     * at a maximum
     * </pre>
     *
     * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
     * @return Whether the maxBytes field is set.
     */
    @java.lang.Override
    public boolean hasMaxBytes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * MaxBytes specifies that this field must be the specified number of bytes
     * at a maximum
     * </pre>
     *
     * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
     * @return The maxBytes.
     */
    @java.lang.Override
    public long getMaxBytes() {
      return maxBytes_;
    }
    /**
     * <pre>
     * MaxBytes specifies that this field must be the specified number of bytes
     * at a maximum
     * </pre>
     *
     * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
     * @param value The maxBytes to set.
     * @return This builder for chaining.
     */
    public Builder setMaxBytes(long value) {
      bitField0_ |= 0x00000040;
      maxBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxBytes specifies that this field must be the specified number of bytes
     * at a maximum
     * </pre>
     *
     * <code>optional uint64 max_bytes = 5 [json_name = "maxBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxBytes() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maxBytes_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object pattern_ = "";
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @return Whether the pattern field is set.
     */
    public boolean hasPattern() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @return The pattern.
     */
    public java.lang.String getPattern() {
      java.lang.Object ref = pattern_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pattern_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @return The bytes for pattern.
     */
    public com.google.protobuf.ByteString
        getPatternBytes() {
      java.lang.Object ref = pattern_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @param value The pattern to set.
     * @return This builder for chaining.
     */
    public Builder setPattern(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      pattern_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPattern() {
      bitField0_ = (bitField0_ & ~0x00000080);
      pattern_ = getDefaultInstance().getPattern();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pattern specifes that this field must match against the specified
     * regular expression (RE2 syntax). The included expression should elide
     * any delimiters.
     * </pre>
     *
     * <code>optional string pattern = 6 [json_name = "pattern"];</code>
     * @param value The bytes for pattern to set.
     * @return This builder for chaining.
     */
    public Builder setPatternBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      pattern_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object prefix_ = "";
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @return Whether the prefix field is set.
     */
    public boolean hasPrefix() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @return The prefix.
     */
    public java.lang.String getPrefix() {
      java.lang.Object ref = prefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          prefix_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @return The bytes for prefix.
     */
    public com.google.protobuf.ByteString
        getPrefixBytes() {
      java.lang.Object ref = prefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @param value The prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      prefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefix() {
      bitField0_ = (bitField0_ & ~0x00000100);
      prefix_ = getDefaultInstance().getPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Prefix specifies that this field must have the specified substring at
     * the beginning of the string.
     * </pre>
     *
     * <code>optional string prefix = 7 [json_name = "prefix"];</code>
     * @param value The bytes for prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      prefix_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object suffix_ = "";
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @return Whether the suffix field is set.
     */
    public boolean hasSuffix() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @return The suffix.
     */
    public java.lang.String getSuffix() {
      java.lang.Object ref = suffix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          suffix_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @return The bytes for suffix.
     */
    public com.google.protobuf.ByteString
        getSuffixBytes() {
      java.lang.Object ref = suffix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        suffix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @param value The suffix to set.
     * @return This builder for chaining.
     */
    public Builder setSuffix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      suffix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSuffix() {
      bitField0_ = (bitField0_ & ~0x00000200);
      suffix_ = getDefaultInstance().getSuffix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Suffix specifies that this field must have the specified substring at
     * the end of the string.
     * </pre>
     *
     * <code>optional string suffix = 8 [json_name = "suffix"];</code>
     * @param value The bytes for suffix to set.
     * @return This builder for chaining.
     */
    public Builder setSuffixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      suffix_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object contains_ = "";
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @return Whether the contains field is set.
     */
    public boolean hasContains() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @return The contains.
     */
    public java.lang.String getContains() {
      java.lang.Object ref = contains_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          contains_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @return The bytes for contains.
     */
    public com.google.protobuf.ByteString
        getContainsBytes() {
      java.lang.Object ref = contains_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contains_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @param value The contains to set.
     * @return This builder for chaining.
     */
    public Builder setContains(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      contains_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @return This builder for chaining.
     */
    public Builder clearContains() {
      bitField0_ = (bitField0_ & ~0x00000400);
      contains_ = getDefaultInstance().getContains();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains specifies that this field must have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string contains = 9 [json_name = "contains"];</code>
     * @param value The bytes for contains to set.
     * @return This builder for chaining.
     */
    public Builder setContainsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      contains_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object notContains_ = "";
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @return Whether the notContains field is set.
     */
    public boolean hasNotContains() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @return The notContains.
     */
    public java.lang.String getNotContains() {
      java.lang.Object ref = notContains_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          notContains_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @return The bytes for notContains.
     */
    public com.google.protobuf.ByteString
        getNotContainsBytes() {
      java.lang.Object ref = notContains_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        notContains_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @param value The notContains to set.
     * @return This builder for chaining.
     */
    public Builder setNotContains(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      notContains_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNotContains() {
      bitField0_ = (bitField0_ & ~0x00000800);
      notContains_ = getDefaultInstance().getNotContains();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotContains specifies that this field cannot have the specified substring
     * anywhere in the string.
     * </pre>
     *
     * <code>optional string not_contains = 23 [json_name = "notContains"];</code>
     * @param value The bytes for notContains to set.
     * @return This builder for chaining.
     */
    public Builder setNotContainsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      notContains_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureInIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        in_ = new com.google.protobuf.LazyStringArrayList(in_);
        bitField0_ |= 0x00001000;
       }
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @return A list containing the in.
     */
    public com.google.protobuf.ProtocolStringList
        getInList() {
      return in_.getUnmodifiableView();
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @return The count of in.
     */
    public int getInCount() {
      return in_.size();
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param index The index of the element to return.
     * @return The in at the given index.
     */
    public java.lang.String getIn(int index) {
      return in_.get(index);
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the in at the given index.
     */
    public com.google.protobuf.ByteString
        getInBytes(int index) {
      return in_.getByteString(index);
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param index The index to set the value at.
     * @param value The in to set.
     * @return This builder for chaining.
     */
    public Builder setIn(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInIsMutable();
      in_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param value The in to add.
     * @return This builder for chaining.
     */
    public Builder addIn(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInIsMutable();
      in_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param values The in to add.
     * @return This builder for chaining.
     */
    public Builder addAllIn(
        java.lang.Iterable<java.lang.String> values) {
      ensureInIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, in_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIn() {
      in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In specifies that this field must be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string in = 10 [json_name = "in"];</code>
     * @param value The bytes of the in to add.
     * @return This builder for chaining.
     */
    public Builder addInBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInIsMutable();
      in_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureNotInIsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        notIn_ = new com.google.protobuf.LazyStringArrayList(notIn_);
        bitField0_ |= 0x00002000;
       }
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @return A list containing the notIn.
     */
    public com.google.protobuf.ProtocolStringList
        getNotInList() {
      return notIn_.getUnmodifiableView();
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @return The count of notIn.
     */
    public int getNotInCount() {
      return notIn_.size();
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param index The index of the element to return.
     * @return The notIn at the given index.
     */
    public java.lang.String getNotIn(int index) {
      return notIn_.get(index);
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the notIn at the given index.
     */
    public com.google.protobuf.ByteString
        getNotInBytes(int index) {
      return notIn_.getByteString(index);
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param index The index to set the value at.
     * @param value The notIn to set.
     * @return This builder for chaining.
     */
    public Builder setNotIn(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNotInIsMutable();
      notIn_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param value The notIn to add.
     * @return This builder for chaining.
     */
    public Builder addNotIn(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNotInIsMutable();
      notIn_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param values The notIn to add.
     * @return This builder for chaining.
     */
    public Builder addAllNotIn(
        java.lang.Iterable<java.lang.String> values) {
      ensureNotInIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, notIn_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNotIn() {
      notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NotIn specifies that this field cannot be equal to one of the specified
     * values
     * </pre>
     *
     * <code>repeated string not_in = 11 [json_name = "notIn"];</code>
     * @param value The bytes of the notIn to add.
     * @return This builder for chaining.
     */
    public Builder addNotInBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNotInIsMutable();
      notIn_.add(value);
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Email specifies that the field must be a valid email address as
     * defined by RFC 5322
     * </pre>
     *
     * <code>bool email = 12 [json_name = "email"];</code>
     * @return Whether the email field is set.
     */
    public boolean hasEmail() {
      return wellKnownCase_ == 12;
    }
    /**
     * <pre>
     * Email specifies that the field must be a valid email address as
     * defined by RFC 5322
     * </pre>
     *
     * <code>bool email = 12 [json_name = "email"];</code>
     * @return The email.
     */
    public boolean getEmail() {
      if (wellKnownCase_ == 12) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Email specifies that the field must be a valid email address as
     * defined by RFC 5322
     * </pre>
     *
     * <code>bool email = 12 [json_name = "email"];</code>
     * @param value The email to set.
     * @return This builder for chaining.
     */
    public Builder setEmail(boolean value) {
      wellKnownCase_ = 12;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Email specifies that the field must be a valid email address as
     * defined by RFC 5322
     * </pre>
     *
     * <code>bool email = 12 [json_name = "email"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEmail() {
      if (wellKnownCase_ == 12) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Hostname specifies that the field must be a valid hostname as
     * defined by RFC 1034. This constraint does not support
     * internationalized domain names (IDNs).
     * </pre>
     *
     * <code>bool hostname = 13 [json_name = "hostname"];</code>
     * @return Whether the hostname field is set.
     */
    public boolean hasHostname() {
      return wellKnownCase_ == 13;
    }
    /**
     * <pre>
     * Hostname specifies that the field must be a valid hostname as
     * defined by RFC 1034. This constraint does not support
     * internationalized domain names (IDNs).
     * </pre>
     *
     * <code>bool hostname = 13 [json_name = "hostname"];</code>
     * @return The hostname.
     */
    public boolean getHostname() {
      if (wellKnownCase_ == 13) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Hostname specifies that the field must be a valid hostname as
     * defined by RFC 1034. This constraint does not support
     * internationalized domain names (IDNs).
     * </pre>
     *
     * <code>bool hostname = 13 [json_name = "hostname"];</code>
     * @param value The hostname to set.
     * @return This builder for chaining.
     */
    public Builder setHostname(boolean value) {
      wellKnownCase_ = 13;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hostname specifies that the field must be a valid hostname as
     * defined by RFC 1034. This constraint does not support
     * internationalized domain names (IDNs).
     * </pre>
     *
     * <code>bool hostname = 13 [json_name = "hostname"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHostname() {
      if (wellKnownCase_ == 13) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Ip specifies that the field must be a valid IP (v4 or v6) address.
     * Valid IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ip = 14 [json_name = "ip"];</code>
     * @return Whether the ip field is set.
     */
    public boolean hasIp() {
      return wellKnownCase_ == 14;
    }
    /**
     * <pre>
     * Ip specifies that the field must be a valid IP (v4 or v6) address.
     * Valid IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ip = 14 [json_name = "ip"];</code>
     * @return The ip.
     */
    public boolean getIp() {
      if (wellKnownCase_ == 14) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Ip specifies that the field must be a valid IP (v4 or v6) address.
     * Valid IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ip = 14 [json_name = "ip"];</code>
     * @param value The ip to set.
     * @return This builder for chaining.
     */
    public Builder setIp(boolean value) {
      wellKnownCase_ = 14;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Ip specifies that the field must be a valid IP (v4 or v6) address.
     * Valid IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ip = 14 [json_name = "ip"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIp() {
      if (wellKnownCase_ == 14) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Ipv4 specifies that the field must be a valid IPv4 address.
     * </pre>
     *
     * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
     * @return Whether the ipv4 field is set.
     */
    public boolean hasIpv4() {
      return wellKnownCase_ == 15;
    }
    /**
     * <pre>
     * Ipv4 specifies that the field must be a valid IPv4 address.
     * </pre>
     *
     * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
     * @return The ipv4.
     */
    public boolean getIpv4() {
      if (wellKnownCase_ == 15) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Ipv4 specifies that the field must be a valid IPv4 address.
     * </pre>
     *
     * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
     * @param value The ipv4 to set.
     * @return This builder for chaining.
     */
    public Builder setIpv4(boolean value) {
      wellKnownCase_ = 15;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Ipv4 specifies that the field must be a valid IPv4 address.
     * </pre>
     *
     * <code>bool ipv4 = 15 [json_name = "ipv4"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIpv4() {
      if (wellKnownCase_ == 15) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Ipv6 specifies that the field must be a valid IPv6 address. Valid
     * IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
     * @return Whether the ipv6 field is set.
     */
    public boolean hasIpv6() {
      return wellKnownCase_ == 16;
    }
    /**
     * <pre>
     * Ipv6 specifies that the field must be a valid IPv6 address. Valid
     * IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
     * @return The ipv6.
     */
    public boolean getIpv6() {
      if (wellKnownCase_ == 16) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Ipv6 specifies that the field must be a valid IPv6 address. Valid
     * IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
     * @param value The ipv6 to set.
     * @return This builder for chaining.
     */
    public Builder setIpv6(boolean value) {
      wellKnownCase_ = 16;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Ipv6 specifies that the field must be a valid IPv6 address. Valid
     * IPv6 addresses should not include surrounding square brackets.
     * </pre>
     *
     * <code>bool ipv6 = 16 [json_name = "ipv6"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIpv6() {
      if (wellKnownCase_ == 16) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Uri specifies that the field must be a valid, absolute URI as defined
     * by RFC 3986
     * </pre>
     *
     * <code>bool uri = 17 [json_name = "uri"];</code>
     * @return Whether the uri field is set.
     */
    public boolean hasUri() {
      return wellKnownCase_ == 17;
    }
    /**
     * <pre>
     * Uri specifies that the field must be a valid, absolute URI as defined
     * by RFC 3986
     * </pre>
     *
     * <code>bool uri = 17 [json_name = "uri"];</code>
     * @return The uri.
     */
    public boolean getUri() {
      if (wellKnownCase_ == 17) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Uri specifies that the field must be a valid, absolute URI as defined
     * by RFC 3986
     * </pre>
     *
     * <code>bool uri = 17 [json_name = "uri"];</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(boolean value) {
      wellKnownCase_ = 17;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uri specifies that the field must be a valid, absolute URI as defined
     * by RFC 3986
     * </pre>
     *
     * <code>bool uri = 17 [json_name = "uri"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      if (wellKnownCase_ == 17) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * UriRef specifies that the field must be a valid URI as defined by RFC
     * 3986 and may be relative or absolute.
     * </pre>
     *
     * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
     * @return Whether the uriRef field is set.
     */
    public boolean hasUriRef() {
      return wellKnownCase_ == 18;
    }
    /**
     * <pre>
     * UriRef specifies that the field must be a valid URI as defined by RFC
     * 3986 and may be relative or absolute.
     * </pre>
     *
     * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
     * @return The uriRef.
     */
    public boolean getUriRef() {
      if (wellKnownCase_ == 18) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * UriRef specifies that the field must be a valid URI as defined by RFC
     * 3986 and may be relative or absolute.
     * </pre>
     *
     * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
     * @param value The uriRef to set.
     * @return This builder for chaining.
     */
    public Builder setUriRef(boolean value) {
      wellKnownCase_ = 18;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UriRef specifies that the field must be a valid URI as defined by RFC
     * 3986 and may be relative or absolute.
     * </pre>
     *
     * <code>bool uri_ref = 18 [json_name = "uriRef"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUriRef() {
      if (wellKnownCase_ == 18) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Address specifies that the field must be either a valid hostname as
     * defined by RFC 1034 (which does not support internationalized domain
     * names or IDNs), or it can be a valid IP (v4 or v6).
     * </pre>
     *
     * <code>bool address = 21 [json_name = "address"];</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return wellKnownCase_ == 21;
    }
    /**
     * <pre>
     * Address specifies that the field must be either a valid hostname as
     * defined by RFC 1034 (which does not support internationalized domain
     * names or IDNs), or it can be a valid IP (v4 or v6).
     * </pre>
     *
     * <code>bool address = 21 [json_name = "address"];</code>
     * @return The address.
     */
    public boolean getAddress() {
      if (wellKnownCase_ == 21) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Address specifies that the field must be either a valid hostname as
     * defined by RFC 1034 (which does not support internationalized domain
     * names or IDNs), or it can be a valid IP (v4 or v6).
     * </pre>
     *
     * <code>bool address = 21 [json_name = "address"];</code>
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(boolean value) {
      wellKnownCase_ = 21;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address specifies that the field must be either a valid hostname as
     * defined by RFC 1034 (which does not support internationalized domain
     * names or IDNs), or it can be a valid IP (v4 or v6).
     * </pre>
     *
     * <code>bool address = 21 [json_name = "address"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      if (wellKnownCase_ == 21) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * Uuid specifies that the field must be a valid UUID as defined by
     * RFC 4122
     * </pre>
     *
     * <code>bool uuid = 22 [json_name = "uuid"];</code>
     * @return Whether the uuid field is set.
     */
    public boolean hasUuid() {
      return wellKnownCase_ == 22;
    }
    /**
     * <pre>
     * Uuid specifies that the field must be a valid UUID as defined by
     * RFC 4122
     * </pre>
     *
     * <code>bool uuid = 22 [json_name = "uuid"];</code>
     * @return The uuid.
     */
    public boolean getUuid() {
      if (wellKnownCase_ == 22) {
        return (java.lang.Boolean) wellKnown_;
      }
      return false;
    }
    /**
     * <pre>
     * Uuid specifies that the field must be a valid UUID as defined by
     * RFC 4122
     * </pre>
     *
     * <code>bool uuid = 22 [json_name = "uuid"];</code>
     * @param value The uuid to set.
     * @return This builder for chaining.
     */
    public Builder setUuid(boolean value) {
      wellKnownCase_ = 22;
      wellKnown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uuid specifies that the field must be a valid UUID as defined by
     * RFC 4122
     * </pre>
     *
     * <code>bool uuid = 22 [json_name = "uuid"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUuid() {
      if (wellKnownCase_ == 22) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * WellKnownRegex specifies a common well known pattern defined as a regex.
     * </pre>
     *
     * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
     * @return Whether the wellKnownRegex field is set.
     */
    @java.lang.Override
    public boolean hasWellKnownRegex() {
      return wellKnownCase_ == 24;
    }
    /**
     * <pre>
     * WellKnownRegex specifies a common well known pattern defined as a regex.
     * </pre>
     *
     * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
     * @return The wellKnownRegex.
     */
    @java.lang.Override
    public com.fluxninja.generated.validate.KnownRegex getWellKnownRegex() {
      if (wellKnownCase_ == 24) {
        @SuppressWarnings("deprecation")
        com.fluxninja.generated.validate.KnownRegex result = com.fluxninja.generated.validate.KnownRegex.valueOf(
            (java.lang.Integer) wellKnown_);
        return result == null ? com.fluxninja.generated.validate.KnownRegex.UNKNOWN : result;
      }
      return com.fluxninja.generated.validate.KnownRegex.UNKNOWN;
    }
    /**
     * <pre>
     * WellKnownRegex specifies a common well known pattern defined as a regex.
     * </pre>
     *
     * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
     * @param value The wellKnownRegex to set.
     * @return This builder for chaining.
     */
    public Builder setWellKnownRegex(com.fluxninja.generated.validate.KnownRegex value) {
      if (value == null) {
        throw new NullPointerException();
      }
      wellKnownCase_ = 24;
      wellKnown_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * WellKnownRegex specifies a common well known pattern defined as a regex.
     * </pre>
     *
     * <code>.validate.KnownRegex well_known_regex = 24 [json_name = "wellKnownRegex"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWellKnownRegex() {
      if (wellKnownCase_ == 24) {
        wellKnownCase_ = 0;
        wellKnown_ = null;
        onChanged();
      }
      return this;
    }

    private boolean strict_ = true;
    /**
     * <pre>
     * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
     * strict header validation.
     * By default, this is true, and HTTP header validations are RFC-compliant.
     * Setting to false will enable a looser validations that only disallows
     * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
     * </pre>
     *
     * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
     * @return Whether the strict field is set.
     */
    @java.lang.Override
    public boolean hasStrict() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <pre>
     * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
     * strict header validation.
     * By default, this is true, and HTTP header validations are RFC-compliant.
     * Setting to false will enable a looser validations that only disallows
     * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
     * </pre>
     *
     * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
     * @return The strict.
     */
    @java.lang.Override
    public boolean getStrict() {
      return strict_;
    }
    /**
     * <pre>
     * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
     * strict header validation.
     * By default, this is true, and HTTP header validations are RFC-compliant.
     * Setting to false will enable a looser validations that only disallows
     * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
     * </pre>
     *
     * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
     * @param value The strict to set.
     * @return This builder for chaining.
     */
    public Builder setStrict(boolean value) {
      bitField0_ |= 0x01000000;
      strict_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This applies to regexes HTTP_HEADER_NAME and HTTP_HEADER_VALUE to enable
     * strict header validation.
     * By default, this is true, and HTTP header validations are RFC-compliant.
     * Setting to false will enable a looser validations that only disallows
     * &#92;r&#92;n&#92;0 characters, which can be used to bypass header matching rules.
     * </pre>
     *
     * <code>optional bool strict = 25 [default = true, json_name = "strict"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStrict() {
      bitField0_ = (bitField0_ & ~0x01000000);
      strict_ = true;
      onChanged();
      return this;
    }

    private boolean ignoreEmpty_ ;
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
     * @return Whether the ignoreEmpty field is set.
     */
    @java.lang.Override
    public boolean hasIgnoreEmpty() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
     * @return The ignoreEmpty.
     */
    @java.lang.Override
    public boolean getIgnoreEmpty() {
      return ignoreEmpty_;
    }
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
     * @param value The ignoreEmpty to set.
     * @return This builder for chaining.
     */
    public Builder setIgnoreEmpty(boolean value) {
      bitField0_ |= 0x02000000;
      ignoreEmpty_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 26 [json_name = "ignoreEmpty"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnoreEmpty() {
      bitField0_ = (bitField0_ & ~0x02000000);
      ignoreEmpty_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:validate.StringRules)
  }

  // @@protoc_insertion_point(class_scope:validate.StringRules)
  private static final com.fluxninja.generated.validate.StringRules DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.validate.StringRules();
  }

  public static com.fluxninja.generated.validate.StringRules getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<StringRules>
      PARSER = new com.google.protobuf.AbstractParser<StringRules>() {
    @java.lang.Override
    public StringRules parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StringRules(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StringRules> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StringRules> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.validate.StringRules getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

