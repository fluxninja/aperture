// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/std_components.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * Alerter reacts to a signal and generates alert to send to alert manager.
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.Alerter}
 */
public final class Alerter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.Alerter)
    AlerterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Alerter.newBuilder() to construct.
  private Alerter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Alerter() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Alerter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Alerter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder subBuilder = null;
            if (inPorts_ != null) {
              subBuilder = inPorts_.toBuilder();
            }
            inPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inPorts_);
              inPorts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder subBuilder = null;
            if (parameters_ != null) {
              subBuilder = parameters_.toBuilder();
            }
            parameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parameters_);
              parameters_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Builder.class);
  }

  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.Alerter.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the alert.
     * </pre>
     *
     * <code>string alert_name = 1 [json_name = "alertName"];</code>
     * @return The alertName.
     */
    java.lang.String getAlertName();
    /**
     * <pre>
     * Name of the alert.
     * </pre>
     *
     * <code>string alert_name = 1 [json_name = "alertName"];</code>
     * @return The bytes for alertName.
     */
    com.google.protobuf.ByteString
        getAlertNameBytes();

    /**
     * <pre>
     * Severity of the alert, one of 'info', 'warn' or 'crit'.
     * </pre>
     *
     * <code>string severity = 2 [json_name = "severity"];</code>
     * @return The severity.
     */
    java.lang.String getSeverity();
    /**
     * <pre>
     * Severity of the alert, one of 'info', 'warn' or 'crit'.
     * </pre>
     *
     * <code>string severity = 2 [json_name = "severity"];</code>
     * @return The bytes for severity.
     */
    com.google.protobuf.ByteString
        getSeverityBytes();

    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     * @return Whether the resolveTimeout field is set.
     */
    boolean hasResolveTimeout();
    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     * @return The resolveTimeout.
     */
    com.google.protobuf.Duration getResolveTimeout();
    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     */
    com.google.protobuf.DurationOrBuilder getResolveTimeoutOrBuilder();

    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @return A list containing the alertChannels.
     */
    java.util.List<java.lang.String>
        getAlertChannelsList();
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @return The count of alertChannels.
     */
    int getAlertChannelsCount();
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @param index The index of the element to return.
     * @return The alertChannels at the given index.
     */
    java.lang.String getAlertChannels(int index);
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the alertChannels at the given index.
     */
    com.google.protobuf.ByteString
        getAlertChannelsBytes(int index);

    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */

    /* nullable */
java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Alerter Parameters is a common config for separate alerter components and alerters embedded in other components.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.Alerter.Parameters}
   */
  public static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.Alerter.Parameters)
      ParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      alertName_ = "";
      severity_ = "";
      alertChannels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Parameters();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              alertName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              severity_ = s;
              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (resolveTimeout_ != null) {
                subBuilder = resolveTimeout_.toBuilder();
              }
              resolveTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resolveTimeout_);
                resolveTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                alertChannels_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              alertChannels_.add(s);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          alertChannels_ = alertChannels_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder.class);
    }

    public static final int ALERT_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object alertName_;
    /**
     * <pre>
     * Name of the alert.
     * </pre>
     *
     * <code>string alert_name = 1 [json_name = "alertName"];</code>
     * @return The alertName.
     */
    @java.lang.Override
    public java.lang.String getAlertName() {
      java.lang.Object ref = alertName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        alertName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the alert.
     * </pre>
     *
     * <code>string alert_name = 1 [json_name = "alertName"];</code>
     * @return The bytes for alertName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAlertNameBytes() {
      java.lang.Object ref = alertName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alertName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEVERITY_FIELD_NUMBER = 2;
    private volatile java.lang.Object severity_;
    /**
     * <pre>
     * Severity of the alert, one of 'info', 'warn' or 'crit'.
     * </pre>
     *
     * <code>string severity = 2 [json_name = "severity"];</code>
     * @return The severity.
     */
    @java.lang.Override
    public java.lang.String getSeverity() {
      java.lang.Object ref = severity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        severity_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Severity of the alert, one of 'info', 'warn' or 'crit'.
     * </pre>
     *
     * <code>string severity = 2 [json_name = "severity"];</code>
     * @return The bytes for severity.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSeverityBytes() {
      java.lang.Object ref = severity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        severity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOLVE_TIMEOUT_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration resolveTimeout_;
    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     * @return Whether the resolveTimeout field is set.
     */
    @java.lang.Override
    public boolean hasResolveTimeout() {
      return resolveTimeout_ != null;
    }
    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     * @return The resolveTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getResolveTimeout() {
      return resolveTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : resolveTimeout_;
    }
    /**
     * <pre>
     * Duration of alert resolver.
     * </pre>
     *
     * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getResolveTimeoutOrBuilder() {
      return getResolveTimeout();
    }

    public static final int ALERT_CHANNELS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList alertChannels_;
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @return A list containing the alertChannels.
     */
    public com.google.protobuf.ProtocolStringList
        getAlertChannelsList() {
      return alertChannels_;
    }
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @return The count of alertChannels.
     */
    public int getAlertChannelsCount() {
      return alertChannels_.size();
    }
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @param index The index of the element to return.
     * @return The alertChannels at the given index.
     */
    public java.lang.String getAlertChannels(int index) {
      return alertChannels_.get(index);
    }
    /**
     * <pre>
     * A list of alert channel strings.
     * </pre>
     *
     * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the alertChannels at the given index.
     */
    public com.google.protobuf.ByteString
        getAlertChannelsBytes(int index) {
      return alertChannels_.getByteString(index);
    }

    public static final int LABELS_FIELD_NUMBER = 5;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Additional labels to add to alert.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(alertName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, alertName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(severity_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, severity_);
      }
      if (resolveTimeout_ != null) {
        output.writeMessage(3, getResolveTimeout());
      }
      for (int i = 0; i < alertChannels_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, alertChannels_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          5);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(alertName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, alertName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(severity_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, severity_);
      }
      if (resolveTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getResolveTimeout());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alertChannels_.size(); i++) {
          dataSize += computeStringSizeNoTag(alertChannels_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAlertChannelsList().size();
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, labels__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters other = (com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters) obj;

      if (!getAlertName()
          .equals(other.getAlertName())) return false;
      if (!getSeverity()
          .equals(other.getSeverity())) return false;
      if (hasResolveTimeout() != other.hasResolveTimeout()) return false;
      if (hasResolveTimeout()) {
        if (!getResolveTimeout()
            .equals(other.getResolveTimeout())) return false;
      }
      if (!getAlertChannelsList()
          .equals(other.getAlertChannelsList())) return false;
      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALERT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getAlertName().hashCode();
      hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
      hash = (53 * hash) + getSeverity().hashCode();
      if (hasResolveTimeout()) {
        hash = (37 * hash) + RESOLVE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getResolveTimeout().hashCode();
      }
      if (getAlertChannelsCount() > 0) {
        hash = (37 * hash) + ALERT_CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getAlertChannelsList().hashCode();
      }
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Alerter Parameters is a common config for separate alerter components and alerters embedded in other components.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.Alerter.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.Alerter.Parameters)
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        alertName_ = "";

        severity_ = "";

        if (resolveTimeoutBuilder_ == null) {
          resolveTimeout_ = null;
        } else {
          resolveTimeout_ = null;
          resolveTimeoutBuilder_ = null;
        }
        alertChannels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableLabels().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Parameters_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters build() {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters result = new com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters(this);
        int from_bitField0_ = bitField0_;
        result.alertName_ = alertName_;
        result.severity_ = severity_;
        if (resolveTimeoutBuilder_ == null) {
          result.resolveTimeout_ = resolveTimeout_;
        } else {
          result.resolveTimeout_ = resolveTimeoutBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          alertChannels_ = alertChannels_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.alertChannels_ = alertChannels_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance()) return this;
        if (!other.getAlertName().isEmpty()) {
          alertName_ = other.alertName_;
          onChanged();
        }
        if (!other.getSeverity().isEmpty()) {
          severity_ = other.severity_;
          onChanged();
        }
        if (other.hasResolveTimeout()) {
          mergeResolveTimeout(other.getResolveTimeout());
        }
        if (!other.alertChannels_.isEmpty()) {
          if (alertChannels_.isEmpty()) {
            alertChannels_ = other.alertChannels_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAlertChannelsIsMutable();
            alertChannels_.addAll(other.alertChannels_);
          }
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object alertName_ = "";
      /**
       * <pre>
       * Name of the alert.
       * </pre>
       *
       * <code>string alert_name = 1 [json_name = "alertName"];</code>
       * @return The alertName.
       */
      public java.lang.String getAlertName() {
        java.lang.Object ref = alertName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alertName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the alert.
       * </pre>
       *
       * <code>string alert_name = 1 [json_name = "alertName"];</code>
       * @return The bytes for alertName.
       */
      public com.google.protobuf.ByteString
          getAlertNameBytes() {
        java.lang.Object ref = alertName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alertName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the alert.
       * </pre>
       *
       * <code>string alert_name = 1 [json_name = "alertName"];</code>
       * @param value The alertName to set.
       * @return This builder for chaining.
       */
      public Builder setAlertName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        alertName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the alert.
       * </pre>
       *
       * <code>string alert_name = 1 [json_name = "alertName"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAlertName() {
        
        alertName_ = getDefaultInstance().getAlertName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the alert.
       * </pre>
       *
       * <code>string alert_name = 1 [json_name = "alertName"];</code>
       * @param value The bytes for alertName to set.
       * @return This builder for chaining.
       */
      public Builder setAlertNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        alertName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object severity_ = "";
      /**
       * <pre>
       * Severity of the alert, one of 'info', 'warn' or 'crit'.
       * </pre>
       *
       * <code>string severity = 2 [json_name = "severity"];</code>
       * @return The severity.
       */
      public java.lang.String getSeverity() {
        java.lang.Object ref = severity_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          severity_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Severity of the alert, one of 'info', 'warn' or 'crit'.
       * </pre>
       *
       * <code>string severity = 2 [json_name = "severity"];</code>
       * @return The bytes for severity.
       */
      public com.google.protobuf.ByteString
          getSeverityBytes() {
        java.lang.Object ref = severity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          severity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Severity of the alert, one of 'info', 'warn' or 'crit'.
       * </pre>
       *
       * <code>string severity = 2 [json_name = "severity"];</code>
       * @param value The severity to set.
       * @return This builder for chaining.
       */
      public Builder setSeverity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        severity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Severity of the alert, one of 'info', 'warn' or 'crit'.
       * </pre>
       *
       * <code>string severity = 2 [json_name = "severity"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSeverity() {
        
        severity_ = getDefaultInstance().getSeverity();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Severity of the alert, one of 'info', 'warn' or 'crit'.
       * </pre>
       *
       * <code>string severity = 2 [json_name = "severity"];</code>
       * @param value The bytes for severity to set.
       * @return This builder for chaining.
       */
      public Builder setSeverityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        severity_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration resolveTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> resolveTimeoutBuilder_;
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       * @return Whether the resolveTimeout field is set.
       */
      public boolean hasResolveTimeout() {
        return resolveTimeoutBuilder_ != null || resolveTimeout_ != null;
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       * @return The resolveTimeout.
       */
      public com.google.protobuf.Duration getResolveTimeout() {
        if (resolveTimeoutBuilder_ == null) {
          return resolveTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : resolveTimeout_;
        } else {
          return resolveTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public Builder setResolveTimeout(com.google.protobuf.Duration value) {
        if (resolveTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resolveTimeout_ = value;
          onChanged();
        } else {
          resolveTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public Builder setResolveTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (resolveTimeoutBuilder_ == null) {
          resolveTimeout_ = builderForValue.build();
          onChanged();
        } else {
          resolveTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public Builder mergeResolveTimeout(com.google.protobuf.Duration value) {
        if (resolveTimeoutBuilder_ == null) {
          if (resolveTimeout_ != null) {
            resolveTimeout_ =
              com.google.protobuf.Duration.newBuilder(resolveTimeout_).mergeFrom(value).buildPartial();
          } else {
            resolveTimeout_ = value;
          }
          onChanged();
        } else {
          resolveTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public Builder clearResolveTimeout() {
        if (resolveTimeoutBuilder_ == null) {
          resolveTimeout_ = null;
          onChanged();
        } else {
          resolveTimeout_ = null;
          resolveTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public com.google.protobuf.Duration.Builder getResolveTimeoutBuilder() {
        
        onChanged();
        return getResolveTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      public com.google.protobuf.DurationOrBuilder getResolveTimeoutOrBuilder() {
        if (resolveTimeoutBuilder_ != null) {
          return resolveTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return resolveTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : resolveTimeout_;
        }
      }
      /**
       * <pre>
       * Duration of alert resolver.
       * </pre>
       *
       * <code>.google.protobuf.Duration resolve_timeout = 3 [json_name = "resolveTimeout"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getResolveTimeoutFieldBuilder() {
        if (resolveTimeoutBuilder_ == null) {
          resolveTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getResolveTimeout(),
                  getParentForChildren(),
                  isClean());
          resolveTimeout_ = null;
        }
        return resolveTimeoutBuilder_;
      }

      private com.google.protobuf.LazyStringList alertChannels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAlertChannelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          alertChannels_ = new com.google.protobuf.LazyStringArrayList(alertChannels_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @return A list containing the alertChannels.
       */
      public com.google.protobuf.ProtocolStringList
          getAlertChannelsList() {
        return alertChannels_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @return The count of alertChannels.
       */
      public int getAlertChannelsCount() {
        return alertChannels_.size();
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param index The index of the element to return.
       * @return The alertChannels at the given index.
       */
      public java.lang.String getAlertChannels(int index) {
        return alertChannels_.get(index);
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the alertChannels at the given index.
       */
      public com.google.protobuf.ByteString
          getAlertChannelsBytes(int index) {
        return alertChannels_.getByteString(index);
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param index The index to set the value at.
       * @param value The alertChannels to set.
       * @return This builder for chaining.
       */
      public Builder setAlertChannels(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAlertChannelsIsMutable();
        alertChannels_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param value The alertChannels to add.
       * @return This builder for chaining.
       */
      public Builder addAlertChannels(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAlertChannelsIsMutable();
        alertChannels_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param values The alertChannels to add.
       * @return This builder for chaining.
       */
      public Builder addAllAlertChannels(
          java.lang.Iterable<java.lang.String> values) {
        ensureAlertChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alertChannels_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAlertChannels() {
        alertChannels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alert channel strings.
       * </pre>
       *
       * <code>repeated string alert_channels = 4 [json_name = "alertChannels"];</code>
       * @param value The bytes of the alertChannels to add.
       * @return This builder for chaining.
       */
      public Builder addAlertChannelsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAlertChannelsIsMutable();
        alertChannels_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */

      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Additional labels to add to alert.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 5 [json_name = "labels"];</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.Alerter.Parameters)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.Alerter.Parameters)
    private static final com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      @java.lang.Override
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.Alerter.Ins)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     * @return Whether the signal field is set.
     */
    boolean hasSignal();
    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     * @return The signal.
     */
    com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal();
    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder();
  }
  /**
   * <pre>
   * Inputs for the Alerter component.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.Alerter.Ins}
   */
  public static final class Ins extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.Alerter.Ins)
      InsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ins.newBuilder() to construct.
    private Ins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ins() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Ins();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ins(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
              if (signal_ != null) {
                subBuilder = signal_.toBuilder();
              }
              signal_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signal_);
                signal_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Ins_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Ins_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder.class);
    }

    public static final int SIGNAL_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     * @return Whether the signal field is set.
     */
    @java.lang.Override
    public boolean hasSignal() {
      return signal_ != null;
    }
    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     * @return The signal.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
      return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
    }
    /**
     * <pre>
     * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
      return getSignal();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (signal_ != null) {
        output.writeMessage(1, getSignal());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (signal_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSignal());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins other = (com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins) obj;

      if (hasSignal() != other.hasSignal()) return false;
      if (hasSignal()) {
        if (!getSignal()
            .equals(other.getSignal())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSignal()) {
        hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
        hash = (53 * hash) + getSignal().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inputs for the Alerter component.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.Alerter.Ins}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.Alerter.Ins)
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Ins_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Ins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signalBuilder_ == null) {
          signal_ = null;
        } else {
          signal_ = null;
          signalBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_Ins_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins build() {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins result = new com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins(this);
        if (signalBuilder_ == null) {
          result.signal_ = signal_;
        } else {
          result.signal_ = signalBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.getDefaultInstance()) return this;
        if (other.hasSignal()) {
          mergeSignal(other.getSignal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> signalBuilder_;
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return Whether the signal field is set.
       */
      public boolean hasSignal() {
        return signalBuilder_ != null || signal_ != null;
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return The signal.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
        if (signalBuilder_ == null) {
          return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
        } else {
          return signalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public Builder setSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
        if (signalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signal_ = value;
          onChanged();
        } else {
          signalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public Builder setSignal(
          com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
        if (signalBuilder_ == null) {
          signal_ = builderForValue.build();
          onChanged();
        } else {
          signalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public Builder mergeSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
        if (signalBuilder_ == null) {
          if (signal_ != null) {
            signal_ =
              com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(signal_).mergeFrom(value).buildPartial();
          } else {
            signal_ = value;
          }
          onChanged();
        } else {
          signalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public Builder clearSignal() {
        if (signalBuilder_ == null) {
          signal_ = null;
          onChanged();
        } else {
          signal_ = null;
          signalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getSignalBuilder() {
        
        onChanged();
        return getSignalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
        if (signalBuilder_ != null) {
          return signalBuilder_.getMessageOrBuilder();
        } else {
          return signal_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
        }
      }
      /**
       * <pre>
       * Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
          getSignalFieldBuilder() {
        if (signalBuilder_ == null) {
          signalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                  getSignal(),
                  getParentForChildren(),
                  isClean());
          signal_ = null;
        }
        return signalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.Alerter.Ins)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.Alerter.Ins)
    private static final com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ins>
        PARSER = new com.google.protobuf.AbstractParser<Ins>() {
      @java.lang.Override
      public Ins parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ins(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ins> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ins> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int IN_PORTS_FIELD_NUMBER = 1;
  private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins inPorts_;
  /**
   * <pre>
   * Input ports for the Alerter component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return Whether the inPorts field is set.
   */
  @java.lang.Override
  public boolean hasInPorts() {
    return inPorts_ != null;
  }
  /**
   * <pre>
   * Input ports for the Alerter component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return The inPorts.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins getInPorts() {
    return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.getDefaultInstance() : inPorts_;
  }
  /**
   * <pre>
   * Input ports for the Alerter component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder getInPortsOrBuilder() {
    return getInPorts();
  }

  public static final int PARAMETERS_FIELD_NUMBER = 2;
  private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parameters_;
  /**
   * <pre>
   * Alerter configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
   * @return Whether the parameters field is set.
   */
  @java.lang.Override
  public boolean hasParameters() {
    return parameters_ != null;
  }
  /**
   * <pre>
   * Alerter configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
   * @return The parameters.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getParameters() {
    return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : parameters_;
  }
  /**
   * <pre>
   * Alerter configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getParametersOrBuilder() {
    return getParameters();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inPorts_ != null) {
      output.writeMessage(1, getInPorts());
    }
    if (parameters_ != null) {
      output.writeMessage(2, getParameters());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (inPorts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInPorts());
    }
    if (parameters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getParameters());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.Alerter other = (com.fluxninja.generated.aperture.policy.language.v1.Alerter) obj;

    if (hasInPorts() != other.hasInPorts()) return false;
    if (hasInPorts()) {
      if (!getInPorts()
          .equals(other.getInPorts())) return false;
    }
    if (hasParameters() != other.hasParameters()) return false;
    if (hasParameters()) {
      if (!getParameters()
          .equals(other.getParameters())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInPorts()) {
      hash = (37 * hash) + IN_PORTS_FIELD_NUMBER;
      hash = (53 * hash) + getInPorts().hashCode();
    }
    if (hasParameters()) {
      hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + getParameters().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.Alerter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Alerter reacts to a signal and generates alert to send to alert manager.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.Alerter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.Alerter)
      com.fluxninja.generated.aperture.policy.language.v1.AlerterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.class, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.Alerter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inPortsBuilder_ == null) {
        inPorts_ = null;
      } else {
        inPorts_ = null;
        inPortsBuilder_ = null;
      }
      if (parametersBuilder_ == null) {
        parameters_ = null;
      } else {
        parameters_ = null;
        parametersBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.internal_static_aperture_policy_language_v1_Alerter_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.Alerter.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter build() {
      com.fluxninja.generated.aperture.policy.language.v1.Alerter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.Alerter result = new com.fluxninja.generated.aperture.policy.language.v1.Alerter(this);
      if (inPortsBuilder_ == null) {
        result.inPorts_ = inPorts_;
      } else {
        result.inPorts_ = inPortsBuilder_.build();
      }
      if (parametersBuilder_ == null) {
        result.parameters_ = parameters_;
      } else {
        result.parameters_ = parametersBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.Alerter) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Alerter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.Alerter other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.Alerter.getDefaultInstance()) return this;
      if (other.hasInPorts()) {
        mergeInPorts(other.getInPorts());
      }
      if (other.hasParameters()) {
        mergeParameters(other.getParameters());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.Alerter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.Alerter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins inPorts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder> inPortsBuilder_;
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    public boolean hasInPorts() {
      return inPortsBuilder_ != null || inPorts_ != null;
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins getInPorts() {
      if (inPortsBuilder_ == null) {
        return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.getDefaultInstance() : inPorts_;
      } else {
        return inPortsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public Builder setInPorts(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins value) {
      if (inPortsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inPorts_ = value;
        onChanged();
      } else {
        inPortsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public Builder setInPorts(
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder builderForValue) {
      if (inPortsBuilder_ == null) {
        inPorts_ = builderForValue.build();
        onChanged();
      } else {
        inPortsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public Builder mergeInPorts(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins value) {
      if (inPortsBuilder_ == null) {
        if (inPorts_ != null) {
          inPorts_ =
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.newBuilder(inPorts_).mergeFrom(value).buildPartial();
        } else {
          inPorts_ = value;
        }
        onChanged();
      } else {
        inPortsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public Builder clearInPorts() {
      if (inPortsBuilder_ == null) {
        inPorts_ = null;
        onChanged();
      } else {
        inPorts_ = null;
        inPortsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder getInPortsBuilder() {
      
      onChanged();
      return getInPortsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder getInPortsOrBuilder() {
      if (inPortsBuilder_ != null) {
        return inPortsBuilder_.getMessageOrBuilder();
      } else {
        return inPorts_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.getDefaultInstance() : inPorts_;
      }
    }
    /**
     * <pre>
     * Input ports for the Alerter component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder> 
        getInPortsFieldBuilder() {
      if (inPortsBuilder_ == null) {
        inPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.InsOrBuilder>(
                getInPorts(),
                getParentForChildren(),
                isClean());
        inPorts_ = null;
      }
      return inPortsBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters parameters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> parametersBuilder_;
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return Whether the parameters field is set.
     */
    public boolean hasParameters() {
      return parametersBuilder_ != null || parameters_ != null;
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return The parameters.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getParameters() {
      if (parametersBuilder_ == null) {
        return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : parameters_;
      } else {
        return parametersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public Builder setParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (parametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parameters_ = value;
        onChanged();
      } else {
        parametersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public Builder setParameters(
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder builderForValue) {
      if (parametersBuilder_ == null) {
        parameters_ = builderForValue.build();
        onChanged();
      } else {
        parametersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public Builder mergeParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (parametersBuilder_ == null) {
        if (parameters_ != null) {
          parameters_ =
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder(parameters_).mergeFrom(value).buildPartial();
        } else {
          parameters_ = value;
        }
        onChanged();
      } else {
        parametersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public Builder clearParameters() {
      if (parametersBuilder_ == null) {
        parameters_ = null;
        onChanged();
      } else {
        parameters_ = null;
        parametersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder getParametersBuilder() {
      
      onChanged();
      return getParametersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getParametersOrBuilder() {
      if (parametersBuilder_ != null) {
        return parametersBuilder_.getMessageOrBuilder();
      } else {
        return parameters_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : parameters_;
      }
    }
    /**
     * <pre>
     * Alerter configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> 
        getParametersFieldBuilder() {
      if (parametersBuilder_ == null) {
        parametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder>(
                getParameters(),
                getParentForChildren(),
                isClean());
        parameters_ = null;
      }
      return parametersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.Alerter)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.Alerter)
  private static final com.fluxninja.generated.aperture.policy.language.v1.Alerter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.Alerter();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.Alerter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Alerter>
      PARSER = new com.google.protobuf.AbstractParser<Alerter>() {
    @java.lang.Override
    public Alerter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Alerter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Alerter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Alerter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

