// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/plugins/fluxninja/v1/heartbeat.proto

package com.fluxninja.generated.aperture.plugins.fluxninja.v1;

public final class HeartbeatProto {
  private HeartbeatProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ServicesList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-aperture/plugins/fluxninja/v1/heartbea" +
      "t.proto\022\035aperture.plugins.fluxninja.v1\032\033" +
      "aperture/info/v1/info.proto\032\035aperture/pe" +
      "ers/v1/peers.proto\032$aperture/policy/sync" +
      "/v1/policy.proto\032\037aperture/status/v1/sta" +
      "tus.proto\032\034google/api/annotations.proto\032" +
      "\033google/protobuf/empty.proto\"\320\004\n\rReportR" +
      "equest\022@\n\014version_info\030\001 \001(\0132\035.aperture." +
      "info.v1.VersionInfoR\013versionInfo\022@\n\014proc" +
      "ess_info\030\002 \001(\0132\035.aperture.info.v1.Proces" +
      "sInfoR\013processInfo\0227\n\thost_info\030\003 \001(\0132\032." +
      "aperture.info.v1.HostInfoR\010hostInfo\022\037\n\013a" +
      "gent_group\030\004 \001(\tR\nagentGroup\022V\n\017controll" +
      "er_info\030\005 \001(\0132-.aperture.plugins.fluxnin" +
      "ja.v1.ControllerInfoR\016controllerInfo\022.\n\005" +
      "peers\030\006 \001(\0132\030.aperture.peers.v1.PeersR\005p" +
      "eers\022P\n\rservices_list\030\010 \001(\0132+.aperture.p" +
      "lugins.fluxninja.v1.ServicesListR\014servic" +
      "esList\022B\n\014all_statuses\030\t \001(\0132\037.aperture." +
      "status.v1.GroupStatusR\013allStatuses\022C\n\010po" +
      "licies\030\n \001(\0132\'.aperture.policy.sync.v1.P" +
      "olicyWrappersR\010policies\"\020\n\016ReportRespons" +
      "e\" \n\016ControllerInfo\022\016\n\002id\030\001 \001(\tR\002id\"\270\001\n\014" +
      "ServicesList\022B\n\010services\030\001 \003(\0132&.apertur" +
      "e.plugins.fluxninja.v1.ServiceR\010services" +
      "\022d\n\024overlapping_services\030\002 \003(\01321.apertur" +
      "e.plugins.fluxninja.v1.OverlappingServic" +
      "eR\023overlappingServices\"D\n\007Service\022\022\n\004nam" +
      "e\030\001 \001(\tR\004name\022%\n\016entities_count\030\002 \001(\005R\re" +
      "ntitiesCount\"s\n\022OverlappingService\022\032\n\010se" +
      "rvice1\030\001 \001(\tR\010service1\022\032\n\010service2\030\002 \001(\t" +
      "R\010service2\022%\n\016entities_count\030\003 \001(\005R\renti" +
      "tiesCount2\243\001\n\020FluxNinjaService\022\216\001\n\006Repor" +
      "t\022,.aperture.plugins.fluxninja.v1.Report" +
      "Request\032-.aperture.plugins.fluxninja.v1." +
      "ReportResponse\"\'\202\323\344\223\002!:\001*\"\034/plugins/flux" +
      "ninja/v1/report2\242\001\n\025ControllerInfoServic" +
      "e\022\210\001\n\021GetControllerInfo\022\026.google.protobu" +
      "f.Empty\032-.aperture.plugins.fluxninja.v1." +
      "ControllerInfo\",\202\323\344\223\002&\022$/plugins/fluxnin" +
      "ja/v1/controllerinfoB\270\002\n5com.fluxninja.g" +
      "enerated.aperture.plugins.fluxninja.v1B\016" +
      "HeartbeatProtoP\001ZXgithub.com/fluxninja/a" +
      "perture/api/gen/proto/go/aperture/plugin" +
      "s/fluxninja/v1;fluxninjav1\242\002\003APF\252\002\035Apert" +
      "ure.Plugins.Fluxninja.V1\312\002\035Aperture\\Plug" +
      "ins\\Fluxninja\\V1\342\002)Aperture\\Plugins\\Flux" +
      "ninja\\V1\\GPBMetadata\352\002 Aperture::Plugins" +
      "::Fluxninja::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.info.v1.InfoProto.getDescriptor(),
          com.fluxninja.generated.aperture.peers.v1.PeersProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.sync.v1.PolicyProto.getDescriptor(),
          com.fluxninja.generated.aperture.status.v1.StatusProto.getDescriptor(),
          com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor,
        new java.lang.String[] { "VersionInfo", "ProcessInfo", "HostInfo", "AgentGroup", "ControllerInfo", "Peers", "ServicesList", "AllStatuses", "Policies", });
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor,
        new java.lang.String[] { });
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor,
        new java.lang.String[] { "Services", "OverlappingServices", });
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_Service_descriptor,
        new java.lang.String[] { "Name", "EntitiesCount", });
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor,
        new java.lang.String[] { "Service1", "Service2", "EntitiesCount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.aperture.info.v1.InfoProto.getDescriptor();
    com.fluxninja.generated.aperture.peers.v1.PeersProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.sync.v1.PolicyProto.getDescriptor();
    com.fluxninja.generated.aperture.status.v1.StatusProto.getDescriptor();
    com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
