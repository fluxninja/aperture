// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/peers/v1/peers.proto

package com.fluxninja.generated.aperture.peers.v1;

public interface PeerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.peers.v1.Peer)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <code>string hostname = 2 [json_name = "hostname"];</code>
   * @return The hostname.
   */
  java.lang.String getHostname();
  /**
   * <code>string hostname = 2 [json_name = "hostname"];</code>
   * @return The bytes for hostname.
   */
  com.google.protobuf.ByteString
      getHostnameBytes();

  /**
   * <code>map&lt;string, string&gt; services = 3 [json_name = "services"];</code>
   */
  int getServicesCount();
  /**
   * <code>map&lt;string, string&gt; services = 3 [json_name = "services"];</code>
   */
  boolean containsServices(
      java.lang.String key);
  /**
   * Use {@link #getServicesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getServices();
  /**
   * <code>map&lt;string, string&gt; services = 3 [json_name = "services"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getServicesMap();
  /**
   * <code>map&lt;string, string&gt; services = 3 [json_name = "services"];</code>
   */

  /* nullable */
java.lang.String getServicesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; services = 3 [json_name = "services"];</code>
   */

  java.lang.String getServicesOrThrow(
      java.lang.String key);
}
