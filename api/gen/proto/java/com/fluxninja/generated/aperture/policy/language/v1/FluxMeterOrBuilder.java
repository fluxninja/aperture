// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/fluxmeter.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface FluxMeterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.FluxMeter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * What latency should we measure in the histogram created by this Flux Meter.
   * * For traffic control points, fluxmeter will measure the duration of the
   *   whole http transaction (including sending request and receiving
   *   response).
   * * For feature control points, fluxmeter will measure execution of the span
   *   associated with particular feature. What contributes to the span's
   *   duration is entirely up to the user code that uses Aperture SDK.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector"];</code>
   * @return Whether the selector field is set.
   */
  boolean hasSelector();
  /**
   * <pre>
   * What latency should we measure in the histogram created by this Flux Meter.
   * * For traffic control points, fluxmeter will measure the duration of the
   *   whole http transaction (including sending request and receiving
   *   response).
   * * For feature control points, fluxmeter will measure execution of the span
   *   associated with particular feature. What contributes to the span's
   *   duration is entirely up to the user code that uses Aperture SDK.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector"];</code>
   * @return The selector.
   */
  com.fluxninja.generated.aperture.policy.language.v1.Selector getSelector();
  /**
   * <pre>
   * What latency should we measure in the histogram created by this Flux Meter.
   * * For traffic control points, fluxmeter will measure the duration of the
   *   whole http transaction (including sending request and receiving
   *   response).
   * * For feature control points, fluxmeter will measure execution of the span
   *   associated with particular feature. What contributes to the span's
   *   duration is entirely up to the user code that uses Aperture SDK.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder getSelectorOrBuilder();

  /**
   * <code>.aperture.policy.language.v1.FluxMeter.StaticBuckets static_buckets = 2 [json_name = "staticBuckets"];</code>
   * @return Whether the staticBuckets field is set.
   */
  boolean hasStaticBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.StaticBuckets static_buckets = 2 [json_name = "staticBuckets"];</code>
   * @return The staticBuckets.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.StaticBuckets getStaticBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.StaticBuckets static_buckets = 2 [json_name = "staticBuckets"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.StaticBucketsOrBuilder getStaticBucketsOrBuilder();

  /**
   * <code>.aperture.policy.language.v1.FluxMeter.LinearBuckets linear_buckets = 3 [json_name = "linearBuckets"];</code>
   * @return Whether the linearBuckets field is set.
   */
  boolean hasLinearBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.LinearBuckets linear_buckets = 3 [json_name = "linearBuckets"];</code>
   * @return The linearBuckets.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.LinearBuckets getLinearBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.LinearBuckets linear_buckets = 3 [json_name = "linearBuckets"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.LinearBucketsOrBuilder getLinearBucketsOrBuilder();

  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBuckets exponential_buckets = 4 [json_name = "exponentialBuckets"];</code>
   * @return Whether the exponentialBuckets field is set.
   */
  boolean hasExponentialBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBuckets exponential_buckets = 4 [json_name = "exponentialBuckets"];</code>
   * @return The exponentialBuckets.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.ExponentialBuckets getExponentialBuckets();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBuckets exponential_buckets = 4 [json_name = "exponentialBuckets"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.ExponentialBucketsOrBuilder getExponentialBucketsOrBuilder();

  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBucketsRange exponential_buckets_range = 5 [json_name = "exponentialBucketsRange"];</code>
   * @return Whether the exponentialBucketsRange field is set.
   */
  boolean hasExponentialBucketsRange();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBucketsRange exponential_buckets_range = 5 [json_name = "exponentialBucketsRange"];</code>
   * @return The exponentialBucketsRange.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.ExponentialBucketsRange getExponentialBucketsRange();
  /**
   * <code>.aperture.policy.language.v1.FluxMeter.ExponentialBucketsRange exponential_buckets_range = 5 [json_name = "exponentialBucketsRange"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.ExponentialBucketsRangeOrBuilder getExponentialBucketsRangeOrBuilder();

  /**
   * <pre>
   * Key of the attribute in access log or span from which the metric for this flux meter is read.
   * :::info
   * For list of available attributes in Envoy access logs, refer
   * [Envoy Filter](/get-started/installation/agent/envoy/istio.md#envoy-filter)
   * :::
   * </pre>
   *
   * <code>string attribute_key = 6 [json_name = "attributeKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The attributeKey.
   */
  java.lang.String getAttributeKey();
  /**
   * <pre>
   * Key of the attribute in access log or span from which the metric for this flux meter is read.
   * :::info
   * For list of available attributes in Envoy access logs, refer
   * [Envoy Filter](/get-started/installation/agent/envoy/istio.md#envoy-filter)
   * :::
   * </pre>
   *
   * <code>string attribute_key = 6 [json_name = "attributeKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for attributeKey.
   */
  com.google.protobuf.ByteString
      getAttributeKeyBytes();

  public com.fluxninja.generated.aperture.policy.language.v1.FluxMeter.HistogramBucketsCase getHistogramBucketsCase();
}
