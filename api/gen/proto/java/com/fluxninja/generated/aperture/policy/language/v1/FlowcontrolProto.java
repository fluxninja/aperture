// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/flowcontrol.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public final class FlowcontrolProto {
  private FlowcontrolProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FlowSelector_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FlowSelector_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_ServiceSelector_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_ServiceSelector_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FlowMatcher_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FlowMatcher_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FlowControlResources_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FlowControlResources_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FlowControlResources_FluxMetersEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FlowControlResources_FluxMetersEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Classifier_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Classifier_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Classifier_RulesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Classifier_RulesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Rule_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Rule_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Rule_Rego_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Rule_Rego_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Rego_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Rego_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Rego_LabelProperties_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Rego_LabelProperties_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Rego_LabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Rego_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Extractor_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Extractor_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_JSONExtractor_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_JSONExtractor_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_AddressExtractor_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_AddressExtractor_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_JWTExtractor_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_JWTExtractor_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_PathTemplateMatcher_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_TemplateValuesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_PathTemplateMatcher_TemplateValuesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FlowControl_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FlowControl_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_Parameters_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_LazySync_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_Parameters_LazySync_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_Override_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_RateLimiter_Ins_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_ConcurrencyLimiter_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_ConcurrencyLimiter_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Scheduler_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Scheduler_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Scheduler_Workload_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Scheduler_Workload_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Scheduler_Workload_Parameters_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Scheduler_Workload_Parameters_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Scheduler_Parameters_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Scheduler_Parameters_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Scheduler_Outs_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Scheduler_Outs_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LoadActuator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LoadActuator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LoadActuator_DynamicConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LoadActuator_DynamicConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LoadActuator_Ins_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LoadActuator_Ins_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_AIMDConcurrencyController_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Ins_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Ins_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Outs_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Outs_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-aperture/policy/language/v1/flowcontro" +
      "l.proto\022\033aperture.policy.language.v1\032/ap" +
      "erture/policy/language/v1/label_matcher." +
      "proto\032\'aperture/policy/language/v1/ports" +
      ".proto\0320aperture/policy/language/v1/std_" +
      "components.proto\032\036google/protobuf/durati" +
      "on.proto\"\264\001\n\014FlowSelector\022W\n\020service_sel" +
      "ector\030\001 \001(\0132,.aperture.policy.language.v" +
      "1.ServiceSelectorR\017serviceSelector\022K\n\014fl" +
      "ow_matcher\030\002 \001(\0132(.aperture.policy.langu" +
      "age.v1.FlowMatcherR\013flowMatcher\"L\n\017Servi" +
      "ceSelector\022\037\n\013agent_group\030\001 \001(\tR\nagentGr" +
      "oup\022\030\n\007service\030\002 \001(\tR\007service\"\202\001\n\013FlowMa" +
      "tcher\022#\n\rcontrol_point\030\001 \001(\tR\014controlPoi" +
      "nt\022N\n\rlabel_matcher\030\002 \001(\0132).aperture.pol" +
      "icy.language.v1.LabelMatcherR\014labelMatch" +
      "er\"\254\002\n\024FlowControlResources\022b\n\013flux_mete" +
      "rs\030\001 \003(\0132A.aperture.policy.language.v1.F" +
      "lowControlResources.FluxMetersEntryR\nflu" +
      "xMeters\022I\n\013classifiers\030\002 \003(\0132\'.aperture." +
      "policy.language.v1.ClassifierR\013classifie" +
      "rs\032e\n\017FluxMetersEntry\022\020\n\003key\030\001 \001(\tR\003key\022" +
      "<\n\005value\030\002 \001(\0132&.aperture.policy.languag" +
      "e.v1.FluxMeterR\005value:\0028\001\"\354\006\n\tFluxMeter\022" +
      "N\n\rflow_selector\030\001 \001(\0132).aperture.policy" +
      ".language.v1.FlowSelectorR\014flowSelector\022" +
      "]\n\016static_buckets\030\002 \001(\01324.aperture.polic" +
      "y.language.v1.FluxMeter.StaticBucketsH\000R" +
      "\rstaticBuckets\022]\n\016linear_buckets\030\003 \001(\01324" +
      ".aperture.policy.language.v1.FluxMeter.L" +
      "inearBucketsH\000R\rlinearBuckets\022l\n\023exponen" +
      "tial_buckets\030\004 \001(\01329.aperture.policy.lan" +
      "guage.v1.FluxMeter.ExponentialBucketsH\000R" +
      "\022exponentialBuckets\022|\n\031exponential_bucke" +
      "ts_range\030\005 \001(\0132>.aperture.policy.languag" +
      "e.v1.FluxMeter.ExponentialBucketsRangeH\000" +
      "R\027exponentialBucketsRange\022#\n\rattribute_k" +
      "ey\030\006 \001(\tR\014attributeKey\032)\n\rStaticBuckets\022" +
      "\030\n\007buckets\030\001 \003(\001R\007buckets\032Q\n\rLinearBucke" +
      "ts\022\024\n\005start\030\001 \001(\001R\005start\022\024\n\005width\030\002 \001(\001R" +
      "\005width\022\024\n\005count\030\003 \001(\005R\005count\032X\n\022Exponent" +
      "ialBuckets\022\024\n\005start\030\001 \001(\001R\005start\022\026\n\006fact" +
      "or\030\002 \001(\001R\006factor\022\024\n\005count\030\003 \001(\005R\005count\032S" +
      "\n\027ExponentialBucketsRange\022\020\n\003min\030\001 \001(\001R\003" +
      "min\022\020\n\003max\030\002 \001(\001R\003max\022\024\n\005count\030\003 \001(\005R\005co" +
      "untB\023\n\021histogram_buckets\"\272\002\n\nClassifier\022" +
      "N\n\rflow_selector\030\001 \001(\0132).aperture.policy" +
      ".language.v1.FlowSelectorR\014flowSelector\022" +
      "H\n\005rules\030\002 \003(\01322.aperture.policy.languag" +
      "e.v1.Classifier.RulesEntryR\005rules\0225\n\004reg" +
      "o\030\003 \001(\0132!.aperture.policy.language.v1.Re" +
      "goR\004rego\032[\n\nRulesEntry\022\020\n\003key\030\001 \001(\tR\003key" +
      "\0227\n\005value\030\002 \001(\0132!.aperture.policy.langua" +
      "ge.v1.RuleR\005value:\0028\001\"\352\001\n\004Rule\022F\n\textrac" +
      "tor\030\001 \001(\0132&.aperture.policy.language.v1." +
      "ExtractorH\000R\textractor\022<\n\004rego\030\002 \001(\0132&.a" +
      "perture.policy.language.v1.Rule.RegoH\000R\004" +
      "rego\022\034\n\ttelemetry\030\003 \001(\010R\ttelemetry\0324\n\004Re" +
      "go\022\026\n\006source\030\001 \001(\tR\006source\022\024\n\005query\030\002 \001(" +
      "\tR\005queryB\010\n\006source\"\204\002\n\004Rego\022E\n\006labels\030\001 " +
      "\003(\0132-.aperture.policy.language.v1.Rego.L" +
      "abelsEntryR\006labels\022\026\n\006module\030\002 \001(\tR\006modu" +
      "le\032/\n\017LabelProperties\022\034\n\ttelemetry\030\001 \001(\010" +
      "R\ttelemetry\032l\n\013LabelsEntry\022\020\n\003key\030\001 \001(\tR" +
      "\003key\022G\n\005value\030\002 \001(\01321.aperture.policy.la" +
      "nguage.v1.Rego.LabelPropertiesR\005value:\0028" +
      "\001\"\323\002\n\tExtractor\022\024\n\004from\030\001 \001(\tH\000R\004from\022@\n" +
      "\004json\030\002 \001(\0132*.aperture.policy.language.v" +
      "1.JSONExtractorH\000R\004json\022I\n\007address\030\003 \001(\013" +
      "2-.aperture.policy.language.v1.AddressEx" +
      "tractorH\000R\007address\022=\n\003jwt\030\004 \001(\0132).apertu" +
      "re.policy.language.v1.JWTExtractorH\000R\003jw" +
      "t\022Y\n\016path_templates\030\005 \001(\01320.aperture.pol" +
      "icy.language.v1.PathTemplateMatcherH\000R\rp" +
      "athTemplatesB\t\n\007variant\"=\n\rJSONExtractor" +
      "\022\022\n\004from\030\001 \001(\tR\004from\022\030\n\007pointer\030\002 \001(\tR\007p" +
      "ointer\"&\n\020AddressExtractor\022\022\n\004from\030\001 \001(\t" +
      "R\004from\"E\n\014JWTExtractor\022\022\n\004from\030\001 \001(\tR\004fr" +
      "om\022!\n\014json_pointer\030\002 \001(\tR\013jsonPointer\"\307\001" +
      "\n\023PathTemplateMatcher\022m\n\017template_values" +
      "\030\001 \003(\0132D.aperture.policy.language.v1.Pat" +
      "hTemplateMatcher.TemplateValuesEntryR\016te" +
      "mplateValues\032A\n\023TemplateValuesEntry\022\020\n\003k" +
      "ey\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"" +
      "\307\002\n\013FlowControl\022M\n\014rate_limiter\030\001 \001(\0132(." +
      "aperture.policy.language.v1.RateLimiterH" +
      "\000R\013rateLimiter\022b\n\023concurrency_limiter\030\002 " +
      "\001(\0132/.aperture.policy.language.v1.Concur" +
      "rencyLimiterH\000R\022concurrencyLimiter\022x\n\033ai" +
      "md_concurrency_controller\030\003 \001(\01326.apertu" +
      "re.policy.language.v1.AIMDConcurrencyCon" +
      "trollerH\000R\031aimdConcurrencyControllerB\013\n\t" +
      "component\"\234\007\n\013RateLimiter\022G\n\010in_ports\030\001 " +
      "\001(\0132,.aperture.policy.language.v1.RateLi" +
      "miter.InsR\007inPorts\022N\n\rflow_selector\030\002 \001(" +
      "\0132).aperture.policy.language.v1.FlowSele" +
      "ctorR\014flowSelector\022S\n\nparameters\030\003 \001(\01323" +
      ".aperture.policy.language.v1.RateLimiter" +
      ".ParametersR\nparameters\022,\n\022dynamic_confi" +
      "g_key\030\004 \001(\tR\020dynamicConfigKey\022]\n\016default" +
      "_config\030\005 \001(\01326.aperture.policy.language" +
      ".v1.RateLimiter.DynamicConfigR\rdefaultCo" +
      "nfig\032\222\002\n\nParameters\022K\n\024limit_reset_inter" +
      "val\030\001 \001(\0132\031.google.protobuf.DurationR\022li" +
      "mitResetInterval\022\033\n\tlabel_key\030\002 \001(\tR\010lab" +
      "elKey\022Y\n\tlazy_sync\030\003 \001(\0132<.aperture.poli" +
      "cy.language.v1.RateLimiter.Parameters.La" +
      "zySyncR\010lazySync\032?\n\010LazySync\022\030\n\007enabled\030" +
      "\001 \001(\010R\007enabled\022\031\n\010num_sync\030\002 \001(\rR\007numSyn" +
      "c\032Y\n\010Override\022\037\n\013label_value\030\001 \001(\tR\nlabe" +
      "lValue\022,\n\022limit_scale_factor\030\002 \001(\001R\020limi" +
      "tScaleFactor\032`\n\rDynamicConfig\022O\n\toverrid" +
      "es\030\001 \003(\01321.aperture.policy.language.v1.R" +
      "ateLimiter.OverrideR\toverrides\032@\n\003Ins\0229\n" +
      "\005limit\030\001 \001(\0132#.aperture.policy.language." +
      "v1.InPortR\005limit\"\222\002\n\022ConcurrencyLimiter\022" +
      "N\n\rflow_selector\030\001 \001(\0132).aperture.policy" +
      ".language.v1.FlowSelectorR\014flowSelector\022" +
      "D\n\tscheduler\030\002 \001(\0132&.aperture.policy.lan" +
      "guage.v1.SchedulerR\tscheduler\022P\n\rload_ac" +
      "tuator\030\003 \001(\0132).aperture.policy.language." +
      "v1.LoadActuatorH\000R\014loadActuatorB\024\n\022actua" +
      "tion_strategy\"\337\007\n\tScheduler\022H\n\tout_ports" +
      "\030\001 \001(\0132+.aperture.policy.language.v1.Sch" +
      "eduler.OutsR\010outPorts\022Q\n\nparameters\030\002 \001(" +
      "\01321.aperture.policy.language.v1.Schedule" +
      "r.ParametersR\nparameters\032\233\002\n\010Workload\022Z\n" +
      "\nparameters\030\001 \001(\0132:.aperture.policy.lang" +
      "uage.v1.Scheduler.Workload.ParametersR\np" +
      "arameters\022N\n\rlabel_matcher\030\002 \001(\0132).apert" +
      "ure.policy.language.v1.LabelMatcherR\014lab" +
      "elMatcher\032c\n\nParameters\022\032\n\010priority\030\001 \001(" +
      "\rR\010priority\022\026\n\006tokens\030\002 \001(\004R\006tokens\022!\n\014f" +
      "airness_key\030\003 \001(\tR\013fairnessKey\032\333\002\n\nParam" +
      "eters\022M\n\tworkloads\030\001 \003(\0132/.aperture.poli" +
      "cy.language.v1.Scheduler.WorkloadR\tworkl" +
      "oads\022z\n\033default_workload_parameters\030\002 \001(" +
      "\0132:.aperture.policy.language.v1.Schedule" +
      "r.Workload.ParametersR\031defaultWorkloadPa" +
      "rameters\022\037\n\013auto_tokens\030\003 \001(\010R\nautoToken" +
      "s\022%\n\016timeout_factor\030\004 \001(\001R\rtimeoutFactor" +
      "\022:\n\013max_timeout\030\005 \001(\0132\031.google.protobuf." +
      "DurationR\nmaxTimeout\032\270\001\n\004Outs\022W\n\024accepte" +
      "d_concurrency\030\001 \001(\0132$.aperture.policy.la" +
      "nguage.v1.OutPortR\023acceptedConcurrency\022W" +
      "\n\024incoming_concurrency\030\002 \001(\0132$.aperture." +
      "policy.language.v1.OutPortR\023incomingConc" +
      "urrency\"\345\002\n\014LoadActuator\022H\n\010in_ports\030\001 \001" +
      "(\0132-.aperture.policy.language.v1.LoadAct" +
      "uator.InsR\007inPorts\022,\n\022dynamic_config_key" +
      "\030\002 \001(\tR\020dynamicConfigKey\022^\n\016default_conf" +
      "ig\030\003 \001(\01327.aperture.policy.language.v1.L" +
      "oadActuator.DynamicConfigR\rdefaultConfig" +
      "\032(\n\rDynamicConfig\022\027\n\007dry_run\030\001 \001(\010R\006dryR" +
      "un\032S\n\003Ins\022L\n\017load_multiplier\030\001 \001(\0132#.ape" +
      "rture.policy.language.v1.InPortR\016loadMul" +
      "tiplier\"\234\013\n\031AIMDConcurrencyController\022U\n" +
      "\010in_ports\030\001 \001(\0132:.aperture.policy.langua" +
      "ge.v1.AIMDConcurrencyController.InsR\007inP" +
      "orts\022X\n\tout_ports\030\002 \001(\0132;.aperture.polic" +
      "y.language.v1.AIMDConcurrencyController." +
      "OutsR\010outPorts\022N\n\rflow_selector\030\003 \001(\0132)." +
      "aperture.policy.language.v1.FlowSelector" +
      "R\014flowSelector\022d\n\024scheduler_parameters\030\004" +
      " \001(\01321.aperture.policy.language.v1.Sched" +
      "uler.ParametersR\023schedulerParameters\022k\n\023" +
      "gradient_parameters\030\005 \001(\0132:.aperture.pol" +
      "icy.language.v1.GradientController.Param" +
      "etersR\022gradientParameters\022.\n\023max_load_mu" +
      "ltiplier\030\006 \001(\001R\021maxLoadMultiplier\022G\n loa" +
      "d_multiplier_linear_increment\030\007 \001(\001R\035loa" +
      "dMultiplierLinearIncrement\022^\n\022alerter_pa" +
      "rameters\030\010 \001(\0132/.aperture.policy.languag" +
      "e.v1.Alerter.ParametersR\021alerterParamete" +
      "rs\022,\n\022dynamic_config_key\030\t \001(\tR\020dynamicC" +
      "onfigKey\022^\n\016default_config\030\n \001(\01327.apert" +
      "ure.policy.language.v1.LoadActuator.Dyna" +
      "micConfigR\rdefaultConfig\032\203\001\n\003Ins\022;\n\006sign" +
      "al\030\001 \001(\0132#.aperture.policy.language.v1.I" +
      "nPortR\006signal\022?\n\010setpoint\030\002 \001(\0132#.apertu" +
      "re.policy.language.v1.InPortR\010setpoint\032\275" +
      "\003\n\004Outs\022E\n\013is_overload\030\001 \001(\0132$.aperture." +
      "policy.language.v1.OutPortR\nisOverload\022\\" +
      "\n\027desired_load_multiplier\030\002 \001(\0132$.apertu" +
      "re.policy.language.v1.OutPortR\025desiredLo" +
      "adMultiplier\022^\n\030observed_load_multiplier" +
      "\030\003 \001(\0132$.aperture.policy.language.v1.Out" +
      "PortR\026observedLoadMultiplier\022W\n\024accepted" +
      "_concurrency\030\004 \001(\0132$.aperture.policy.lan" +
      "guage.v1.OutPortR\023acceptedConcurrency\022W\n" +
      "\024incoming_concurrency\030\005 \001(\0132$.aperture.p" +
      "olicy.language.v1.OutPortR\023incomingConcu" +
      "rrencyB\255\002\n3com.fluxninja.generated.apert" +
      "ure.policy.language.v1B\020FlowcontrolProto" +
      "P\001ZUgithub.com/fluxninja/aperture/api/ge" +
      "n/proto/go/aperture/policy/language/v1;l" +
      "anguagev1\242\002\003APL\252\002\033Aperture.Policy.Langua" +
      "ge.V1\312\002\033Aperture\\Policy\\Language\\V1\342\002\'Ap" +
      "erture\\Policy\\Language\\V1\\GPBMetadata\352\002\036" +
      "Aperture::Policy::Language::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.PortsProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_aperture_policy_language_v1_FlowSelector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_FlowSelector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FlowSelector_descriptor,
        new java.lang.String[] { "ServiceSelector", "FlowMatcher", });
    internal_static_aperture_policy_language_v1_ServiceSelector_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_policy_language_v1_ServiceSelector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_ServiceSelector_descriptor,
        new java.lang.String[] { "AgentGroup", "Service", });
    internal_static_aperture_policy_language_v1_FlowMatcher_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_policy_language_v1_FlowMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FlowMatcher_descriptor,
        new java.lang.String[] { "ControlPoint", "LabelMatcher", });
    internal_static_aperture_policy_language_v1_FlowControlResources_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_policy_language_v1_FlowControlResources_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FlowControlResources_descriptor,
        new java.lang.String[] { "FluxMeters", "Classifiers", });
    internal_static_aperture_policy_language_v1_FlowControlResources_FluxMetersEntry_descriptor =
      internal_static_aperture_policy_language_v1_FlowControlResources_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_FlowControlResources_FluxMetersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FlowControlResources_FluxMetersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_FluxMeter_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_policy_language_v1_FluxMeter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_descriptor,
        new java.lang.String[] { "FlowSelector", "StaticBuckets", "LinearBuckets", "ExponentialBuckets", "ExponentialBucketsRange", "AttributeKey", "HistogramBuckets", });
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor,
        new java.lang.String[] { "Buckets", });
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor,
        new java.lang.String[] { "Start", "Width", "Count", });
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(2);
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor,
        new java.lang.String[] { "Start", "Factor", "Count", });
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(3);
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor,
        new java.lang.String[] { "Min", "Max", "Count", });
    internal_static_aperture_policy_language_v1_Classifier_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_policy_language_v1_Classifier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Classifier_descriptor,
        new java.lang.String[] { "FlowSelector", "Rules", "Rego", });
    internal_static_aperture_policy_language_v1_Classifier_RulesEntry_descriptor =
      internal_static_aperture_policy_language_v1_Classifier_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Classifier_RulesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Classifier_RulesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_Rule_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_aperture_policy_language_v1_Rule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Rule_descriptor,
        new java.lang.String[] { "Extractor", "Rego", "Telemetry", "Source", });
    internal_static_aperture_policy_language_v1_Rule_Rego_descriptor =
      internal_static_aperture_policy_language_v1_Rule_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Rule_Rego_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Rule_Rego_descriptor,
        new java.lang.String[] { "Source", "Query", });
    internal_static_aperture_policy_language_v1_Rego_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_aperture_policy_language_v1_Rego_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Rego_descriptor,
        new java.lang.String[] { "Labels", "Module", });
    internal_static_aperture_policy_language_v1_Rego_LabelProperties_descriptor =
      internal_static_aperture_policy_language_v1_Rego_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Rego_LabelProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Rego_LabelProperties_descriptor,
        new java.lang.String[] { "Telemetry", });
    internal_static_aperture_policy_language_v1_Rego_LabelsEntry_descriptor =
      internal_static_aperture_policy_language_v1_Rego_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_Rego_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Rego_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_Extractor_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_aperture_policy_language_v1_Extractor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Extractor_descriptor,
        new java.lang.String[] { "From", "Json", "Address", "Jwt", "PathTemplates", "Variant", });
    internal_static_aperture_policy_language_v1_JSONExtractor_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_aperture_policy_language_v1_JSONExtractor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_JSONExtractor_descriptor,
        new java.lang.String[] { "From", "Pointer", });
    internal_static_aperture_policy_language_v1_AddressExtractor_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_aperture_policy_language_v1_AddressExtractor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_AddressExtractor_descriptor,
        new java.lang.String[] { "From", });
    internal_static_aperture_policy_language_v1_JWTExtractor_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_aperture_policy_language_v1_JWTExtractor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_JWTExtractor_descriptor,
        new java.lang.String[] { "From", "JsonPointer", });
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_PathTemplateMatcher_descriptor,
        new java.lang.String[] { "TemplateValues", });
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_TemplateValuesEntry_descriptor =
      internal_static_aperture_policy_language_v1_PathTemplateMatcher_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_PathTemplateMatcher_TemplateValuesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_PathTemplateMatcher_TemplateValuesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_FlowControl_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_aperture_policy_language_v1_FlowControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FlowControl_descriptor,
        new java.lang.String[] { "RateLimiter", "ConcurrencyLimiter", "AimdConcurrencyController", "Component", });
    internal_static_aperture_policy_language_v1_RateLimiter_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_aperture_policy_language_v1_RateLimiter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_descriptor,
        new java.lang.String[] { "InPorts", "FlowSelector", "Parameters", "DynamicConfigKey", "DefaultConfig", });
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_descriptor =
      internal_static_aperture_policy_language_v1_RateLimiter_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_Parameters_descriptor,
        new java.lang.String[] { "LimitResetInterval", "LabelKey", "LazySync", });
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_LazySync_descriptor =
      internal_static_aperture_policy_language_v1_RateLimiter_Parameters_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_RateLimiter_Parameters_LazySync_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_Parameters_LazySync_descriptor,
        new java.lang.String[] { "Enabled", "NumSync", });
    internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor =
      internal_static_aperture_policy_language_v1_RateLimiter_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_RateLimiter_Override_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor,
        new java.lang.String[] { "LabelValue", "LimitScaleFactor", });
    internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor =
      internal_static_aperture_policy_language_v1_RateLimiter_descriptor.getNestedTypes().get(2);
    internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor,
        new java.lang.String[] { "Overrides", });
    internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor =
      internal_static_aperture_policy_language_v1_RateLimiter_descriptor.getNestedTypes().get(3);
    internal_static_aperture_policy_language_v1_RateLimiter_Ins_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor,
        new java.lang.String[] { "Limit", });
    internal_static_aperture_policy_language_v1_ConcurrencyLimiter_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_aperture_policy_language_v1_ConcurrencyLimiter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_ConcurrencyLimiter_descriptor,
        new java.lang.String[] { "FlowSelector", "Scheduler", "LoadActuator", "ActuationStrategy", });
    internal_static_aperture_policy_language_v1_Scheduler_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_aperture_policy_language_v1_Scheduler_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Scheduler_descriptor,
        new java.lang.String[] { "OutPorts", "Parameters", });
    internal_static_aperture_policy_language_v1_Scheduler_Workload_descriptor =
      internal_static_aperture_policy_language_v1_Scheduler_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Scheduler_Workload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Scheduler_Workload_descriptor,
        new java.lang.String[] { "Parameters", "LabelMatcher", });
    internal_static_aperture_policy_language_v1_Scheduler_Workload_Parameters_descriptor =
      internal_static_aperture_policy_language_v1_Scheduler_Workload_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Scheduler_Workload_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Scheduler_Workload_Parameters_descriptor,
        new java.lang.String[] { "Priority", "Tokens", "FairnessKey", });
    internal_static_aperture_policy_language_v1_Scheduler_Parameters_descriptor =
      internal_static_aperture_policy_language_v1_Scheduler_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_Scheduler_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Scheduler_Parameters_descriptor,
        new java.lang.String[] { "Workloads", "DefaultWorkloadParameters", "AutoTokens", "TimeoutFactor", "MaxTimeout", });
    internal_static_aperture_policy_language_v1_Scheduler_Outs_descriptor =
      internal_static_aperture_policy_language_v1_Scheduler_descriptor.getNestedTypes().get(2);
    internal_static_aperture_policy_language_v1_Scheduler_Outs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Scheduler_Outs_descriptor,
        new java.lang.String[] { "AcceptedConcurrency", "IncomingConcurrency", });
    internal_static_aperture_policy_language_v1_LoadActuator_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_aperture_policy_language_v1_LoadActuator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LoadActuator_descriptor,
        new java.lang.String[] { "InPorts", "DynamicConfigKey", "DefaultConfig", });
    internal_static_aperture_policy_language_v1_LoadActuator_DynamicConfig_descriptor =
      internal_static_aperture_policy_language_v1_LoadActuator_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_LoadActuator_DynamicConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LoadActuator_DynamicConfig_descriptor,
        new java.lang.String[] { "DryRun", });
    internal_static_aperture_policy_language_v1_LoadActuator_Ins_descriptor =
      internal_static_aperture_policy_language_v1_LoadActuator_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_LoadActuator_Ins_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LoadActuator_Ins_descriptor,
        new java.lang.String[] { "LoadMultiplier", });
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_AIMDConcurrencyController_descriptor,
        new java.lang.String[] { "InPorts", "OutPorts", "FlowSelector", "SchedulerParameters", "GradientParameters", "MaxLoadMultiplier", "LoadMultiplierLinearIncrement", "AlerterParameters", "DynamicConfigKey", "DefaultConfig", });
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Ins_descriptor =
      internal_static_aperture_policy_language_v1_AIMDConcurrencyController_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Ins_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Ins_descriptor,
        new java.lang.String[] { "Signal", "Setpoint", });
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Outs_descriptor =
      internal_static_aperture_policy_language_v1_AIMDConcurrencyController_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Outs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_AIMDConcurrencyController_Outs_descriptor,
        new java.lang.String[] { "IsOverload", "DesiredLoadMultiplier", "ObservedLoadMultiplier", "AcceptedConcurrency", "IncomingConcurrency", });
    com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.PortsProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
