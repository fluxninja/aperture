// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/policy.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public final class PolicyProto {
  private PolicyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_GetPoliciesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_GetPoliciesResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Policies_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Policies_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Policies_PoliciesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Policies_PoliciesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Policy_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Policy_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Circuit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Circuit_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Resources_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Resources_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Resources_FluxMetersEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Resources_FluxMetersEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_Component_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_Component_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_NestedCircuit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_NestedCircuit_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_NestedCircuit_InPortsMapEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_NestedCircuit_InPortsMapEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_NestedCircuit_OutPortsMapEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_NestedCircuit_OutPortsMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(aperture/policy/language/v1/policy.pro" +
      "to\022\033aperture.policy.language.v1\032+apertur" +
      "e/policy/language/v1/autoscale.proto\032-ap" +
      "erture/policy/language/v1/flowcontrol.pr" +
      "oto\032\'aperture/policy/language/v1/ports.p" +
      "roto\032\'aperture/policy/language/v1/query." +
      "proto\0320aperture/policy/language/v1/std_c" +
      "omponents.proto\032\034google/api/annotations." +
      "proto\032\036google/protobuf/duration.proto\032\033g" +
      "oogle/protobuf/empty.proto\032.protoc-gen-o" +
      "penapiv2/options/annotations.proto\"X\n\023Ge" +
      "tPoliciesResponse\022A\n\010policies\030\001 \001(\0132%.ap" +
      "erture.policy.language.v1.PoliciesR\010poli" +
      "cies\"\275\001\n\010Policies\022O\n\010policies\030\001 \003(\01323.ap" +
      "erture.policy.language.v1.Policies.Polic" +
      "iesEntryR\010policies\032`\n\rPoliciesEntry\022\020\n\003k" +
      "ey\030\001 \001(\tR\003key\0229\n\005value\030\002 \001(\0132#.aperture." +
      "policy.language.v1.PolicyR\005value:\0028\001\"\216\001\n" +
      "\006Policy\022>\n\007circuit\030\001 \001(\0132$.aperture.poli" +
      "cy.language.v1.CircuitR\007circuit\022D\n\tresou" +
      "rces\030\002 \001(\0132&.aperture.policy.language.v1" +
      ".ResourcesR\tresources\"\235\001\n\007Circuit\022J\n\023eva" +
      "luation_interval\030\001 \001(\0132\031.google.protobuf" +
      ".DurationR\022evaluationInterval\022F\n\ncompone" +
      "nts\030\002 \003(\0132&.aperture.policy.language.v1." +
      "ComponentR\ncomponents\"\354\002\n\tResources\022W\n\013f" +
      "lux_meters\030\001 \003(\01326.aperture.policy.langu" +
      "age.v1.Resources.FluxMetersEntryR\nfluxMe" +
      "ters\022I\n\013classifiers\030\002 \003(\0132\'.aperture.pol" +
      "icy.language.v1.ClassifierR\013classifiers\022" +
      "T\n\014flow_control\030e \001(\01321.aperture.policy." +
      "language.v1.FlowControlResourcesR\013flowCo" +
      "ntrol\032e\n\017FluxMetersEntry\022\020\n\003key\030\001 \001(\tR\003k" +
      "ey\022<\n\005value\030\002 \001(\0132&.aperture.policy.lang" +
      "uage.v1.FluxMeterR\005value:\0028\001\"\345\016\n\tCompone" +
      "nt\022b\n\023gradient_controller\030\001 \001(\0132/.apertu" +
      "re.policy.language.v1.GradientController" +
      "H\000R\022gradientController\0224\n\003ema\030\002 \001(\0132 .ap" +
      "erture.policy.language.v1.EMAH\000R\003ema\022h\n\025" +
      "arithmetic_combinator\030\003 \001(\01321.aperture.p" +
      "olicy.language.v1.ArithmeticCombinatorH\000" +
      "R\024arithmeticCombinator\022@\n\007decider\030\004 \001(\0132" +
      "$.aperture.policy.language.v1.DeciderH\000R" +
      "\007decider\022C\n\010switcher\030\005 \001(\0132%.aperture.po" +
      "licy.language.v1.SwitcherH\000R\010switcher\022C\n" +
      "\010variable\030\t \001(\0132%.aperture.policy.langua" +
      "ge.v1.VariableH\000R\010variable\022S\n\016unary_oper" +
      "ator\030\n \001(\0132*.aperture.policy.language.v1" +
      ".UnaryOperatorH\000R\runaryOperator\022O\n\014extra" +
      "polator\030\013 \001(\0132).aperture.policy.language" +
      ".v1.ExtrapolatorH\000R\014extrapolator\0224\n\003max\030" +
      "\014 \001(\0132 .aperture.policy.language.v1.MaxH" +
      "\000R\003max\0224\n\003min\030\r \001(\0132 .aperture.policy.la" +
      "nguage.v1.MinH\000R\003min\022J\n\013first_valid\030\016 \001(" +
      "\0132\'.aperture.policy.language.v1.FirstVal" +
      "idH\000R\nfirstValid\022@\n\007alerter\030\017 \001(\0132$.aper" +
      "ture.policy.language.v1.AlerterH\000R\007alert" +
      "er\022I\n\nintegrator\030\020 \001(\0132\'.aperture.policy" +
      ".language.v1.IntegratorH\000R\nintegrator\022U\n" +
      "\016differentiator\030\021 \001(\0132+.aperture.policy." +
      "language.v1.DifferentiatorH\000R\016differenti" +
      "ator\0224\n\003and\030\023 \001(\0132 .aperture.policy.lang" +
      "uage.v1.AndH\000R\003and\0221\n\002or\030\024 \001(\0132\037.apertur" +
      "e.policy.language.v1.OrH\000R\002or\022C\n\010inverte" +
      "r\030\025 \001(\0132%.aperture.policy.language.v1.In" +
      "verterH\000R\010inverter\022V\n\017pulse_generator\030\026 " +
      "\001(\0132+.aperture.policy.language.v1.PulseG" +
      "eneratorH\000R\016pulseGenerator\022=\n\006holder\030\027 \001" +
      "(\0132#.aperture.policy.language.v1.HolderH" +
      "\000R\006holder\022S\n\016nested_circuit\030\030 \001(\0132*.aper" +
      "ture.policy.language.v1.NestedCircuitH\000R" +
      "\rnestedCircuit\022f\n\025nested_signal_ingress\030" +
      "\031 \001(\01320.aperture.policy.language.v1.Nest" +
      "edSignalIngressH\000R\023nestedSignalIngress\022c" +
      "\n\024nested_signal_egress\030\032 \001(\0132/.aperture." +
      "policy.language.v1.NestedSignalEgressH\000R" +
      "\022nestedSignalEgress\022:\n\005query\030d \001(\0132\".ape" +
      "rture.policy.language.v1.QueryH\000R\005query\022" +
      "M\n\014flow_control\030e \001(\0132(.aperture.policy." +
      "language.v1.FlowControlH\000R\013flowControl\022G" +
      "\n\nauto_scale\030f \001(\0132&.aperture.policy.lan" +
      "guage.v1.AutoScaleH\000R\tautoScaleB\013\n\tcompo" +
      "nent\"\241\004\n\rNestedCircuit\022\\\n\014in_ports_map\030\001" +
      " \003(\0132:.aperture.policy.language.v1.Neste" +
      "dCircuit.InPortsMapEntryR\ninPortsMap\022_\n\r" +
      "out_ports_map\030\002 \003(\0132;.aperture.policy.la" +
      "nguage.v1.NestedCircuit.OutPortsMapEntry" +
      "R\013outPortsMap\022F\n\ncomponents\030\003 \003(\0132&.aper" +
      "ture.policy.language.v1.ComponentR\ncompo" +
      "nents\022\022\n\004name\030\004 \001(\tR\004name\022+\n\021short_descr" +
      "iption\030\005 \001(\tR\020shortDescription\032b\n\017InPort" +
      "sMapEntry\022\020\n\003key\030\001 \001(\tR\003key\0229\n\005value\030\002 \001" +
      "(\0132#.aperture.policy.language.v1.InPortR" +
      "\005value:\0028\001\032d\n\020OutPortsMapEntry\022\020\n\003key\030\001 " +
      "\001(\tR\003key\022:\n\005value\030\002 \001(\0132$.aperture.polic" +
      "y.language.v1.OutPortR\005value:\0028\0012\227\001\n\rPol" +
      "icyService\022\205\001\n\013GetPolicies\022\026.google.prot" +
      "obuf.Empty\0320.aperture.policy.language.v1" +
      ".GetPoliciesResponse\",\222A\025\n\023aperture-cont" +
      "roller\202\323\344\223\002\016\022\014/v1/policiesB\250\002\n3com.fluxn" +
      "inja.generated.aperture.policy.language." +
      "v1B\013PolicyProtoP\001ZUgithub.com/fluxninja/" +
      "aperture/api/gen/proto/go/aperture/polic" +
      "y/language/v1;languagev1\242\002\003APL\252\002\033Apertur" +
      "e.Policy.Language.V1\312\002\033Aperture\\Policy\\L" +
      "anguage\\V1\342\002\'Aperture\\Policy\\Language\\V1" +
      "\\GPBMetadata\352\002\036Aperture::Policy::Languag" +
      "e::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.FlowcontrolProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.PortsProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.QueryProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.getDescriptor(),
          com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_aperture_policy_language_v1_GetPoliciesResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_GetPoliciesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_GetPoliciesResponse_descriptor,
        new java.lang.String[] { "Policies", });
    internal_static_aperture_policy_language_v1_Policies_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_policy_language_v1_Policies_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Policies_descriptor,
        new java.lang.String[] { "Policies", });
    internal_static_aperture_policy_language_v1_Policies_PoliciesEntry_descriptor =
      internal_static_aperture_policy_language_v1_Policies_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Policies_PoliciesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Policies_PoliciesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_Policy_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_policy_language_v1_Policy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Policy_descriptor,
        new java.lang.String[] { "Circuit", "Resources", });
    internal_static_aperture_policy_language_v1_Circuit_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_policy_language_v1_Circuit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Circuit_descriptor,
        new java.lang.String[] { "EvaluationInterval", "Components", });
    internal_static_aperture_policy_language_v1_Resources_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_policy_language_v1_Resources_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Resources_descriptor,
        new java.lang.String[] { "FluxMeters", "Classifiers", "FlowControl", });
    internal_static_aperture_policy_language_v1_Resources_FluxMetersEntry_descriptor =
      internal_static_aperture_policy_language_v1_Resources_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_Resources_FluxMetersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Resources_FluxMetersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_Component_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_policy_language_v1_Component_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_Component_descriptor,
        new java.lang.String[] { "GradientController", "Ema", "ArithmeticCombinator", "Decider", "Switcher", "Variable", "UnaryOperator", "Extrapolator", "Max", "Min", "FirstValid", "Alerter", "Integrator", "Differentiator", "And", "Or", "Inverter", "PulseGenerator", "Holder", "NestedCircuit", "NestedSignalIngress", "NestedSignalEgress", "Query", "FlowControl", "AutoScale", "Component", });
    internal_static_aperture_policy_language_v1_NestedCircuit_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_aperture_policy_language_v1_NestedCircuit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_NestedCircuit_descriptor,
        new java.lang.String[] { "InPortsMap", "OutPortsMap", "Components", "Name", "ShortDescription", });
    internal_static_aperture_policy_language_v1_NestedCircuit_InPortsMapEntry_descriptor =
      internal_static_aperture_policy_language_v1_NestedCircuit_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_NestedCircuit_InPortsMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_NestedCircuit_InPortsMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_NestedCircuit_OutPortsMapEntry_descriptor =
      internal_static_aperture_policy_language_v1_NestedCircuit_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_NestedCircuit_OutPortsMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_NestedCircuit_OutPortsMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.google.api.AnnotationsProto.http);
    registry.add(com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Operation);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.FlowcontrolProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.PortsProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.QueryProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.language.v1.StdComponentsProto.getDescriptor();
    com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
