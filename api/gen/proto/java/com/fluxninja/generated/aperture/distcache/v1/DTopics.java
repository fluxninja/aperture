// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/distcache/v1/stats.proto

package com.fluxninja.generated.aperture.distcache.v1;

/**
 * Protobuf type {@code aperture.distcache.v1.DTopics}
 */
public final class DTopics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.distcache.v1.DTopics)
    DTopicsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DTopics.newBuilder() to construct.
  private DTopics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DTopics() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DTopics();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DTopics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            publishedTotal_ = input.readInt64();
            break;
          }
          case 16: {

            currentListeners_ = input.readInt64();
            break;
          }
          case 24: {

            listenersTotal_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_DTopics_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_DTopics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.distcache.v1.DTopics.class, com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder.class);
  }

  public static final int PUBLISHED_TOTAL_FIELD_NUMBER = 1;
  private long publishedTotal_;
  /**
   * <code>int64 published_total = 1 [json_name = "PublishedTotal"];</code>
   * @return The publishedTotal.
   */
  @java.lang.Override
  public long getPublishedTotal() {
    return publishedTotal_;
  }

  public static final int CURRENT_LISTENERS_FIELD_NUMBER = 2;
  private long currentListeners_;
  /**
   * <code>int64 current_listeners = 2 [json_name = "CurrentListeners"];</code>
   * @return The currentListeners.
   */
  @java.lang.Override
  public long getCurrentListeners() {
    return currentListeners_;
  }

  public static final int LISTENERS_TOTAL_FIELD_NUMBER = 3;
  private long listenersTotal_;
  /**
   * <code>int64 listeners_total = 3 [json_name = "ListenersTotal"];</code>
   * @return The listenersTotal.
   */
  @java.lang.Override
  public long getListenersTotal() {
    return listenersTotal_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (publishedTotal_ != 0L) {
      output.writeInt64(1, publishedTotal_);
    }
    if (currentListeners_ != 0L) {
      output.writeInt64(2, currentListeners_);
    }
    if (listenersTotal_ != 0L) {
      output.writeInt64(3, listenersTotal_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (publishedTotal_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, publishedTotal_);
    }
    if (currentListeners_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, currentListeners_);
    }
    if (listenersTotal_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, listenersTotal_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.distcache.v1.DTopics)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.distcache.v1.DTopics other = (com.fluxninja.generated.aperture.distcache.v1.DTopics) obj;

    if (getPublishedTotal()
        != other.getPublishedTotal()) return false;
    if (getCurrentListeners()
        != other.getCurrentListeners()) return false;
    if (getListenersTotal()
        != other.getListenersTotal()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PUBLISHED_TOTAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPublishedTotal());
    hash = (37 * hash) + CURRENT_LISTENERS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCurrentListeners());
    hash = (37 * hash) + LISTENERS_TOTAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getListenersTotal());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.DTopics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.distcache.v1.DTopics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.distcache.v1.DTopics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.distcache.v1.DTopics)
      com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_DTopics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_DTopics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.distcache.v1.DTopics.class, com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.distcache.v1.DTopics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      publishedTotal_ = 0L;

      currentListeners_ = 0L;

      listenersTotal_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_DTopics_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.DTopics getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.distcache.v1.DTopics.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.DTopics build() {
      com.fluxninja.generated.aperture.distcache.v1.DTopics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.DTopics buildPartial() {
      com.fluxninja.generated.aperture.distcache.v1.DTopics result = new com.fluxninja.generated.aperture.distcache.v1.DTopics(this);
      result.publishedTotal_ = publishedTotal_;
      result.currentListeners_ = currentListeners_;
      result.listenersTotal_ = listenersTotal_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.distcache.v1.DTopics) {
        return mergeFrom((com.fluxninja.generated.aperture.distcache.v1.DTopics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.distcache.v1.DTopics other) {
      if (other == com.fluxninja.generated.aperture.distcache.v1.DTopics.getDefaultInstance()) return this;
      if (other.getPublishedTotal() != 0L) {
        setPublishedTotal(other.getPublishedTotal());
      }
      if (other.getCurrentListeners() != 0L) {
        setCurrentListeners(other.getCurrentListeners());
      }
      if (other.getListenersTotal() != 0L) {
        setListenersTotal(other.getListenersTotal());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.distcache.v1.DTopics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.distcache.v1.DTopics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long publishedTotal_ ;
    /**
     * <code>int64 published_total = 1 [json_name = "PublishedTotal"];</code>
     * @return The publishedTotal.
     */
    @java.lang.Override
    public long getPublishedTotal() {
      return publishedTotal_;
    }
    /**
     * <code>int64 published_total = 1 [json_name = "PublishedTotal"];</code>
     * @param value The publishedTotal to set.
     * @return This builder for chaining.
     */
    public Builder setPublishedTotal(long value) {
      
      publishedTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 published_total = 1 [json_name = "PublishedTotal"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPublishedTotal() {
      
      publishedTotal_ = 0L;
      onChanged();
      return this;
    }

    private long currentListeners_ ;
    /**
     * <code>int64 current_listeners = 2 [json_name = "CurrentListeners"];</code>
     * @return The currentListeners.
     */
    @java.lang.Override
    public long getCurrentListeners() {
      return currentListeners_;
    }
    /**
     * <code>int64 current_listeners = 2 [json_name = "CurrentListeners"];</code>
     * @param value The currentListeners to set.
     * @return This builder for chaining.
     */
    public Builder setCurrentListeners(long value) {
      
      currentListeners_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 current_listeners = 2 [json_name = "CurrentListeners"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCurrentListeners() {
      
      currentListeners_ = 0L;
      onChanged();
      return this;
    }

    private long listenersTotal_ ;
    /**
     * <code>int64 listeners_total = 3 [json_name = "ListenersTotal"];</code>
     * @return The listenersTotal.
     */
    @java.lang.Override
    public long getListenersTotal() {
      return listenersTotal_;
    }
    /**
     * <code>int64 listeners_total = 3 [json_name = "ListenersTotal"];</code>
     * @param value The listenersTotal to set.
     * @return This builder for chaining.
     */
    public Builder setListenersTotal(long value) {
      
      listenersTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 listeners_total = 3 [json_name = "ListenersTotal"];</code>
     * @return This builder for chaining.
     */
    public Builder clearListenersTotal() {
      
      listenersTotal_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.distcache.v1.DTopics)
  }

  // @@protoc_insertion_point(class_scope:aperture.distcache.v1.DTopics)
  private static final com.fluxninja.generated.aperture.distcache.v1.DTopics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.distcache.v1.DTopics();
  }

  public static com.fluxninja.generated.aperture.distcache.v1.DTopics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DTopics>
      PARSER = new com.google.protobuf.AbstractParser<DTopics>() {
    @java.lang.Override
    public DTopics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DTopics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DTopics> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DTopics> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.DTopics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

