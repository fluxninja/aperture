// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/monitoring/v1/policy_view.proto

package com.fluxninja.generated.aperture.policy.monitoring.v1;

public interface PortViewOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.monitoring.v1.PortView)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Port name
   * </pre>
   *
   * <code>string port_name = 1 [json_name = "portName"];</code>
   * @return The portName.
   */
  java.lang.String getPortName();
  /**
   * <pre>
   * Port name
   * </pre>
   *
   * <code>string port_name = 1 [json_name = "portName"];</code>
   * @return The bytes for portName.
   */
  com.google.protobuf.ByteString
      getPortNameBytes();

  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return Whether the signalName field is set.
   */
  boolean hasSignalName();
  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return The signalName.
   */
  java.lang.String getSignalName();
  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return The bytes for signalName.
   */
  com.google.protobuf.ByteString
      getSignalNameBytes();

  /**
   * <pre>
   * Constant value at an incoming Port
   * </pre>
   *
   * <code>double constant_value = 3 [json_name = "constantValue"];</code>
   * @return Whether the constantValue field is set.
   */
  boolean hasConstantValue();
  /**
   * <pre>
   * Constant value at an incoming Port
   * </pre>
   *
   * <code>double constant_value = 3 [json_name = "constantValue"];</code>
   * @return The constantValue.
   */
  double getConstantValue();

  /**
   * <pre>
   * True if port is looped.
   * </pre>
   *
   * <code>bool looped = 4 [json_name = "looped"];</code>
   * @return The looped.
   */
  boolean getLooped();

  /**
   * <pre>
   * Sub circuit id, applicable only if value is of type signal_name.
   * </pre>
   *
   * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
   * @return The subCircuitId.
   */
  java.lang.String getSubCircuitId();
  /**
   * <pre>
   * Sub circuit id, applicable only if value is of type signal_name.
   * </pre>
   *
   * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
   * @return The bytes for subCircuitId.
   */
  com.google.protobuf.ByteString
      getSubCircuitIdBytes();

  public com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.ValueCase getValueCase();
}
