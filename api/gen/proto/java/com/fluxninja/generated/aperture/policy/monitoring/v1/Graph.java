// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/monitoring/v1/policy_view.proto

package com.fluxninja.generated.aperture.policy.monitoring.v1;

/**
 * Protobuf type {@code aperture.policy.monitoring.v1.Graph}
 */
public final class Graph extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.monitoring.v1.Graph)
    GraphOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Graph.newBuilder() to construct.
  private Graph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Graph() {
    internalComponents_ = java.util.Collections.emptyList();
    externalComponents_ = java.util.Collections.emptyList();
    internalLinks_ = java.util.Collections.emptyList();
    externalLinks_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Graph();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Graph(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              internalComponents_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView>();
              mutable_bitField0_ |= 0x00000001;
            }
            internalComponents_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              externalComponents_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView>();
              mutable_bitField0_ |= 0x00000002;
            }
            externalComponents_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              internalLinks_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.Link>();
              mutable_bitField0_ |= 0x00000004;
            }
            internalLinks_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.monitoring.v1.Link.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              externalLinks_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.Link>();
              mutable_bitField0_ |= 0x00000008;
            }
            externalLinks_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.monitoring.v1.Link.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        internalComponents_ = java.util.Collections.unmodifiableList(internalComponents_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        externalComponents_ = java.util.Collections.unmodifiableList(externalComponents_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        internalLinks_ = java.util.Collections.unmodifiableList(internalLinks_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        externalLinks_ = java.util.Collections.unmodifiableList(externalLinks_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_Graph_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_Graph_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.class, com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.Builder.class);
  }

  public static final int INTERNAL_COMPONENTS_FIELD_NUMBER = 1;
  private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> internalComponents_;
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> getInternalComponentsList() {
    return internalComponents_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
      getInternalComponentsOrBuilderList() {
    return internalComponents_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
   */
  @java.lang.Override
  public int getInternalComponentsCount() {
    return internalComponents_.size();
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView getInternalComponents(int index) {
    return internalComponents_.get(index);
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder getInternalComponentsOrBuilder(
      int index) {
    return internalComponents_.get(index);
  }

  public static final int EXTERNAL_COMPONENTS_FIELD_NUMBER = 2;
  private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> externalComponents_;
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> getExternalComponentsList() {
    return externalComponents_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
      getExternalComponentsOrBuilderList() {
    return externalComponents_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
   */
  @java.lang.Override
  public int getExternalComponentsCount() {
    return externalComponents_.size();
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView getExternalComponents(int index) {
    return externalComponents_.get(index);
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder getExternalComponentsOrBuilder(
      int index) {
    return externalComponents_.get(index);
  }

  public static final int INTERNAL_LINKS_FIELD_NUMBER = 3;
  private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> internalLinks_;
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> getInternalLinksList() {
    return internalLinks_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
      getInternalLinksOrBuilderList() {
    return internalLinks_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
   */
  @java.lang.Override
  public int getInternalLinksCount() {
    return internalLinks_.size();
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.Link getInternalLinks(int index) {
    return internalLinks_.get(index);
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder getInternalLinksOrBuilder(
      int index) {
    return internalLinks_.get(index);
  }

  public static final int EXTERNAL_LINKS_FIELD_NUMBER = 4;
  private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> externalLinks_;
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> getExternalLinksList() {
    return externalLinks_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
      getExternalLinksOrBuilderList() {
    return externalLinks_;
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
   */
  @java.lang.Override
  public int getExternalLinksCount() {
    return externalLinks_.size();
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.Link getExternalLinks(int index) {
    return externalLinks_.get(index);
  }
  /**
   * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder getExternalLinksOrBuilder(
      int index) {
    return externalLinks_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < internalComponents_.size(); i++) {
      output.writeMessage(1, internalComponents_.get(i));
    }
    for (int i = 0; i < externalComponents_.size(); i++) {
      output.writeMessage(2, externalComponents_.get(i));
    }
    for (int i = 0; i < internalLinks_.size(); i++) {
      output.writeMessage(3, internalLinks_.get(i));
    }
    for (int i = 0; i < externalLinks_.size(); i++) {
      output.writeMessage(4, externalLinks_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < internalComponents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, internalComponents_.get(i));
    }
    for (int i = 0; i < externalComponents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, externalComponents_.get(i));
    }
    for (int i = 0; i < internalLinks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, internalLinks_.get(i));
    }
    for (int i = 0; i < externalLinks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, externalLinks_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.monitoring.v1.Graph)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.monitoring.v1.Graph other = (com.fluxninja.generated.aperture.policy.monitoring.v1.Graph) obj;

    if (!getInternalComponentsList()
        .equals(other.getInternalComponentsList())) return false;
    if (!getExternalComponentsList()
        .equals(other.getExternalComponentsList())) return false;
    if (!getInternalLinksList()
        .equals(other.getInternalLinksList())) return false;
    if (!getExternalLinksList()
        .equals(other.getExternalLinksList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getInternalComponentsCount() > 0) {
      hash = (37 * hash) + INTERNAL_COMPONENTS_FIELD_NUMBER;
      hash = (53 * hash) + getInternalComponentsList().hashCode();
    }
    if (getExternalComponentsCount() > 0) {
      hash = (37 * hash) + EXTERNAL_COMPONENTS_FIELD_NUMBER;
      hash = (53 * hash) + getExternalComponentsList().hashCode();
    }
    if (getInternalLinksCount() > 0) {
      hash = (37 * hash) + INTERNAL_LINKS_FIELD_NUMBER;
      hash = (53 * hash) + getInternalLinksList().hashCode();
    }
    if (getExternalLinksCount() > 0) {
      hash = (37 * hash) + EXTERNAL_LINKS_FIELD_NUMBER;
      hash = (53 * hash) + getExternalLinksList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.monitoring.v1.Graph prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.policy.monitoring.v1.Graph}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.monitoring.v1.Graph)
      com.fluxninja.generated.aperture.policy.monitoring.v1.GraphOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_Graph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_Graph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.class, com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInternalComponentsFieldBuilder();
        getExternalComponentsFieldBuilder();
        getInternalLinksFieldBuilder();
        getExternalLinksFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (internalComponentsBuilder_ == null) {
        internalComponents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        internalComponentsBuilder_.clear();
      }
      if (externalComponentsBuilder_ == null) {
        externalComponents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        externalComponentsBuilder_.clear();
      }
      if (internalLinksBuilder_ == null) {
        internalLinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        internalLinksBuilder_.clear();
      }
      if (externalLinksBuilder_ == null) {
        externalLinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        externalLinksBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_Graph_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Graph getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Graph build() {
      com.fluxninja.generated.aperture.policy.monitoring.v1.Graph result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Graph buildPartial() {
      com.fluxninja.generated.aperture.policy.monitoring.v1.Graph result = new com.fluxninja.generated.aperture.policy.monitoring.v1.Graph(this);
      int from_bitField0_ = bitField0_;
      if (internalComponentsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          internalComponents_ = java.util.Collections.unmodifiableList(internalComponents_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.internalComponents_ = internalComponents_;
      } else {
        result.internalComponents_ = internalComponentsBuilder_.build();
      }
      if (externalComponentsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          externalComponents_ = java.util.Collections.unmodifiableList(externalComponents_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.externalComponents_ = externalComponents_;
      } else {
        result.externalComponents_ = externalComponentsBuilder_.build();
      }
      if (internalLinksBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          internalLinks_ = java.util.Collections.unmodifiableList(internalLinks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.internalLinks_ = internalLinks_;
      } else {
        result.internalLinks_ = internalLinksBuilder_.build();
      }
      if (externalLinksBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          externalLinks_ = java.util.Collections.unmodifiableList(externalLinks_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.externalLinks_ = externalLinks_;
      } else {
        result.externalLinks_ = externalLinksBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.monitoring.v1.Graph) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.monitoring.v1.Graph)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.monitoring.v1.Graph other) {
      if (other == com.fluxninja.generated.aperture.policy.monitoring.v1.Graph.getDefaultInstance()) return this;
      if (internalComponentsBuilder_ == null) {
        if (!other.internalComponents_.isEmpty()) {
          if (internalComponents_.isEmpty()) {
            internalComponents_ = other.internalComponents_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInternalComponentsIsMutable();
            internalComponents_.addAll(other.internalComponents_);
          }
          onChanged();
        }
      } else {
        if (!other.internalComponents_.isEmpty()) {
          if (internalComponentsBuilder_.isEmpty()) {
            internalComponentsBuilder_.dispose();
            internalComponentsBuilder_ = null;
            internalComponents_ = other.internalComponents_;
            bitField0_ = (bitField0_ & ~0x00000001);
            internalComponentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInternalComponentsFieldBuilder() : null;
          } else {
            internalComponentsBuilder_.addAllMessages(other.internalComponents_);
          }
        }
      }
      if (externalComponentsBuilder_ == null) {
        if (!other.externalComponents_.isEmpty()) {
          if (externalComponents_.isEmpty()) {
            externalComponents_ = other.externalComponents_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExternalComponentsIsMutable();
            externalComponents_.addAll(other.externalComponents_);
          }
          onChanged();
        }
      } else {
        if (!other.externalComponents_.isEmpty()) {
          if (externalComponentsBuilder_.isEmpty()) {
            externalComponentsBuilder_.dispose();
            externalComponentsBuilder_ = null;
            externalComponents_ = other.externalComponents_;
            bitField0_ = (bitField0_ & ~0x00000002);
            externalComponentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExternalComponentsFieldBuilder() : null;
          } else {
            externalComponentsBuilder_.addAllMessages(other.externalComponents_);
          }
        }
      }
      if (internalLinksBuilder_ == null) {
        if (!other.internalLinks_.isEmpty()) {
          if (internalLinks_.isEmpty()) {
            internalLinks_ = other.internalLinks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInternalLinksIsMutable();
            internalLinks_.addAll(other.internalLinks_);
          }
          onChanged();
        }
      } else {
        if (!other.internalLinks_.isEmpty()) {
          if (internalLinksBuilder_.isEmpty()) {
            internalLinksBuilder_.dispose();
            internalLinksBuilder_ = null;
            internalLinks_ = other.internalLinks_;
            bitField0_ = (bitField0_ & ~0x00000004);
            internalLinksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInternalLinksFieldBuilder() : null;
          } else {
            internalLinksBuilder_.addAllMessages(other.internalLinks_);
          }
        }
      }
      if (externalLinksBuilder_ == null) {
        if (!other.externalLinks_.isEmpty()) {
          if (externalLinks_.isEmpty()) {
            externalLinks_ = other.externalLinks_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExternalLinksIsMutable();
            externalLinks_.addAll(other.externalLinks_);
          }
          onChanged();
        }
      } else {
        if (!other.externalLinks_.isEmpty()) {
          if (externalLinksBuilder_.isEmpty()) {
            externalLinksBuilder_.dispose();
            externalLinksBuilder_ = null;
            externalLinks_ = other.externalLinks_;
            bitField0_ = (bitField0_ & ~0x00000008);
            externalLinksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExternalLinksFieldBuilder() : null;
          } else {
            externalLinksBuilder_.addAllMessages(other.externalLinks_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.monitoring.v1.Graph parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.monitoring.v1.Graph) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> internalComponents_ =
      java.util.Collections.emptyList();
    private void ensureInternalComponentsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        internalComponents_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView>(internalComponents_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> internalComponentsBuilder_;

    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> getInternalComponentsList() {
      if (internalComponentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(internalComponents_);
      } else {
        return internalComponentsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public int getInternalComponentsCount() {
      if (internalComponentsBuilder_ == null) {
        return internalComponents_.size();
      } else {
        return internalComponentsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView getInternalComponents(int index) {
      if (internalComponentsBuilder_ == null) {
        return internalComponents_.get(index);
      } else {
        return internalComponentsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder setInternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (internalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalComponentsIsMutable();
        internalComponents_.set(index, value);
        onChanged();
      } else {
        internalComponentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder setInternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (internalComponentsBuilder_ == null) {
        ensureInternalComponentsIsMutable();
        internalComponents_.set(index, builderForValue.build());
        onChanged();
      } else {
        internalComponentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder addInternalComponents(com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (internalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalComponentsIsMutable();
        internalComponents_.add(value);
        onChanged();
      } else {
        internalComponentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder addInternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (internalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalComponentsIsMutable();
        internalComponents_.add(index, value);
        onChanged();
      } else {
        internalComponentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder addInternalComponents(
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (internalComponentsBuilder_ == null) {
        ensureInternalComponentsIsMutable();
        internalComponents_.add(builderForValue.build());
        onChanged();
      } else {
        internalComponentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder addInternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (internalComponentsBuilder_ == null) {
        ensureInternalComponentsIsMutable();
        internalComponents_.add(index, builderForValue.build());
        onChanged();
      } else {
        internalComponentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder addAllInternalComponents(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> values) {
      if (internalComponentsBuilder_ == null) {
        ensureInternalComponentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, internalComponents_);
        onChanged();
      } else {
        internalComponentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder clearInternalComponents() {
      if (internalComponentsBuilder_ == null) {
        internalComponents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        internalComponentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public Builder removeInternalComponents(int index) {
      if (internalComponentsBuilder_ == null) {
        ensureInternalComponentsIsMutable();
        internalComponents_.remove(index);
        onChanged();
      } else {
        internalComponentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder getInternalComponentsBuilder(
        int index) {
      return getInternalComponentsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder getInternalComponentsOrBuilder(
        int index) {
      if (internalComponentsBuilder_ == null) {
        return internalComponents_.get(index);  } else {
        return internalComponentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
         getInternalComponentsOrBuilderList() {
      if (internalComponentsBuilder_ != null) {
        return internalComponentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(internalComponents_);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder addInternalComponentsBuilder() {
      return getInternalComponentsFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder addInternalComponentsBuilder(
        int index) {
      return getInternalComponentsFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView internal_components = 1 [json_name = "internalComponents"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder> 
         getInternalComponentsBuilderList() {
      return getInternalComponentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
        getInternalComponentsFieldBuilder() {
      if (internalComponentsBuilder_ == null) {
        internalComponentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder>(
                internalComponents_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        internalComponents_ = null;
      }
      return internalComponentsBuilder_;
    }

    private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> externalComponents_ =
      java.util.Collections.emptyList();
    private void ensureExternalComponentsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        externalComponents_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView>(externalComponents_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> externalComponentsBuilder_;

    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> getExternalComponentsList() {
      if (externalComponentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(externalComponents_);
      } else {
        return externalComponentsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public int getExternalComponentsCount() {
      if (externalComponentsBuilder_ == null) {
        return externalComponents_.size();
      } else {
        return externalComponentsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView getExternalComponents(int index) {
      if (externalComponentsBuilder_ == null) {
        return externalComponents_.get(index);
      } else {
        return externalComponentsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder setExternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (externalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalComponentsIsMutable();
        externalComponents_.set(index, value);
        onChanged();
      } else {
        externalComponentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder setExternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (externalComponentsBuilder_ == null) {
        ensureExternalComponentsIsMutable();
        externalComponents_.set(index, builderForValue.build());
        onChanged();
      } else {
        externalComponentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder addExternalComponents(com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (externalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalComponentsIsMutable();
        externalComponents_.add(value);
        onChanged();
      } else {
        externalComponentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder addExternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView value) {
      if (externalComponentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalComponentsIsMutable();
        externalComponents_.add(index, value);
        onChanged();
      } else {
        externalComponentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder addExternalComponents(
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (externalComponentsBuilder_ == null) {
        ensureExternalComponentsIsMutable();
        externalComponents_.add(builderForValue.build());
        onChanged();
      } else {
        externalComponentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder addExternalComponents(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder builderForValue) {
      if (externalComponentsBuilder_ == null) {
        ensureExternalComponentsIsMutable();
        externalComponents_.add(index, builderForValue.build());
        onChanged();
      } else {
        externalComponentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder addAllExternalComponents(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView> values) {
      if (externalComponentsBuilder_ == null) {
        ensureExternalComponentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, externalComponents_);
        onChanged();
      } else {
        externalComponentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder clearExternalComponents() {
      if (externalComponentsBuilder_ == null) {
        externalComponents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        externalComponentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public Builder removeExternalComponents(int index) {
      if (externalComponentsBuilder_ == null) {
        ensureExternalComponentsIsMutable();
        externalComponents_.remove(index);
        onChanged();
      } else {
        externalComponentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder getExternalComponentsBuilder(
        int index) {
      return getExternalComponentsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder getExternalComponentsOrBuilder(
        int index) {
      if (externalComponentsBuilder_ == null) {
        return externalComponents_.get(index);  } else {
        return externalComponentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
         getExternalComponentsOrBuilderList() {
      if (externalComponentsBuilder_ != null) {
        return externalComponentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(externalComponents_);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder addExternalComponentsBuilder() {
      return getExternalComponentsFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder addExternalComponentsBuilder(
        int index) {
      return getExternalComponentsFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.ComponentView external_components = 2 [json_name = "externalComponents"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder> 
         getExternalComponentsBuilderList() {
      return getExternalComponentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder> 
        getExternalComponentsFieldBuilder() {
      if (externalComponentsBuilder_ == null) {
        externalComponentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentView.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.ComponentViewOrBuilder>(
                externalComponents_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        externalComponents_ = null;
      }
      return externalComponentsBuilder_;
    }

    private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> internalLinks_ =
      java.util.Collections.emptyList();
    private void ensureInternalLinksIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        internalLinks_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.Link>(internalLinks_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> internalLinksBuilder_;

    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> getInternalLinksList() {
      if (internalLinksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(internalLinks_);
      } else {
        return internalLinksBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public int getInternalLinksCount() {
      if (internalLinksBuilder_ == null) {
        return internalLinks_.size();
      } else {
        return internalLinksBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link getInternalLinks(int index) {
      if (internalLinksBuilder_ == null) {
        return internalLinks_.get(index);
      } else {
        return internalLinksBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder setInternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (internalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalLinksIsMutable();
        internalLinks_.set(index, value);
        onChanged();
      } else {
        internalLinksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder setInternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (internalLinksBuilder_ == null) {
        ensureInternalLinksIsMutable();
        internalLinks_.set(index, builderForValue.build());
        onChanged();
      } else {
        internalLinksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder addInternalLinks(com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (internalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalLinksIsMutable();
        internalLinks_.add(value);
        onChanged();
      } else {
        internalLinksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder addInternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (internalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInternalLinksIsMutable();
        internalLinks_.add(index, value);
        onChanged();
      } else {
        internalLinksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder addInternalLinks(
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (internalLinksBuilder_ == null) {
        ensureInternalLinksIsMutable();
        internalLinks_.add(builderForValue.build());
        onChanged();
      } else {
        internalLinksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder addInternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (internalLinksBuilder_ == null) {
        ensureInternalLinksIsMutable();
        internalLinks_.add(index, builderForValue.build());
        onChanged();
      } else {
        internalLinksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder addAllInternalLinks(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.Link> values) {
      if (internalLinksBuilder_ == null) {
        ensureInternalLinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, internalLinks_);
        onChanged();
      } else {
        internalLinksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder clearInternalLinks() {
      if (internalLinksBuilder_ == null) {
        internalLinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        internalLinksBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public Builder removeInternalLinks(int index) {
      if (internalLinksBuilder_ == null) {
        ensureInternalLinksIsMutable();
        internalLinks_.remove(index);
        onChanged();
      } else {
        internalLinksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder getInternalLinksBuilder(
        int index) {
      return getInternalLinksFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder getInternalLinksOrBuilder(
        int index) {
      if (internalLinksBuilder_ == null) {
        return internalLinks_.get(index);  } else {
        return internalLinksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
         getInternalLinksOrBuilderList() {
      if (internalLinksBuilder_ != null) {
        return internalLinksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(internalLinks_);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder addInternalLinksBuilder() {
      return getInternalLinksFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.monitoring.v1.Link.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder addInternalLinksBuilder(
        int index) {
      return getInternalLinksFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link internal_links = 3 [json_name = "internalLinks"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder> 
         getInternalLinksBuilderList() {
      return getInternalLinksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
        getInternalLinksFieldBuilder() {
      if (internalLinksBuilder_ == null) {
        internalLinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder>(
                internalLinks_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        internalLinks_ = null;
      }
      return internalLinksBuilder_;
    }

    private java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> externalLinks_ =
      java.util.Collections.emptyList();
    private void ensureExternalLinksIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        externalLinks_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.monitoring.v1.Link>(externalLinks_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> externalLinksBuilder_;

    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link> getExternalLinksList() {
      if (externalLinksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(externalLinks_);
      } else {
        return externalLinksBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public int getExternalLinksCount() {
      if (externalLinksBuilder_ == null) {
        return externalLinks_.size();
      } else {
        return externalLinksBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link getExternalLinks(int index) {
      if (externalLinksBuilder_ == null) {
        return externalLinks_.get(index);
      } else {
        return externalLinksBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder setExternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (externalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalLinksIsMutable();
        externalLinks_.set(index, value);
        onChanged();
      } else {
        externalLinksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder setExternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (externalLinksBuilder_ == null) {
        ensureExternalLinksIsMutable();
        externalLinks_.set(index, builderForValue.build());
        onChanged();
      } else {
        externalLinksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder addExternalLinks(com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (externalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalLinksIsMutable();
        externalLinks_.add(value);
        onChanged();
      } else {
        externalLinksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder addExternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link value) {
      if (externalLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalLinksIsMutable();
        externalLinks_.add(index, value);
        onChanged();
      } else {
        externalLinksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder addExternalLinks(
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (externalLinksBuilder_ == null) {
        ensureExternalLinksIsMutable();
        externalLinks_.add(builderForValue.build());
        onChanged();
      } else {
        externalLinksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder addExternalLinks(
        int index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder builderForValue) {
      if (externalLinksBuilder_ == null) {
        ensureExternalLinksIsMutable();
        externalLinks_.add(index, builderForValue.build());
        onChanged();
      } else {
        externalLinksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder addAllExternalLinks(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.Link> values) {
      if (externalLinksBuilder_ == null) {
        ensureExternalLinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, externalLinks_);
        onChanged();
      } else {
        externalLinksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder clearExternalLinks() {
      if (externalLinksBuilder_ == null) {
        externalLinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        externalLinksBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public Builder removeExternalLinks(int index) {
      if (externalLinksBuilder_ == null) {
        ensureExternalLinksIsMutable();
        externalLinks_.remove(index);
        onChanged();
      } else {
        externalLinksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder getExternalLinksBuilder(
        int index) {
      return getExternalLinksFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder getExternalLinksOrBuilder(
        int index) {
      if (externalLinksBuilder_ == null) {
        return externalLinks_.get(index);  } else {
        return externalLinksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
         getExternalLinksOrBuilderList() {
      if (externalLinksBuilder_ != null) {
        return externalLinksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(externalLinks_);
      }
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder addExternalLinksBuilder() {
      return getExternalLinksFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.monitoring.v1.Link.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder addExternalLinksBuilder(
        int index) {
      return getExternalLinksFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.policy.monitoring.v1.Link external_links = 4 [json_name = "externalLinks"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder> 
         getExternalLinksBuilderList() {
      return getExternalLinksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder> 
        getExternalLinksFieldBuilder() {
      if (externalLinksBuilder_ == null) {
        externalLinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.monitoring.v1.Link, com.fluxninja.generated.aperture.policy.monitoring.v1.Link.Builder, com.fluxninja.generated.aperture.policy.monitoring.v1.LinkOrBuilder>(
                externalLinks_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        externalLinks_ = null;
      }
      return externalLinksBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.monitoring.v1.Graph)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.monitoring.v1.Graph)
  private static final com.fluxninja.generated.aperture.policy.monitoring.v1.Graph DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.monitoring.v1.Graph();
  }

  public static com.fluxninja.generated.aperture.policy.monitoring.v1.Graph getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Graph>
      PARSER = new com.google.protobuf.AbstractParser<Graph>() {
    @java.lang.Override
    public Graph parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Graph(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Graph> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Graph> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.Graph getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

