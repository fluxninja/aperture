// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/fluxmeter.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public final class FluxmeterProto {
  private FluxmeterProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+aperture/policy/language/v1/fluxmeter." +
      "proto\022\033aperture.policy.language.v1\032*aper" +
      "ture/policy/language/v1/selector.proto\032." +
      "protoc-gen-openapiv2/options/annotations" +
      ".proto\"\251\t\n\tFluxMeter\022A\n\010selector\030\001 \001(\0132%" +
      ".aperture.policy.language.v1.SelectorR\010s" +
      "elector\022]\n\016static_buckets\030\002 \001(\01324.apertu" +
      "re.policy.language.v1.FluxMeter.StaticBu" +
      "cketsH\000R\rstaticBuckets\022]\n\016linear_buckets" +
      "\030\003 \001(\01324.aperture.policy.language.v1.Flu" +
      "xMeter.LinearBucketsH\000R\rlinearBuckets\022l\n" +
      "\023exponential_buckets\030\004 \001(\01329.aperture.po" +
      "licy.language.v1.FluxMeter.ExponentialBu" +
      "cketsH\000R\022exponentialBuckets\022|\n\031exponenti" +
      "al_buckets_range\030\005 \001(\0132>.aperture.policy" +
      ".language.v1.FluxMeter.ExponentialBucket" +
      "sRangeH\000R\027exponentialBucketsRange\022Q\n\ratt" +
      "ribute_key\030\006 \001(\tB,\222A)\202\003&\n\014x-go-default\022\026" +
      "\032\024workload_duration_msR\014attributeKey\032\206\001\n" +
      "\rStaticBuckets\022u\n\007buckets\030\001 \003(\001B[\222AX\202\003U\n" +
      "\014x-go-default\022E\032C[5.0,10.0,25.0,50.0,100" +
      ".0,250.0,500.0,1000.0,2500.0,5000.0,1000" +
      "0.0]R\007buckets\032p\n\rLinearBuckets\022\024\n\005start\030" +
      "\001 \001(\001R\005start\022\024\n\005width\030\002 \001(\001R\005width\0223\n\005co" +
      "unt\030\003 \001(\005B\035\222A\032\202\003\027\n\rx-go-validate\022\006\032\004gt=0" +
      "R\005count\032\267\001\n\022ExponentialBuckets\0223\n\005start\030" +
      "\001 \001(\001B\035\222A\032\202\003\027\n\rx-go-validate\022\006\032\004gt=0R\005st" +
      "art\0227\n\006factor\030\002 \001(\001B\037\222A\034\202\003\031\n\rx-go-valida" +
      "te\022\010\032\006gt=1.0R\006factor\0223\n\005count\030\003 \001(\005B\035\222A\032" +
      "\202\003\027\n\rx-go-validate\022\006\032\004gt=0R\005count\032\221\001\n\027Ex" +
      "ponentialBucketsRange\022/\n\003min\030\001 \001(\001B\035\222A\032\202" +
      "\003\027\n\rx-go-validate\022\006\032\004gt=0R\003min\022\020\n\003max\030\002 " +
      "\001(\001R\003max\0223\n\005count\030\003 \001(\005B\035\222A\032\202\003\027\n\rx-go-va" +
      "lidate\022\006\032\004gt=0R\005countB\023\n\021histogram_bucke" +
      "tsB\253\002\n3com.fluxninja.generated.aperture." +
      "policy.language.v1B\016FluxmeterProtoP\001ZUgi" +
      "thub.com/fluxninja/aperture/api/gen/prot" +
      "o/go/aperture/policy/language/v1;languag" +
      "ev1\242\002\003APL\252\002\033Aperture.Policy.Language.V1\312" +
      "\002\033Aperture\\Policy\\Language\\V1\342\002\'Aperture" +
      "\\Policy\\Language\\V1\\GPBMetadata\352\002\036Apertu" +
      "re::Policy::Language::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.policy.language.v1.SelectorProto.getDescriptor(),
          com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_aperture_policy_language_v1_FluxMeter_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_FluxMeter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_descriptor,
        new java.lang.String[] { "Selector", "StaticBuckets", "LinearBuckets", "ExponentialBuckets", "ExponentialBucketsRange", "AttributeKey", "HistogramBuckets", });
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_StaticBuckets_descriptor,
        new java.lang.String[] { "Buckets", });
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(1);
    internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_LinearBuckets_descriptor,
        new java.lang.String[] { "Start", "Width", "Count", });
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(2);
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBuckets_descriptor,
        new java.lang.String[] { "Start", "Factor", "Count", });
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor =
      internal_static_aperture_policy_language_v1_FluxMeter_descriptor.getNestedTypes().get(3);
    internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_FluxMeter_ExponentialBucketsRange_descriptor,
        new java.lang.String[] { "Min", "Max", "Count", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.aperture.policy.language.v1.SelectorProto.getDescriptor();
    com.fluxninja.generated.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
