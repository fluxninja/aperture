// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/policy.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * Limits the traffic on a control point to specified rate
 * :::info
 * See also [Rate Limiter overview](/concepts/flow-control/rate-limiter.md).
 * :::
 * Ratelimiting is done separately on per-label-value basis. Use _label&#92;_key_
 * to select which label should be used as key.
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.RateLimiter}
 */
public final class RateLimiter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.RateLimiter)
    RateLimiterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RateLimiter.newBuilder() to construct.
  private RateLimiter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RateLimiter() {
    labelKey_ = "";
    dynamicConfigKey_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RateLimiter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RateLimiter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder subBuilder = null;
            if (inPorts_ != null) {
              subBuilder = inPorts_.toBuilder();
            }
            inPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inPorts_);
              inPorts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder subBuilder = null;
            if (selector_ != null) {
              subBuilder = selector_.toBuilder();
            }
            selector_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Selector.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(selector_);
              selector_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (limitResetInterval_ != null) {
              subBuilder = limitResetInterval_.toBuilder();
            }
            limitResetInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(limitResetInterval_);
              limitResetInterval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            labelKey_ = s;
            break;
          }
          case 42: {
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder subBuilder = null;
            if (lazySync_ != null) {
              subBuilder = lazySync_.toBuilder();
            }
            lazySync_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lazySync_);
              lazySync_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            dynamicConfigKey_ = s;
            break;
          }
          case 58: {
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder subBuilder = null;
            if (defaultConfig_ != null) {
              subBuilder = defaultConfig_.toBuilder();
            }
            defaultConfig_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defaultConfig_);
              defaultConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Builder.class);
  }

  public interface LazySyncOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter.LazySync)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Enables lazy sync
     * </pre>
     *
     * <code>bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The enabled.
     */
    boolean getEnabled();

    /**
     * <pre>
     * Number of times to lazy sync within the _limit&#92;_reset&#92;_interval_.
     * </pre>
     *
     * <code>uint32 num_sync = 2 [json_name = "numSync", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The numSync.
     */
    int getNumSync();
  }
  /**
   * Protobuf type {@code aperture.policy.language.v1.RateLimiter.LazySync}
   */
  public static final class LazySync extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.RateLimiter.LazySync)
      LazySyncOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LazySync.newBuilder() to construct.
    private LazySync(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LazySync() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LazySync();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LazySync(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              enabled_ = input.readBool();
              break;
            }
            case 16: {

              numSync_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_LazySync_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_LazySync_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder.class);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    /**
     * <pre>
     * Enables lazy sync
     * </pre>
     *
     * <code>bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }

    public static final int NUM_SYNC_FIELD_NUMBER = 2;
    private int numSync_;
    /**
     * <pre>
     * Number of times to lazy sync within the _limit&#92;_reset&#92;_interval_.
     * </pre>
     *
     * <code>uint32 num_sync = 2 [json_name = "numSync", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The numSync.
     */
    @java.lang.Override
    public int getNumSync() {
      return numSync_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (enabled_ != false) {
        output.writeBool(1, enabled_);
      }
      if (numSync_ != 0) {
        output.writeUInt32(2, numSync_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (numSync_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, numSync_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync other = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync) obj;

      if (getEnabled()
          != other.getEnabled()) return false;
      if (getNumSync()
          != other.getNumSync()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnabled());
      hash = (37 * hash) + NUM_SYNC_FIELD_NUMBER;
      hash = (53 * hash) + getNumSync();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.RateLimiter.LazySync}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.RateLimiter.LazySync)
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_LazySync_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_LazySync_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enabled_ = false;

        numSync_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_LazySync_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync build() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync result = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync(this);
        result.enabled_ = enabled_;
        result.numSync_ = numSync_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.getDefaultInstance()) return this;
        if (other.getEnabled() != false) {
          setEnabled(other.getEnabled());
        }
        if (other.getNumSync() != 0) {
          setNumSync(other.getNumSync());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean enabled_ ;
      /**
       * <pre>
       * Enables lazy sync
       * </pre>
       *
       * <code>bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The enabled.
       */
      @java.lang.Override
      public boolean getEnabled() {
        return enabled_;
      }
      /**
       * <pre>
       * Enables lazy sync
       * </pre>
       *
       * <code>bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The enabled to set.
       * @return This builder for chaining.
       */
      public Builder setEnabled(boolean value) {
        
        enabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enables lazy sync
       * </pre>
       *
       * <code>bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabled() {
        
        enabled_ = false;
        onChanged();
        return this;
      }

      private int numSync_ ;
      /**
       * <pre>
       * Number of times to lazy sync within the _limit&#92;_reset&#92;_interval_.
       * </pre>
       *
       * <code>uint32 num_sync = 2 [json_name = "numSync", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The numSync.
       */
      @java.lang.Override
      public int getNumSync() {
        return numSync_;
      }
      /**
       * <pre>
       * Number of times to lazy sync within the _limit&#92;_reset&#92;_interval_.
       * </pre>
       *
       * <code>uint32 num_sync = 2 [json_name = "numSync", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The numSync to set.
       * @return This builder for chaining.
       */
      public Builder setNumSync(int value) {
        
        numSync_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of times to lazy sync within the _limit&#92;_reset&#92;_interval_.
       * </pre>
       *
       * <code>uint32 num_sync = 2 [json_name = "numSync", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearNumSync() {
        
        numSync_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.RateLimiter.LazySync)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.RateLimiter.LazySync)
    private static final com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LazySync>
        PARSER = new com.google.protobuf.AbstractParser<LazySync>() {
      @java.lang.Override
      public LazySync parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LazySync(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LazySync> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LazySync> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DynamicConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter.DynamicConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> 
        getOverridesList();
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getOverrides(int index);
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    int getOverridesCount();
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder> 
        getOverridesOrBuilderList();
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder getOverridesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Dynamic Configuration for the rate limiter
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.RateLimiter.DynamicConfig}
   */
  public static final class DynamicConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.RateLimiter.DynamicConfig)
      DynamicConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DynamicConfig.newBuilder() to construct.
    private DynamicConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DynamicConfig() {
      overrides_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DynamicConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DynamicConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                overrides_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override>();
                mutable_bitField0_ |= 0x00000001;
              }
              overrides_.add(
                  input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          overrides_ = java.util.Collections.unmodifiableList(overrides_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder.class);
    }

    public static final int OVERRIDES_FIELD_NUMBER = 1;
    private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> overrides_;
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> getOverridesList() {
      return overrides_;
    }
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder> 
        getOverridesOrBuilderList() {
      return overrides_;
    }
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public int getOverridesCount() {
      return overrides_.size();
    }
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getOverrides(int index) {
      return overrides_.get(index);
    }
    /**
     * <pre>
     * Allows to specify different limits for particular label values.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder getOverridesOrBuilder(
        int index) {
      return overrides_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < overrides_.size(); i++) {
        output.writeMessage(1, overrides_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < overrides_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, overrides_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig other = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig) obj;

      if (!getOverridesList()
          .equals(other.getOverridesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOverridesCount() > 0) {
        hash = (37 * hash) + OVERRIDES_FIELD_NUMBER;
        hash = (53 * hash) + getOverridesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Dynamic Configuration for the rate limiter
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.RateLimiter.DynamicConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.RateLimiter.DynamicConfig)
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOverridesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (overridesBuilder_ == null) {
          overrides_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          overridesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_DynamicConfig_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig build() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig result = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig(this);
        int from_bitField0_ = bitField0_;
        if (overridesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            overrides_ = java.util.Collections.unmodifiableList(overrides_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.overrides_ = overrides_;
        } else {
          result.overrides_ = overridesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.getDefaultInstance()) return this;
        if (overridesBuilder_ == null) {
          if (!other.overrides_.isEmpty()) {
            if (overrides_.isEmpty()) {
              overrides_ = other.overrides_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOverridesIsMutable();
              overrides_.addAll(other.overrides_);
            }
            onChanged();
          }
        } else {
          if (!other.overrides_.isEmpty()) {
            if (overridesBuilder_.isEmpty()) {
              overridesBuilder_.dispose();
              overridesBuilder_ = null;
              overrides_ = other.overrides_;
              bitField0_ = (bitField0_ & ~0x00000001);
              overridesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOverridesFieldBuilder() : null;
            } else {
              overridesBuilder_.addAllMessages(other.overrides_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> overrides_ =
        java.util.Collections.emptyList();
      private void ensureOverridesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          overrides_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override>(overrides_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder> overridesBuilder_;

      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> getOverridesList() {
        if (overridesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(overrides_);
        } else {
          return overridesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public int getOverridesCount() {
        if (overridesBuilder_ == null) {
          return overrides_.size();
        } else {
          return overridesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getOverrides(int index) {
        if (overridesBuilder_ == null) {
          return overrides_.get(index);
        } else {
          return overridesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder setOverrides(
          int index, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override value) {
        if (overridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverridesIsMutable();
          overrides_.set(index, value);
          onChanged();
        } else {
          overridesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder setOverrides(
          int index, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder builderForValue) {
        if (overridesBuilder_ == null) {
          ensureOverridesIsMutable();
          overrides_.set(index, builderForValue.build());
          onChanged();
        } else {
          overridesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder addOverrides(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override value) {
        if (overridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverridesIsMutable();
          overrides_.add(value);
          onChanged();
        } else {
          overridesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder addOverrides(
          int index, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override value) {
        if (overridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverridesIsMutable();
          overrides_.add(index, value);
          onChanged();
        } else {
          overridesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder addOverrides(
          com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder builderForValue) {
        if (overridesBuilder_ == null) {
          ensureOverridesIsMutable();
          overrides_.add(builderForValue.build());
          onChanged();
        } else {
          overridesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder addOverrides(
          int index, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder builderForValue) {
        if (overridesBuilder_ == null) {
          ensureOverridesIsMutable();
          overrides_.add(index, builderForValue.build());
          onChanged();
        } else {
          overridesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder addAllOverrides(
          java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override> values) {
        if (overridesBuilder_ == null) {
          ensureOverridesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, overrides_);
          onChanged();
        } else {
          overridesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder clearOverrides() {
        if (overridesBuilder_ == null) {
          overrides_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          overridesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public Builder removeOverrides(int index) {
        if (overridesBuilder_ == null) {
          ensureOverridesIsMutable();
          overrides_.remove(index);
          onChanged();
        } else {
          overridesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder getOverridesBuilder(
          int index) {
        return getOverridesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder getOverridesOrBuilder(
          int index) {
        if (overridesBuilder_ == null) {
          return overrides_.get(index);  } else {
          return overridesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder> 
           getOverridesOrBuilderList() {
        if (overridesBuilder_ != null) {
          return overridesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(overrides_);
        }
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder addOverridesBuilder() {
        return getOverridesFieldBuilder().addBuilder(
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.getDefaultInstance());
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder addOverridesBuilder(
          int index) {
        return getOverridesFieldBuilder().addBuilder(
            index, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.getDefaultInstance());
      }
      /**
       * <pre>
       * Allows to specify different limits for particular label values.
       * </pre>
       *
       * <code>repeated .aperture.policy.language.v1.RateLimiter.Override overrides = 1 [json_name = "overrides"];</code>
       */
      public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder> 
           getOverridesBuilderList() {
        return getOverridesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder> 
          getOverridesFieldBuilder() {
        if (overridesBuilder_ == null) {
          overridesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder>(
                  overrides_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          overrides_ = null;
        }
        return overridesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.RateLimiter.DynamicConfig)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.RateLimiter.DynamicConfig)
    private static final com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DynamicConfig>
        PARSER = new com.google.protobuf.AbstractParser<DynamicConfig>() {
      @java.lang.Override
      public DynamicConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DynamicConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DynamicConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DynamicConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OverrideOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter.Override)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Value of the label for which the override should be applied.
     * </pre>
     *
     * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The labelValue.
     */
    java.lang.String getLabelValue();
    /**
     * <pre>
     * Value of the label for which the override should be applied.
     * </pre>
     *
     * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for labelValue.
     */
    com.google.protobuf.ByteString
        getLabelValueBytes();

    /**
     * <pre>
     * Amount by which the _in&#92;_ports.limit_ should be multiplied for this label value.
     * </pre>
     *
     * <code>double limit_scale_factor = 2 [json_name = "limitScaleFactor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The limitScaleFactor.
     */
    double getLimitScaleFactor();
  }
  /**
   * Protobuf type {@code aperture.policy.language.v1.RateLimiter.Override}
   */
  public static final class Override extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.RateLimiter.Override)
      OverrideOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Override.newBuilder() to construct.
    private Override(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Override() {
      labelValue_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Override();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Override(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              labelValue_ = s;
              break;
            }
            case 17: {

              limitScaleFactor_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Override_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder.class);
    }

    public static final int LABEL_VALUE_FIELD_NUMBER = 1;
    private volatile java.lang.Object labelValue_;
    /**
     * <pre>
     * Value of the label for which the override should be applied.
     * </pre>
     *
     * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The labelValue.
     */
    @java.lang.Override
    public java.lang.String getLabelValue() {
      java.lang.Object ref = labelValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        labelValue_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Value of the label for which the override should be applied.
     * </pre>
     *
     * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for labelValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelValueBytes() {
      java.lang.Object ref = labelValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        labelValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMIT_SCALE_FACTOR_FIELD_NUMBER = 2;
    private double limitScaleFactor_;
    /**
     * <pre>
     * Amount by which the _in&#92;_ports.limit_ should be multiplied for this label value.
     * </pre>
     *
     * <code>double limit_scale_factor = 2 [json_name = "limitScaleFactor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The limitScaleFactor.
     */
    @java.lang.Override
    public double getLimitScaleFactor() {
      return limitScaleFactor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(labelValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, labelValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(limitScaleFactor_) != 0) {
        output.writeDouble(2, limitScaleFactor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(labelValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, labelValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(limitScaleFactor_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, limitScaleFactor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override other = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override) obj;

      if (!getLabelValue()
          .equals(other.getLabelValue())) return false;
      if (java.lang.Double.doubleToLongBits(getLimitScaleFactor())
          != java.lang.Double.doubleToLongBits(
              other.getLimitScaleFactor())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getLabelValue().hashCode();
      hash = (37 * hash) + LIMIT_SCALE_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLimitScaleFactor()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.RateLimiter.Override}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.RateLimiter.Override)
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.OverrideOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Override_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        labelValue_ = "";

        limitScaleFactor_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Override_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override build() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override result = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override(this);
        result.labelValue_ = labelValue_;
        result.limitScaleFactor_ = limitScaleFactor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override.getDefaultInstance()) return this;
        if (!other.getLabelValue().isEmpty()) {
          labelValue_ = other.labelValue_;
          onChanged();
        }
        if (other.getLimitScaleFactor() != 0D) {
          setLimitScaleFactor(other.getLimitScaleFactor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object labelValue_ = "";
      /**
       * <pre>
       * Value of the label for which the override should be applied.
       * </pre>
       *
       * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The labelValue.
       */
      public java.lang.String getLabelValue() {
        java.lang.Object ref = labelValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          labelValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Value of the label for which the override should be applied.
       * </pre>
       *
       * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for labelValue.
       */
      public com.google.protobuf.ByteString
          getLabelValueBytes() {
        java.lang.Object ref = labelValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          labelValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Value of the label for which the override should be applied.
       * </pre>
       *
       * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The labelValue to set.
       * @return This builder for chaining.
       */
      public Builder setLabelValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        labelValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Value of the label for which the override should be applied.
       * </pre>
       *
       * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearLabelValue() {
        
        labelValue_ = getDefaultInstance().getLabelValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Value of the label for which the override should be applied.
       * </pre>
       *
       * <code>string label_value = 1 [json_name = "labelValue", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for labelValue to set.
       * @return This builder for chaining.
       */
      public Builder setLabelValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        labelValue_ = value;
        onChanged();
        return this;
      }

      private double limitScaleFactor_ ;
      /**
       * <pre>
       * Amount by which the _in&#92;_ports.limit_ should be multiplied for this label value.
       * </pre>
       *
       * <code>double limit_scale_factor = 2 [json_name = "limitScaleFactor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The limitScaleFactor.
       */
      @java.lang.Override
      public double getLimitScaleFactor() {
        return limitScaleFactor_;
      }
      /**
       * <pre>
       * Amount by which the _in&#92;_ports.limit_ should be multiplied for this label value.
       * </pre>
       *
       * <code>double limit_scale_factor = 2 [json_name = "limitScaleFactor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The limitScaleFactor to set.
       * @return This builder for chaining.
       */
      public Builder setLimitScaleFactor(double value) {
        
        limitScaleFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount by which the _in&#92;_ports.limit_ should be multiplied for this label value.
       * </pre>
       *
       * <code>double limit_scale_factor = 2 [json_name = "limitScaleFactor", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearLimitScaleFactor() {
        
        limitScaleFactor_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.RateLimiter.Override)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.RateLimiter.Override)
    private static final com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Override>
        PARSER = new com.google.protobuf.AbstractParser<Override>() {
      @java.lang.Override
      public Override parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Override(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Override> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Override> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Override getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter.Ins)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the limit field is set.
     */
    boolean hasLimit();
    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The limit.
     */
    com.fluxninja.generated.aperture.policy.language.v1.InPort getLimit();
    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getLimitOrBuilder();
  }
  /**
   * <pre>
   * Inputs for the RateLimiter component
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.RateLimiter.Ins}
   */
  public static final class Ins extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.RateLimiter.Ins)
      InsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ins.newBuilder() to construct.
    private Ins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ins() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Ins();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ins(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
              if (limit_ != null) {
                subBuilder = limit_.toBuilder();
              }
              limit_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(limit_);
                limit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Ins_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder.class);
    }

    public static final int LIMIT_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.InPort limit_;
    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the limit field is set.
     */
    @java.lang.Override
    public boolean hasLimit() {
      return limit_ != null;
    }
    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The limit.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.InPort getLimit() {
      return limit_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : limit_;
    }
    /**
     * <pre>
     * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
     * Negative values disable the ratelimiter.
     * :::tip
     * Negative limit can be useful to _conditionally_ enable the ratelimiter
     * under certain circumstances. [Decider](#v1-decider) might be helpful.
     * :::
     * </pre>
     *
     * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getLimitOrBuilder() {
      return getLimit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (limit_ != null) {
        output.writeMessage(1, getLimit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (limit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLimit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins other = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins) obj;

      if (hasLimit() != other.hasLimit()) return false;
      if (hasLimit()) {
        if (!getLimit()
            .equals(other.getLimit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLimit()) {
        hash = (37 * hash) + LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getLimit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inputs for the RateLimiter component
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.RateLimiter.Ins}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.RateLimiter.Ins)
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Ins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (limitBuilder_ == null) {
          limit_ = null;
        } else {
          limit_ = null;
          limitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_Ins_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins build() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins result = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins(this);
        if (limitBuilder_ == null) {
          result.limit_ = limit_;
        } else {
          result.limit_ = limitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.getDefaultInstance()) return this;
        if (other.hasLimit()) {
          mergeLimit(other.getLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.InPort limit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> limitBuilder_;
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return Whether the limit field is set.
       */
      public boolean hasLimit() {
        return limitBuilder_ != null || limit_ != null;
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The limit.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getLimit() {
        if (limitBuilder_ == null) {
          return limit_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : limit_;
        } else {
          return limitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLimit(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
        if (limitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          limit_ = value;
          onChanged();
        } else {
          limitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLimit(
          com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
        if (limitBuilder_ == null) {
          limit_ = builderForValue.build();
          onChanged();
        } else {
          limitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder mergeLimit(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
        if (limitBuilder_ == null) {
          if (limit_ != null) {
            limit_ =
              com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(limit_).mergeFrom(value).buildPartial();
          } else {
            limit_ = value;
          }
          onChanged();
        } else {
          limitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearLimit() {
        if (limitBuilder_ == null) {
          limit_ = null;
          onChanged();
        } else {
          limit_ = null;
          limitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getLimitBuilder() {
        
        onChanged();
        return getLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getLimitOrBuilder() {
        if (limitBuilder_ != null) {
          return limitBuilder_.getMessageOrBuilder();
        } else {
          return limit_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : limit_;
        }
      }
      /**
       * <pre>
       * Number of flows allowed per _limit&#92;_reset&#92;_interval_ per each label.
       * Negative values disable the ratelimiter.
       * :::tip
       * Negative limit can be useful to _conditionally_ enable the ratelimiter
       * under certain circumstances. [Decider](#v1-decider) might be helpful.
       * :::
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort limit = 1 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
          getLimitFieldBuilder() {
        if (limitBuilder_ == null) {
          limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                  getLimit(),
                  getParentForChildren(),
                  isClean());
          limit_ = null;
        }
        return limitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.RateLimiter.Ins)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.RateLimiter.Ins)
    private static final com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ins>
        PARSER = new com.google.protobuf.AbstractParser<Ins>() {
      @java.lang.Override
      public Ins parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ins(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ins> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ins> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int IN_PORTS_FIELD_NUMBER = 1;
  private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins inPorts_;
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the inPorts field is set.
   */
  @java.lang.Override
  public boolean hasInPorts() {
    return inPorts_ != null;
  }
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The inPorts.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getInPorts() {
    return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.getDefaultInstance() : inPorts_;
  }
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder getInPortsOrBuilder() {
    return getInPorts();
  }

  public static final int SELECTOR_FIELD_NUMBER = 2;
  private com.fluxninja.generated.aperture.policy.language.v1.Selector selector_;
  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the selector field is set.
   */
  @java.lang.Override
  public boolean hasSelector() {
    return selector_ != null;
  }
  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The selector.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Selector getSelector() {
    return selector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Selector.getDefaultInstance() : selector_;
  }
  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder getSelectorOrBuilder() {
    return getSelector();
  }

  public static final int LIMIT_RESET_INTERVAL_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration limitResetInterval_;
  /**
   * <pre>
   * Time after which the limit for a given label value will be reset.
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the limitResetInterval field is set.
   */
  @java.lang.Override
  public boolean hasLimitResetInterval() {
    return limitResetInterval_ != null;
  }
  /**
   * <pre>
   * Time after which the limit for a given label value will be reset.
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The limitResetInterval.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getLimitResetInterval() {
    return limitResetInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : limitResetInterval_;
  }
  /**
   * <pre>
   * Time after which the limit for a given label value will be reset.
   * </pre>
   *
   * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getLimitResetIntervalOrBuilder() {
    return getLimitResetInterval();
  }

  public static final int LABEL_KEY_FIELD_NUMBER = 4;
  private volatile java.lang.Object labelKey_;
  /**
   * <pre>
   * Specifies which label the ratelimiter should be keyed by.
   * Rate limiting is done independently for each value of the
   * [label](/concepts/flow-control/flow-label.md) with given key.
   * Eg., to give each user a separate limit, assuming you have a _user_ flow
   * label set up, set `label_key: "user"`.
   * </pre>
   *
   * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The labelKey.
   */
  @java.lang.Override
  public java.lang.String getLabelKey() {
    java.lang.Object ref = labelKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      labelKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specifies which label the ratelimiter should be keyed by.
   * Rate limiting is done independently for each value of the
   * [label](/concepts/flow-control/flow-label.md) with given key.
   * Eg., to give each user a separate limit, assuming you have a _user_ flow
   * label set up, set `label_key: "user"`.
   * </pre>
   *
   * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for labelKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLabelKeyBytes() {
    java.lang.Object ref = labelKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      labelKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LAZY_SYNC_FIELD_NUMBER = 5;
  private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync lazySync_;
  /**
   * <pre>
   * Configuration of lazy-syncing behaviour of ratelimiter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
   * @return Whether the lazySync field is set.
   */
  @java.lang.Override
  public boolean hasLazySync() {
    return lazySync_ != null;
  }
  /**
   * <pre>
   * Configuration of lazy-syncing behaviour of ratelimiter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
   * @return The lazySync.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync getLazySync() {
    return lazySync_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.getDefaultInstance() : lazySync_;
  }
  /**
   * <pre>
   * Configuration of lazy-syncing behaviour of ratelimiter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder getLazySyncOrBuilder() {
    return getLazySync();
  }

  public static final int DYNAMIC_CONFIG_KEY_FIELD_NUMBER = 6;
  private volatile java.lang.Object dynamicConfigKey_;
  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
   * @return The dynamicConfigKey.
   */
  @java.lang.Override
  public java.lang.String getDynamicConfigKey() {
    java.lang.Object ref = dynamicConfigKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dynamicConfigKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
   * @return The bytes for dynamicConfigKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDynamicConfigKeyBytes() {
    java.lang.Object ref = dynamicConfigKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dynamicConfigKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFAULT_CONFIG_FIELD_NUMBER = 7;
  private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig defaultConfig_;
  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
   * @return Whether the defaultConfig field is set.
   */
  @java.lang.Override
  public boolean hasDefaultConfig() {
    return defaultConfig_ != null;
  }
  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
   * @return The defaultConfig.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultConfig() {
    return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.getDefaultInstance() : defaultConfig_;
  }
  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
    return getDefaultConfig();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inPorts_ != null) {
      output.writeMessage(1, getInPorts());
    }
    if (selector_ != null) {
      output.writeMessage(2, getSelector());
    }
    if (limitResetInterval_ != null) {
      output.writeMessage(3, getLimitResetInterval());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(labelKey_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, labelKey_);
    }
    if (lazySync_ != null) {
      output.writeMessage(5, getLazySync());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, dynamicConfigKey_);
    }
    if (defaultConfig_ != null) {
      output.writeMessage(7, getDefaultConfig());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (inPorts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInPorts());
    }
    if (selector_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSelector());
    }
    if (limitResetInterval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getLimitResetInterval());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(labelKey_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, labelKey_);
    }
    if (lazySync_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getLazySync());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, dynamicConfigKey_);
    }
    if (defaultConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getDefaultConfig());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.RateLimiter other = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter) obj;

    if (hasInPorts() != other.hasInPorts()) return false;
    if (hasInPorts()) {
      if (!getInPorts()
          .equals(other.getInPorts())) return false;
    }
    if (hasSelector() != other.hasSelector()) return false;
    if (hasSelector()) {
      if (!getSelector()
          .equals(other.getSelector())) return false;
    }
    if (hasLimitResetInterval() != other.hasLimitResetInterval()) return false;
    if (hasLimitResetInterval()) {
      if (!getLimitResetInterval()
          .equals(other.getLimitResetInterval())) return false;
    }
    if (!getLabelKey()
        .equals(other.getLabelKey())) return false;
    if (hasLazySync() != other.hasLazySync()) return false;
    if (hasLazySync()) {
      if (!getLazySync()
          .equals(other.getLazySync())) return false;
    }
    if (!getDynamicConfigKey()
        .equals(other.getDynamicConfigKey())) return false;
    if (hasDefaultConfig() != other.hasDefaultConfig()) return false;
    if (hasDefaultConfig()) {
      if (!getDefaultConfig()
          .equals(other.getDefaultConfig())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInPorts()) {
      hash = (37 * hash) + IN_PORTS_FIELD_NUMBER;
      hash = (53 * hash) + getInPorts().hashCode();
    }
    if (hasSelector()) {
      hash = (37 * hash) + SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getSelector().hashCode();
    }
    if (hasLimitResetInterval()) {
      hash = (37 * hash) + LIMIT_RESET_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getLimitResetInterval().hashCode();
    }
    hash = (37 * hash) + LABEL_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getLabelKey().hashCode();
    if (hasLazySync()) {
      hash = (37 * hash) + LAZY_SYNC_FIELD_NUMBER;
      hash = (53 * hash) + getLazySync().hashCode();
    }
    hash = (37 * hash) + DYNAMIC_CONFIG_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getDynamicConfigKey().hashCode();
    if (hasDefaultConfig()) {
      hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultConfig().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Limits the traffic on a control point to specified rate
   * :::info
   * See also [Rate Limiter overview](/concepts/flow-control/rate-limiter.md).
   * :::
   * Ratelimiting is done separately on per-label-value basis. Use _label&#92;_key_
   * to select which label should be used as key.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.RateLimiter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.RateLimiter)
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.class, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inPortsBuilder_ == null) {
        inPorts_ = null;
      } else {
        inPorts_ = null;
        inPortsBuilder_ = null;
      }
      if (selectorBuilder_ == null) {
        selector_ = null;
      } else {
        selector_ = null;
        selectorBuilder_ = null;
      }
      if (limitResetIntervalBuilder_ == null) {
        limitResetInterval_ = null;
      } else {
        limitResetInterval_ = null;
        limitResetIntervalBuilder_ = null;
      }
      labelKey_ = "";

      if (lazySyncBuilder_ == null) {
        lazySync_ = null;
      } else {
        lazySync_ = null;
        lazySyncBuilder_ = null;
      }
      dynamicConfigKey_ = "";

      if (defaultConfigBuilder_ == null) {
        defaultConfig_ = null;
      } else {
        defaultConfig_ = null;
        defaultConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.PolicyProto.internal_static_aperture_policy_language_v1_RateLimiter_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter build() {
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter result = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter(this);
      if (inPortsBuilder_ == null) {
        result.inPorts_ = inPorts_;
      } else {
        result.inPorts_ = inPortsBuilder_.build();
      }
      if (selectorBuilder_ == null) {
        result.selector_ = selector_;
      } else {
        result.selector_ = selectorBuilder_.build();
      }
      if (limitResetIntervalBuilder_ == null) {
        result.limitResetInterval_ = limitResetInterval_;
      } else {
        result.limitResetInterval_ = limitResetIntervalBuilder_.build();
      }
      result.labelKey_ = labelKey_;
      if (lazySyncBuilder_ == null) {
        result.lazySync_ = lazySync_;
      } else {
        result.lazySync_ = lazySyncBuilder_.build();
      }
      result.dynamicConfigKey_ = dynamicConfigKey_;
      if (defaultConfigBuilder_ == null) {
        result.defaultConfig_ = defaultConfig_;
      } else {
        result.defaultConfig_ = defaultConfigBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.RateLimiter) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.RateLimiter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.getDefaultInstance()) return this;
      if (other.hasInPorts()) {
        mergeInPorts(other.getInPorts());
      }
      if (other.hasSelector()) {
        mergeSelector(other.getSelector());
      }
      if (other.hasLimitResetInterval()) {
        mergeLimitResetInterval(other.getLimitResetInterval());
      }
      if (!other.getLabelKey().isEmpty()) {
        labelKey_ = other.labelKey_;
        onChanged();
      }
      if (other.hasLazySync()) {
        mergeLazySync(other.getLazySync());
      }
      if (!other.getDynamicConfigKey().isEmpty()) {
        dynamicConfigKey_ = other.dynamicConfigKey_;
        onChanged();
      }
      if (other.hasDefaultConfig()) {
        mergeDefaultConfig(other.getDefaultConfig());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.RateLimiter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.RateLimiter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins inPorts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder> inPortsBuilder_;
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the inPorts field is set.
     */
    public boolean hasInPorts() {
      return inPortsBuilder_ != null || inPorts_ != null;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The inPorts.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getInPorts() {
      if (inPortsBuilder_ == null) {
        return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.getDefaultInstance() : inPorts_;
      } else {
        return inPortsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setInPorts(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins value) {
      if (inPortsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inPorts_ = value;
        onChanged();
      } else {
        inPortsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setInPorts(
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder builderForValue) {
      if (inPortsBuilder_ == null) {
        inPorts_ = builderForValue.build();
        onChanged();
      } else {
        inPortsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder mergeInPorts(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins value) {
      if (inPortsBuilder_ == null) {
        if (inPorts_ != null) {
          inPorts_ =
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.newBuilder(inPorts_).mergeFrom(value).buildPartial();
        } else {
          inPorts_ = value;
        }
        onChanged();
      } else {
        inPortsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder clearInPorts() {
      if (inPortsBuilder_ == null) {
        inPorts_ = null;
        onChanged();
      } else {
        inPorts_ = null;
        inPortsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder getInPortsBuilder() {
      
      onChanged();
      return getInPortsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder getInPortsOrBuilder() {
      if (inPortsBuilder_ != null) {
        return inPortsBuilder_.getMessageOrBuilder();
      } else {
        return inPorts_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.getDefaultInstance() : inPorts_;
      }
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder> 
        getInPortsFieldBuilder() {
      if (inPortsBuilder_ == null) {
        inPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder>(
                getInPorts(),
                getParentForChildren(),
                isClean());
        inPorts_ = null;
      }
      return inPortsBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.Selector selector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Selector, com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder, com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder> selectorBuilder_;
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the selector field is set.
     */
    public boolean hasSelector() {
      return selectorBuilder_ != null || selector_ != null;
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The selector.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Selector getSelector() {
      if (selectorBuilder_ == null) {
        return selector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Selector.getDefaultInstance() : selector_;
      } else {
        return selectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setSelector(com.fluxninja.generated.aperture.policy.language.v1.Selector value) {
      if (selectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        selector_ = value;
        onChanged();
      } else {
        selectorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setSelector(
        com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder builderForValue) {
      if (selectorBuilder_ == null) {
        selector_ = builderForValue.build();
        onChanged();
      } else {
        selectorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder mergeSelector(com.fluxninja.generated.aperture.policy.language.v1.Selector value) {
      if (selectorBuilder_ == null) {
        if (selector_ != null) {
          selector_ =
            com.fluxninja.generated.aperture.policy.language.v1.Selector.newBuilder(selector_).mergeFrom(value).buildPartial();
        } else {
          selector_ = value;
        }
        onChanged();
      } else {
        selectorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder clearSelector() {
      if (selectorBuilder_ == null) {
        selector_ = null;
        onChanged();
      } else {
        selector_ = null;
        selectorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder getSelectorBuilder() {
      
      onChanged();
      return getSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder getSelectorOrBuilder() {
      if (selectorBuilder_ != null) {
        return selectorBuilder_.getMessageOrBuilder();
      } else {
        return selector_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.Selector.getDefaultInstance() : selector_;
      }
    }
    /**
     * <pre>
     * Which control point to apply this ratelimiter to.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Selector selector = 2 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Selector, com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder, com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder> 
        getSelectorFieldBuilder() {
      if (selectorBuilder_ == null) {
        selectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Selector, com.fluxninja.generated.aperture.policy.language.v1.Selector.Builder, com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder>(
                getSelector(),
                getParentForChildren(),
                isClean());
        selector_ = null;
      }
      return selectorBuilder_;
    }

    private com.google.protobuf.Duration limitResetInterval_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> limitResetIntervalBuilder_;
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the limitResetInterval field is set.
     */
    public boolean hasLimitResetInterval() {
      return limitResetIntervalBuilder_ != null || limitResetInterval_ != null;
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The limitResetInterval.
     */
    public com.google.protobuf.Duration getLimitResetInterval() {
      if (limitResetIntervalBuilder_ == null) {
        return limitResetInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : limitResetInterval_;
      } else {
        return limitResetIntervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setLimitResetInterval(com.google.protobuf.Duration value) {
      if (limitResetIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        limitResetInterval_ = value;
        onChanged();
      } else {
        limitResetIntervalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setLimitResetInterval(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (limitResetIntervalBuilder_ == null) {
        limitResetInterval_ = builderForValue.build();
        onChanged();
      } else {
        limitResetIntervalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder mergeLimitResetInterval(com.google.protobuf.Duration value) {
      if (limitResetIntervalBuilder_ == null) {
        if (limitResetInterval_ != null) {
          limitResetInterval_ =
            com.google.protobuf.Duration.newBuilder(limitResetInterval_).mergeFrom(value).buildPartial();
        } else {
          limitResetInterval_ = value;
        }
        onChanged();
      } else {
        limitResetIntervalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder clearLimitResetInterval() {
      if (limitResetIntervalBuilder_ == null) {
        limitResetInterval_ = null;
        onChanged();
      } else {
        limitResetInterval_ = null;
        limitResetIntervalBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getLimitResetIntervalBuilder() {
      
      onChanged();
      return getLimitResetIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getLimitResetIntervalOrBuilder() {
      if (limitResetIntervalBuilder_ != null) {
        return limitResetIntervalBuilder_.getMessageOrBuilder();
      } else {
        return limitResetInterval_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : limitResetInterval_;
      }
    }
    /**
     * <pre>
     * Time after which the limit for a given label value will be reset.
     * </pre>
     *
     * <code>.google.protobuf.Duration limit_reset_interval = 3 [json_name = "limitResetInterval", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getLimitResetIntervalFieldBuilder() {
      if (limitResetIntervalBuilder_ == null) {
        limitResetIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getLimitResetInterval(),
                getParentForChildren(),
                isClean());
        limitResetInterval_ = null;
      }
      return limitResetIntervalBuilder_;
    }

    private java.lang.Object labelKey_ = "";
    /**
     * <pre>
     * Specifies which label the ratelimiter should be keyed by.
     * Rate limiting is done independently for each value of the
     * [label](/concepts/flow-control/flow-label.md) with given key.
     * Eg., to give each user a separate limit, assuming you have a _user_ flow
     * label set up, set `label_key: "user"`.
     * </pre>
     *
     * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The labelKey.
     */
    public java.lang.String getLabelKey() {
      java.lang.Object ref = labelKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        labelKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specifies which label the ratelimiter should be keyed by.
     * Rate limiting is done independently for each value of the
     * [label](/concepts/flow-control/flow-label.md) with given key.
     * Eg., to give each user a separate limit, assuming you have a _user_ flow
     * label set up, set `label_key: "user"`.
     * </pre>
     *
     * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for labelKey.
     */
    public com.google.protobuf.ByteString
        getLabelKeyBytes() {
      java.lang.Object ref = labelKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        labelKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specifies which label the ratelimiter should be keyed by.
     * Rate limiting is done independently for each value of the
     * [label](/concepts/flow-control/flow-label.md) with given key.
     * Eg., to give each user a separate limit, assuming you have a _user_ flow
     * label set up, set `label_key: "user"`.
     * </pre>
     *
     * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The labelKey to set.
     * @return This builder for chaining.
     */
    public Builder setLabelKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      labelKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies which label the ratelimiter should be keyed by.
     * Rate limiting is done independently for each value of the
     * [label](/concepts/flow-control/flow-label.md) with given key.
     * Eg., to give each user a separate limit, assuming you have a _user_ flow
     * label set up, set `label_key: "user"`.
     * </pre>
     *
     * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearLabelKey() {
      
      labelKey_ = getDefaultInstance().getLabelKey();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies which label the ratelimiter should be keyed by.
     * Rate limiting is done independently for each value of the
     * [label](/concepts/flow-control/flow-label.md) with given key.
     * Eg., to give each user a separate limit, assuming you have a _user_ flow
     * label set up, set `label_key: "user"`.
     * </pre>
     *
     * <code>string label_key = 4 [json_name = "labelKey", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The bytes for labelKey to set.
     * @return This builder for chaining.
     */
    public Builder setLabelKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      labelKey_ = value;
      onChanged();
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync lazySync_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder> lazySyncBuilder_;
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     * @return Whether the lazySync field is set.
     */
    public boolean hasLazySync() {
      return lazySyncBuilder_ != null || lazySync_ != null;
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     * @return The lazySync.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync getLazySync() {
      if (lazySyncBuilder_ == null) {
        return lazySync_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.getDefaultInstance() : lazySync_;
      } else {
        return lazySyncBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public Builder setLazySync(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync value) {
      if (lazySyncBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lazySync_ = value;
        onChanged();
      } else {
        lazySyncBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public Builder setLazySync(
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder builderForValue) {
      if (lazySyncBuilder_ == null) {
        lazySync_ = builderForValue.build();
        onChanged();
      } else {
        lazySyncBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public Builder mergeLazySync(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync value) {
      if (lazySyncBuilder_ == null) {
        if (lazySync_ != null) {
          lazySync_ =
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.newBuilder(lazySync_).mergeFrom(value).buildPartial();
        } else {
          lazySync_ = value;
        }
        onChanged();
      } else {
        lazySyncBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public Builder clearLazySync() {
      if (lazySyncBuilder_ == null) {
        lazySync_ = null;
        onChanged();
      } else {
        lazySync_ = null;
        lazySyncBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder getLazySyncBuilder() {
      
      onChanged();
      return getLazySyncFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder getLazySyncOrBuilder() {
      if (lazySyncBuilder_ != null) {
        return lazySyncBuilder_.getMessageOrBuilder();
      } else {
        return lazySync_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.getDefaultInstance() : lazySync_;
      }
    }
    /**
     * <pre>
     * Configuration of lazy-syncing behaviour of ratelimiter
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.LazySync lazy_sync = 5 [json_name = "lazySync"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder> 
        getLazySyncFieldBuilder() {
      if (lazySyncBuilder_ == null) {
        lazySyncBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySync.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.LazySyncOrBuilder>(
                getLazySync(),
                getParentForChildren(),
                isClean());
        lazySync_ = null;
      }
      return lazySyncBuilder_;
    }

    private java.lang.Object dynamicConfigKey_ = "";
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
     * @return The dynamicConfigKey.
     */
    public java.lang.String getDynamicConfigKey() {
      java.lang.Object ref = dynamicConfigKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dynamicConfigKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
     * @return The bytes for dynamicConfigKey.
     */
    public com.google.protobuf.ByteString
        getDynamicConfigKeyBytes() {
      java.lang.Object ref = dynamicConfigKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dynamicConfigKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
     * @param value The dynamicConfigKey to set.
     * @return This builder for chaining.
     */
    public Builder setDynamicConfigKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dynamicConfigKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDynamicConfigKey() {
      
      dynamicConfigKey_ = getDefaultInstance().getDynamicConfigKey();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 6 [json_name = "dynamicConfigKey"];</code>
     * @param value The bytes for dynamicConfigKey to set.
     * @return This builder for chaining.
     */
    public Builder setDynamicConfigKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dynamicConfigKey_ = value;
      onChanged();
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig defaultConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder> defaultConfigBuilder_;
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     * @return Whether the defaultConfig field is set.
     */
    public boolean hasDefaultConfig() {
      return defaultConfigBuilder_ != null || defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     * @return The defaultConfig.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultConfig() {
      if (defaultConfigBuilder_ == null) {
        return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.getDefaultInstance() : defaultConfig_;
      } else {
        return defaultConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public Builder setDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig value) {
      if (defaultConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultConfig_ = value;
        onChanged();
      } else {
        defaultConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public Builder setDefaultConfig(
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder builderForValue) {
      if (defaultConfigBuilder_ == null) {
        defaultConfig_ = builderForValue.build();
        onChanged();
      } else {
        defaultConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public Builder mergeDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig value) {
      if (defaultConfigBuilder_ == null) {
        if (defaultConfig_ != null) {
          defaultConfig_ =
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
        } else {
          defaultConfig_ = value;
        }
        onChanged();
      } else {
        defaultConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public Builder clearDefaultConfig() {
      if (defaultConfigBuilder_ == null) {
        defaultConfig_ = null;
        onChanged();
      } else {
        defaultConfig_ = null;
        defaultConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder getDefaultConfigBuilder() {
      
      onChanged();
      return getDefaultConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
      if (defaultConfigBuilder_ != null) {
        return defaultConfigBuilder_.getMessageOrBuilder();
      } else {
        return defaultConfig_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.getDefaultInstance() : defaultConfig_;
      }
    }
    /**
     * <pre>
     * Default configuration
     * </pre>
     *
     * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 7 [json_name = "defaultConfig"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder> 
        getDefaultConfigFieldBuilder() {
      if (defaultConfigBuilder_ == null) {
        defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder>(
                getDefaultConfig(),
                getParentForChildren(),
                isClean());
        defaultConfig_ = null;
      }
      return defaultConfigBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.RateLimiter)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.RateLimiter)
  private static final com.fluxninja.generated.aperture.policy.language.v1.RateLimiter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.RateLimiter();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.RateLimiter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RateLimiter>
      PARSER = new com.google.protobuf.AbstractParser<RateLimiter>() {
    @java.lang.Override
    public RateLimiter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RateLimiter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RateLimiter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RateLimiter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.RateLimiter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

