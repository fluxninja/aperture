// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/std_components.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface GradientControllerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.GradientController)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Input ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return Whether the inPorts field is set.
   */
  boolean hasInPorts();
  /**
   * <pre>
   * Input ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return The inPorts.
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.Ins getInPorts();
  /**
   * <pre>
   * Input ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Ins in_ports = 1 [json_name = "inPorts"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.InsOrBuilder getInPortsOrBuilder();

  /**
   * <pre>
   * Output ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Outs out_ports = 2 [json_name = "outPorts"];</code>
   * @return Whether the outPorts field is set.
   */
  boolean hasOutPorts();
  /**
   * <pre>
   * Output ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Outs out_ports = 2 [json_name = "outPorts"];</code>
   * @return The outPorts.
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.Outs getOutPorts();
  /**
   * <pre>
   * Output ports of the Gradient Controller.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Outs out_ports = 2 [json_name = "outPorts"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.OutsOrBuilder getOutPortsOrBuilder();

  /**
   * <pre>
   * Gradient Parameters.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return Whether the parameters field is set.
   */
  boolean hasParameters();
  /**
   * <pre>
   * Gradient Parameters.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return The parameters.
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.Parameters getParameters();
  /**
   * <pre>
   * Gradient Parameters.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.Parameters parameters = 3 [json_name = "parameters"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.ParametersOrBuilder getParametersOrBuilder();

  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 4 [json_name = "dynamicConfigKey"];</code>
   * @return The dynamicConfigKey.
   */
  java.lang.String getDynamicConfigKey();
  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 4 [json_name = "dynamicConfigKey"];</code>
   * @return The bytes for dynamicConfigKey.
   */
  com.google.protobuf.ByteString
      getDynamicConfigKeyBytes();

  /**
   * <pre>
   * Default configuration.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   * @return Whether the defaultConfig field is set.
   */
  boolean hasDefaultConfig();
  /**
   * <pre>
   * Default configuration.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   * @return The defaultConfig.
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.DynamicConfig getDefaultConfig();
  /**
   * <pre>
   * Default configuration.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.GradientController.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.GradientController.DynamicConfigOrBuilder getDefaultConfigOrBuilder();
}
