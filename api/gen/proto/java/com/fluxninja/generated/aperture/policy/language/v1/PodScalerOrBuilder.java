// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/autoscale.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface PodScalerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   * @return Whether the kubernetesObjectSelector field is set.
   */
  boolean hasKubernetesObjectSelector();
  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   * @return The kubernetesObjectSelector.
   */
  com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector();
  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder();

  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   * @return Whether the scaleReporter field is set.
   */
  boolean hasScaleReporter();
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   * @return The scaleReporter.
   */
  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getScaleReporter();
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder getScaleReporterOrBuilder();

  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   * @return Whether the scaleActuator field is set.
   */
  boolean hasScaleActuator();
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   * @return The scaleActuator.
   */
  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getScaleActuator();
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder getScaleActuatorOrBuilder();
}
