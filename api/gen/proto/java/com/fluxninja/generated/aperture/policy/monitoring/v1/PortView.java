// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/monitoring/v1/policy_view.proto

package com.fluxninja.generated.aperture.policy.monitoring.v1;

/**
 * <pre>
 * Components are interconnected with each other via Ports
 * </pre>
 *
 * Protobuf type {@code aperture.policy.monitoring.v1.PortView}
 */
public final class PortView extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.monitoring.v1.PortView)
    PortViewOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PortView.newBuilder() to construct.
  private PortView(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PortView() {
    portName_ = "";
    subCircuitId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PortView();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PortView(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            portName_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            valueCase_ = 2;
            value_ = s;
            break;
          }
          case 25: {
            value_ = input.readDouble();
            valueCase_ = 3;
            break;
          }
          case 32: {

            looped_ = input.readBool();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            subCircuitId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_PortView_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_PortView_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.class, com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.Builder.class);
  }

  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SIGNAL_NAME(2),
    CONSTANT_VALUE(3),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 2: return SIGNAL_NAME;
        case 3: return CONSTANT_VALUE;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int PORT_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object portName_;
  /**
   * <pre>
   * Port name
   * </pre>
   *
   * <code>string port_name = 1 [json_name = "portName"];</code>
   * @return The portName.
   */
  @java.lang.Override
  public java.lang.String getPortName() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      portName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Port name
   * </pre>
   *
   * <code>string port_name = 1 [json_name = "portName"];</code>
   * @return The bytes for portName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPortNameBytes() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      portName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIGNAL_NAME_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return Whether the signalName field is set.
   */
  public boolean hasSignalName() {
    return valueCase_ == 2;
  }
  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return The signalName.
   */
  public java.lang.String getSignalName() {
    java.lang.Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueCase_ == 2) {
        value_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Name of the Signal on the Port.
   * </pre>
   *
   * <code>string signal_name = 2 [json_name = "signalName"];</code>
   * @return The bytes for signalName.
   */
  public com.google.protobuf.ByteString
      getSignalNameBytes() {
    java.lang.Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (valueCase_ == 2) {
        value_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONSTANT_VALUE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Constant value at an incoming Port
   * </pre>
   *
   * <code>double constant_value = 3 [json_name = "constantValue"];</code>
   * @return Whether the constantValue field is set.
   */
  @java.lang.Override
  public boolean hasConstantValue() {
    return valueCase_ == 3;
  }
  /**
   * <pre>
   * Constant value at an incoming Port
   * </pre>
   *
   * <code>double constant_value = 3 [json_name = "constantValue"];</code>
   * @return The constantValue.
   */
  @java.lang.Override
  public double getConstantValue() {
    if (valueCase_ == 3) {
      return (java.lang.Double) value_;
    }
    return 0D;
  }

  public static final int LOOPED_FIELD_NUMBER = 4;
  private boolean looped_;
  /**
   * <pre>
   * True if port is looped.
   * </pre>
   *
   * <code>bool looped = 4 [json_name = "looped"];</code>
   * @return The looped.
   */
  @java.lang.Override
  public boolean getLooped() {
    return looped_;
  }

  public static final int SUB_CIRCUIT_ID_FIELD_NUMBER = 5;
  private volatile java.lang.Object subCircuitId_;
  /**
   * <pre>
   * Sub circuit id, applicable only if value is of type signal_name.
   * </pre>
   *
   * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
   * @return The subCircuitId.
   */
  @java.lang.Override
  public java.lang.String getSubCircuitId() {
    java.lang.Object ref = subCircuitId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subCircuitId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Sub circuit id, applicable only if value is of type signal_name.
   * </pre>
   *
   * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
   * @return The bytes for subCircuitId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubCircuitIdBytes() {
    java.lang.Object ref = subCircuitId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subCircuitId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, portName_);
    }
    if (valueCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
    }
    if (valueCase_ == 3) {
      output.writeDouble(
          3, (double)((java.lang.Double) value_));
    }
    if (looped_ != false) {
      output.writeBool(4, looped_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subCircuitId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, subCircuitId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, portName_);
    }
    if (valueCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
    }
    if (valueCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            3, (double)((java.lang.Double) value_));
    }
    if (looped_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, looped_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subCircuitId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, subCircuitId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.monitoring.v1.PortView)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.monitoring.v1.PortView other = (com.fluxninja.generated.aperture.policy.monitoring.v1.PortView) obj;

    if (!getPortName()
        .equals(other.getPortName())) return false;
    if (getLooped()
        != other.getLooped()) return false;
    if (!getSubCircuitId()
        .equals(other.getSubCircuitId())) return false;
    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 2:
        if (!getSignalName()
            .equals(other.getSignalName())) return false;
        break;
      case 3:
        if (java.lang.Double.doubleToLongBits(getConstantValue())
            != java.lang.Double.doubleToLongBits(
                other.getConstantValue())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PORT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPortName().hashCode();
    hash = (37 * hash) + LOOPED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getLooped());
    hash = (37 * hash) + SUB_CIRCUIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSubCircuitId().hashCode();
    switch (valueCase_) {
      case 2:
        hash = (37 * hash) + SIGNAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSignalName().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CONSTANT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getConstantValue()));
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.monitoring.v1.PortView prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Components are interconnected with each other via Ports
   * </pre>
   *
   * Protobuf type {@code aperture.policy.monitoring.v1.PortView}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.monitoring.v1.PortView)
      com.fluxninja.generated.aperture.policy.monitoring.v1.PortViewOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_PortView_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_PortView_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.class, com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      portName_ = "";

      looped_ = false;

      subCircuitId_ = "";

      valueCase_ = 0;
      value_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PolicyViewProto.internal_static_aperture_policy_monitoring_v1_PortView_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.PortView getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.PortView build() {
      com.fluxninja.generated.aperture.policy.monitoring.v1.PortView result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.monitoring.v1.PortView buildPartial() {
      com.fluxninja.generated.aperture.policy.monitoring.v1.PortView result = new com.fluxninja.generated.aperture.policy.monitoring.v1.PortView(this);
      result.portName_ = portName_;
      if (valueCase_ == 2) {
        result.value_ = value_;
      }
      if (valueCase_ == 3) {
        result.value_ = value_;
      }
      result.looped_ = looped_;
      result.subCircuitId_ = subCircuitId_;
      result.valueCase_ = valueCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.monitoring.v1.PortView) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.monitoring.v1.PortView)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.monitoring.v1.PortView other) {
      if (other == com.fluxninja.generated.aperture.policy.monitoring.v1.PortView.getDefaultInstance()) return this;
      if (!other.getPortName().isEmpty()) {
        portName_ = other.portName_;
        onChanged();
      }
      if (other.getLooped() != false) {
        setLooped(other.getLooped());
      }
      if (!other.getSubCircuitId().isEmpty()) {
        subCircuitId_ = other.subCircuitId_;
        onChanged();
      }
      switch (other.getValueCase()) {
        case SIGNAL_NAME: {
          valueCase_ = 2;
          value_ = other.value_;
          onChanged();
          break;
        }
        case CONSTANT_VALUE: {
          setConstantValue(other.getConstantValue());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.monitoring.v1.PortView parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.monitoring.v1.PortView) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object portName_ = "";
    /**
     * <pre>
     * Port name
     * </pre>
     *
     * <code>string port_name = 1 [json_name = "portName"];</code>
     * @return The portName.
     */
    public java.lang.String getPortName() {
      java.lang.Object ref = portName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        portName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Port name
     * </pre>
     *
     * <code>string port_name = 1 [json_name = "portName"];</code>
     * @return The bytes for portName.
     */
    public com.google.protobuf.ByteString
        getPortNameBytes() {
      java.lang.Object ref = portName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Port name
     * </pre>
     *
     * <code>string port_name = 1 [json_name = "portName"];</code>
     * @param value The portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      portName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Port name
     * </pre>
     *
     * <code>string port_name = 1 [json_name = "portName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPortName() {
      
      portName_ = getDefaultInstance().getPortName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Port name
     * </pre>
     *
     * <code>string port_name = 1 [json_name = "portName"];</code>
     * @param value The bytes for portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      portName_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @return Whether the signalName field is set.
     */
    @java.lang.Override
    public boolean hasSignalName() {
      return valueCase_ == 2;
    }
    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @return The signalName.
     */
    @java.lang.Override
    public java.lang.String getSignalName() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 2) {
          value_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @return The bytes for signalName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignalNameBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 2) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @param value The signalName to set.
     * @return This builder for chaining.
     */
    public Builder setSignalName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSignalName() {
      if (valueCase_ == 2) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Name of the Signal on the Port.
     * </pre>
     *
     * <code>string signal_name = 2 [json_name = "signalName"];</code>
     * @param value The bytes for signalName to set.
     * @return This builder for chaining.
     */
    public Builder setSignalNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Constant value at an incoming Port
     * </pre>
     *
     * <code>double constant_value = 3 [json_name = "constantValue"];</code>
     * @return Whether the constantValue field is set.
     */
    public boolean hasConstantValue() {
      return valueCase_ == 3;
    }
    /**
     * <pre>
     * Constant value at an incoming Port
     * </pre>
     *
     * <code>double constant_value = 3 [json_name = "constantValue"];</code>
     * @return The constantValue.
     */
    public double getConstantValue() {
      if (valueCase_ == 3) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }
    /**
     * <pre>
     * Constant value at an incoming Port
     * </pre>
     *
     * <code>double constant_value = 3 [json_name = "constantValue"];</code>
     * @param value The constantValue to set.
     * @return This builder for chaining.
     */
    public Builder setConstantValue(double value) {
      valueCase_ = 3;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Constant value at an incoming Port
     * </pre>
     *
     * <code>double constant_value = 3 [json_name = "constantValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConstantValue() {
      if (valueCase_ == 3) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    private boolean looped_ ;
    /**
     * <pre>
     * True if port is looped.
     * </pre>
     *
     * <code>bool looped = 4 [json_name = "looped"];</code>
     * @return The looped.
     */
    @java.lang.Override
    public boolean getLooped() {
      return looped_;
    }
    /**
     * <pre>
     * True if port is looped.
     * </pre>
     *
     * <code>bool looped = 4 [json_name = "looped"];</code>
     * @param value The looped to set.
     * @return This builder for chaining.
     */
    public Builder setLooped(boolean value) {
      
      looped_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if port is looped.
     * </pre>
     *
     * <code>bool looped = 4 [json_name = "looped"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLooped() {
      
      looped_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object subCircuitId_ = "";
    /**
     * <pre>
     * Sub circuit id, applicable only if value is of type signal_name.
     * </pre>
     *
     * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
     * @return The subCircuitId.
     */
    public java.lang.String getSubCircuitId() {
      java.lang.Object ref = subCircuitId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subCircuitId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Sub circuit id, applicable only if value is of type signal_name.
     * </pre>
     *
     * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
     * @return The bytes for subCircuitId.
     */
    public com.google.protobuf.ByteString
        getSubCircuitIdBytes() {
      java.lang.Object ref = subCircuitId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subCircuitId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Sub circuit id, applicable only if value is of type signal_name.
     * </pre>
     *
     * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
     * @param value The subCircuitId to set.
     * @return This builder for chaining.
     */
    public Builder setSubCircuitId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subCircuitId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Sub circuit id, applicable only if value is of type signal_name.
     * </pre>
     *
     * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSubCircuitId() {
      
      subCircuitId_ = getDefaultInstance().getSubCircuitId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Sub circuit id, applicable only if value is of type signal_name.
     * </pre>
     *
     * <code>string sub_circuit_id = 5 [json_name = "subCircuitId"];</code>
     * @param value The bytes for subCircuitId to set.
     * @return This builder for chaining.
     */
    public Builder setSubCircuitIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subCircuitId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.monitoring.v1.PortView)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.monitoring.v1.PortView)
  private static final com.fluxninja.generated.aperture.policy.monitoring.v1.PortView DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.monitoring.v1.PortView();
  }

  public static com.fluxninja.generated.aperture.policy.monitoring.v1.PortView getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PortView>
      PARSER = new com.google.protobuf.AbstractParser<PortView>() {
    @java.lang.Override
    public PortView parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PortView(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PortView> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PortView> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.monitoring.v1.PortView getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

