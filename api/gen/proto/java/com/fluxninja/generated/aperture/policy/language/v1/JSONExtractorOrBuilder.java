// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/flowcontrol.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface JSONExtractorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.JSONExtractor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Attribute path pointing to some strings - eg. "request.http.body".
   * </pre>
   *
   * <code>string from = 1 [json_name = "from"];</code>
   * @return The from.
   */
  java.lang.String getFrom();
  /**
   * <pre>
   * Attribute path pointing to some strings - eg. "request.http.body".
   * </pre>
   *
   * <code>string from = 1 [json_name = "from"];</code>
   * @return The bytes for from.
   */
  com.google.protobuf.ByteString
      getFromBytes();

  /**
   * <pre>
   * Json pointer represents a parsed json pointer which allows to select a specified field from the json payload.
   * Note: Uses [json pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,
   * eg. `/foo/bar`. If the pointer points into an object, it'd be stringified.
   * </pre>
   *
   * <code>string pointer = 2 [json_name = "pointer"];</code>
   * @return The pointer.
   */
  java.lang.String getPointer();
  /**
   * <pre>
   * Json pointer represents a parsed json pointer which allows to select a specified field from the json payload.
   * Note: Uses [json pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,
   * eg. `/foo/bar`. If the pointer points into an object, it'd be stringified.
   * </pre>
   *
   * <code>string pointer = 2 [json_name = "pointer"];</code>
   * @return The bytes for pointer.
   */
  com.google.protobuf.ByteString
      getPointerBytes();
}
