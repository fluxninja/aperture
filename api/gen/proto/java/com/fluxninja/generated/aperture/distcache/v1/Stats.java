// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/distcache/v1/stats.proto

package com.fluxninja.generated.aperture.distcache.v1;

/**
 * Protobuf type {@code aperture.distcache.v1.Stats}
 */
public final class Stats extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.distcache.v1.Stats)
    StatsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Stats.newBuilder() to construct.
  private Stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Stats() {
    cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    releaseVersion_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Stats();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Stats(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              cmdline_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            cmdline_.add(s);
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            releaseVersion_ = s;
            break;
          }
          case 24: {

            uptimeSeconds_ = input.readInt64();
            break;
          }
          case 34: {
            com.google.protobuf.Struct.Builder subBuilder = null;
            if (runtime_ != null) {
              subBuilder = runtime_.toBuilder();
            }
            runtime_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(runtime_);
              runtime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.fluxninja.generated.aperture.distcache.v1.Member.Builder subBuilder = null;
            if (clusterCoordinator_ != null) {
              subBuilder = clusterCoordinator_.toBuilder();
            }
            clusterCoordinator_ = input.readMessage(com.fluxninja.generated.aperture.distcache.v1.Member.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(clusterCoordinator_);
              clusterCoordinator_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.fluxninja.generated.aperture.distcache.v1.Member.Builder subBuilder = null;
            if (member_ != null) {
              subBuilder = member_.toBuilder();
            }
            member_ = input.readMessage(com.fluxninja.generated.aperture.distcache.v1.Member.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(member_);
              member_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              partitions_ = com.google.protobuf.MapField.newMapField(
                  PartitionsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
            partitions__ = input.readMessage(
                PartitionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            partitions_.getMutableMap().put(
                partitions__.getKey(), partitions__.getValue());
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              backups_ = com.google.protobuf.MapField.newMapField(
                  BackupsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
            backups__ = input.readMessage(
                BackupsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            backups_.getMutableMap().put(
                backups__.getKey(), backups__.getValue());
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              clusterMembers_ = com.google.protobuf.MapField.newMapField(
                  ClusterMembersDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
            clusterMembers__ = input.readMessage(
                ClusterMembersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            clusterMembers_.getMutableMap().put(
                clusterMembers__.getKey(), clusterMembers__.getValue());
            break;
          }
          case 82: {
            com.fluxninja.generated.aperture.distcache.v1.Network.Builder subBuilder = null;
            if (network_ != null) {
              subBuilder = network_.toBuilder();
            }
            network_ = input.readMessage(com.fluxninja.generated.aperture.distcache.v1.Network.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(network_);
              network_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder subBuilder = null;
            if (dMaps_ != null) {
              subBuilder = dMaps_.toBuilder();
            }
            dMaps_ = input.readMessage(com.fluxninja.generated.aperture.distcache.v1.DMaps.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dMaps_);
              dMaps_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder subBuilder = null;
            if (dTopics_ != null) {
              subBuilder = dTopics_.toBuilder();
            }
            dTopics_ = input.readMessage(com.fluxninja.generated.aperture.distcache.v1.DTopics.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dTopics_);
              dTopics_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        cmdline_ = cmdline_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 7:
        return internalGetPartitions();
      case 8:
        return internalGetBackups();
      case 9:
        return internalGetClusterMembers();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.distcache.v1.Stats.class, com.fluxninja.generated.aperture.distcache.v1.Stats.Builder.class);
  }

  public static final int CMDLINE_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList cmdline_;
  /**
   * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
   * @return A list containing the cmdline.
   */
  public com.google.protobuf.ProtocolStringList
      getCmdlineList() {
    return cmdline_;
  }
  /**
   * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
   * @return The count of cmdline.
   */
  public int getCmdlineCount() {
    return cmdline_.size();
  }
  /**
   * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
   * @param index The index of the element to return.
   * @return The cmdline at the given index.
   */
  public java.lang.String getCmdline(int index) {
    return cmdline_.get(index);
  }
  /**
   * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the cmdline at the given index.
   */
  public com.google.protobuf.ByteString
      getCmdlineBytes(int index) {
    return cmdline_.getByteString(index);
  }

  public static final int RELEASE_VERSION_FIELD_NUMBER = 2;
  private volatile java.lang.Object releaseVersion_;
  /**
   * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
   * @return The releaseVersion.
   */
  @java.lang.Override
  public java.lang.String getReleaseVersion() {
    java.lang.Object ref = releaseVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      releaseVersion_ = s;
      return s;
    }
  }
  /**
   * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
   * @return The bytes for releaseVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReleaseVersionBytes() {
    java.lang.Object ref = releaseVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      releaseVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPTIME_SECONDS_FIELD_NUMBER = 3;
  private long uptimeSeconds_;
  /**
   * <code>int64 uptime_seconds = 3 [json_name = "UptimeSeconds"];</code>
   * @return The uptimeSeconds.
   */
  @java.lang.Override
  public long getUptimeSeconds() {
    return uptimeSeconds_;
  }

  public static final int RUNTIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Struct runtime_;
  /**
   * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
   * @return Whether the runtime field is set.
   */
  @java.lang.Override
  public boolean hasRuntime() {
    return runtime_ != null;
  }
  /**
   * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
   * @return The runtime.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getRuntime() {
    return runtime_ == null ? com.google.protobuf.Struct.getDefaultInstance() : runtime_;
  }
  /**
   * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getRuntimeOrBuilder() {
    return getRuntime();
  }

  public static final int CLUSTER_COORDINATOR_FIELD_NUMBER = 5;
  private com.fluxninja.generated.aperture.distcache.v1.Member clusterCoordinator_;
  /**
   * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
   * @return Whether the clusterCoordinator field is set.
   */
  @java.lang.Override
  public boolean hasClusterCoordinator() {
    return clusterCoordinator_ != null;
  }
  /**
   * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
   * @return The clusterCoordinator.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.Member getClusterCoordinator() {
    return clusterCoordinator_ == null ? com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : clusterCoordinator_;
  }
  /**
   * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder getClusterCoordinatorOrBuilder() {
    return getClusterCoordinator();
  }

  public static final int MEMBER_FIELD_NUMBER = 6;
  private com.fluxninja.generated.aperture.distcache.v1.Member member_;
  /**
   * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
   * @return Whether the member field is set.
   */
  @java.lang.Override
  public boolean hasMember() {
    return member_ != null;
  }
  /**
   * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
   * @return The member.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.Member getMember() {
    return member_ == null ? com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : member_;
  }
  /**
   * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder getMemberOrBuilder() {
    return getMember();
  }

  public static final int PARTITIONS_FIELD_NUMBER = 7;
  private static final class PartitionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>newDefaultInstance(
                com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_PartitionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT64,
                0L,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.fluxninja.generated.aperture.distcache.v1.Partition.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> partitions_;
  private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
  internalGetPartitions() {
    if (partitions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PartitionsDefaultEntryHolder.defaultEntry);
    }
    return partitions_;
  }

  public int getPartitionsCount() {
    return internalGetPartitions().getMap().size();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
   */

  @java.lang.Override
  public boolean containsPartitions(
      long key) {
    
    return internalGetPartitions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPartitionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getPartitions() {
    return getPartitionsMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getPartitionsMap() {
    return internalGetPartitions().getMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Partition getPartitionsOrDefault(
      long key,
      com.fluxninja.generated.aperture.distcache.v1.Partition defaultValue) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
        internalGetPartitions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Partition getPartitionsOrThrow(
      long key) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
        internalGetPartitions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int BACKUPS_FIELD_NUMBER = 8;
  private static final class BackupsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>newDefaultInstance(
                com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_BackupsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT64,
                0L,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.fluxninja.generated.aperture.distcache.v1.Partition.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> backups_;
  private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
  internalGetBackups() {
    if (backups_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BackupsDefaultEntryHolder.defaultEntry);
    }
    return backups_;
  }

  public int getBackupsCount() {
    return internalGetBackups().getMap().size();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
   */

  @java.lang.Override
  public boolean containsBackups(
      long key) {
    
    return internalGetBackups().getMap().containsKey(key);
  }
  /**
   * Use {@link #getBackupsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getBackups() {
    return getBackupsMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getBackupsMap() {
    return internalGetBackups().getMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Partition getBackupsOrDefault(
      long key,
      com.fluxninja.generated.aperture.distcache.v1.Partition defaultValue) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
        internalGetBackups().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Partition getBackupsOrThrow(
      long key) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
        internalGetBackups().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CLUSTER_MEMBERS_FIELD_NUMBER = 9;
  private static final class ClusterMembersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>newDefaultInstance(
                com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_ClusterMembersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT64,
                0L,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> clusterMembers_;
  private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
  internalGetClusterMembers() {
    if (clusterMembers_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ClusterMembersDefaultEntryHolder.defaultEntry);
    }
    return clusterMembers_;
  }

  public int getClusterMembersCount() {
    return internalGetClusterMembers().getMap().size();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
   */

  @java.lang.Override
  public boolean containsClusterMembers(
      long key) {
    
    return internalGetClusterMembers().getMap().containsKey(key);
  }
  /**
   * Use {@link #getClusterMembersMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> getClusterMembers() {
    return getClusterMembersMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> getClusterMembersMap() {
    return internalGetClusterMembers().getMap();
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Member getClusterMembersOrDefault(
      long key,
      com.fluxninja.generated.aperture.distcache.v1.Member defaultValue) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> map =
        internalGetClusterMembers().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
   */
  @java.lang.Override

  public com.fluxninja.generated.aperture.distcache.v1.Member getClusterMembersOrThrow(
      long key) {
    
    java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> map =
        internalGetClusterMembers().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NETWORK_FIELD_NUMBER = 10;
  private com.fluxninja.generated.aperture.distcache.v1.Network network_;
  /**
   * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
   * @return Whether the network field is set.
   */
  @java.lang.Override
  public boolean hasNetwork() {
    return network_ != null;
  }
  /**
   * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
   * @return The network.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.Network getNetwork() {
    return network_ == null ? com.fluxninja.generated.aperture.distcache.v1.Network.getDefaultInstance() : network_;
  }
  /**
   * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.NetworkOrBuilder getNetworkOrBuilder() {
    return getNetwork();
  }

  public static final int D_MAPS_FIELD_NUMBER = 11;
  private com.fluxninja.generated.aperture.distcache.v1.DMaps dMaps_;
  /**
   * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
   * @return Whether the dMaps field is set.
   */
  @java.lang.Override
  public boolean hasDMaps() {
    return dMaps_ != null;
  }
  /**
   * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
   * @return The dMaps.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.DMaps getDMaps() {
    return dMaps_ == null ? com.fluxninja.generated.aperture.distcache.v1.DMaps.getDefaultInstance() : dMaps_;
  }
  /**
   * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.DMapsOrBuilder getDMapsOrBuilder() {
    return getDMaps();
  }

  public static final int D_TOPICS_FIELD_NUMBER = 12;
  private com.fluxninja.generated.aperture.distcache.v1.DTopics dTopics_;
  /**
   * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
   * @return Whether the dTopics field is set.
   */
  @java.lang.Override
  public boolean hasDTopics() {
    return dTopics_ != null;
  }
  /**
   * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
   * @return The dTopics.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.DTopics getDTopics() {
    return dTopics_ == null ? com.fluxninja.generated.aperture.distcache.v1.DTopics.getDefaultInstance() : dTopics_;
  }
  /**
   * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder getDTopicsOrBuilder() {
    return getDTopics();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < cmdline_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cmdline_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(releaseVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, releaseVersion_);
    }
    if (uptimeSeconds_ != 0L) {
      output.writeInt64(3, uptimeSeconds_);
    }
    if (runtime_ != null) {
      output.writeMessage(4, getRuntime());
    }
    if (clusterCoordinator_ != null) {
      output.writeMessage(5, getClusterCoordinator());
    }
    if (member_ != null) {
      output.writeMessage(6, getMember());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeLongMapTo(
        output,
        internalGetPartitions(),
        PartitionsDefaultEntryHolder.defaultEntry,
        7);
    com.google.protobuf.GeneratedMessageV3
      .serializeLongMapTo(
        output,
        internalGetBackups(),
        BackupsDefaultEntryHolder.defaultEntry,
        8);
    com.google.protobuf.GeneratedMessageV3
      .serializeLongMapTo(
        output,
        internalGetClusterMembers(),
        ClusterMembersDefaultEntryHolder.defaultEntry,
        9);
    if (network_ != null) {
      output.writeMessage(10, getNetwork());
    }
    if (dMaps_ != null) {
      output.writeMessage(11, getDMaps());
    }
    if (dTopics_ != null) {
      output.writeMessage(12, getDTopics());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < cmdline_.size(); i++) {
        dataSize += computeStringSizeNoTag(cmdline_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getCmdlineList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(releaseVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, releaseVersion_);
    }
    if (uptimeSeconds_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, uptimeSeconds_);
    }
    if (runtime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRuntime());
    }
    if (clusterCoordinator_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getClusterCoordinator());
    }
    if (member_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getMember());
    }
    for (java.util.Map.Entry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> entry
         : internalGetPartitions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
      partitions__ = PartitionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, partitions__);
    }
    for (java.util.Map.Entry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> entry
         : internalGetBackups().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
      backups__ = BackupsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, backups__);
    }
    for (java.util.Map.Entry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> entry
         : internalGetClusterMembers().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
      clusterMembers__ = ClusterMembersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, clusterMembers__);
    }
    if (network_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getNetwork());
    }
    if (dMaps_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDMaps());
    }
    if (dTopics_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getDTopics());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.distcache.v1.Stats)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.distcache.v1.Stats other = (com.fluxninja.generated.aperture.distcache.v1.Stats) obj;

    if (!getCmdlineList()
        .equals(other.getCmdlineList())) return false;
    if (!getReleaseVersion()
        .equals(other.getReleaseVersion())) return false;
    if (getUptimeSeconds()
        != other.getUptimeSeconds()) return false;
    if (hasRuntime() != other.hasRuntime()) return false;
    if (hasRuntime()) {
      if (!getRuntime()
          .equals(other.getRuntime())) return false;
    }
    if (hasClusterCoordinator() != other.hasClusterCoordinator()) return false;
    if (hasClusterCoordinator()) {
      if (!getClusterCoordinator()
          .equals(other.getClusterCoordinator())) return false;
    }
    if (hasMember() != other.hasMember()) return false;
    if (hasMember()) {
      if (!getMember()
          .equals(other.getMember())) return false;
    }
    if (!internalGetPartitions().equals(
        other.internalGetPartitions())) return false;
    if (!internalGetBackups().equals(
        other.internalGetBackups())) return false;
    if (!internalGetClusterMembers().equals(
        other.internalGetClusterMembers())) return false;
    if (hasNetwork() != other.hasNetwork()) return false;
    if (hasNetwork()) {
      if (!getNetwork()
          .equals(other.getNetwork())) return false;
    }
    if (hasDMaps() != other.hasDMaps()) return false;
    if (hasDMaps()) {
      if (!getDMaps()
          .equals(other.getDMaps())) return false;
    }
    if (hasDTopics() != other.hasDTopics()) return false;
    if (hasDTopics()) {
      if (!getDTopics()
          .equals(other.getDTopics())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCmdlineCount() > 0) {
      hash = (37 * hash) + CMDLINE_FIELD_NUMBER;
      hash = (53 * hash) + getCmdlineList().hashCode();
    }
    hash = (37 * hash) + RELEASE_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getReleaseVersion().hashCode();
    hash = (37 * hash) + UPTIME_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUptimeSeconds());
    if (hasRuntime()) {
      hash = (37 * hash) + RUNTIME_FIELD_NUMBER;
      hash = (53 * hash) + getRuntime().hashCode();
    }
    if (hasClusterCoordinator()) {
      hash = (37 * hash) + CLUSTER_COORDINATOR_FIELD_NUMBER;
      hash = (53 * hash) + getClusterCoordinator().hashCode();
    }
    if (hasMember()) {
      hash = (37 * hash) + MEMBER_FIELD_NUMBER;
      hash = (53 * hash) + getMember().hashCode();
    }
    if (!internalGetPartitions().getMap().isEmpty()) {
      hash = (37 * hash) + PARTITIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPartitions().hashCode();
    }
    if (!internalGetBackups().getMap().isEmpty()) {
      hash = (37 * hash) + BACKUPS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBackups().hashCode();
    }
    if (!internalGetClusterMembers().getMap().isEmpty()) {
      hash = (37 * hash) + CLUSTER_MEMBERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetClusterMembers().hashCode();
    }
    if (hasNetwork()) {
      hash = (37 * hash) + NETWORK_FIELD_NUMBER;
      hash = (53 * hash) + getNetwork().hashCode();
    }
    if (hasDMaps()) {
      hash = (37 * hash) + D_MAPS_FIELD_NUMBER;
      hash = (53 * hash) + getDMaps().hashCode();
    }
    if (hasDTopics()) {
      hash = (37 * hash) + D_TOPICS_FIELD_NUMBER;
      hash = (53 * hash) + getDTopics().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.distcache.v1.Stats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.distcache.v1.Stats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.distcache.v1.Stats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.distcache.v1.Stats)
      com.fluxninja.generated.aperture.distcache.v1.StatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetPartitions();
        case 8:
          return internalGetBackups();
        case 9:
          return internalGetClusterMembers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetMutablePartitions();
        case 8:
          return internalGetMutableBackups();
        case 9:
          return internalGetMutableClusterMembers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.distcache.v1.Stats.class, com.fluxninja.generated.aperture.distcache.v1.Stats.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.distcache.v1.Stats.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      releaseVersion_ = "";

      uptimeSeconds_ = 0L;

      if (runtimeBuilder_ == null) {
        runtime_ = null;
      } else {
        runtime_ = null;
        runtimeBuilder_ = null;
      }
      if (clusterCoordinatorBuilder_ == null) {
        clusterCoordinator_ = null;
      } else {
        clusterCoordinator_ = null;
        clusterCoordinatorBuilder_ = null;
      }
      if (memberBuilder_ == null) {
        member_ = null;
      } else {
        member_ = null;
        memberBuilder_ = null;
      }
      internalGetMutablePartitions().clear();
      internalGetMutableBackups().clear();
      internalGetMutableClusterMembers().clear();
      if (networkBuilder_ == null) {
        network_ = null;
      } else {
        network_ = null;
        networkBuilder_ = null;
      }
      if (dMapsBuilder_ == null) {
        dMaps_ = null;
      } else {
        dMaps_ = null;
        dMapsBuilder_ = null;
      }
      if (dTopicsBuilder_ == null) {
        dTopics_ = null;
      } else {
        dTopics_ = null;
        dTopicsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.distcache.v1.StatsProto.internal_static_aperture_distcache_v1_Stats_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.Stats getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.distcache.v1.Stats.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.Stats build() {
      com.fluxninja.generated.aperture.distcache.v1.Stats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.distcache.v1.Stats buildPartial() {
      com.fluxninja.generated.aperture.distcache.v1.Stats result = new com.fluxninja.generated.aperture.distcache.v1.Stats(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        cmdline_ = cmdline_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.cmdline_ = cmdline_;
      result.releaseVersion_ = releaseVersion_;
      result.uptimeSeconds_ = uptimeSeconds_;
      if (runtimeBuilder_ == null) {
        result.runtime_ = runtime_;
      } else {
        result.runtime_ = runtimeBuilder_.build();
      }
      if (clusterCoordinatorBuilder_ == null) {
        result.clusterCoordinator_ = clusterCoordinator_;
      } else {
        result.clusterCoordinator_ = clusterCoordinatorBuilder_.build();
      }
      if (memberBuilder_ == null) {
        result.member_ = member_;
      } else {
        result.member_ = memberBuilder_.build();
      }
      result.partitions_ = internalGetPartitions();
      result.partitions_.makeImmutable();
      result.backups_ = internalGetBackups();
      result.backups_.makeImmutable();
      result.clusterMembers_ = internalGetClusterMembers();
      result.clusterMembers_.makeImmutable();
      if (networkBuilder_ == null) {
        result.network_ = network_;
      } else {
        result.network_ = networkBuilder_.build();
      }
      if (dMapsBuilder_ == null) {
        result.dMaps_ = dMaps_;
      } else {
        result.dMaps_ = dMapsBuilder_.build();
      }
      if (dTopicsBuilder_ == null) {
        result.dTopics_ = dTopics_;
      } else {
        result.dTopics_ = dTopicsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.distcache.v1.Stats) {
        return mergeFrom((com.fluxninja.generated.aperture.distcache.v1.Stats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.distcache.v1.Stats other) {
      if (other == com.fluxninja.generated.aperture.distcache.v1.Stats.getDefaultInstance()) return this;
      if (!other.cmdline_.isEmpty()) {
        if (cmdline_.isEmpty()) {
          cmdline_ = other.cmdline_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureCmdlineIsMutable();
          cmdline_.addAll(other.cmdline_);
        }
        onChanged();
      }
      if (!other.getReleaseVersion().isEmpty()) {
        releaseVersion_ = other.releaseVersion_;
        onChanged();
      }
      if (other.getUptimeSeconds() != 0L) {
        setUptimeSeconds(other.getUptimeSeconds());
      }
      if (other.hasRuntime()) {
        mergeRuntime(other.getRuntime());
      }
      if (other.hasClusterCoordinator()) {
        mergeClusterCoordinator(other.getClusterCoordinator());
      }
      if (other.hasMember()) {
        mergeMember(other.getMember());
      }
      internalGetMutablePartitions().mergeFrom(
          other.internalGetPartitions());
      internalGetMutableBackups().mergeFrom(
          other.internalGetBackups());
      internalGetMutableClusterMembers().mergeFrom(
          other.internalGetClusterMembers());
      if (other.hasNetwork()) {
        mergeNetwork(other.getNetwork());
      }
      if (other.hasDMaps()) {
        mergeDMaps(other.getDMaps());
      }
      if (other.hasDTopics()) {
        mergeDTopics(other.getDTopics());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.distcache.v1.Stats parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.distcache.v1.Stats) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureCmdlineIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        cmdline_ = new com.google.protobuf.LazyStringArrayList(cmdline_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @return A list containing the cmdline.
     */
    public com.google.protobuf.ProtocolStringList
        getCmdlineList() {
      return cmdline_.getUnmodifiableView();
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @return The count of cmdline.
     */
    public int getCmdlineCount() {
      return cmdline_.size();
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param index The index of the element to return.
     * @return The cmdline at the given index.
     */
    public java.lang.String getCmdline(int index) {
      return cmdline_.get(index);
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the cmdline at the given index.
     */
    public com.google.protobuf.ByteString
        getCmdlineBytes(int index) {
      return cmdline_.getByteString(index);
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param index The index to set the value at.
     * @param value The cmdline to set.
     * @return This builder for chaining.
     */
    public Builder setCmdline(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCmdlineIsMutable();
      cmdline_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param value The cmdline to add.
     * @return This builder for chaining.
     */
    public Builder addCmdline(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCmdlineIsMutable();
      cmdline_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param values The cmdline to add.
     * @return This builder for chaining.
     */
    public Builder addAllCmdline(
        java.lang.Iterable<java.lang.String> values) {
      ensureCmdlineIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cmdline_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCmdline() {
      cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string cmdline = 1 [json_name = "Cmdline"];</code>
     * @param value The bytes of the cmdline to add.
     * @return This builder for chaining.
     */
    public Builder addCmdlineBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureCmdlineIsMutable();
      cmdline_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object releaseVersion_ = "";
    /**
     * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
     * @return The releaseVersion.
     */
    public java.lang.String getReleaseVersion() {
      java.lang.Object ref = releaseVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        releaseVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
     * @return The bytes for releaseVersion.
     */
    public com.google.protobuf.ByteString
        getReleaseVersionBytes() {
      java.lang.Object ref = releaseVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        releaseVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
     * @param value The releaseVersion to set.
     * @return This builder for chaining.
     */
    public Builder setReleaseVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      releaseVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReleaseVersion() {
      
      releaseVersion_ = getDefaultInstance().getReleaseVersion();
      onChanged();
      return this;
    }
    /**
     * <code>string release_version = 2 [json_name = "ReleaseVersion"];</code>
     * @param value The bytes for releaseVersion to set.
     * @return This builder for chaining.
     */
    public Builder setReleaseVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      releaseVersion_ = value;
      onChanged();
      return this;
    }

    private long uptimeSeconds_ ;
    /**
     * <code>int64 uptime_seconds = 3 [json_name = "UptimeSeconds"];</code>
     * @return The uptimeSeconds.
     */
    @java.lang.Override
    public long getUptimeSeconds() {
      return uptimeSeconds_;
    }
    /**
     * <code>int64 uptime_seconds = 3 [json_name = "UptimeSeconds"];</code>
     * @param value The uptimeSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setUptimeSeconds(long value) {
      
      uptimeSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 uptime_seconds = 3 [json_name = "UptimeSeconds"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUptimeSeconds() {
      
      uptimeSeconds_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct runtime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> runtimeBuilder_;
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     * @return Whether the runtime field is set.
     */
    public boolean hasRuntime() {
      return runtimeBuilder_ != null || runtime_ != null;
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     * @return The runtime.
     */
    public com.google.protobuf.Struct getRuntime() {
      if (runtimeBuilder_ == null) {
        return runtime_ == null ? com.google.protobuf.Struct.getDefaultInstance() : runtime_;
      } else {
        return runtimeBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public Builder setRuntime(com.google.protobuf.Struct value) {
      if (runtimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        runtime_ = value;
        onChanged();
      } else {
        runtimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public Builder setRuntime(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (runtimeBuilder_ == null) {
        runtime_ = builderForValue.build();
        onChanged();
      } else {
        runtimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public Builder mergeRuntime(com.google.protobuf.Struct value) {
      if (runtimeBuilder_ == null) {
        if (runtime_ != null) {
          runtime_ =
            com.google.protobuf.Struct.newBuilder(runtime_).mergeFrom(value).buildPartial();
        } else {
          runtime_ = value;
        }
        onChanged();
      } else {
        runtimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public Builder clearRuntime() {
      if (runtimeBuilder_ == null) {
        runtime_ = null;
        onChanged();
      } else {
        runtime_ = null;
        runtimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public com.google.protobuf.Struct.Builder getRuntimeBuilder() {
      
      onChanged();
      return getRuntimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    public com.google.protobuf.StructOrBuilder getRuntimeOrBuilder() {
      if (runtimeBuilder_ != null) {
        return runtimeBuilder_.getMessageOrBuilder();
      } else {
        return runtime_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : runtime_;
      }
    }
    /**
     * <code>.google.protobuf.Struct runtime = 4 [json_name = "Runtime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getRuntimeFieldBuilder() {
      if (runtimeBuilder_ == null) {
        runtimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getRuntime(),
                getParentForChildren(),
                isClean());
        runtime_ = null;
      }
      return runtimeBuilder_;
    }

    private com.fluxninja.generated.aperture.distcache.v1.Member clusterCoordinator_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder> clusterCoordinatorBuilder_;
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     * @return Whether the clusterCoordinator field is set.
     */
    public boolean hasClusterCoordinator() {
      return clusterCoordinatorBuilder_ != null || clusterCoordinator_ != null;
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     * @return The clusterCoordinator.
     */
    public com.fluxninja.generated.aperture.distcache.v1.Member getClusterCoordinator() {
      if (clusterCoordinatorBuilder_ == null) {
        return clusterCoordinator_ == null ? com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : clusterCoordinator_;
      } else {
        return clusterCoordinatorBuilder_.getMessage();
      }
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public Builder setClusterCoordinator(com.fluxninja.generated.aperture.distcache.v1.Member value) {
      if (clusterCoordinatorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clusterCoordinator_ = value;
        onChanged();
      } else {
        clusterCoordinatorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public Builder setClusterCoordinator(
        com.fluxninja.generated.aperture.distcache.v1.Member.Builder builderForValue) {
      if (clusterCoordinatorBuilder_ == null) {
        clusterCoordinator_ = builderForValue.build();
        onChanged();
      } else {
        clusterCoordinatorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public Builder mergeClusterCoordinator(com.fluxninja.generated.aperture.distcache.v1.Member value) {
      if (clusterCoordinatorBuilder_ == null) {
        if (clusterCoordinator_ != null) {
          clusterCoordinator_ =
            com.fluxninja.generated.aperture.distcache.v1.Member.newBuilder(clusterCoordinator_).mergeFrom(value).buildPartial();
        } else {
          clusterCoordinator_ = value;
        }
        onChanged();
      } else {
        clusterCoordinatorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public Builder clearClusterCoordinator() {
      if (clusterCoordinatorBuilder_ == null) {
        clusterCoordinator_ = null;
        onChanged();
      } else {
        clusterCoordinator_ = null;
        clusterCoordinatorBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.Member.Builder getClusterCoordinatorBuilder() {
      
      onChanged();
      return getClusterCoordinatorFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder getClusterCoordinatorOrBuilder() {
      if (clusterCoordinatorBuilder_ != null) {
        return clusterCoordinatorBuilder_.getMessageOrBuilder();
      } else {
        return clusterCoordinator_ == null ?
            com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : clusterCoordinator_;
      }
    }
    /**
     * <code>.aperture.distcache.v1.Member cluster_coordinator = 5 [json_name = "ClusterCoordinator"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder> 
        getClusterCoordinatorFieldBuilder() {
      if (clusterCoordinatorBuilder_ == null) {
        clusterCoordinatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder>(
                getClusterCoordinator(),
                getParentForChildren(),
                isClean());
        clusterCoordinator_ = null;
      }
      return clusterCoordinatorBuilder_;
    }

    private com.fluxninja.generated.aperture.distcache.v1.Member member_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder> memberBuilder_;
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     * @return Whether the member field is set.
     */
    public boolean hasMember() {
      return memberBuilder_ != null || member_ != null;
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     * @return The member.
     */
    public com.fluxninja.generated.aperture.distcache.v1.Member getMember() {
      if (memberBuilder_ == null) {
        return member_ == null ? com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : member_;
      } else {
        return memberBuilder_.getMessage();
      }
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public Builder setMember(com.fluxninja.generated.aperture.distcache.v1.Member value) {
      if (memberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        member_ = value;
        onChanged();
      } else {
        memberBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public Builder setMember(
        com.fluxninja.generated.aperture.distcache.v1.Member.Builder builderForValue) {
      if (memberBuilder_ == null) {
        member_ = builderForValue.build();
        onChanged();
      } else {
        memberBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public Builder mergeMember(com.fluxninja.generated.aperture.distcache.v1.Member value) {
      if (memberBuilder_ == null) {
        if (member_ != null) {
          member_ =
            com.fluxninja.generated.aperture.distcache.v1.Member.newBuilder(member_).mergeFrom(value).buildPartial();
        } else {
          member_ = value;
        }
        onChanged();
      } else {
        memberBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public Builder clearMember() {
      if (memberBuilder_ == null) {
        member_ = null;
        onChanged();
      } else {
        member_ = null;
        memberBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.Member.Builder getMemberBuilder() {
      
      onChanged();
      return getMemberFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder getMemberOrBuilder() {
      if (memberBuilder_ != null) {
        return memberBuilder_.getMessageOrBuilder();
      } else {
        return member_ == null ?
            com.fluxninja.generated.aperture.distcache.v1.Member.getDefaultInstance() : member_;
      }
    }
    /**
     * <code>.aperture.distcache.v1.Member member = 6 [json_name = "Member"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder> 
        getMemberFieldBuilder() {
      if (memberBuilder_ == null) {
        memberBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.distcache.v1.Member, com.fluxninja.generated.aperture.distcache.v1.Member.Builder, com.fluxninja.generated.aperture.distcache.v1.MemberOrBuilder>(
                getMember(),
                getParentForChildren(),
                isClean());
        member_ = null;
      }
      return memberBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> partitions_;
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    internalGetPartitions() {
      if (partitions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PartitionsDefaultEntryHolder.defaultEntry);
      }
      return partitions_;
    }
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    internalGetMutablePartitions() {
      onChanged();;
      if (partitions_ == null) {
        partitions_ = com.google.protobuf.MapField.newMapField(
            PartitionsDefaultEntryHolder.defaultEntry);
      }
      if (!partitions_.isMutable()) {
        partitions_ = partitions_.copy();
      }
      return partitions_;
    }

    public int getPartitionsCount() {
      return internalGetPartitions().getMap().size();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */

    @java.lang.Override
    public boolean containsPartitions(
        long key) {
      
      return internalGetPartitions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPartitionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getPartitions() {
      return getPartitionsMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getPartitionsMap() {
      return internalGetPartitions().getMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Partition getPartitionsOrDefault(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Partition defaultValue) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
          internalGetPartitions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Partition getPartitionsOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
          internalGetPartitions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearPartitions() {
      internalGetMutablePartitions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */

    public Builder removePartitions(
        long key) {
      
      internalGetMutablePartitions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    getMutablePartitions() {
      return internalGetMutablePartitions().getMutableMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */
    public Builder putPartitions(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Partition value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutablePartitions().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; partitions = 7 [json_name = "Partitions"];</code>
     */

    public Builder putAllPartitions(
        java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> values) {
      internalGetMutablePartitions().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> backups_;
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    internalGetBackups() {
      if (backups_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BackupsDefaultEntryHolder.defaultEntry);
      }
      return backups_;
    }
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    internalGetMutableBackups() {
      onChanged();;
      if (backups_ == null) {
        backups_ = com.google.protobuf.MapField.newMapField(
            BackupsDefaultEntryHolder.defaultEntry);
      }
      if (!backups_.isMutable()) {
        backups_ = backups_.copy();
      }
      return backups_;
    }

    public int getBackupsCount() {
      return internalGetBackups().getMap().size();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */

    @java.lang.Override
    public boolean containsBackups(
        long key) {
      
      return internalGetBackups().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBackupsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getBackups() {
      return getBackupsMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> getBackupsMap() {
      return internalGetBackups().getMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Partition getBackupsOrDefault(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Partition defaultValue) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
          internalGetBackups().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Partition getBackupsOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> map =
          internalGetBackups().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearBackups() {
      internalGetMutableBackups().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */

    public Builder removeBackups(
        long key) {
      
      internalGetMutableBackups().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition>
    getMutableBackups() {
      return internalGetMutableBackups().getMutableMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */
    public Builder putBackups(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Partition value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableBackups().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Partition&gt; backups = 8 [json_name = "Backups"];</code>
     */

    public Builder putAllBackups(
        java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Partition> values) {
      internalGetMutableBackups().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> clusterMembers_;
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
    internalGetClusterMembers() {
      if (clusterMembers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ClusterMembersDefaultEntryHolder.defaultEntry);
      }
      return clusterMembers_;
    }
    private com.google.protobuf.MapField<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
    internalGetMutableClusterMembers() {
      onChanged();;
      if (clusterMembers_ == null) {
        clusterMembers_ = com.google.protobuf.MapField.newMapField(
            ClusterMembersDefaultEntryHolder.defaultEntry);
      }
      if (!clusterMembers_.isMutable()) {
        clusterMembers_ = clusterMembers_.copy();
      }
      return clusterMembers_;
    }

    public int getClusterMembersCount() {
      return internalGetClusterMembers().getMap().size();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */

    @java.lang.Override
    public boolean containsClusterMembers(
        long key) {
      
      return internalGetClusterMembers().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClusterMembersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> getClusterMembers() {
      return getClusterMembersMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> getClusterMembersMap() {
      return internalGetClusterMembers().getMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Member getClusterMembersOrDefault(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Member defaultValue) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> map =
          internalGetClusterMembers().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */
    @java.lang.Override

    public com.fluxninja.generated.aperture.distcache.v1.Member getClusterMembersOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> map =
          internalGetClusterMembers().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearClusterMembers() {
      internalGetMutableClusterMembers().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */

    public Builder removeClusterMembers(
        long key) {
      
      internalGetMutableClusterMembers().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member>
    getMutableClusterMembers() {
      return internalGetMutableClusterMembers().getMutableMap();
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */
    public Builder putClusterMembers(
        long key,
        com.fluxninja.generated.aperture.distcache.v1.Member value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableClusterMembers().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint64, .aperture.distcache.v1.Member&gt; cluster_members = 9 [json_name = "ClusterMembers"];</code>
     */

    public Builder putAllClusterMembers(
        java.util.Map<java.lang.Long, com.fluxninja.generated.aperture.distcache.v1.Member> values) {
      internalGetMutableClusterMembers().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.fluxninja.generated.aperture.distcache.v1.Network network_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Network, com.fluxninja.generated.aperture.distcache.v1.Network.Builder, com.fluxninja.generated.aperture.distcache.v1.NetworkOrBuilder> networkBuilder_;
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     * @return Whether the network field is set.
     */
    public boolean hasNetwork() {
      return networkBuilder_ != null || network_ != null;
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     * @return The network.
     */
    public com.fluxninja.generated.aperture.distcache.v1.Network getNetwork() {
      if (networkBuilder_ == null) {
        return network_ == null ? com.fluxninja.generated.aperture.distcache.v1.Network.getDefaultInstance() : network_;
      } else {
        return networkBuilder_.getMessage();
      }
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public Builder setNetwork(com.fluxninja.generated.aperture.distcache.v1.Network value) {
      if (networkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        network_ = value;
        onChanged();
      } else {
        networkBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public Builder setNetwork(
        com.fluxninja.generated.aperture.distcache.v1.Network.Builder builderForValue) {
      if (networkBuilder_ == null) {
        network_ = builderForValue.build();
        onChanged();
      } else {
        networkBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public Builder mergeNetwork(com.fluxninja.generated.aperture.distcache.v1.Network value) {
      if (networkBuilder_ == null) {
        if (network_ != null) {
          network_ =
            com.fluxninja.generated.aperture.distcache.v1.Network.newBuilder(network_).mergeFrom(value).buildPartial();
        } else {
          network_ = value;
        }
        onChanged();
      } else {
        networkBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public Builder clearNetwork() {
      if (networkBuilder_ == null) {
        network_ = null;
        onChanged();
      } else {
        network_ = null;
        networkBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.Network.Builder getNetworkBuilder() {
      
      onChanged();
      return getNetworkFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.NetworkOrBuilder getNetworkOrBuilder() {
      if (networkBuilder_ != null) {
        return networkBuilder_.getMessageOrBuilder();
      } else {
        return network_ == null ?
            com.fluxninja.generated.aperture.distcache.v1.Network.getDefaultInstance() : network_;
      }
    }
    /**
     * <code>.aperture.distcache.v1.Network network = 10 [json_name = "Network"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.Network, com.fluxninja.generated.aperture.distcache.v1.Network.Builder, com.fluxninja.generated.aperture.distcache.v1.NetworkOrBuilder> 
        getNetworkFieldBuilder() {
      if (networkBuilder_ == null) {
        networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.distcache.v1.Network, com.fluxninja.generated.aperture.distcache.v1.Network.Builder, com.fluxninja.generated.aperture.distcache.v1.NetworkOrBuilder>(
                getNetwork(),
                getParentForChildren(),
                isClean());
        network_ = null;
      }
      return networkBuilder_;
    }

    private com.fluxninja.generated.aperture.distcache.v1.DMaps dMaps_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.DMaps, com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder, com.fluxninja.generated.aperture.distcache.v1.DMapsOrBuilder> dMapsBuilder_;
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     * @return Whether the dMaps field is set.
     */
    public boolean hasDMaps() {
      return dMapsBuilder_ != null || dMaps_ != null;
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     * @return The dMaps.
     */
    public com.fluxninja.generated.aperture.distcache.v1.DMaps getDMaps() {
      if (dMapsBuilder_ == null) {
        return dMaps_ == null ? com.fluxninja.generated.aperture.distcache.v1.DMaps.getDefaultInstance() : dMaps_;
      } else {
        return dMapsBuilder_.getMessage();
      }
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public Builder setDMaps(com.fluxninja.generated.aperture.distcache.v1.DMaps value) {
      if (dMapsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dMaps_ = value;
        onChanged();
      } else {
        dMapsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public Builder setDMaps(
        com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder builderForValue) {
      if (dMapsBuilder_ == null) {
        dMaps_ = builderForValue.build();
        onChanged();
      } else {
        dMapsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public Builder mergeDMaps(com.fluxninja.generated.aperture.distcache.v1.DMaps value) {
      if (dMapsBuilder_ == null) {
        if (dMaps_ != null) {
          dMaps_ =
            com.fluxninja.generated.aperture.distcache.v1.DMaps.newBuilder(dMaps_).mergeFrom(value).buildPartial();
        } else {
          dMaps_ = value;
        }
        onChanged();
      } else {
        dMapsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public Builder clearDMaps() {
      if (dMapsBuilder_ == null) {
        dMaps_ = null;
        onChanged();
      } else {
        dMaps_ = null;
        dMapsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder getDMapsBuilder() {
      
      onChanged();
      return getDMapsFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.DMapsOrBuilder getDMapsOrBuilder() {
      if (dMapsBuilder_ != null) {
        return dMapsBuilder_.getMessageOrBuilder();
      } else {
        return dMaps_ == null ?
            com.fluxninja.generated.aperture.distcache.v1.DMaps.getDefaultInstance() : dMaps_;
      }
    }
    /**
     * <code>.aperture.distcache.v1.DMaps d_maps = 11 [json_name = "DMaps"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.DMaps, com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder, com.fluxninja.generated.aperture.distcache.v1.DMapsOrBuilder> 
        getDMapsFieldBuilder() {
      if (dMapsBuilder_ == null) {
        dMapsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.distcache.v1.DMaps, com.fluxninja.generated.aperture.distcache.v1.DMaps.Builder, com.fluxninja.generated.aperture.distcache.v1.DMapsOrBuilder>(
                getDMaps(),
                getParentForChildren(),
                isClean());
        dMaps_ = null;
      }
      return dMapsBuilder_;
    }

    private com.fluxninja.generated.aperture.distcache.v1.DTopics dTopics_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.DTopics, com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder, com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder> dTopicsBuilder_;
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     * @return Whether the dTopics field is set.
     */
    public boolean hasDTopics() {
      return dTopicsBuilder_ != null || dTopics_ != null;
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     * @return The dTopics.
     */
    public com.fluxninja.generated.aperture.distcache.v1.DTopics getDTopics() {
      if (dTopicsBuilder_ == null) {
        return dTopics_ == null ? com.fluxninja.generated.aperture.distcache.v1.DTopics.getDefaultInstance() : dTopics_;
      } else {
        return dTopicsBuilder_.getMessage();
      }
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public Builder setDTopics(com.fluxninja.generated.aperture.distcache.v1.DTopics value) {
      if (dTopicsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dTopics_ = value;
        onChanged();
      } else {
        dTopicsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public Builder setDTopics(
        com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder builderForValue) {
      if (dTopicsBuilder_ == null) {
        dTopics_ = builderForValue.build();
        onChanged();
      } else {
        dTopicsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public Builder mergeDTopics(com.fluxninja.generated.aperture.distcache.v1.DTopics value) {
      if (dTopicsBuilder_ == null) {
        if (dTopics_ != null) {
          dTopics_ =
            com.fluxninja.generated.aperture.distcache.v1.DTopics.newBuilder(dTopics_).mergeFrom(value).buildPartial();
        } else {
          dTopics_ = value;
        }
        onChanged();
      } else {
        dTopicsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public Builder clearDTopics() {
      if (dTopicsBuilder_ == null) {
        dTopics_ = null;
        onChanged();
      } else {
        dTopics_ = null;
        dTopicsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder getDTopicsBuilder() {
      
      onChanged();
      return getDTopicsFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    public com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder getDTopicsOrBuilder() {
      if (dTopicsBuilder_ != null) {
        return dTopicsBuilder_.getMessageOrBuilder();
      } else {
        return dTopics_ == null ?
            com.fluxninja.generated.aperture.distcache.v1.DTopics.getDefaultInstance() : dTopics_;
      }
    }
    /**
     * <code>.aperture.distcache.v1.DTopics d_topics = 12 [json_name = "DTopics"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.distcache.v1.DTopics, com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder, com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder> 
        getDTopicsFieldBuilder() {
      if (dTopicsBuilder_ == null) {
        dTopicsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.distcache.v1.DTopics, com.fluxninja.generated.aperture.distcache.v1.DTopics.Builder, com.fluxninja.generated.aperture.distcache.v1.DTopicsOrBuilder>(
                getDTopics(),
                getParentForChildren(),
                isClean());
        dTopics_ = null;
      }
      return dTopicsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.distcache.v1.Stats)
  }

  // @@protoc_insertion_point(class_scope:aperture.distcache.v1.Stats)
  private static final com.fluxninja.generated.aperture.distcache.v1.Stats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.distcache.v1.Stats();
  }

  public static com.fluxninja.generated.aperture.distcache.v1.Stats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Stats>
      PARSER = new com.google.protobuf.AbstractParser<Stats>() {
    @java.lang.Override
    public Stats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Stats(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Stats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Stats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.distcache.v1.Stats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

