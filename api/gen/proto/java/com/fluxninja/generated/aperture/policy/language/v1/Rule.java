// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/classifier.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * Rule describes a single Flow Classification Rule
 * Flow classification rule extracts a value from request metadata.
 * More specifically, from `input`, which has the same spec as [Envoy's External Authorization Attribute Context][attribute-context].
 * See &lt;https://play.openpolicyagent.org/p/gU7vcLkc70&gt; for an example input.
 * There are two ways to define a flow classification rule:
 * * Using a declarative extractor â€“ suitable from simple cases, such as directly reading a value from header or a field from json body.
 * * Rego expression.
 * Performance note: It's recommended to use declarative extractors where possible, as they may be slightly performant than Rego expressions.
 * [attribute-context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/auth/v3/attribute_context.proto)
 * Example of Declarative JSON extractor:
 * ```yaml
 * extractor:
 *   json:
 *     from: request.http.body
 *     pointer: /user/name
 * ```
 * Example of Rego module which also disables propagation of a label:
 * ```yaml
 * rego:
 *   query: data.user_from_cookie.user
 *   source: |
 *     package: user_from_cookie
 *     cookies: split(input.attributes.request.http.headers.cookie, ';')
 *     cookie: cookies[_]
 *     cookie.startswith: ('session=')
 *     session: substring(cookie, count('session='), -1)
 *     parts: split(session, '.')
 *     object: json.unmarshal(base64url.decode(parts[0]))
 *     user: object.user
 * propagate: false
 * ```
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.Rule}
 */
public final class Rule extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.Rule)
    RuleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Rule.newBuilder() to construct.
  private Rule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Rule() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Rule();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Rule(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder subBuilder = null;
            if (sourceCase_ == 1) {
              subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_).toBuilder();
            }
            source_ =
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Extractor.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_);
              source_ = subBuilder.buildPartial();
            }
            sourceCase_ = 1;
            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder subBuilder = null;
            if (sourceCase_ == 2) {
              subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_).toBuilder();
            }
            source_ =
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_);
              source_ = subBuilder.buildPartial();
            }
            sourceCase_ = 2;
            break;
          }
          case 24: {

            telemetry_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.Rule.class, com.fluxninja.generated.aperture.policy.language.v1.Rule.Builder.class);
  }

  public interface RegoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.Rule.Rego)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Source code of the rego module.
     * Note: Must include a "package" declaration.
     * </pre>
     *
     * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <pre>
     * Source code of the rego module.
     * Note: Must include a "package" declaration.
     * </pre>
     *
     * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
     * Note: The module name must match the package name from the "source".
     * </pre>
     *
     * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The query.
     */
    java.lang.String getQuery();
    /**
     * <pre>
     * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
     * Note: The module name must match the package name from the "source".
     * </pre>
     *
     * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for query.
     */
    com.google.protobuf.ByteString
        getQueryBytes();
  }
  /**
   * <pre>
   * Raw rego rules are compiled 1:1 to rego queries
   * High-level extractor-based rules are compiled into a single rego query.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.Rule.Rego}
   */
  public static final class Rego extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.Rule.Rego)
      RegoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Rego.newBuilder() to construct.
    private Rego(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rego() {
      source_ = "";
      query_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Rego();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Rego(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_Rego_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_Rego_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.class, com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder.class);
    }

    public static final int SOURCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * Source code of the rego module.
     * Note: Must include a "package" declaration.
     * </pre>
     *
     * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Source code of the rego module.
     * Note: Must include a "package" declaration.
     * </pre>
     *
     * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUERY_FIELD_NUMBER = 2;
    private volatile java.lang.Object query_;
    /**
     * <pre>
     * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
     * Note: The module name must match the package name from the "source".
     * </pre>
     *
     * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The query.
     */
    @java.lang.Override
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
     * Note: The module name must match the package name from the "source".
     * </pre>
     *
     * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for query.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, source_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, query_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, source_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, query_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego other = (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) obj;

      if (!getSource()
          .equals(other.getSource())) return false;
      if (!getQuery()
          .equals(other.getQuery())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Raw rego rules are compiled 1:1 to rego queries
     * High-level extractor-based rules are compiled into a single rego query.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.Rule.Rego}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.Rule.Rego)
        com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_Rego_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_Rego_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.class, com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        source_ = "";

        query_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_Rego_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego build() {
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego result = new com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego(this);
        result.source_ = source_;
        result.query_ = query_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance()) return this;
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * Source code of the rego module.
       * Note: Must include a "package" declaration.
       * </pre>
       *
       * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The source.
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Source code of the rego module.
       * Note: Must include a "package" declaration.
       * </pre>
       *
       * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for source.
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Source code of the rego module.
       * Note: Must include a "package" declaration.
       * </pre>
       *
       * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source code of the rego module.
       * Note: Must include a "package" declaration.
       * </pre>
       *
       * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source code of the rego module.
       * Note: Must include a "package" declaration.
       * </pre>
       *
       * <code>string source = 1 [json_name = "source", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object query_ = "";
      /**
       * <pre>
       * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
       * Note: The module name must match the package name from the "source".
       * </pre>
       *
       * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The query.
       */
      public java.lang.String getQuery() {
        java.lang.Object ref = query_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
       * Note: The module name must match the package name from the "source".
       * </pre>
       *
       * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for query.
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        java.lang.Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
       * Note: The module name must match the package name from the "source".
       * </pre>
       *
       * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The query to set.
       * @return This builder for chaining.
       */
      public Builder setQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
       * Note: The module name must match the package name from the "source".
       * </pre>
       *
       * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Query string to extract a value (eg. `data.&lt;mymodulename&gt;.&lt;variablename&gt;`).
       * Note: The module name must match the package name from the "source".
       * </pre>
       *
       * <code>string query = 2 [json_name = "query", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for query to set.
       * @return This builder for chaining.
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.Rule.Rego)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.Rule.Rego)
    private static final com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rego>
        PARSER = new com.google.protobuf.AbstractParser<Rego>() {
      @java.lang.Override
      public Rego parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rego(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rego> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Rego> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int sourceCase_ = 0;
  private java.lang.Object source_;
  public enum SourceCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EXTRACTOR(1),
    REGO(2),
    SOURCE_NOT_SET(0);
    private final int value;
    private SourceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static SourceCase forNumber(int value) {
      switch (value) {
        case 1: return EXTRACTOR;
        case 2: return REGO;
        case 0: return SOURCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SourceCase
  getSourceCase() {
    return SourceCase.forNumber(
        sourceCase_);
  }

  public static final int EXTRACTOR_FIELD_NUMBER = 1;
  /**
   * <pre>
   * High-level declarative extractor.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
   * @return Whether the extractor field is set.
   */
  @java.lang.Override
  public boolean hasExtractor() {
    return sourceCase_ == 1;
  }
  /**
   * <pre>
   * High-level declarative extractor.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
   * @return The extractor.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Extractor getExtractor() {
    if (sourceCase_ == 1) {
       return (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
  }
  /**
   * <pre>
   * High-level declarative extractor.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.ExtractorOrBuilder getExtractorOrBuilder() {
    if (sourceCase_ == 1) {
       return (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
  }

  public static final int REGO_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Rego module to extract a value from the rego module.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
   * @return Whether the rego field is set.
   */
  @java.lang.Override
  public boolean hasRego() {
    return sourceCase_ == 2;
  }
  /**
   * <pre>
   * Rego module to extract a value from the rego module.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
   * @return The rego.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego getRego() {
    if (sourceCase_ == 2) {
       return (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
  }
  /**
   * <pre>
   * Rego module to extract a value from the rego module.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder getRegoOrBuilder() {
    if (sourceCase_ == 2) {
       return (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
  }

  public static final int TELEMETRY_FIELD_NUMBER = 3;
  private boolean telemetry_;
  /**
   * <pre>
   * Decides if the created flow label should be available as an attribute in OLAP telemetry and
   * propagated in [baggage](/concepts/flow-control/flow-label.md#baggage))
   * :::note
   * The flow label is always accessible in Aperture Policies regardless of this setting.
   * :::
   * :::caution
   * When using [FluxNinja Cloud plugin](cloud/plugin.md), telemetry enabled
   * labels are sent to FluxNinha Cloud for observability. Telemetry should be disabled for
   * sensitive labels.
   * :::
   * </pre>
   *
   * <code>bool telemetry = 3 [json_name = "telemetry", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The telemetry.
   */
  @java.lang.Override
  public boolean getTelemetry() {
    return telemetry_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sourceCase_ == 1) {
      output.writeMessage(1, (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_);
    }
    if (sourceCase_ == 2) {
      output.writeMessage(2, (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_);
    }
    if (telemetry_ != false) {
      output.writeBool(3, telemetry_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sourceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_);
    }
    if (sourceCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_);
    }
    if (telemetry_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, telemetry_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.Rule)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.Rule other = (com.fluxninja.generated.aperture.policy.language.v1.Rule) obj;

    if (getTelemetry()
        != other.getTelemetry()) return false;
    if (!getSourceCase().equals(other.getSourceCase())) return false;
    switch (sourceCase_) {
      case 1:
        if (!getExtractor()
            .equals(other.getExtractor())) return false;
        break;
      case 2:
        if (!getRego()
            .equals(other.getRego())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TELEMETRY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTelemetry());
    switch (sourceCase_) {
      case 1:
        hash = (37 * hash) + EXTRACTOR_FIELD_NUMBER;
        hash = (53 * hash) + getExtractor().hashCode();
        break;
      case 2:
        hash = (37 * hash) + REGO_FIELD_NUMBER;
        hash = (53 * hash) + getRego().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.Rule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.Rule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Rule describes a single Flow Classification Rule
   * Flow classification rule extracts a value from request metadata.
   * More specifically, from `input`, which has the same spec as [Envoy's External Authorization Attribute Context][attribute-context].
   * See &lt;https://play.openpolicyagent.org/p/gU7vcLkc70&gt; for an example input.
   * There are two ways to define a flow classification rule:
   * * Using a declarative extractor â€“ suitable from simple cases, such as directly reading a value from header or a field from json body.
   * * Rego expression.
   * Performance note: It's recommended to use declarative extractors where possible, as they may be slightly performant than Rego expressions.
   * [attribute-context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/auth/v3/attribute_context.proto)
   * Example of Declarative JSON extractor:
   * ```yaml
   * extractor:
   *   json:
   *     from: request.http.body
   *     pointer: /user/name
   * ```
   * Example of Rego module which also disables propagation of a label:
   * ```yaml
   * rego:
   *   query: data.user_from_cookie.user
   *   source: |
   *     package: user_from_cookie
   *     cookies: split(input.attributes.request.http.headers.cookie, ';')
   *     cookie: cookies[_]
   *     cookie.startswith: ('session=')
   *     session: substring(cookie, count('session='), -1)
   *     parts: split(session, '.')
   *     object: json.unmarshal(base64url.decode(parts[0]))
   *     user: object.user
   * propagate: false
   * ```
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.Rule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.Rule)
      com.fluxninja.generated.aperture.policy.language.v1.RuleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.Rule.class, com.fluxninja.generated.aperture.policy.language.v1.Rule.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.Rule.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      telemetry_ = false;

      sourceCase_ = 0;
      source_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.ClassifierProto.internal_static_aperture_policy_language_v1_Rule_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.Rule.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule build() {
      com.fluxninja.generated.aperture.policy.language.v1.Rule result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.Rule result = new com.fluxninja.generated.aperture.policy.language.v1.Rule(this);
      if (sourceCase_ == 1) {
        if (extractorBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = extractorBuilder_.build();
        }
      }
      if (sourceCase_ == 2) {
        if (regoBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = regoBuilder_.build();
        }
      }
      result.telemetry_ = telemetry_;
      result.sourceCase_ = sourceCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.Rule) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.Rule)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.Rule other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.Rule.getDefaultInstance()) return this;
      if (other.getTelemetry() != false) {
        setTelemetry(other.getTelemetry());
      }
      switch (other.getSourceCase()) {
        case EXTRACTOR: {
          mergeExtractor(other.getExtractor());
          break;
        }
        case REGO: {
          mergeRego(other.getRego());
          break;
        }
        case SOURCE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.Rule parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.Rule) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int sourceCase_ = 0;
    private java.lang.Object source_;
    public SourceCase
        getSourceCase() {
      return SourceCase.forNumber(
          sourceCase_);
    }

    public Builder clearSource() {
      sourceCase_ = 0;
      source_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Extractor, com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder, com.fluxninja.generated.aperture.policy.language.v1.ExtractorOrBuilder> extractorBuilder_;
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     * @return Whether the extractor field is set.
     */
    @java.lang.Override
    public boolean hasExtractor() {
      return sourceCase_ == 1;
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     * @return The extractor.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Extractor getExtractor() {
      if (extractorBuilder_ == null) {
        if (sourceCase_ == 1) {
          return (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
      } else {
        if (sourceCase_ == 1) {
          return extractorBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    public Builder setExtractor(com.fluxninja.generated.aperture.policy.language.v1.Extractor value) {
      if (extractorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        extractorBuilder_.setMessage(value);
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    public Builder setExtractor(
        com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder builderForValue) {
      if (extractorBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        extractorBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    public Builder mergeExtractor(com.fluxninja.generated.aperture.policy.language.v1.Extractor value) {
      if (extractorBuilder_ == null) {
        if (sourceCase_ == 1 &&
            source_ != com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance()) {
          source_ = com.fluxninja.generated.aperture.policy.language.v1.Extractor.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 1) {
          extractorBuilder_.mergeFrom(value);
        } else {
          extractorBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    public Builder clearExtractor() {
      if (extractorBuilder_ == null) {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
        }
        extractorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder getExtractorBuilder() {
      return getExtractorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.ExtractorOrBuilder getExtractorOrBuilder() {
      if ((sourceCase_ == 1) && (extractorBuilder_ != null)) {
        return extractorBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 1) {
          return (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * High-level declarative extractor.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Extractor extractor = 1 [json_name = "extractor"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Extractor, com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder, com.fluxninja.generated.aperture.policy.language.v1.ExtractorOrBuilder> 
        getExtractorFieldBuilder() {
      if (extractorBuilder_ == null) {
        if (!(sourceCase_ == 1)) {
          source_ = com.fluxninja.generated.aperture.policy.language.v1.Extractor.getDefaultInstance();
        }
        extractorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Extractor, com.fluxninja.generated.aperture.policy.language.v1.Extractor.Builder, com.fluxninja.generated.aperture.policy.language.v1.ExtractorOrBuilder>(
                (com.fluxninja.generated.aperture.policy.language.v1.Extractor) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 1;
      onChanged();;
      return extractorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego, com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder, com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder> regoBuilder_;
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     * @return Whether the rego field is set.
     */
    @java.lang.Override
    public boolean hasRego() {
      return sourceCase_ == 2;
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     * @return The rego.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego getRego() {
      if (regoBuilder_ == null) {
        if (sourceCase_ == 2) {
          return (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
      } else {
        if (sourceCase_ == 2) {
          return regoBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    public Builder setRego(com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego value) {
      if (regoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        regoBuilder_.setMessage(value);
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    public Builder setRego(
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder builderForValue) {
      if (regoBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        regoBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    public Builder mergeRego(com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego value) {
      if (regoBuilder_ == null) {
        if (sourceCase_ == 2 &&
            source_ != com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance()) {
          source_ = com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 2) {
          regoBuilder_.mergeFrom(value);
        } else {
          regoBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    public Builder clearRego() {
      if (regoBuilder_ == null) {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
        }
        regoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder getRegoBuilder() {
      return getRegoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder getRegoOrBuilder() {
      if ((sourceCase_ == 2) && (regoBuilder_ != null)) {
        return regoBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 2) {
          return (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rego module to extract a value from the rego module.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Rule.Rego rego = 2 [json_name = "rego"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego, com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder, com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder> 
        getRegoFieldBuilder() {
      if (regoBuilder_ == null) {
        if (!(sourceCase_ == 2)) {
          source_ = com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.getDefaultInstance();
        }
        regoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego, com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego.Builder, com.fluxninja.generated.aperture.policy.language.v1.Rule.RegoOrBuilder>(
                (com.fluxninja.generated.aperture.policy.language.v1.Rule.Rego) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 2;
      onChanged();;
      return regoBuilder_;
    }

    private boolean telemetry_ ;
    /**
     * <pre>
     * Decides if the created flow label should be available as an attribute in OLAP telemetry and
     * propagated in [baggage](/concepts/flow-control/flow-label.md#baggage))
     * :::note
     * The flow label is always accessible in Aperture Policies regardless of this setting.
     * :::
     * :::caution
     * When using [FluxNinja Cloud plugin](cloud/plugin.md), telemetry enabled
     * labels are sent to FluxNinha Cloud for observability. Telemetry should be disabled for
     * sensitive labels.
     * :::
     * </pre>
     *
     * <code>bool telemetry = 3 [json_name = "telemetry", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The telemetry.
     */
    @java.lang.Override
    public boolean getTelemetry() {
      return telemetry_;
    }
    /**
     * <pre>
     * Decides if the created flow label should be available as an attribute in OLAP telemetry and
     * propagated in [baggage](/concepts/flow-control/flow-label.md#baggage))
     * :::note
     * The flow label is always accessible in Aperture Policies regardless of this setting.
     * :::
     * :::caution
     * When using [FluxNinja Cloud plugin](cloud/plugin.md), telemetry enabled
     * labels are sent to FluxNinha Cloud for observability. Telemetry should be disabled for
     * sensitive labels.
     * :::
     * </pre>
     *
     * <code>bool telemetry = 3 [json_name = "telemetry", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param value The telemetry to set.
     * @return This builder for chaining.
     */
    public Builder setTelemetry(boolean value) {
      
      telemetry_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Decides if the created flow label should be available as an attribute in OLAP telemetry and
     * propagated in [baggage](/concepts/flow-control/flow-label.md#baggage))
     * :::note
     * The flow label is always accessible in Aperture Policies regardless of this setting.
     * :::
     * :::caution
     * When using [FluxNinja Cloud plugin](cloud/plugin.md), telemetry enabled
     * labels are sent to FluxNinha Cloud for observability. Telemetry should be disabled for
     * sensitive labels.
     * :::
     * </pre>
     *
     * <code>bool telemetry = 3 [json_name = "telemetry", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearTelemetry() {
      
      telemetry_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.Rule)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.Rule)
  private static final com.fluxninja.generated.aperture.policy.language.v1.Rule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.Rule();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.Rule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Rule>
      PARSER = new com.google.protobuf.AbstractParser<Rule>() {
    @java.lang.Override
    public Rule parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Rule(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Rule> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Rule> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Rule getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

