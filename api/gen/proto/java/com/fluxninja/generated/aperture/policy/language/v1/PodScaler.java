// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/autoscale.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * Component for scaling pods based on a signal.
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.PodScaler}
 */
public final class PodScaler extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler)
    PodScalerOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PodScaler.newBuilder() to construct.
  private PodScaler(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PodScaler() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PodScaler();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PodScaler(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder subBuilder = null;
            if (kubernetesObjectSelector_ != null) {
              subBuilder = kubernetesObjectSelector_.toBuilder();
            }
            kubernetesObjectSelector_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(kubernetesObjectSelector_);
              kubernetesObjectSelector_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder subBuilder = null;
            if (scaleReporter_ != null) {
              subBuilder = scaleReporter_.toBuilder();
            }
            scaleReporter_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleReporter_);
              scaleReporter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder subBuilder = null;
            if (scaleActuator_ != null) {
              subBuilder = scaleActuator_.toBuilder();
            }
            scaleActuator_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleActuator_);
              scaleActuator_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder.class);
  }

  public interface ScaleReporterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler.ScaleReporter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return Whether the outPorts field is set.
     */
    boolean hasOutPorts();
    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return The outPorts.
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getOutPorts();
    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder getOutPortsOrBuilder();
  }
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleReporter}
   */
  public static final class ScaleReporter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler.ScaleReporter)
      ScaleReporterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScaleReporter.newBuilder() to construct.
    private ScaleReporter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScaleReporter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScaleReporter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScaleReporter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder subBuilder = null;
              if (outPorts_ != null) {
                subBuilder = outPorts_.toBuilder();
              }
              outPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outPorts_);
                outPorts_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder.class);
    }

    public interface OutsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       * @return Whether the actualReplicas field is set.
       */
      boolean hasActualReplicas();
      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       * @return The actualReplicas.
       */
      com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualReplicas();
      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualReplicasOrBuilder();

      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       * @return Whether the configuredReplicas field is set.
       */
      boolean hasConfiguredReplicas();
      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       * @return The configuredReplicas.
       */
      com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredReplicas();
      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredReplicasOrBuilder();
    }
    /**
     * <pre>
     * Outputs for the PodScaler component.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleReporter.Outs}
     */
    public static final class Outs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)
        OutsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Outs.newBuilder() to construct.
      private Outs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Outs() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Outs();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Outs(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder subBuilder = null;
                if (actualReplicas_ != null) {
                  subBuilder = actualReplicas_.toBuilder();
                }
                actualReplicas_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.OutPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(actualReplicas_);
                  actualReplicas_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder subBuilder = null;
                if (configuredReplicas_ != null) {
                  subBuilder = configuredReplicas_.toBuilder();
                }
                configuredReplicas_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.OutPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(configuredReplicas_);
                  configuredReplicas_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_Outs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_Outs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder.class);
      }

      public static final int ACTUAL_REPLICAS_FIELD_NUMBER = 1;
      private com.fluxninja.generated.aperture.policy.language.v1.OutPort actualReplicas_;
      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       * @return Whether the actualReplicas field is set.
       */
      @java.lang.Override
      public boolean hasActualReplicas() {
        return actualReplicas_ != null;
      }
      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       * @return The actualReplicas.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualReplicas() {
        return actualReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualReplicas_;
      }
      /**
       * <pre>
       * The number of replicas that are currently running.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualReplicasOrBuilder() {
        return getActualReplicas();
      }

      public static final int CONFIGURED_REPLICAS_FIELD_NUMBER = 2;
      private com.fluxninja.generated.aperture.policy.language.v1.OutPort configuredReplicas_;
      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       * @return Whether the configuredReplicas field is set.
       */
      @java.lang.Override
      public boolean hasConfiguredReplicas() {
        return configuredReplicas_ != null;
      }
      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       * @return The configuredReplicas.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredReplicas() {
        return configuredReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredReplicas_;
      }
      /**
       * <pre>
       * The number of replicas that are desired.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredReplicasOrBuilder() {
        return getConfiguredReplicas();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (actualReplicas_ != null) {
          output.writeMessage(1, getActualReplicas());
        }
        if (configuredReplicas_ != null) {
          output.writeMessage(2, getConfiguredReplicas());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (actualReplicas_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getActualReplicas());
        }
        if (configuredReplicas_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getConfiguredReplicas());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs) obj;

        if (hasActualReplicas() != other.hasActualReplicas()) return false;
        if (hasActualReplicas()) {
          if (!getActualReplicas()
              .equals(other.getActualReplicas())) return false;
        }
        if (hasConfiguredReplicas() != other.hasConfiguredReplicas()) return false;
        if (hasConfiguredReplicas()) {
          if (!getConfiguredReplicas()
              .equals(other.getConfiguredReplicas())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasActualReplicas()) {
          hash = (37 * hash) + ACTUAL_REPLICAS_FIELD_NUMBER;
          hash = (53 * hash) + getActualReplicas().hashCode();
        }
        if (hasConfiguredReplicas()) {
          hash = (37 * hash) + CONFIGURED_REPLICAS_FIELD_NUMBER;
          hash = (53 * hash) + getConfiguredReplicas().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Outputs for the PodScaler component.
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleReporter.Outs}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_Outs_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_Outs_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (actualReplicasBuilder_ == null) {
            actualReplicas_ = null;
          } else {
            actualReplicas_ = null;
            actualReplicasBuilder_ = null;
          }
          if (configuredReplicasBuilder_ == null) {
            configuredReplicas_ = null;
          } else {
            configuredReplicas_ = null;
            configuredReplicasBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_Outs_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs build() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs(this);
          if (actualReplicasBuilder_ == null) {
            result.actualReplicas_ = actualReplicas_;
          } else {
            result.actualReplicas_ = actualReplicasBuilder_.build();
          }
          if (configuredReplicasBuilder_ == null) {
            result.configuredReplicas_ = configuredReplicas_;
          } else {
            result.configuredReplicas_ = configuredReplicasBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.getDefaultInstance()) return this;
          if (other.hasActualReplicas()) {
            mergeActualReplicas(other.getActualReplicas());
          }
          if (other.hasConfiguredReplicas()) {
            mergeConfiguredReplicas(other.getConfiguredReplicas());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.OutPort actualReplicas_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> actualReplicasBuilder_;
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         * @return Whether the actualReplicas field is set.
         */
        public boolean hasActualReplicas() {
          return actualReplicasBuilder_ != null || actualReplicas_ != null;
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         * @return The actualReplicas.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualReplicas() {
          if (actualReplicasBuilder_ == null) {
            return actualReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualReplicas_;
          } else {
            return actualReplicasBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public Builder setActualReplicas(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
          if (actualReplicasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            actualReplicas_ = value;
            onChanged();
          } else {
            actualReplicasBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public Builder setActualReplicas(
            com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder builderForValue) {
          if (actualReplicasBuilder_ == null) {
            actualReplicas_ = builderForValue.build();
            onChanged();
          } else {
            actualReplicasBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public Builder mergeActualReplicas(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
          if (actualReplicasBuilder_ == null) {
            if (actualReplicas_ != null) {
              actualReplicas_ =
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.newBuilder(actualReplicas_).mergeFrom(value).buildPartial();
            } else {
              actualReplicas_ = value;
            }
            onChanged();
          } else {
            actualReplicasBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public Builder clearActualReplicas() {
          if (actualReplicasBuilder_ == null) {
            actualReplicas_ = null;
            onChanged();
          } else {
            actualReplicas_ = null;
            actualReplicasBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder getActualReplicasBuilder() {
          
          onChanged();
          return getActualReplicasFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualReplicasOrBuilder() {
          if (actualReplicasBuilder_ != null) {
            return actualReplicasBuilder_.getMessageOrBuilder();
          } else {
            return actualReplicas_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualReplicas_;
          }
        }
        /**
         * <pre>
         * The number of replicas that are currently running.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort actual_replicas = 1 [json_name = "actualReplicas"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> 
            getActualReplicasFieldBuilder() {
          if (actualReplicasBuilder_ == null) {
            actualReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder>(
                    getActualReplicas(),
                    getParentForChildren(),
                    isClean());
            actualReplicas_ = null;
          }
          return actualReplicasBuilder_;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.OutPort configuredReplicas_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> configuredReplicasBuilder_;
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         * @return Whether the configuredReplicas field is set.
         */
        public boolean hasConfiguredReplicas() {
          return configuredReplicasBuilder_ != null || configuredReplicas_ != null;
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         * @return The configuredReplicas.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredReplicas() {
          if (configuredReplicasBuilder_ == null) {
            return configuredReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredReplicas_;
          } else {
            return configuredReplicasBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public Builder setConfiguredReplicas(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
          if (configuredReplicasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            configuredReplicas_ = value;
            onChanged();
          } else {
            configuredReplicasBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public Builder setConfiguredReplicas(
            com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder builderForValue) {
          if (configuredReplicasBuilder_ == null) {
            configuredReplicas_ = builderForValue.build();
            onChanged();
          } else {
            configuredReplicasBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public Builder mergeConfiguredReplicas(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
          if (configuredReplicasBuilder_ == null) {
            if (configuredReplicas_ != null) {
              configuredReplicas_ =
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.newBuilder(configuredReplicas_).mergeFrom(value).buildPartial();
            } else {
              configuredReplicas_ = value;
            }
            onChanged();
          } else {
            configuredReplicasBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public Builder clearConfiguredReplicas() {
          if (configuredReplicasBuilder_ == null) {
            configuredReplicas_ = null;
            onChanged();
          } else {
            configuredReplicas_ = null;
            configuredReplicasBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder getConfiguredReplicasBuilder() {
          
          onChanged();
          return getConfiguredReplicasFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredReplicasOrBuilder() {
          if (configuredReplicasBuilder_ != null) {
            return configuredReplicasBuilder_.getMessageOrBuilder();
          } else {
            return configuredReplicas_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredReplicas_;
          }
        }
        /**
         * <pre>
         * The number of replicas that are desired.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.OutPort configured_replicas = 2 [json_name = "configuredReplicas"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> 
            getConfiguredReplicasFieldBuilder() {
          if (configuredReplicasBuilder_ == null) {
            configuredReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder>(
                    getConfiguredReplicas(),
                    getParentForChildren(),
                    isClean());
            configuredReplicas_ = null;
          }
          return configuredReplicasBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler.ScaleReporter.Outs)
      private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Outs>
          PARSER = new com.google.protobuf.AbstractParser<Outs>() {
        @java.lang.Override
        public Outs parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Outs(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Outs> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Outs> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int OUT_PORTS_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs outPorts_;
    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return Whether the outPorts field is set.
     */
    @java.lang.Override
    public boolean hasOutPorts() {
      return outPorts_ != null;
    }
    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return The outPorts.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getOutPorts() {
      return outPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.getDefaultInstance() : outPorts_;
    }
    /**
     * <pre>
     * Output ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder getOutPortsOrBuilder() {
      return getOutPorts();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (outPorts_ != null) {
        output.writeMessage(1, getOutPorts());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (outPorts_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOutPorts());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter) obj;

      if (hasOutPorts() != other.hasOutPorts()) return false;
      if (hasOutPorts()) {
        if (!getOutPorts()
            .equals(other.getOutPorts())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOutPorts()) {
        hash = (37 * hash) + OUT_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutPorts().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleReporter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler.ScaleReporter)
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (outPortsBuilder_ == null) {
          outPorts_ = null;
        } else {
          outPorts_ = null;
          outPortsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleReporter_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter build() {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter(this);
        if (outPortsBuilder_ == null) {
          result.outPorts_ = outPorts_;
        } else {
          result.outPorts_ = outPortsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.getDefaultInstance()) return this;
        if (other.hasOutPorts()) {
          mergeOutPorts(other.getOutPorts());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs outPorts_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder> outPortsBuilder_;
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       * @return Whether the outPorts field is set.
       */
      public boolean hasOutPorts() {
        return outPortsBuilder_ != null || outPorts_ != null;
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       * @return The outPorts.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs getOutPorts() {
        if (outPortsBuilder_ == null) {
          return outPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.getDefaultInstance() : outPorts_;
        } else {
          return outPortsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public Builder setOutPorts(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs value) {
        if (outPortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outPorts_ = value;
          onChanged();
        } else {
          outPortsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public Builder setOutPorts(
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder builderForValue) {
        if (outPortsBuilder_ == null) {
          outPorts_ = builderForValue.build();
          onChanged();
        } else {
          outPortsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public Builder mergeOutPorts(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs value) {
        if (outPortsBuilder_ == null) {
          if (outPorts_ != null) {
            outPorts_ =
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.newBuilder(outPorts_).mergeFrom(value).buildPartial();
          } else {
            outPorts_ = value;
          }
          onChanged();
        } else {
          outPortsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public Builder clearOutPorts() {
        if (outPortsBuilder_ == null) {
          outPorts_ = null;
          onChanged();
        } else {
          outPorts_ = null;
          outPortsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder getOutPortsBuilder() {
        
        onChanged();
        return getOutPortsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder getOutPortsOrBuilder() {
        if (outPortsBuilder_ != null) {
          return outPortsBuilder_.getMessageOrBuilder();
        } else {
          return outPorts_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.getDefaultInstance() : outPorts_;
        }
      }
      /**
       * <pre>
       * Output ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs out_ports = 1 [json_name = "outPorts"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder> 
          getOutPortsFieldBuilder() {
        if (outPortsBuilder_ == null) {
          outPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.OutsOrBuilder>(
                  getOutPorts(),
                  getParentForChildren(),
                  isClean());
          outPorts_ = null;
        }
        return outPortsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler.ScaleReporter)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler.ScaleReporter)
    private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScaleReporter>
        PARSER = new com.google.protobuf.AbstractParser<ScaleReporter>() {
      @java.lang.Override
      public ScaleReporter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScaleReporter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScaleReporter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScaleReporter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScaleActuatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler.ScaleActuator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    boolean hasInPorts();
    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getInPorts();
    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder getInPortsOrBuilder();

    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The dynamicConfigKey.
     */
    java.lang.String getDynamicConfigKey();
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The bytes for dynamicConfigKey.
     */
    com.google.protobuf.ByteString
        getDynamicConfigKeyBytes();

    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return Whether the defaultConfig field is set.
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return The defaultConfig.
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator}
   */
  public static final class ScaleActuator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler.ScaleActuator)
      ScaleActuatorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScaleActuator.newBuilder() to construct.
    private ScaleActuator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScaleActuator() {
      dynamicConfigKey_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScaleActuator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScaleActuator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder subBuilder = null;
              if (inPorts_ != null) {
                subBuilder = inPorts_.toBuilder();
              }
              inPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inPorts_);
                inPorts_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              dynamicConfigKey_ = s;
              break;
            }
            case 26: {
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder.class);
    }

    public interface DynamicConfigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
       * Useful for observing the behavior of Scaler without disrupting any real traffic.
       * </pre>
       *
       * <code>bool dry_run = 1 [json_name = "dryRun"];</code>
       * @return The dryRun.
       */
      boolean getDryRun();
    }
    /**
     * <pre>
     * Dynamic Configuration for ScaleActuator
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig}
     */
    public static final class DynamicConfig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)
        DynamicConfigOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DynamicConfig.newBuilder() to construct.
      private DynamicConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DynamicConfig() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DynamicConfig();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DynamicConfig(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                dryRun_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_DynamicConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_DynamicConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder.class);
      }

      public static final int DRY_RUN_FIELD_NUMBER = 1;
      private boolean dryRun_;
      /**
       * <pre>
       * Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
       * Useful for observing the behavior of Scaler without disrupting any real traffic.
       * </pre>
       *
       * <code>bool dry_run = 1 [json_name = "dryRun"];</code>
       * @return The dryRun.
       */
      @java.lang.Override
      public boolean getDryRun() {
        return dryRun_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (dryRun_ != false) {
          output.writeBool(1, dryRun_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (dryRun_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, dryRun_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig) obj;

        if (getDryRun()
            != other.getDryRun()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DRY_RUN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDryRun());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Dynamic Configuration for ScaleActuator
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_DynamicConfig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_DynamicConfig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          dryRun_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_DynamicConfig_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig build() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig(this);
          result.dryRun_ = dryRun_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance()) return this;
          if (other.getDryRun() != false) {
            setDryRun(other.getDryRun());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean dryRun_ ;
        /**
         * <pre>
         * Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
         * Useful for observing the behavior of Scaler without disrupting any real traffic.
         * </pre>
         *
         * <code>bool dry_run = 1 [json_name = "dryRun"];</code>
         * @return The dryRun.
         */
        @java.lang.Override
        public boolean getDryRun() {
          return dryRun_;
        }
        /**
         * <pre>
         * Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
         * Useful for observing the behavior of Scaler without disrupting any real traffic.
         * </pre>
         *
         * <code>bool dry_run = 1 [json_name = "dryRun"];</code>
         * @param value The dryRun to set.
         * @return This builder for chaining.
         */
        public Builder setDryRun(boolean value) {
          
          dryRun_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
         * Useful for observing the behavior of Scaler without disrupting any real traffic.
         * </pre>
         *
         * <code>bool dry_run = 1 [json_name = "dryRun"];</code>
         * @return This builder for chaining.
         */
        public Builder clearDryRun() {
          
          dryRun_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig)
      private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DynamicConfig>
          PARSER = new com.google.protobuf.AbstractParser<DynamicConfig>() {
        @java.lang.Override
        public DynamicConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DynamicConfig(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DynamicConfig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DynamicConfig> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       * @return Whether the desiredReplicas field is set.
       */
      boolean hasDesiredReplicas();
      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       * @return The desiredReplicas.
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPort getDesiredReplicas();
      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getDesiredReplicasOrBuilder();
    }
    /**
     * <pre>
     * Inputs for the PodScaler component.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator.Ins}
     */
    public static final class Ins extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)
        InsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ins.newBuilder() to construct.
      private Ins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ins() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Ins();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Ins(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
                if (desiredReplicas_ != null) {
                  subBuilder = desiredReplicas_.toBuilder();
                }
                desiredReplicas_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(desiredReplicas_);
                  desiredReplicas_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_Ins_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_Ins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder.class);
      }

      public static final int DESIRED_REPLICAS_FIELD_NUMBER = 1;
      private com.fluxninja.generated.aperture.policy.language.v1.InPort desiredReplicas_;
      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       * @return Whether the desiredReplicas field is set.
       */
      @java.lang.Override
      public boolean hasDesiredReplicas() {
        return desiredReplicas_ != null;
      }
      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       * @return The desiredReplicas.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getDesiredReplicas() {
        return desiredReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : desiredReplicas_;
      }
      /**
       * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getDesiredReplicasOrBuilder() {
        return getDesiredReplicas();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (desiredReplicas_ != null) {
          output.writeMessage(1, getDesiredReplicas());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (desiredReplicas_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getDesiredReplicas());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins) obj;

        if (hasDesiredReplicas() != other.hasDesiredReplicas()) return false;
        if (hasDesiredReplicas()) {
          if (!getDesiredReplicas()
              .equals(other.getDesiredReplicas())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDesiredReplicas()) {
          hash = (37 * hash) + DESIRED_REPLICAS_FIELD_NUMBER;
          hash = (53 * hash) + getDesiredReplicas().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Inputs for the PodScaler component.
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator.Ins}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_Ins_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_Ins_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (desiredReplicasBuilder_ == null) {
            desiredReplicas_ = null;
          } else {
            desiredReplicas_ = null;
            desiredReplicasBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_Ins_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins build() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins(this);
          if (desiredReplicasBuilder_ == null) {
            result.desiredReplicas_ = desiredReplicas_;
          } else {
            result.desiredReplicas_ = desiredReplicasBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.getDefaultInstance()) return this;
          if (other.hasDesiredReplicas()) {
            mergeDesiredReplicas(other.getDesiredReplicas());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.InPort desiredReplicas_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> desiredReplicasBuilder_;
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         * @return Whether the desiredReplicas field is set.
         */
        public boolean hasDesiredReplicas() {
          return desiredReplicasBuilder_ != null || desiredReplicas_ != null;
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         * @return The desiredReplicas.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort getDesiredReplicas() {
          if (desiredReplicasBuilder_ == null) {
            return desiredReplicas_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : desiredReplicas_;
          } else {
            return desiredReplicasBuilder_.getMessage();
          }
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public Builder setDesiredReplicas(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (desiredReplicasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            desiredReplicas_ = value;
            onChanged();
          } else {
            desiredReplicasBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public Builder setDesiredReplicas(
            com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
          if (desiredReplicasBuilder_ == null) {
            desiredReplicas_ = builderForValue.build();
            onChanged();
          } else {
            desiredReplicasBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public Builder mergeDesiredReplicas(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (desiredReplicasBuilder_ == null) {
            if (desiredReplicas_ != null) {
              desiredReplicas_ =
                com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(desiredReplicas_).mergeFrom(value).buildPartial();
            } else {
              desiredReplicas_ = value;
            }
            onChanged();
          } else {
            desiredReplicasBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public Builder clearDesiredReplicas() {
          if (desiredReplicasBuilder_ == null) {
            desiredReplicas_ = null;
            onChanged();
          } else {
            desiredReplicas_ = null;
            desiredReplicasBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getDesiredReplicasBuilder() {
          
          onChanged();
          return getDesiredReplicasFieldBuilder().getBuilder();
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getDesiredReplicasOrBuilder() {
          if (desiredReplicasBuilder_ != null) {
            return desiredReplicasBuilder_.getMessageOrBuilder();
          } else {
            return desiredReplicas_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : desiredReplicas_;
          }
        }
        /**
         * <code>.aperture.policy.language.v1.InPort desired_replicas = 1 [json_name = "desiredReplicas"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
            getDesiredReplicasFieldBuilder() {
          if (desiredReplicasBuilder_ == null) {
            desiredReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                    getDesiredReplicas(),
                    getParentForChildren(),
                    isClean());
            desiredReplicas_ = null;
          }
          return desiredReplicasBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler.ScaleActuator.Ins)
      private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ins>
          PARSER = new com.google.protobuf.AbstractParser<Ins>() {
        @java.lang.Override
        public Ins parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ins(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Ins> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ins> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int IN_PORTS_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins inPorts_;
    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    @java.lang.Override
    public boolean hasInPorts() {
      return inPorts_ != null;
    }
    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getInPorts() {
      return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.getDefaultInstance() : inPorts_;
    }
    /**
     * <pre>
     * Input ports for the PodScaler component.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder getInPortsOrBuilder() {
      return getInPorts();
    }

    public static final int DYNAMIC_CONFIG_KEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object dynamicConfigKey_;
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The dynamicConfigKey.
     */
    @java.lang.Override
    public java.lang.String getDynamicConfigKey() {
      java.lang.Object ref = dynamicConfigKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dynamicConfigKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The bytes for dynamicConfigKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDynamicConfigKeyBytes() {
      java.lang.Object ref = dynamicConfigKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dynamicConfigKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return Whether the defaultConfig field is set.
     */
    @java.lang.Override
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return The defaultConfig.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig() {
      return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (inPorts_ != null) {
        output.writeMessage(1, getInPorts());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dynamicConfigKey_);
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (inPorts_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInPorts());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dynamicConfigKey_);
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator) obj;

      if (hasInPorts() != other.hasInPorts()) return false;
      if (hasInPorts()) {
        if (!getInPorts()
            .equals(other.getInPorts())) return false;
      }
      if (!getDynamicConfigKey()
          .equals(other.getDynamicConfigKey())) return false;
      if (hasDefaultConfig() != other.hasDefaultConfig()) return false;
      if (hasDefaultConfig()) {
        if (!getDefaultConfig()
            .equals(other.getDefaultConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInPorts()) {
        hash = (37 * hash) + IN_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getInPorts().hashCode();
      }
      hash = (37 * hash) + DYNAMIC_CONFIG_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getDynamicConfigKey().hashCode();
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.PodScaler.ScaleActuator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler.ScaleActuator)
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }
        dynamicConfigKey_ = "";

        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_ScaleActuator_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator build() {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator(this);
        if (inPortsBuilder_ == null) {
          result.inPorts_ = inPorts_;
        } else {
          result.inPorts_ = inPortsBuilder_.build();
        }
        result.dynamicConfigKey_ = dynamicConfigKey_;
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.getDefaultInstance()) return this;
        if (other.hasInPorts()) {
          mergeInPorts(other.getInPorts());
        }
        if (!other.getDynamicConfigKey().isEmpty()) {
          dynamicConfigKey_ = other.dynamicConfigKey_;
          onChanged();
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins inPorts_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder> inPortsBuilder_;
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return Whether the inPorts field is set.
       */
      public boolean hasInPorts() {
        return inPortsBuilder_ != null || inPorts_ != null;
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return The inPorts.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins getInPorts() {
        if (inPortsBuilder_ == null) {
          return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.getDefaultInstance() : inPorts_;
        } else {
          return inPortsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins value) {
        if (inPortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inPorts_ = value;
          onChanged();
        } else {
          inPortsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder builderForValue) {
        if (inPortsBuilder_ == null) {
          inPorts_ = builderForValue.build();
          onChanged();
        } else {
          inPortsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder mergeInPorts(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins value) {
        if (inPortsBuilder_ == null) {
          if (inPorts_ != null) {
            inPorts_ =
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.newBuilder(inPorts_).mergeFrom(value).buildPartial();
          } else {
            inPorts_ = value;
          }
          onChanged();
        } else {
          inPortsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder clearInPorts() {
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
          onChanged();
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder getInPortsBuilder() {
        
        onChanged();
        return getInPortsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder getInPortsOrBuilder() {
        if (inPortsBuilder_ != null) {
          return inPortsBuilder_.getMessageOrBuilder();
        } else {
          return inPorts_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.getDefaultInstance() : inPorts_;
        }
      }
      /**
       * <pre>
       * Input ports for the PodScaler component.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder> 
          getInPortsFieldBuilder() {
        if (inPortsBuilder_ == null) {
          inPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.InsOrBuilder>(
                  getInPorts(),
                  getParentForChildren(),
                  isClean());
          inPorts_ = null;
        }
        return inPortsBuilder_;
      }

      private java.lang.Object dynamicConfigKey_ = "";
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return The dynamicConfigKey.
       */
      public java.lang.String getDynamicConfigKey() {
        java.lang.Object ref = dynamicConfigKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dynamicConfigKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return The bytes for dynamicConfigKey.
       */
      public com.google.protobuf.ByteString
          getDynamicConfigKeyBytes() {
        java.lang.Object ref = dynamicConfigKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dynamicConfigKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @param value The dynamicConfigKey to set.
       * @return This builder for chaining.
       */
      public Builder setDynamicConfigKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dynamicConfigKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDynamicConfigKey() {
        
        dynamicConfigKey_ = getDefaultInstance().getDynamicConfigKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @param value The bytes for dynamicConfigKey to set.
       * @return This builder for chaining.
       */
      public Builder setDynamicConfigKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dynamicConfigKey_ = value;
        onChanged();
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig defaultConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       * @return Whether the defaultConfig field is set.
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       * @return The defaultConfig.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder setDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder setDefaultConfig(
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder mergeDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler.ScaleActuator)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler.ScaleActuator)
    private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScaleActuator>
        PARSER = new com.google.protobuf.AbstractParser<ScaleActuator>() {
      @java.lang.Override
      public ScaleActuator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScaleActuator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScaleActuator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScaleActuator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int KUBERNETES_OBJECT_SELECTOR_FIELD_NUMBER = 1;
  private com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector kubernetesObjectSelector_;
  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   * @return Whether the kubernetesObjectSelector field is set.
   */
  @java.lang.Override
  public boolean hasKubernetesObjectSelector() {
    return kubernetesObjectSelector_ != null;
  }
  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   * @return The kubernetesObjectSelector.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector() {
    return kubernetesObjectSelector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
  }
  /**
   * <pre>
   * The Kubernetes object on which horizontal scaling is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder() {
    return getKubernetesObjectSelector();
  }

  public static final int SCALE_REPORTER_FIELD_NUMBER = 2;
  private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter scaleReporter_;
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   * @return Whether the scaleReporter field is set.
   */
  @java.lang.Override
  public boolean hasScaleReporter() {
    return scaleReporter_ != null;
  }
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   * @return The scaleReporter.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getScaleReporter() {
    return scaleReporter_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.getDefaultInstance() : scaleReporter_;
  }
  /**
   * <pre>
   * Reports actual and configured number of replicas.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder getScaleReporterOrBuilder() {
    return getScaleReporter();
  }

  public static final int SCALE_ACTUATOR_FIELD_NUMBER = 3;
  private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator scaleActuator_;
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   * @return Whether the scaleActuator field is set.
   */
  @java.lang.Override
  public boolean hasScaleActuator() {
    return scaleActuator_ != null;
  }
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   * @return The scaleActuator.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getScaleActuator() {
    return scaleActuator_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.getDefaultInstance() : scaleActuator_;
  }
  /**
   * <pre>
   * Actuates scaling of pods based on a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder getScaleActuatorOrBuilder() {
    return getScaleActuator();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (kubernetesObjectSelector_ != null) {
      output.writeMessage(1, getKubernetesObjectSelector());
    }
    if (scaleReporter_ != null) {
      output.writeMessage(2, getScaleReporter());
    }
    if (scaleActuator_ != null) {
      output.writeMessage(3, getScaleActuator());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (kubernetesObjectSelector_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getKubernetesObjectSelector());
    }
    if (scaleReporter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScaleReporter());
    }
    if (scaleActuator_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getScaleActuator());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler other = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) obj;

    if (hasKubernetesObjectSelector() != other.hasKubernetesObjectSelector()) return false;
    if (hasKubernetesObjectSelector()) {
      if (!getKubernetesObjectSelector()
          .equals(other.getKubernetesObjectSelector())) return false;
    }
    if (hasScaleReporter() != other.hasScaleReporter()) return false;
    if (hasScaleReporter()) {
      if (!getScaleReporter()
          .equals(other.getScaleReporter())) return false;
    }
    if (hasScaleActuator() != other.hasScaleActuator()) return false;
    if (hasScaleActuator()) {
      if (!getScaleActuator()
          .equals(other.getScaleActuator())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasKubernetesObjectSelector()) {
      hash = (37 * hash) + KUBERNETES_OBJECT_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getKubernetesObjectSelector().hashCode();
    }
    if (hasScaleReporter()) {
      hash = (37 * hash) + SCALE_REPORTER_FIELD_NUMBER;
      hash = (53 * hash) + getScaleReporter().hashCode();
    }
    if (hasScaleActuator()) {
      hash = (37 * hash) + SCALE_ACTUATOR_FIELD_NUMBER;
      hash = (53 * hash) + getScaleActuator().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.PodScaler prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Component for scaling pods based on a signal.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.PodScaler}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.PodScaler)
      com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.class, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.PodScaler.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (kubernetesObjectSelectorBuilder_ == null) {
        kubernetesObjectSelector_ = null;
      } else {
        kubernetesObjectSelector_ = null;
        kubernetesObjectSelectorBuilder_ = null;
      }
      if (scaleReporterBuilder_ == null) {
        scaleReporter_ = null;
      } else {
        scaleReporter_ = null;
        scaleReporterBuilder_ = null;
      }
      if (scaleActuatorBuilder_ == null) {
        scaleActuator_ = null;
      } else {
        scaleActuator_ = null;
        scaleActuatorBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_PodScaler_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler build() {
      com.fluxninja.generated.aperture.policy.language.v1.PodScaler result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.PodScaler result = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler(this);
      if (kubernetesObjectSelectorBuilder_ == null) {
        result.kubernetesObjectSelector_ = kubernetesObjectSelector_;
      } else {
        result.kubernetesObjectSelector_ = kubernetesObjectSelectorBuilder_.build();
      }
      if (scaleReporterBuilder_ == null) {
        result.scaleReporter_ = scaleReporter_;
      } else {
        result.scaleReporter_ = scaleReporterBuilder_.build();
      }
      if (scaleActuatorBuilder_ == null) {
        result.scaleActuator_ = scaleActuator_;
      } else {
        result.scaleActuator_ = scaleActuatorBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.PodScaler) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.PodScaler other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance()) return this;
      if (other.hasKubernetesObjectSelector()) {
        mergeKubernetesObjectSelector(other.getKubernetesObjectSelector());
      }
      if (other.hasScaleReporter()) {
        mergeScaleReporter(other.getScaleReporter());
      }
      if (other.hasScaleActuator()) {
        mergeScaleActuator(other.getScaleActuator());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.PodScaler parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector kubernetesObjectSelector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder> kubernetesObjectSelectorBuilder_;
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return Whether the kubernetesObjectSelector field is set.
     */
    public boolean hasKubernetesObjectSelector() {
      return kubernetesObjectSelectorBuilder_ != null || kubernetesObjectSelector_ != null;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return The kubernetesObjectSelector.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector() {
      if (kubernetesObjectSelectorBuilder_ == null) {
        return kubernetesObjectSelector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
      } else {
        return kubernetesObjectSelectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public Builder setKubernetesObjectSelector(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector value) {
      if (kubernetesObjectSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kubernetesObjectSelector_ = value;
        onChanged();
      } else {
        kubernetesObjectSelectorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public Builder setKubernetesObjectSelector(
        com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder builderForValue) {
      if (kubernetesObjectSelectorBuilder_ == null) {
        kubernetesObjectSelector_ = builderForValue.build();
        onChanged();
      } else {
        kubernetesObjectSelectorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public Builder mergeKubernetesObjectSelector(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector value) {
      if (kubernetesObjectSelectorBuilder_ == null) {
        if (kubernetesObjectSelector_ != null) {
          kubernetesObjectSelector_ =
            com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.newBuilder(kubernetesObjectSelector_).mergeFrom(value).buildPartial();
        } else {
          kubernetesObjectSelector_ = value;
        }
        onChanged();
      } else {
        kubernetesObjectSelectorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public Builder clearKubernetesObjectSelector() {
      if (kubernetesObjectSelectorBuilder_ == null) {
        kubernetesObjectSelector_ = null;
        onChanged();
      } else {
        kubernetesObjectSelector_ = null;
        kubernetesObjectSelectorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder getKubernetesObjectSelectorBuilder() {
      
      onChanged();
      return getKubernetesObjectSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder() {
      if (kubernetesObjectSelectorBuilder_ != null) {
        return kubernetesObjectSelectorBuilder_.getMessageOrBuilder();
      } else {
        return kubernetesObjectSelector_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
      }
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder> 
        getKubernetesObjectSelectorFieldBuilder() {
      if (kubernetesObjectSelectorBuilder_ == null) {
        kubernetesObjectSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder>(
                getKubernetesObjectSelector(),
                getParentForChildren(),
                isClean());
        kubernetesObjectSelector_ = null;
      }
      return kubernetesObjectSelectorBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter scaleReporter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder> scaleReporterBuilder_;
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     * @return Whether the scaleReporter field is set.
     */
    public boolean hasScaleReporter() {
      return scaleReporterBuilder_ != null || scaleReporter_ != null;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     * @return The scaleReporter.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter getScaleReporter() {
      if (scaleReporterBuilder_ == null) {
        return scaleReporter_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.getDefaultInstance() : scaleReporter_;
      } else {
        return scaleReporterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public Builder setScaleReporter(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter value) {
      if (scaleReporterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleReporter_ = value;
        onChanged();
      } else {
        scaleReporterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public Builder setScaleReporter(
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder builderForValue) {
      if (scaleReporterBuilder_ == null) {
        scaleReporter_ = builderForValue.build();
        onChanged();
      } else {
        scaleReporterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public Builder mergeScaleReporter(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter value) {
      if (scaleReporterBuilder_ == null) {
        if (scaleReporter_ != null) {
          scaleReporter_ =
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.newBuilder(scaleReporter_).mergeFrom(value).buildPartial();
        } else {
          scaleReporter_ = value;
        }
        onChanged();
      } else {
        scaleReporterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public Builder clearScaleReporter() {
      if (scaleReporterBuilder_ == null) {
        scaleReporter_ = null;
        onChanged();
      } else {
        scaleReporter_ = null;
        scaleReporterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder getScaleReporterBuilder() {
      
      onChanged();
      return getScaleReporterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder getScaleReporterOrBuilder() {
      if (scaleReporterBuilder_ != null) {
        return scaleReporterBuilder_.getMessageOrBuilder();
      } else {
        return scaleReporter_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.getDefaultInstance() : scaleReporter_;
      }
    }
    /**
     * <pre>
     * Reports actual and configured number of replicas.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleReporter scale_reporter = 2 [json_name = "scaleReporter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder> 
        getScaleReporterFieldBuilder() {
      if (scaleReporterBuilder_ == null) {
        scaleReporterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporter.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleReporterOrBuilder>(
                getScaleReporter(),
                getParentForChildren(),
                isClean());
        scaleReporter_ = null;
      }
      return scaleReporterBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator scaleActuator_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder> scaleActuatorBuilder_;
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     * @return Whether the scaleActuator field is set.
     */
    public boolean hasScaleActuator() {
      return scaleActuatorBuilder_ != null || scaleActuator_ != null;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     * @return The scaleActuator.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator getScaleActuator() {
      if (scaleActuatorBuilder_ == null) {
        return scaleActuator_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.getDefaultInstance() : scaleActuator_;
      } else {
        return scaleActuatorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public Builder setScaleActuator(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator value) {
      if (scaleActuatorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleActuator_ = value;
        onChanged();
      } else {
        scaleActuatorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public Builder setScaleActuator(
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder builderForValue) {
      if (scaleActuatorBuilder_ == null) {
        scaleActuator_ = builderForValue.build();
        onChanged();
      } else {
        scaleActuatorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public Builder mergeScaleActuator(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator value) {
      if (scaleActuatorBuilder_ == null) {
        if (scaleActuator_ != null) {
          scaleActuator_ =
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.newBuilder(scaleActuator_).mergeFrom(value).buildPartial();
        } else {
          scaleActuator_ = value;
        }
        onChanged();
      } else {
        scaleActuatorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public Builder clearScaleActuator() {
      if (scaleActuatorBuilder_ == null) {
        scaleActuator_ = null;
        onChanged();
      } else {
        scaleActuator_ = null;
        scaleActuatorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder getScaleActuatorBuilder() {
      
      onChanged();
      return getScaleActuatorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder getScaleActuatorOrBuilder() {
      if (scaleActuatorBuilder_ != null) {
        return scaleActuatorBuilder_.getMessageOrBuilder();
      } else {
        return scaleActuator_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.getDefaultInstance() : scaleActuator_;
      }
    }
    /**
     * <pre>
     * Actuates scaling of pods based on a signal.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator scale_actuator = 3 [json_name = "scaleActuator"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder> 
        getScaleActuatorFieldBuilder() {
      if (scaleActuatorBuilder_ == null) {
        scaleActuatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuatorOrBuilder>(
                getScaleActuator(),
                getParentForChildren(),
                isClean());
        scaleActuator_ = null;
      }
      return scaleActuatorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.PodScaler)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.PodScaler)
  private static final com.fluxninja.generated.aperture.policy.language.v1.PodScaler DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.PodScaler();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.PodScaler getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PodScaler>
      PARSER = new com.google.protobuf.AbstractParser<PodScaler>() {
    @java.lang.Override
    public PodScaler parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PodScaler(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PodScaler> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PodScaler> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

