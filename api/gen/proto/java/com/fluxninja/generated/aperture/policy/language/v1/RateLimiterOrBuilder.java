// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/flowcontrol.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface RateLimiterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.RateLimiter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Input ports for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return Whether the inPorts field is set.
   */
  boolean hasInPorts();
  /**
   * <pre>
   * Input ports for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return The inPorts.
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Ins getInPorts();
  /**
   * <pre>
   * Input ports for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Ins in_ports = 1 [json_name = "inPorts"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.InsOrBuilder getInPortsOrBuilder();

  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FlowSelector flow_selector = 2 [json_name = "flowSelector"];</code>
   * @return Whether the flowSelector field is set.
   */
  boolean hasFlowSelector();
  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FlowSelector flow_selector = 2 [json_name = "flowSelector"];</code>
   * @return The flowSelector.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FlowSelector getFlowSelector();
  /**
   * <pre>
   * Which control point to apply this ratelimiter to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FlowSelector flow_selector = 2 [json_name = "flowSelector"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FlowSelectorOrBuilder getFlowSelectorOrBuilder();

  /**
   * <pre>
   * Parameters for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return Whether the parameters field is set.
   */
  boolean hasParameters();
  /**
   * <pre>
   * Parameters for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return The parameters.
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.Parameters getParameters();
  /**
   * <pre>
   * Parameters for the RateLimiter component
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.Parameters parameters = 3 [json_name = "parameters"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.ParametersOrBuilder getParametersOrBuilder();

  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 4 [json_name = "dynamicConfigKey"];</code>
   * @return The dynamicConfigKey.
   */
  java.lang.String getDynamicConfigKey();
  /**
   * <pre>
   * Configuration key for DynamicConfig
   * </pre>
   *
   * <code>string dynamic_config_key = 4 [json_name = "dynamicConfigKey"];</code>
   * @return The bytes for dynamicConfigKey.
   */
  com.google.protobuf.ByteString
      getDynamicConfigKeyBytes();

  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   * @return Whether the defaultConfig field is set.
   */
  boolean hasDefaultConfig();
  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   * @return The defaultConfig.
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfig getDefaultConfig();
  /**
   * <pre>
   * Default configuration
   * </pre>
   *
   * <code>.aperture.policy.language.v1.RateLimiter.DynamicConfig default_config = 5 [json_name = "defaultConfig"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.RateLimiter.DynamicConfigOrBuilder getDefaultConfigOrBuilder();
}
