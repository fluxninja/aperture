// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/rpc/v1/rpc.proto

package com.fluxninja.generated.aperture.rpc.v1;

/**
 * Protobuf type {@code aperture.rpc.v1.ClientToServer}
 */
public final class ClientToServer extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.rpc.v1.ClientToServer)
    ClientToServerOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ClientToServer.newBuilder() to construct.
  private ClientToServer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ClientToServer() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ClientToServer();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ClientToServer(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder subBuilder = null;
            if (msgCase_ == 1) {
              subBuilder = ((com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_).toBuilder();
            }
            msg_ =
                input.readMessage(com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_);
              msg_ = subBuilder.buildPartial();
            }
            msgCase_ = 1;
            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.rpc.v1.Response.Builder subBuilder = null;
            if (msgCase_ == 2) {
              subBuilder = ((com.fluxninja.generated.aperture.rpc.v1.Response) msg_).toBuilder();
            }
            msg_ =
                input.readMessage(com.fluxninja.generated.aperture.rpc.v1.Response.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.rpc.v1.Response) msg_);
              msg_ = subBuilder.buildPartial();
            }
            msgCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.rpc.v1.ClientToServer.class, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Builder.class);
  }

  public interface HelloOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.rpc.v1.ClientToServer.Hello)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>uint64 next_id = 2 [json_name = "nextId"];</code>
     * @return The nextId.
     */
    long getNextId();
  }
  /**
   * Protobuf type {@code aperture.rpc.v1.ClientToServer.Hello}
   */
  public static final class Hello extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.rpc.v1.ClientToServer.Hello)
      HelloOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Hello.newBuilder() to construct.
    private Hello(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Hello() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Hello();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Hello(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              nextId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_Hello_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_Hello_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.class, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEXT_ID_FIELD_NUMBER = 2;
    private long nextId_;
    /**
     * <code>uint64 next_id = 2 [json_name = "nextId"];</code>
     * @return The nextId.
     */
    @java.lang.Override
    public long getNextId() {
      return nextId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nextId_ != 0L) {
        output.writeUInt64(2, nextId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nextId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, nextId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello other = (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getNextId()
          != other.getNextId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NEXT_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNextId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.rpc.v1.ClientToServer.Hello}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.rpc.v1.ClientToServer.Hello)
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_Hello_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_Hello_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.class, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        nextId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_Hello_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello build() {
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello buildPartial() {
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello result = new com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello(this);
        result.name_ = name_;
        result.nextId_ = nextId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) {
          return mergeFrom((com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello other) {
        if (other == com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getNextId() != 0L) {
          setNextId(other.getNextId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1 [json_name = "name"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private long nextId_ ;
      /**
       * <code>uint64 next_id = 2 [json_name = "nextId"];</code>
       * @return The nextId.
       */
      @java.lang.Override
      public long getNextId() {
        return nextId_;
      }
      /**
       * <code>uint64 next_id = 2 [json_name = "nextId"];</code>
       * @param value The nextId to set.
       * @return This builder for chaining.
       */
      public Builder setNextId(long value) {
        
        nextId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 next_id = 2 [json_name = "nextId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNextId() {
        
        nextId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.rpc.v1.ClientToServer.Hello)
    }

    // @@protoc_insertion_point(class_scope:aperture.rpc.v1.ClientToServer.Hello)
    private static final com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello();
    }

    public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Hello>
        PARSER = new com.google.protobuf.AbstractParser<Hello>() {
      @java.lang.Override
      public Hello parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hello(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Hello> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Hello> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int msgCase_ = 0;
  private java.lang.Object msg_;
  public enum MsgCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HELLO(1),
    RESPONSE(2),
    MSG_NOT_SET(0);
    private final int value;
    private MsgCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MsgCase valueOf(int value) {
      return forNumber(value);
    }

    public static MsgCase forNumber(int value) {
      switch (value) {
        case 1: return HELLO;
        case 2: return RESPONSE;
        case 0: return MSG_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MsgCase
  getMsgCase() {
    return MsgCase.forNumber(
        msgCase_);
  }

  public static final int HELLO_FIELD_NUMBER = 1;
  /**
   * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
   * @return Whether the hello field is set.
   */
  @java.lang.Override
  public boolean hasHello() {
    return msgCase_ == 1;
  }
  /**
   * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
   * @return The hello.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello getHello() {
    if (msgCase_ == 1) {
       return (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_;
    }
    return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
  }
  /**
   * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder getHelloOrBuilder() {
    if (msgCase_ == 1) {
       return (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_;
    }
    return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
  }

  public static final int RESPONSE_FIELD_NUMBER = 2;
  /**
   * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
   * @return Whether the response field is set.
   */
  @java.lang.Override
  public boolean hasResponse() {
    return msgCase_ == 2;
  }
  /**
   * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
   * @return The response.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.rpc.v1.Response getResponse() {
    if (msgCase_ == 2) {
       return (com.fluxninja.generated.aperture.rpc.v1.Response) msg_;
    }
    return com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
  }
  /**
   * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.rpc.v1.ResponseOrBuilder getResponseOrBuilder() {
    if (msgCase_ == 2) {
       return (com.fluxninja.generated.aperture.rpc.v1.Response) msg_;
    }
    return com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (msgCase_ == 1) {
      output.writeMessage(1, (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_);
    }
    if (msgCase_ == 2) {
      output.writeMessage(2, (com.fluxninja.generated.aperture.rpc.v1.Response) msg_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (msgCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_);
    }
    if (msgCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.fluxninja.generated.aperture.rpc.v1.Response) msg_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.rpc.v1.ClientToServer)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.rpc.v1.ClientToServer other = (com.fluxninja.generated.aperture.rpc.v1.ClientToServer) obj;

    if (!getMsgCase().equals(other.getMsgCase())) return false;
    switch (msgCase_) {
      case 1:
        if (!getHello()
            .equals(other.getHello())) return false;
        break;
      case 2:
        if (!getResponse()
            .equals(other.getResponse())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (msgCase_) {
      case 1:
        hash = (37 * hash) + HELLO_FIELD_NUMBER;
        hash = (53 * hash) + getHello().hashCode();
        break;
      case 2:
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.rpc.v1.ClientToServer prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.rpc.v1.ClientToServer}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.rpc.v1.ClientToServer)
      com.fluxninja.generated.aperture.rpc.v1.ClientToServerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.rpc.v1.ClientToServer.class, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.rpc.v1.ClientToServer.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      msgCase_ = 0;
      msg_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.rpc.v1.RpcProto.internal_static_aperture_rpc_v1_ClientToServer_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer build() {
      com.fluxninja.generated.aperture.rpc.v1.ClientToServer result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer buildPartial() {
      com.fluxninja.generated.aperture.rpc.v1.ClientToServer result = new com.fluxninja.generated.aperture.rpc.v1.ClientToServer(this);
      if (msgCase_ == 1) {
        if (helloBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = helloBuilder_.build();
        }
      }
      if (msgCase_ == 2) {
        if (responseBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = responseBuilder_.build();
        }
      }
      result.msgCase_ = msgCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.rpc.v1.ClientToServer) {
        return mergeFrom((com.fluxninja.generated.aperture.rpc.v1.ClientToServer)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.rpc.v1.ClientToServer other) {
      if (other == com.fluxninja.generated.aperture.rpc.v1.ClientToServer.getDefaultInstance()) return this;
      switch (other.getMsgCase()) {
        case HELLO: {
          mergeHello(other.getHello());
          break;
        }
        case RESPONSE: {
          mergeResponse(other.getResponse());
          break;
        }
        case MSG_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.rpc.v1.ClientToServer parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.rpc.v1.ClientToServer) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public MsgCase
        getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    public Builder clearMsg() {
      msgCase_ = 0;
      msg_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder> helloBuilder_;
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     * @return Whether the hello field is set.
     */
    @java.lang.Override
    public boolean hasHello() {
      return msgCase_ == 1;
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     * @return The hello.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello getHello() {
      if (helloBuilder_ == null) {
        if (msgCase_ == 1) {
          return (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_;
        }
        return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
      } else {
        if (msgCase_ == 1) {
          return helloBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    public Builder setHello(com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello value) {
      if (helloBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        helloBuilder_.setMessage(value);
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    public Builder setHello(
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder builderForValue) {
      if (helloBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        helloBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    public Builder mergeHello(com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello value) {
      if (helloBuilder_ == null) {
        if (msgCase_ == 1 &&
            msg_ != com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance()) {
          msg_ = com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.newBuilder((com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 1) {
          helloBuilder_.mergeFrom(value);
        } else {
          helloBuilder_.setMessage(value);
        }
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    public Builder clearHello() {
      if (helloBuilder_ == null) {
        if (msgCase_ == 1) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 1) {
          msgCase_ = 0;
          msg_ = null;
        }
        helloBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder getHelloBuilder() {
      return getHelloFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder getHelloOrBuilder() {
      if ((msgCase_ == 1) && (helloBuilder_ != null)) {
        return helloBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 1) {
          return (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_;
        }
        return com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.rpc.v1.ClientToServer.Hello hello = 1 [json_name = "hello"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder> 
        getHelloFieldBuilder() {
      if (helloBuilder_ == null) {
        if (!(msgCase_ == 1)) {
          msg_ = com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.getDefaultInstance();
        }
        helloBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello.Builder, com.fluxninja.generated.aperture.rpc.v1.ClientToServer.HelloOrBuilder>(
                (com.fluxninja.generated.aperture.rpc.v1.ClientToServer.Hello) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 1;
      onChanged();;
      return helloBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.rpc.v1.Response, com.fluxninja.generated.aperture.rpc.v1.Response.Builder, com.fluxninja.generated.aperture.rpc.v1.ResponseOrBuilder> responseBuilder_;
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override
    public boolean hasResponse() {
      return msgCase_ == 2;
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     * @return The response.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.Response getResponse() {
      if (responseBuilder_ == null) {
        if (msgCase_ == 2) {
          return (com.fluxninja.generated.aperture.rpc.v1.Response) msg_;
        }
        return com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
      } else {
        if (msgCase_ == 2) {
          return responseBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    public Builder setResponse(com.fluxninja.generated.aperture.rpc.v1.Response value) {
      if (responseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        responseBuilder_.setMessage(value);
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    public Builder setResponse(
        com.fluxninja.generated.aperture.rpc.v1.Response.Builder builderForValue) {
      if (responseBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        responseBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    public Builder mergeResponse(com.fluxninja.generated.aperture.rpc.v1.Response value) {
      if (responseBuilder_ == null) {
        if (msgCase_ == 2 &&
            msg_ != com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance()) {
          msg_ = com.fluxninja.generated.aperture.rpc.v1.Response.newBuilder((com.fluxninja.generated.aperture.rpc.v1.Response) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 2) {
          responseBuilder_.mergeFrom(value);
        } else {
          responseBuilder_.setMessage(value);
        }
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    public Builder clearResponse() {
      if (responseBuilder_ == null) {
        if (msgCase_ == 2) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 2) {
          msgCase_ = 0;
          msg_ = null;
        }
        responseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    public com.fluxninja.generated.aperture.rpc.v1.Response.Builder getResponseBuilder() {
      return getResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.rpc.v1.ResponseOrBuilder getResponseOrBuilder() {
      if ((msgCase_ == 2) && (responseBuilder_ != null)) {
        return responseBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 2) {
          return (com.fluxninja.generated.aperture.rpc.v1.Response) msg_;
        }
        return com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
      }
    }
    /**
     * <code>.aperture.rpc.v1.Response response = 2 [json_name = "response"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.rpc.v1.Response, com.fluxninja.generated.aperture.rpc.v1.Response.Builder, com.fluxninja.generated.aperture.rpc.v1.ResponseOrBuilder> 
        getResponseFieldBuilder() {
      if (responseBuilder_ == null) {
        if (!(msgCase_ == 2)) {
          msg_ = com.fluxninja.generated.aperture.rpc.v1.Response.getDefaultInstance();
        }
        responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.rpc.v1.Response, com.fluxninja.generated.aperture.rpc.v1.Response.Builder, com.fluxninja.generated.aperture.rpc.v1.ResponseOrBuilder>(
                (com.fluxninja.generated.aperture.rpc.v1.Response) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 2;
      onChanged();;
      return responseBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.rpc.v1.ClientToServer)
  }

  // @@protoc_insertion_point(class_scope:aperture.rpc.v1.ClientToServer)
  private static final com.fluxninja.generated.aperture.rpc.v1.ClientToServer DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.rpc.v1.ClientToServer();
  }

  public static com.fluxninja.generated.aperture.rpc.v1.ClientToServer getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ClientToServer>
      PARSER = new com.google.protobuf.AbstractParser<ClientToServer>() {
    @java.lang.Override
    public ClientToServer parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ClientToServer(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ClientToServer> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ClientToServer> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.rpc.v1.ClientToServer getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

