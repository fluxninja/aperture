// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/ports.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface InPortOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.InPort)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the incoming Signal on the InPort.
   * </pre>
   *
   * <code>string signal_name = 1 [json_name = "signalName"];</code>
   * @return Whether the signalName field is set.
   */
  boolean hasSignalName();
  /**
   * <pre>
   * Name of the incoming Signal on the InPort.
   * </pre>
   *
   * <code>string signal_name = 1 [json_name = "signalName"];</code>
   * @return The signalName.
   */
  java.lang.String getSignalName();
  /**
   * <pre>
   * Name of the incoming Signal on the InPort.
   * </pre>
   *
   * <code>string signal_name = 1 [json_name = "signalName"];</code>
   * @return The bytes for signalName.
   */
  com.google.protobuf.ByteString
      getSignalNameBytes();

  /**
   * <pre>
   * Constant value to be used for this InPort instead of a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ConstantSignal constant_signal = 2 [json_name = "constantSignal"];</code>
   * @return Whether the constantSignal field is set.
   */
  boolean hasConstantSignal();
  /**
   * <pre>
   * Constant value to be used for this InPort instead of a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ConstantSignal constant_signal = 2 [json_name = "constantSignal"];</code>
   * @return The constantSignal.
   */
  com.fluxninja.generated.aperture.policy.language.v1.ConstantSignal getConstantSignal();
  /**
   * <pre>
   * Constant value to be used for this InPort instead of a signal.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ConstantSignal constant_signal = 2 [json_name = "constantSignal"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.ConstantSignalOrBuilder getConstantSignalOrBuilder();

  public com.fluxninja.generated.aperture.policy.language.v1.InPort.ValueCase getValueCase();
}
