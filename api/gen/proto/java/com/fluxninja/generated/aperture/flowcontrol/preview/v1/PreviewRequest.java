// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/flowcontrol/preview/v1/preview.proto

package com.fluxninja.generated.aperture.flowcontrol.preview.v1;

/**
 * Protobuf type {@code aperture.flowcontrol.preview.v1.PreviewRequest}
 */
public final class PreviewRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.flowcontrol.preview.v1.PreviewRequest)
    PreviewRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PreviewRequest.newBuilder() to construct.
  private PreviewRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PreviewRequest() {
    controlPoint_ = "";
    service_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PreviewRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PreviewRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            samples_ = input.readInt64();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            controlPoint_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            service_ = s;
            break;
          }
          case 34: {
            com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder subBuilder = null;
            if (labelMatcher_ != null) {
              subBuilder = labelMatcher_.toBuilder();
            }
            labelMatcher_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(labelMatcher_);
              labelMatcher_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewProto.internal_static_aperture_flowcontrol_preview_v1_PreviewRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewProto.internal_static_aperture_flowcontrol_preview_v1_PreviewRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.class, com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.Builder.class);
  }

  public static final int SAMPLES_FIELD_NUMBER = 1;
  private long samples_;
  /**
   * <pre>
   * Number of samples to collect.
   * </pre>
   *
   * <code>int64 samples = 1 [json_name = "samples", (.validate.rules) = { ... }</code>
   * @return The samples.
   */
  @java.lang.Override
  public long getSamples() {
    return samples_;
  }

  public static final int CONTROL_POINT_FIELD_NUMBER = 2;
  private volatile java.lang.Object controlPoint_;
  /**
   * <pre>
   * Control point to preview.
   * </pre>
   *
   * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
   * @return The controlPoint.
   */
  @java.lang.Override
  public java.lang.String getControlPoint() {
    java.lang.Object ref = controlPoint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      controlPoint_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Control point to preview.
   * </pre>
   *
   * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
   * @return The bytes for controlPoint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getControlPointBytes() {
    java.lang.Object ref = controlPoint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      controlPoint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_FIELD_NUMBER = 3;
  private volatile java.lang.Object service_;
  /**
   * <pre>
   * Service to preview.
   * </pre>
   *
   * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
   * @return The service.
   */
  @java.lang.Override
  public java.lang.String getService() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      service_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Service to preview.
   * </pre>
   *
   * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
   * @return The bytes for service.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceBytes() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      service_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LABEL_MATCHER_FIELD_NUMBER = 4;
  private com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher labelMatcher_;
  /**
   * <pre>
   * Flow labels to match. Optional parameter for advanced filtering.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
   * @return Whether the labelMatcher field is set.
   */
  @java.lang.Override
  public boolean hasLabelMatcher() {
    return labelMatcher_ != null;
  }
  /**
   * <pre>
   * Flow labels to match. Optional parameter for advanced filtering.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
   * @return The labelMatcher.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher getLabelMatcher() {
    return labelMatcher_ == null ? com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.getDefaultInstance() : labelMatcher_;
  }
  /**
   * <pre>
   * Flow labels to match. Optional parameter for advanced filtering.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder getLabelMatcherOrBuilder() {
    return getLabelMatcher();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (samples_ != 0L) {
      output.writeInt64(1, samples_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(controlPoint_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controlPoint_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
    }
    if (labelMatcher_ != null) {
      output.writeMessage(4, getLabelMatcher());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (samples_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, samples_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(controlPoint_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controlPoint_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
    }
    if (labelMatcher_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getLabelMatcher());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest other = (com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest) obj;

    if (getSamples()
        != other.getSamples()) return false;
    if (!getControlPoint()
        .equals(other.getControlPoint())) return false;
    if (!getService()
        .equals(other.getService())) return false;
    if (hasLabelMatcher() != other.hasLabelMatcher()) return false;
    if (hasLabelMatcher()) {
      if (!getLabelMatcher()
          .equals(other.getLabelMatcher())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSamples());
    hash = (37 * hash) + CONTROL_POINT_FIELD_NUMBER;
    hash = (53 * hash) + getControlPoint().hashCode();
    hash = (37 * hash) + SERVICE_FIELD_NUMBER;
    hash = (53 * hash) + getService().hashCode();
    if (hasLabelMatcher()) {
      hash = (37 * hash) + LABEL_MATCHER_FIELD_NUMBER;
      hash = (53 * hash) + getLabelMatcher().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.flowcontrol.preview.v1.PreviewRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.flowcontrol.preview.v1.PreviewRequest)
      com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewProto.internal_static_aperture_flowcontrol_preview_v1_PreviewRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewProto.internal_static_aperture_flowcontrol_preview_v1_PreviewRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.class, com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      samples_ = 0L;

      controlPoint_ = "";

      service_ = "";

      if (labelMatcherBuilder_ == null) {
        labelMatcher_ = null;
      } else {
        labelMatcher_ = null;
        labelMatcherBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewProto.internal_static_aperture_flowcontrol_preview_v1_PreviewRequest_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest build() {
      com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest buildPartial() {
      com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest result = new com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest(this);
      result.samples_ = samples_;
      result.controlPoint_ = controlPoint_;
      result.service_ = service_;
      if (labelMatcherBuilder_ == null) {
        result.labelMatcher_ = labelMatcher_;
      } else {
        result.labelMatcher_ = labelMatcherBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest) {
        return mergeFrom((com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest other) {
      if (other == com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest.getDefaultInstance()) return this;
      if (other.getSamples() != 0L) {
        setSamples(other.getSamples());
      }
      if (!other.getControlPoint().isEmpty()) {
        controlPoint_ = other.controlPoint_;
        onChanged();
      }
      if (!other.getService().isEmpty()) {
        service_ = other.service_;
        onChanged();
      }
      if (other.hasLabelMatcher()) {
        mergeLabelMatcher(other.getLabelMatcher());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long samples_ ;
    /**
     * <pre>
     * Number of samples to collect.
     * </pre>
     *
     * <code>int64 samples = 1 [json_name = "samples", (.validate.rules) = { ... }</code>
     * @return The samples.
     */
    @java.lang.Override
    public long getSamples() {
      return samples_;
    }
    /**
     * <pre>
     * Number of samples to collect.
     * </pre>
     *
     * <code>int64 samples = 1 [json_name = "samples", (.validate.rules) = { ... }</code>
     * @param value The samples to set.
     * @return This builder for chaining.
     */
    public Builder setSamples(long value) {
      
      samples_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of samples to collect.
     * </pre>
     *
     * <code>int64 samples = 1 [json_name = "samples", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearSamples() {
      
      samples_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object controlPoint_ = "";
    /**
     * <pre>
     * Control point to preview.
     * </pre>
     *
     * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
     * @return The controlPoint.
     */
    public java.lang.String getControlPoint() {
      java.lang.Object ref = controlPoint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        controlPoint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Control point to preview.
     * </pre>
     *
     * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
     * @return The bytes for controlPoint.
     */
    public com.google.protobuf.ByteString
        getControlPointBytes() {
      java.lang.Object ref = controlPoint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controlPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Control point to preview.
     * </pre>
     *
     * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
     * @param value The controlPoint to set.
     * @return This builder for chaining.
     */
    public Builder setControlPoint(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      controlPoint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control point to preview.
     * </pre>
     *
     * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearControlPoint() {
      
      controlPoint_ = getDefaultInstance().getControlPoint();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control point to preview.
     * </pre>
     *
     * <code>string control_point = 2 [json_name = "controlPoint", (.validate.rules) = { ... }</code>
     * @param value The bytes for controlPoint to set.
     * @return This builder for chaining.
     */
    public Builder setControlPointBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      controlPoint_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object service_ = "";
    /**
     * <pre>
     * Service to preview.
     * </pre>
     *
     * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
     * @return The service.
     */
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Service to preview.
     * </pre>
     *
     * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
     * @return The bytes for service.
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Service to preview.
     * </pre>
     *
     * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
     * @param value The service to set.
     * @return This builder for chaining.
     */
    public Builder setService(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      service_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service to preview.
     * </pre>
     *
     * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearService() {
      
      service_ = getDefaultInstance().getService();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service to preview.
     * </pre>
     *
     * <code>string service = 3 [json_name = "service", (.validate.rules) = { ... }</code>
     * @param value The bytes for service to set.
     * @return This builder for chaining.
     */
    public Builder setServiceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      service_ = value;
      onChanged();
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher labelMatcher_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder> labelMatcherBuilder_;
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     * @return Whether the labelMatcher field is set.
     */
    public boolean hasLabelMatcher() {
      return labelMatcherBuilder_ != null || labelMatcher_ != null;
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     * @return The labelMatcher.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher getLabelMatcher() {
      if (labelMatcherBuilder_ == null) {
        return labelMatcher_ == null ? com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.getDefaultInstance() : labelMatcher_;
      } else {
        return labelMatcherBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public Builder setLabelMatcher(com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher value) {
      if (labelMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        labelMatcher_ = value;
        onChanged();
      } else {
        labelMatcherBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public Builder setLabelMatcher(
        com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder builderForValue) {
      if (labelMatcherBuilder_ == null) {
        labelMatcher_ = builderForValue.build();
        onChanged();
      } else {
        labelMatcherBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public Builder mergeLabelMatcher(com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher value) {
      if (labelMatcherBuilder_ == null) {
        if (labelMatcher_ != null) {
          labelMatcher_ =
            com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.newBuilder(labelMatcher_).mergeFrom(value).buildPartial();
        } else {
          labelMatcher_ = value;
        }
        onChanged();
      } else {
        labelMatcherBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public Builder clearLabelMatcher() {
      if (labelMatcherBuilder_ == null) {
        labelMatcher_ = null;
        onChanged();
      } else {
        labelMatcher_ = null;
        labelMatcherBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder getLabelMatcherBuilder() {
      
      onChanged();
      return getLabelMatcherFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder getLabelMatcherOrBuilder() {
      if (labelMatcherBuilder_ != null) {
        return labelMatcherBuilder_.getMessageOrBuilder();
      } else {
        return labelMatcher_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.getDefaultInstance() : labelMatcher_;
      }
    }
    /**
     * <pre>
     * Flow labels to match. Optional parameter for advanced filtering.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 4 [json_name = "labelMatcher"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder> 
        getLabelMatcherFieldBuilder() {
      if (labelMatcherBuilder_ == null) {
        labelMatcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher.Builder, com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder>(
                getLabelMatcher(),
                getParentForChildren(),
                isClean());
        labelMatcher_ = null;
      }
      return labelMatcherBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.flowcontrol.preview.v1.PreviewRequest)
  }

  // @@protoc_insertion_point(class_scope:aperture.flowcontrol.preview.v1.PreviewRequest)
  private static final com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest();
  }

  public static com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PreviewRequest>
      PARSER = new com.google.protobuf.AbstractParser<PreviewRequest>() {
    @java.lang.Override
    public PreviewRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PreviewRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PreviewRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PreviewRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.flowcontrol.preview.v1.PreviewRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

