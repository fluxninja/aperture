// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/flowcontrol.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface ServiceSelectorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.ServiceSelector)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Which [agent-group](/concepts/flow-control/flow-selector.md#agent-group) this
   * selector applies to.
   * :::info
   * Agent Groups are used to scope policies to a subset of agents connected to the same controller.
   * This is especially useful in the Kubernetes sidecar installation because service discovery is switched off in that mode.
   * The agents within an agent group form a peer to peer cluster and constantly share state.
   * :::
   * </pre>
   *
   * <code>string agent_group = 1 [json_name = "agentGroup"];</code>
   * @return The agentGroup.
   */
  java.lang.String getAgentGroup();
  /**
   * <pre>
   * Which [agent-group](/concepts/flow-control/flow-selector.md#agent-group) this
   * selector applies to.
   * :::info
   * Agent Groups are used to scope policies to a subset of agents connected to the same controller.
   * This is especially useful in the Kubernetes sidecar installation because service discovery is switched off in that mode.
   * The agents within an agent group form a peer to peer cluster and constantly share state.
   * :::
   * </pre>
   *
   * <code>string agent_group = 1 [json_name = "agentGroup"];</code>
   * @return The bytes for agentGroup.
   */
  com.google.protobuf.ByteString
      getAgentGroupBytes();

  /**
   * <pre>
   * The Fully Qualified Domain Name of the
   * [service](/concepts/flow-control/flow-selector.md) to select.
   * In Kubernetes, this is the FQDN of the Service object.
   * :::info
   * `any` matches all services.
   * :::
   * :::info
   * In the Kubernetes sidecar installation mode, service discovery is switched off by default.
   * In order to scope policies to services, the `service` should be set to `any` and instead, `agent_group` name should be used.
   * :::
   * :::info
   * An entity (e.g. Kubernetes pod) may belong to multiple services.
   * :::
   * </pre>
   *
   * <code>string service = 2 [json_name = "service"];</code>
   * @return The service.
   */
  java.lang.String getService();
  /**
   * <pre>
   * The Fully Qualified Domain Name of the
   * [service](/concepts/flow-control/flow-selector.md) to select.
   * In Kubernetes, this is the FQDN of the Service object.
   * :::info
   * `any` matches all services.
   * :::
   * :::info
   * In the Kubernetes sidecar installation mode, service discovery is switched off by default.
   * In order to scope policies to services, the `service` should be set to `any` and instead, `agent_group` name should be used.
   * :::
   * :::info
   * An entity (e.g. Kubernetes pod) may belong to multiple services.
   * :::
   * </pre>
   *
   * <code>string service = 2 [json_name = "service"];</code>
   * @return The bytes for service.
   */
  com.google.protobuf.ByteString
      getServiceBytes();
}
