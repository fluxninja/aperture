// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/autoscale.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.AutoScaler}
 */
public final class AutoScaler extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler)
    AutoScalerOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AutoScaler.newBuilder() to construct.
  private AutoScaler(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AutoScaler() {
    scaleOutControllers_ = java.util.Collections.emptyList();
    scaleInControllers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AutoScaler();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AutoScaler(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder subBuilder = null;
            if (outPorts_ != null) {
              subBuilder = outPorts_.toBuilder();
            }
            outPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(outPorts_);
              outPorts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder subBuilder = null;
            if (scaler_ != null) {
              subBuilder = scaler_.toBuilder();
            }
            scaler_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaler_);
              scaler_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            minScale_ = input.readInt64();
            break;
          }
          case 32: {

            maxScale_ = input.readInt64();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              scaleOutControllers_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController>();
              mutable_bitField0_ |= 0x00000001;
            }
            scaleOutControllers_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.parser(), extensionRegistry));
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              scaleInControllers_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController>();
              mutable_bitField0_ |= 0x00000002;
            }
            scaleInControllers_.add(
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.parser(), extensionRegistry));
            break;
          }
          case 57: {

            maxScaleInPercentage_ = input.readDouble();
            break;
          }
          case 65: {

            maxScaleOutPercentage_ = input.readDouble();
            break;
          }
          case 74: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (scaleOutCooldown_ != null) {
              subBuilder = scaleOutCooldown_.toBuilder();
            }
            scaleOutCooldown_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleOutCooldown_);
              scaleOutCooldown_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (scaleInCooldown_ != null) {
              subBuilder = scaleInCooldown_.toBuilder();
            }
            scaleInCooldown_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleInCooldown_);
              scaleInCooldown_ = subBuilder.buildPartial();
            }

            break;
          }
          case 89: {

            cooldownOverridePercentage_ = input.readDouble();
            break;
          }
          case 98: {
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder subBuilder = null;
            if (scaleOutAlerterParameters_ != null) {
              subBuilder = scaleOutAlerterParameters_.toBuilder();
            }
            scaleOutAlerterParameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleOutAlerterParameters_);
              scaleOutAlerterParameters_ = subBuilder.buildPartial();
            }

            break;
          }
          case 106: {
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder subBuilder = null;
            if (scaleInAlerterParameters_ != null) {
              subBuilder = scaleInAlerterParameters_.toBuilder();
            }
            scaleInAlerterParameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scaleInAlerterParameters_);
              scaleInAlerterParameters_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        scaleOutControllers_ = java.util.Collections.unmodifiableList(scaleOutControllers_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        scaleInControllers_ = java.util.Collections.unmodifiableList(scaleInControllers_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder.class);
  }

  public interface IncreasingGradientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.IncreasingGradient)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    boolean hasInPorts();
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getInPorts();
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder getInPortsOrBuilder();

    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return Whether the parameters field is set.
     */
    boolean hasParameters();
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return The parameters.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getParameters();
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder getParametersOrBuilder();
  }
  /**
   * <pre>
   * Increasing Gradient defines a controller for scaling out based on Gradient Controller.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient}
   */
  public static final class IncreasingGradient extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient)
      IncreasingGradientOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IncreasingGradient.newBuilder() to construct.
    private IncreasingGradient(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IncreasingGradient() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IncreasingGradient();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IncreasingGradient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder subBuilder = null;
              if (inPorts_ != null) {
                subBuilder = inPorts_.toBuilder();
              }
              inPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inPorts_);
                inPorts_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder subBuilder = null;
              if (parameters_ != null) {
                subBuilder = parameters_.toBuilder();
              }
              parameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parameters_);
                parameters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder.class);
    }

    public interface ParametersOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * &#64;gotags: default:"1.0"
       * </pre>
       *
       * <code>double slope = 1 [json_name = "slope"];</code>
       * @return The slope.
       */
      double getSlope();

      /**
       * <pre>
       * &#64;gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
       * </pre>
       *
       * <code>double max_gradient = 3 [json_name = "maxGradient"];</code>
       * @return The maxGradient.
       */
      double getMaxGradient();
    }
    /**
     * <pre>
     * This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters}
     */
    public static final class Parameters extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)
        ParametersOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Parameters.newBuilder() to construct.
      private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Parameters() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Parameters();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Parameters(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                slope_ = input.readDouble();
                break;
              }
              case 25: {

                maxGradient_ = input.readDouble();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Parameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder.class);
      }

      public static final int SLOPE_FIELD_NUMBER = 1;
      private double slope_;
      /**
       * <pre>
       * &#64;gotags: default:"1.0"
       * </pre>
       *
       * <code>double slope = 1 [json_name = "slope"];</code>
       * @return The slope.
       */
      @java.lang.Override
      public double getSlope() {
        return slope_;
      }

      public static final int MAX_GRADIENT_FIELD_NUMBER = 3;
      private double maxGradient_;
      /**
       * <pre>
       * &#64;gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
       * </pre>
       *
       * <code>double max_gradient = 3 [json_name = "maxGradient"];</code>
       * @return The maxGradient.
       */
      @java.lang.Override
      public double getMaxGradient() {
        return maxGradient_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(slope_) != 0) {
          output.writeDouble(1, slope_);
        }
        if (java.lang.Double.doubleToRawLongBits(maxGradient_) != 0) {
          output.writeDouble(3, maxGradient_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(slope_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, slope_);
        }
        if (java.lang.Double.doubleToRawLongBits(maxGradient_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, maxGradient_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters) obj;

        if (java.lang.Double.doubleToLongBits(getSlope())
            != java.lang.Double.doubleToLongBits(
                other.getSlope())) return false;
        if (java.lang.Double.doubleToLongBits(getMaxGradient())
            != java.lang.Double.doubleToLongBits(
                other.getMaxGradient())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SLOPE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSlope()));
        hash = (37 * hash) + MAX_GRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxGradient()));
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Parameters_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Parameters_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          slope_ = 0D;

          maxGradient_ = 0D;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Parameters_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters(this);
          result.slope_ = slope_;
          result.maxGradient_ = maxGradient_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.getDefaultInstance()) return this;
          if (other.getSlope() != 0D) {
            setSlope(other.getSlope());
          }
          if (other.getMaxGradient() != 0D) {
            setMaxGradient(other.getMaxGradient());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private double slope_ ;
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @return The slope.
         */
        @java.lang.Override
        public double getSlope() {
          return slope_;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @param value The slope to set.
         * @return This builder for chaining.
         */
        public Builder setSlope(double value) {
          
          slope_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSlope() {
          
          slope_ = 0D;
          onChanged();
          return this;
        }

        private double maxGradient_ ;
        /**
         * <pre>
         * &#64;gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
         * </pre>
         *
         * <code>double max_gradient = 3 [json_name = "maxGradient"];</code>
         * @return The maxGradient.
         */
        @java.lang.Override
        public double getMaxGradient() {
          return maxGradient_;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
         * </pre>
         *
         * <code>double max_gradient = 3 [json_name = "maxGradient"];</code>
         * @param value The maxGradient to set.
         * @return This builder for chaining.
         */
        public Builder setMaxGradient(double value) {
          
          maxGradient_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
         * </pre>
         *
         * <code>double max_gradient = 3 [json_name = "maxGradient"];</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxGradient() {
          
          maxGradient_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Parameters>
          PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
        @java.lang.Override
        public Parameters parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Parameters> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Parameters> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return Whether the signal field is set.
       */
      boolean hasSignal();
      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return The signal.
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal();
      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder();

      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return Whether the setpoint field is set.
       */
      boolean hasSetpoint();
      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return The setpoint.
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint();
      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder();
    }
    /**
     * <pre>
     * Inputs for Gradient.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins}
     */
    public static final class Ins extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)
        InsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ins.newBuilder() to construct.
      private Ins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ins() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Ins();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Ins(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
                if (signal_ != null) {
                  subBuilder = signal_.toBuilder();
                }
                signal_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(signal_);
                  signal_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
                if (setpoint_ != null) {
                  subBuilder = setpoint_.toBuilder();
                }
                setpoint_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(setpoint_);
                  setpoint_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Ins_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Ins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder.class);
      }

      public static final int SIGNAL_FIELD_NUMBER = 1;
      private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return Whether the signal field is set.
       */
      @java.lang.Override
      public boolean hasSignal() {
        return signal_ != null;
      }
      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return The signal.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
        return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
      }
      /**
       * <pre>
       * The signal to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
        return getSignal();
      }

      public static final int SETPOINT_FIELD_NUMBER = 2;
      private com.fluxninja.generated.aperture.policy.language.v1.InPort setpoint_;
      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return Whether the setpoint field is set.
       */
      @java.lang.Override
      public boolean hasSetpoint() {
        return setpoint_ != null;
      }
      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return The setpoint.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint() {
        return setpoint_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
      }
      /**
       * <pre>
       * The setpoint to use for scale-out.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder() {
        return getSetpoint();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (signal_ != null) {
          output.writeMessage(1, getSignal());
        }
        if (setpoint_ != null) {
          output.writeMessage(2, getSetpoint());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (signal_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSignal());
        }
        if (setpoint_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSetpoint());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins) obj;

        if (hasSignal() != other.hasSignal()) return false;
        if (hasSignal()) {
          if (!getSignal()
              .equals(other.getSignal())) return false;
        }
        if (hasSetpoint() != other.hasSetpoint()) return false;
        if (hasSetpoint()) {
          if (!getSetpoint()
              .equals(other.getSetpoint())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSignal()) {
          hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
          hash = (53 * hash) + getSignal().hashCode();
        }
        if (hasSetpoint()) {
          hash = (37 * hash) + SETPOINT_FIELD_NUMBER;
          hash = (53 * hash) + getSetpoint().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Inputs for Gradient.
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Ins_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Ins_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (signalBuilder_ == null) {
            signal_ = null;
          } else {
            signal_ = null;
            signalBuilder_ = null;
          }
          if (setpointBuilder_ == null) {
            setpoint_ = null;
          } else {
            setpoint_ = null;
            setpointBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_Ins_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins(this);
          if (signalBuilder_ == null) {
            result.signal_ = signal_;
          } else {
            result.signal_ = signalBuilder_.build();
          }
          if (setpointBuilder_ == null) {
            result.setpoint_ = setpoint_;
          } else {
            result.setpoint_ = setpointBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.getDefaultInstance()) return this;
          if (other.hasSignal()) {
            mergeSignal(other.getSignal());
          }
          if (other.hasSetpoint()) {
            mergeSetpoint(other.getSetpoint());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> signalBuilder_;
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         * @return Whether the signal field is set.
         */
        public boolean hasSignal() {
          return signalBuilder_ != null || signal_ != null;
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         * @return The signal.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
          if (signalBuilder_ == null) {
            return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
          } else {
            return signalBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder setSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (signalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            signal_ = value;
            onChanged();
          } else {
            signalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder setSignal(
            com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
          if (signalBuilder_ == null) {
            signal_ = builderForValue.build();
            onChanged();
          } else {
            signalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder mergeSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (signalBuilder_ == null) {
            if (signal_ != null) {
              signal_ =
                com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(signal_).mergeFrom(value).buildPartial();
            } else {
              signal_ = value;
            }
            onChanged();
          } else {
            signalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder clearSignal() {
          if (signalBuilder_ == null) {
            signal_ = null;
            onChanged();
          } else {
            signal_ = null;
            signalBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getSignalBuilder() {
          
          onChanged();
          return getSignalFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
          if (signalBuilder_ != null) {
            return signalBuilder_.getMessageOrBuilder();
          } else {
            return signal_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
          }
        }
        /**
         * <pre>
         * The signal to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
            getSignalFieldBuilder() {
          if (signalBuilder_ == null) {
            signalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                    getSignal(),
                    getParentForChildren(),
                    isClean());
            signal_ = null;
          }
          return signalBuilder_;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.InPort setpoint_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> setpointBuilder_;
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         * @return Whether the setpoint field is set.
         */
        public boolean hasSetpoint() {
          return setpointBuilder_ != null || setpoint_ != null;
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         * @return The setpoint.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint() {
          if (setpointBuilder_ == null) {
            return setpoint_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
          } else {
            return setpointBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder setSetpoint(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (setpointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            setpoint_ = value;
            onChanged();
          } else {
            setpointBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder setSetpoint(
            com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
          if (setpointBuilder_ == null) {
            setpoint_ = builderForValue.build();
            onChanged();
          } else {
            setpointBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder mergeSetpoint(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (setpointBuilder_ == null) {
            if (setpoint_ != null) {
              setpoint_ =
                com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(setpoint_).mergeFrom(value).buildPartial();
            } else {
              setpoint_ = value;
            }
            onChanged();
          } else {
            setpointBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder clearSetpoint() {
          if (setpointBuilder_ == null) {
            setpoint_ = null;
            onChanged();
          } else {
            setpoint_ = null;
            setpointBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getSetpointBuilder() {
          
          onChanged();
          return getSetpointFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder() {
          if (setpointBuilder_ != null) {
            return setpointBuilder_.getMessageOrBuilder();
          } else {
            return setpoint_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
          }
        }
        /**
         * <pre>
         * The setpoint to use for scale-out.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
            getSetpointFieldBuilder() {
          if (setpointBuilder_ == null) {
            setpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                    getSetpoint(),
                    getParentForChildren(),
                    isClean());
            setpoint_ = null;
          }
          return setpointBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ins>
          PARSER = new com.google.protobuf.AbstractParser<Ins>() {
        @java.lang.Override
        public Ins parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ins(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Ins> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ins> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int IN_PORTS_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins inPorts_;
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    @java.lang.Override
    public boolean hasInPorts() {
      return inPorts_ != null;
    }
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getInPorts() {
      return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.getDefaultInstance() : inPorts_;
    }
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder getInPortsOrBuilder() {
      return getInPorts();
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters_;
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return Whether the parameters field is set.
     */
    @java.lang.Override
    public boolean hasParameters() {
      return parameters_ != null;
    }
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return The parameters.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getParameters() {
      return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.getDefaultInstance() : parameters_;
    }
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = 1 (cannot be changed)
     * * max_gradient = +Inf (must be greater than 1)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder getParametersOrBuilder() {
      return getParameters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (inPorts_ != null) {
        output.writeMessage(1, getInPorts());
      }
      if (parameters_ != null) {
        output.writeMessage(2, getParameters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (inPorts_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInPorts());
      }
      if (parameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParameters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) obj;

      if (hasInPorts() != other.hasInPorts()) return false;
      if (hasInPorts()) {
        if (!getInPorts()
            .equals(other.getInPorts())) return false;
      }
      if (hasParameters() != other.hasParameters()) return false;
      if (hasParameters()) {
        if (!getParameters()
            .equals(other.getParameters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInPorts()) {
        hash = (37 * hash) + IN_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getInPorts().hashCode();
      }
      if (hasParameters()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParameters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Increasing Gradient defines a controller for scaling out based on Gradient Controller.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.IncreasingGradient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.IncreasingGradient)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }
        if (parametersBuilder_ == null) {
          parameters_ = null;
        } else {
          parameters_ = null;
          parametersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_IncreasingGradient_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient(this);
        if (inPortsBuilder_ == null) {
          result.inPorts_ = inPorts_;
        } else {
          result.inPorts_ = inPortsBuilder_.build();
        }
        if (parametersBuilder_ == null) {
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance()) return this;
        if (other.hasInPorts()) {
          mergeInPorts(other.getInPorts());
        }
        if (other.hasParameters()) {
          mergeParameters(other.getParameters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins inPorts_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder> inPortsBuilder_;
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return Whether the inPorts field is set.
       */
      public boolean hasInPorts() {
        return inPortsBuilder_ != null || inPorts_ != null;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return The inPorts.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins getInPorts() {
        if (inPortsBuilder_ == null) {
          return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.getDefaultInstance() : inPorts_;
        } else {
          return inPortsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins value) {
        if (inPortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inPorts_ = value;
          onChanged();
        } else {
          inPortsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder builderForValue) {
        if (inPortsBuilder_ == null) {
          inPorts_ = builderForValue.build();
          onChanged();
        } else {
          inPortsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder mergeInPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins value) {
        if (inPortsBuilder_ == null) {
          if (inPorts_ != null) {
            inPorts_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.newBuilder(inPorts_).mergeFrom(value).buildPartial();
          } else {
            inPorts_ = value;
          }
          onChanged();
        } else {
          inPortsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder clearInPorts() {
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
          onChanged();
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder getInPortsBuilder() {
        
        onChanged();
        return getInPortsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder getInPortsOrBuilder() {
        if (inPortsBuilder_ != null) {
          return inPortsBuilder_.getMessageOrBuilder();
        } else {
          return inPorts_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.getDefaultInstance() : inPorts_;
        }
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder> 
          getInPortsFieldBuilder() {
        if (inPortsBuilder_ == null) {
          inPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.InsOrBuilder>(
                  getInPorts(),
                  getParentForChildren(),
                  isClean());
          inPorts_ = null;
        }
        return inPortsBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder> parametersBuilder_;
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       * @return Whether the parameters field is set.
       */
      public boolean hasParameters() {
        return parametersBuilder_ != null || parameters_ != null;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       * @return The parameters.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters getParameters() {
        if (parametersBuilder_ == null) {
          return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.getDefaultInstance() : parameters_;
        } else {
          return parametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder setParameters(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameters_ = value;
          onChanged();
        } else {
          parametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder setParameters(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          parameters_ = builderForValue.build();
          onChanged();
        } else {
          parametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder mergeParameters(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters value) {
        if (parametersBuilder_ == null) {
          if (parameters_ != null) {
            parameters_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.newBuilder(parameters_).mergeFrom(value).buildPartial();
          } else {
            parameters_ = value;
          }
          onChanged();
        } else {
          parametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = null;
          onChanged();
        } else {
          parameters_ = null;
          parametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder getParametersBuilder() {
        
        onChanged();
        return getParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder getParametersOrBuilder() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilder();
        } else {
          return parameters_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.getDefaultInstance() : parameters_;
        }
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = 1 (cannot be changed)
       * * max_gradient = +Inf (must be greater than 1)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.ParametersOrBuilder>(
                  getParameters(),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.IncreasingGradient)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IncreasingGradient>
        PARSER = new com.google.protobuf.AbstractParser<IncreasingGradient>() {
      @java.lang.Override
      public IncreasingGradient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IncreasingGradient(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IncreasingGradient> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IncreasingGradient> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecreasingGradientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.DecreasingGradient)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    boolean hasInPorts();
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getInPorts();
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder getInPortsOrBuilder();

    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return Whether the parameters field is set.
     */
    boolean hasParameters();
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return The parameters.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getParameters();
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder getParametersOrBuilder();
  }
  /**
   * <pre>
   * Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient}
   */
  public static final class DecreasingGradient extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient)
      DecreasingGradientOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DecreasingGradient.newBuilder() to construct.
    private DecreasingGradient(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecreasingGradient() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DecreasingGradient();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DecreasingGradient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder subBuilder = null;
              if (inPorts_ != null) {
                subBuilder = inPorts_.toBuilder();
              }
              inPorts_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inPorts_);
                inPorts_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder subBuilder = null;
              if (parameters_ != null) {
                subBuilder = parameters_.toBuilder();
              }
              parameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parameters_);
                parameters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder.class);
    }

    public interface ParametersOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * &#64;gotags: default:"1.0"
       * </pre>
       *
       * <code>double slope = 1 [json_name = "slope"];</code>
       * @return The slope.
       */
      double getSlope();

      /**
       * <pre>
       * &#64;gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
       * </pre>
       *
       * <code>double min_gradient = 2 [json_name = "minGradient"];</code>
       * @return The minGradient.
       */
      double getMinGradient();
    }
    /**
     * <pre>
     * This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters}
     */
    public static final class Parameters extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)
        ParametersOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Parameters.newBuilder() to construct.
      private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Parameters() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Parameters();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Parameters(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                slope_ = input.readDouble();
                break;
              }
              case 17: {

                minGradient_ = input.readDouble();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Parameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder.class);
      }

      public static final int SLOPE_FIELD_NUMBER = 1;
      private double slope_;
      /**
       * <pre>
       * &#64;gotags: default:"1.0"
       * </pre>
       *
       * <code>double slope = 1 [json_name = "slope"];</code>
       * @return The slope.
       */
      @java.lang.Override
      public double getSlope() {
        return slope_;
      }

      public static final int MIN_GRADIENT_FIELD_NUMBER = 2;
      private double minGradient_;
      /**
       * <pre>
       * &#64;gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
       * </pre>
       *
       * <code>double min_gradient = 2 [json_name = "minGradient"];</code>
       * @return The minGradient.
       */
      @java.lang.Override
      public double getMinGradient() {
        return minGradient_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(slope_) != 0) {
          output.writeDouble(1, slope_);
        }
        if (java.lang.Double.doubleToRawLongBits(minGradient_) != 0) {
          output.writeDouble(2, minGradient_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(slope_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, slope_);
        }
        if (java.lang.Double.doubleToRawLongBits(minGradient_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, minGradient_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters) obj;

        if (java.lang.Double.doubleToLongBits(getSlope())
            != java.lang.Double.doubleToLongBits(
                other.getSlope())) return false;
        if (java.lang.Double.doubleToLongBits(getMinGradient())
            != java.lang.Double.doubleToLongBits(
                other.getMinGradient())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SLOPE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSlope()));
        hash = (37 * hash) + MIN_GRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMinGradient()));
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Parameters_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Parameters_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          slope_ = 0D;

          minGradient_ = 0D;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Parameters_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters(this);
          result.slope_ = slope_;
          result.minGradient_ = minGradient_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.getDefaultInstance()) return this;
          if (other.getSlope() != 0D) {
            setSlope(other.getSlope());
          }
          if (other.getMinGradient() != 0D) {
            setMinGradient(other.getMinGradient());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private double slope_ ;
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @return The slope.
         */
        @java.lang.Override
        public double getSlope() {
          return slope_;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @param value The slope to set.
         * @return This builder for chaining.
         */
        public Builder setSlope(double value) {
          
          slope_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;gotags: default:"1.0"
         * </pre>
         *
         * <code>double slope = 1 [json_name = "slope"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSlope() {
          
          slope_ = 0D;
          onChanged();
          return this;
        }

        private double minGradient_ ;
        /**
         * <pre>
         * &#64;gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
         * </pre>
         *
         * <code>double min_gradient = 2 [json_name = "minGradient"];</code>
         * @return The minGradient.
         */
        @java.lang.Override
        public double getMinGradient() {
          return minGradient_;
        }
        /**
         * <pre>
         * &#64;gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
         * </pre>
         *
         * <code>double min_gradient = 2 [json_name = "minGradient"];</code>
         * @param value The minGradient to set.
         * @return This builder for chaining.
         */
        public Builder setMinGradient(double value) {
          
          minGradient_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
         * </pre>
         *
         * <code>double min_gradient = 2 [json_name = "minGradient"];</code>
         * @return This builder for chaining.
         */
        public Builder clearMinGradient() {
          
          minGradient_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Parameters>
          PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
        @java.lang.Override
        public Parameters parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Parameters> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Parameters> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return Whether the signal field is set.
       */
      boolean hasSignal();
      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return The signal.
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal();
      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder();

      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return Whether the setpoint field is set.
       */
      boolean hasSetpoint();
      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return The setpoint.
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint();
      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder();
    }
    /**
     * <pre>
     * Inputs for Gradient.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins}
     */
    public static final class Ins extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)
        InsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ins.newBuilder() to construct.
      private Ins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ins() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Ins();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Ins(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
                if (signal_ != null) {
                  subBuilder = signal_.toBuilder();
                }
                signal_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(signal_);
                  signal_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder subBuilder = null;
                if (setpoint_ != null) {
                  subBuilder = setpoint_.toBuilder();
                }
                setpoint_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.InPort.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(setpoint_);
                  setpoint_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Ins_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Ins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder.class);
      }

      public static final int SIGNAL_FIELD_NUMBER = 1;
      private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return Whether the signal field is set.
       */
      @java.lang.Override
      public boolean hasSignal() {
        return signal_ != null;
      }
      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       * @return The signal.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
        return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
      }
      /**
       * <pre>
       * The signal to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
        return getSignal();
      }

      public static final int SETPOINT_FIELD_NUMBER = 2;
      private com.fluxninja.generated.aperture.policy.language.v1.InPort setpoint_;
      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return Whether the setpoint field is set.
       */
      @java.lang.Override
      public boolean hasSetpoint() {
        return setpoint_ != null;
      }
      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       * @return The setpoint.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint() {
        return setpoint_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
      }
      /**
       * <pre>
       * The setpoint to use for scale-in.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder() {
        return getSetpoint();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (signal_ != null) {
          output.writeMessage(1, getSignal());
        }
        if (setpoint_ != null) {
          output.writeMessage(2, getSetpoint());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (signal_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSignal());
        }
        if (setpoint_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSetpoint());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins) obj;

        if (hasSignal() != other.hasSignal()) return false;
        if (hasSignal()) {
          if (!getSignal()
              .equals(other.getSignal())) return false;
        }
        if (hasSetpoint() != other.hasSetpoint()) return false;
        if (hasSetpoint()) {
          if (!getSetpoint()
              .equals(other.getSetpoint())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSignal()) {
          hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
          hash = (53 * hash) + getSignal().hashCode();
        }
        if (hasSetpoint()) {
          hash = (37 * hash) + SETPOINT_FIELD_NUMBER;
          hash = (53 * hash) + getSetpoint().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Inputs for Gradient.
       * </pre>
       *
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Ins_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Ins_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (signalBuilder_ == null) {
            signal_ = null;
          } else {
            signal_ = null;
            signalBuilder_ = null;
          }
          if (setpointBuilder_ == null) {
            setpoint_ = null;
          } else {
            setpoint_ = null;
            setpointBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_Ins_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins(this);
          if (signalBuilder_ == null) {
            result.signal_ = signal_;
          } else {
            result.signal_ = signalBuilder_.build();
          }
          if (setpointBuilder_ == null) {
            result.setpoint_ = setpoint_;
          } else {
            result.setpoint_ = setpointBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.getDefaultInstance()) return this;
          if (other.hasSignal()) {
            mergeSignal(other.getSignal());
          }
          if (other.hasSetpoint()) {
            mergeSetpoint(other.getSetpoint());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.InPort signal_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> signalBuilder_;
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         * @return Whether the signal field is set.
         */
        public boolean hasSignal() {
          return signalBuilder_ != null || signal_ != null;
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         * @return The signal.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort getSignal() {
          if (signalBuilder_ == null) {
            return signal_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
          } else {
            return signalBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder setSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (signalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            signal_ = value;
            onChanged();
          } else {
            signalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder setSignal(
            com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
          if (signalBuilder_ == null) {
            signal_ = builderForValue.build();
            onChanged();
          } else {
            signalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder mergeSignal(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (signalBuilder_ == null) {
            if (signal_ != null) {
              signal_ =
                com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(signal_).mergeFrom(value).buildPartial();
            } else {
              signal_ = value;
            }
            onChanged();
          } else {
            signalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public Builder clearSignal() {
          if (signalBuilder_ == null) {
            signal_ = null;
            onChanged();
          } else {
            signal_ = null;
            signalBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getSignalBuilder() {
          
          onChanged();
          return getSignalFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSignalOrBuilder() {
          if (signalBuilder_ != null) {
            return signalBuilder_.getMessageOrBuilder();
          } else {
            return signal_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : signal_;
          }
        }
        /**
         * <pre>
         * The signal to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort signal = 1 [json_name = "signal"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
            getSignalFieldBuilder() {
          if (signalBuilder_ == null) {
            signalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                    getSignal(),
                    getParentForChildren(),
                    isClean());
            signal_ = null;
          }
          return signalBuilder_;
        }

        private com.fluxninja.generated.aperture.policy.language.v1.InPort setpoint_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> setpointBuilder_;
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         * @return Whether the setpoint field is set.
         */
        public boolean hasSetpoint() {
          return setpointBuilder_ != null || setpoint_ != null;
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         * @return The setpoint.
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort getSetpoint() {
          if (setpointBuilder_ == null) {
            return setpoint_ == null ? com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
          } else {
            return setpointBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder setSetpoint(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (setpointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            setpoint_ = value;
            onChanged();
          } else {
            setpointBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder setSetpoint(
            com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder builderForValue) {
          if (setpointBuilder_ == null) {
            setpoint_ = builderForValue.build();
            onChanged();
          } else {
            setpointBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder mergeSetpoint(com.fluxninja.generated.aperture.policy.language.v1.InPort value) {
          if (setpointBuilder_ == null) {
            if (setpoint_ != null) {
              setpoint_ =
                com.fluxninja.generated.aperture.policy.language.v1.InPort.newBuilder(setpoint_).mergeFrom(value).buildPartial();
            } else {
              setpoint_ = value;
            }
            onChanged();
          } else {
            setpointBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public Builder clearSetpoint() {
          if (setpointBuilder_ == null) {
            setpoint_ = null;
            onChanged();
          } else {
            setpoint_ = null;
            setpointBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder getSetpointBuilder() {
          
          onChanged();
          return getSetpointFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder getSetpointOrBuilder() {
          if (setpointBuilder_ != null) {
            return setpointBuilder_.getMessageOrBuilder();
          } else {
            return setpoint_ == null ?
                com.fluxninja.generated.aperture.policy.language.v1.InPort.getDefaultInstance() : setpoint_;
          }
        }
        /**
         * <pre>
         * The setpoint to use for scale-in.
         * </pre>
         *
         * <code>.aperture.policy.language.v1.InPort setpoint = 2 [json_name = "setpoint"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder> 
            getSetpointFieldBuilder() {
          if (setpointBuilder_ == null) {
            setpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.InPort, com.fluxninja.generated.aperture.policy.language.v1.InPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.InPortOrBuilder>(
                    getSetpoint(),
                    getParentForChildren(),
                    isClean());
            setpoint_ = null;
          }
          return setpointBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ins>
          PARSER = new com.google.protobuf.AbstractParser<Ins>() {
        @java.lang.Override
        public Ins parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ins(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Ins> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ins> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int IN_PORTS_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins inPorts_;
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return Whether the inPorts field is set.
     */
    @java.lang.Override
    public boolean hasInPorts() {
      return inPorts_ != null;
    }
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     * @return The inPorts.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getInPorts() {
      return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.getDefaultInstance() : inPorts_;
    }
    /**
     * <pre>
     * Input ports for the Gradient.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder getInPortsOrBuilder() {
      return getInPorts();
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters_;
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return Whether the parameters field is set.
     */
    @java.lang.Override
    public boolean hasParameters() {
      return parameters_ != null;
    }
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     * @return The parameters.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getParameters() {
      return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.getDefaultInstance() : parameters_;
    }
    /**
     * <pre>
     * Gradient parameters for the controller. Defaults and constraints:
     * * slope = 1
     * * min_gradient = -Inf (must be less than 1)
     * * max_gradient = 1 (cannot be changed)
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder getParametersOrBuilder() {
      return getParameters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (inPorts_ != null) {
        output.writeMessage(1, getInPorts());
      }
      if (parameters_ != null) {
        output.writeMessage(2, getParameters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (inPorts_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInPorts());
      }
      if (parameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParameters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) obj;

      if (hasInPorts() != other.hasInPorts()) return false;
      if (hasInPorts()) {
        if (!getInPorts()
            .equals(other.getInPorts())) return false;
      }
      if (hasParameters() != other.hasParameters()) return false;
      if (hasParameters()) {
        if (!getParameters()
            .equals(other.getParameters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInPorts()) {
        hash = (37 * hash) + IN_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getInPorts().hashCode();
      }
      if (hasParameters()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParameters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.DecreasingGradient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.DecreasingGradient)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }
        if (parametersBuilder_ == null) {
          parameters_ = null;
        } else {
          parameters_ = null;
          parametersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_DecreasingGradient_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient(this);
        if (inPortsBuilder_ == null) {
          result.inPorts_ = inPorts_;
        } else {
          result.inPorts_ = inPortsBuilder_.build();
        }
        if (parametersBuilder_ == null) {
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance()) return this;
        if (other.hasInPorts()) {
          mergeInPorts(other.getInPorts());
        }
        if (other.hasParameters()) {
          mergeParameters(other.getParameters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins inPorts_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder> inPortsBuilder_;
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return Whether the inPorts field is set.
       */
      public boolean hasInPorts() {
        return inPortsBuilder_ != null || inPorts_ != null;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       * @return The inPorts.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins getInPorts() {
        if (inPortsBuilder_ == null) {
          return inPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.getDefaultInstance() : inPorts_;
        } else {
          return inPortsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins value) {
        if (inPortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inPorts_ = value;
          onChanged();
        } else {
          inPortsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder setInPorts(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder builderForValue) {
        if (inPortsBuilder_ == null) {
          inPorts_ = builderForValue.build();
          onChanged();
        } else {
          inPortsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder mergeInPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins value) {
        if (inPortsBuilder_ == null) {
          if (inPorts_ != null) {
            inPorts_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.newBuilder(inPorts_).mergeFrom(value).buildPartial();
          } else {
            inPorts_ = value;
          }
          onChanged();
        } else {
          inPortsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public Builder clearInPorts() {
        if (inPortsBuilder_ == null) {
          inPorts_ = null;
          onChanged();
        } else {
          inPorts_ = null;
          inPortsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder getInPortsBuilder() {
        
        onChanged();
        return getInPortsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder getInPortsOrBuilder() {
        if (inPortsBuilder_ != null) {
          return inPortsBuilder_.getMessageOrBuilder();
        } else {
          return inPorts_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.getDefaultInstance() : inPorts_;
        }
      }
      /**
       * <pre>
       * Input ports for the Gradient.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins in_ports = 1 [json_name = "inPorts"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder> 
          getInPortsFieldBuilder() {
        if (inPortsBuilder_ == null) {
          inPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Ins.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.InsOrBuilder>(
                  getInPorts(),
                  getParentForChildren(),
                  isClean());
          inPorts_ = null;
        }
        return inPortsBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder> parametersBuilder_;
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       * @return Whether the parameters field is set.
       */
      public boolean hasParameters() {
        return parametersBuilder_ != null || parameters_ != null;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       * @return The parameters.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters getParameters() {
        if (parametersBuilder_ == null) {
          return parameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.getDefaultInstance() : parameters_;
        } else {
          return parametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder setParameters(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameters_ = value;
          onChanged();
        } else {
          parametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder setParameters(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          parameters_ = builderForValue.build();
          onChanged();
        } else {
          parametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder mergeParameters(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters value) {
        if (parametersBuilder_ == null) {
          if (parameters_ != null) {
            parameters_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.newBuilder(parameters_).mergeFrom(value).buildPartial();
          } else {
            parameters_ = value;
          }
          onChanged();
        } else {
          parametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = null;
          onChanged();
        } else {
          parameters_ = null;
          parametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder getParametersBuilder() {
        
        onChanged();
        return getParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder getParametersOrBuilder() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilder();
        } else {
          return parameters_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.getDefaultInstance() : parameters_;
        }
      }
      /**
       * <pre>
       * Gradient parameters for the controller. Defaults and constraints:
       * * slope = 1
       * * min_gradient = -Inf (must be less than 1)
       * * max_gradient = 1 (cannot be changed)
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters parameters = 2 [json_name = "parameters"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.ParametersOrBuilder>(
                  getParameters(),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.DecreasingGradient)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecreasingGradient>
        PARSER = new com.google.protobuf.AbstractParser<DecreasingGradient>() {
      @java.lang.Override
      public DecreasingGradient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DecreasingGradient(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecreasingGradient> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecreasingGradient> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScaleOutControllerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.ScaleOutController)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     * @return Whether the controller field is set.
     */
    boolean hasController();
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     * @return The controller.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getController();
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder getControllerOrBuilder();

    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return Whether the alerterParameters field is set.
     */
    boolean hasAlerterParameters();
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return The alerterParameters.
     */
    com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters();
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder();
  }
  /**
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleOutController}
   */
  public static final class ScaleOutController extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.ScaleOutController)
      ScaleOutControllerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScaleOutController.newBuilder() to construct.
    private ScaleOutController(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScaleOutController() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScaleOutController();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScaleOutController(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder subBuilder = null;
              if (controller_ != null) {
                subBuilder = controller_.toBuilder();
              }
              controller_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controller_);
                controller_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder subBuilder = null;
              if (alerterParameters_ != null) {
                subBuilder = alerterParameters_.toBuilder();
              }
              alerterParameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alerterParameters_);
                alerterParameters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder.class);
    }

    public interface ControllerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return Whether the gradient field is set.
       */
      boolean hasGradient();
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return The gradient.
       */
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getGradient();
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder getGradientOrBuilder();

      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.ControllerCase getControllerCase();
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller}
     */
    public static final class Controller extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)
        ControllerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Controller.newBuilder() to construct.
      private Controller(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Controller() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Controller();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Controller(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder subBuilder = null;
                if (controllerCase_ == 1) {
                  subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_).toBuilder();
                }
                controller_ =
                    input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_);
                  controller_ = subBuilder.buildPartial();
                }
                controllerCase_ = 1;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_Controller_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_Controller_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder.class);
      }

      private int controllerCase_ = 0;
      private java.lang.Object controller_;
      public enum ControllerCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        GRADIENT(1),
        CONTROLLER_NOT_SET(0);
        private final int value;
        private ControllerCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ControllerCase valueOf(int value) {
          return forNumber(value);
        }

        public static ControllerCase forNumber(int value) {
          switch (value) {
            case 1: return GRADIENT;
            case 0: return CONTROLLER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ControllerCase
      getControllerCase() {
        return ControllerCase.forNumber(
            controllerCase_);
      }

      public static final int GRADIENT_FIELD_NUMBER = 1;
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return Whether the gradient field is set.
       */
      @java.lang.Override
      public boolean hasGradient() {
        return controllerCase_ == 1;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return The gradient.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getGradient() {
        if (controllerCase_ == 1) {
           return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder getGradientOrBuilder() {
        if (controllerCase_ == 1) {
           return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (controllerCase_ == 1) {
          output.writeMessage(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (controllerCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller) obj;

        if (!getControllerCase().equals(other.getControllerCase())) return false;
        switch (controllerCase_) {
          case 1:
            if (!getGradient()
                .equals(other.getGradient())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (controllerCase_) {
          case 1:
            hash = (37 * hash) + GRADIENT_FIELD_NUMBER;
            hash = (53 * hash) + getGradient().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_Controller_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_Controller_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          controllerCase_ = 0;
          controller_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_Controller_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller(this);
          if (controllerCase_ == 1) {
            if (gradientBuilder_ == null) {
              result.controller_ = controller_;
            } else {
              result.controller_ = gradientBuilder_.build();
            }
          }
          result.controllerCase_ = controllerCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.getDefaultInstance()) return this;
          switch (other.getControllerCase()) {
            case GRADIENT: {
              mergeGradient(other.getGradient());
              break;
            }
            case CONTROLLER_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int controllerCase_ = 0;
        private java.lang.Object controller_;
        public ControllerCase
            getControllerCase() {
          return ControllerCase.forNumber(
              controllerCase_);
        }

        public Builder clearController() {
          controllerCase_ = 0;
          controller_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder> gradientBuilder_;
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         * @return Whether the gradient field is set.
         */
        @java.lang.Override
        public boolean hasGradient() {
          return controllerCase_ == 1;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         * @return The gradient.
         */
        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient getGradient() {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1) {
              return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_;
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
          } else {
            if (controllerCase_ == 1) {
              return gradientBuilder_.getMessage();
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
          }
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder setGradient(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient value) {
          if (gradientBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            controller_ = value;
            onChanged();
          } else {
            gradientBuilder_.setMessage(value);
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder setGradient(
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder builderForValue) {
          if (gradientBuilder_ == null) {
            controller_ = builderForValue.build();
            onChanged();
          } else {
            gradientBuilder_.setMessage(builderForValue.build());
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder mergeGradient(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient value) {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1 &&
                controller_ != com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance()) {
              controller_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_)
                  .mergeFrom(value).buildPartial();
            } else {
              controller_ = value;
            }
            onChanged();
          } else {
            if (controllerCase_ == 1) {
              gradientBuilder_.mergeFrom(value);
            } else {
              gradientBuilder_.setMessage(value);
            }
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder clearGradient() {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1) {
              controllerCase_ = 0;
              controller_ = null;
              onChanged();
            }
          } else {
            if (controllerCase_ == 1) {
              controllerCase_ = 0;
              controller_ = null;
            }
            gradientBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder getGradientBuilder() {
          return getGradientFieldBuilder().getBuilder();
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder getGradientOrBuilder() {
          if ((controllerCase_ == 1) && (gradientBuilder_ != null)) {
            return gradientBuilder_.getMessageOrBuilder();
          } else {
            if (controllerCase_ == 1) {
              return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_;
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
          }
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.IncreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder> 
            getGradientFieldBuilder() {
          if (gradientBuilder_ == null) {
            if (!(controllerCase_ == 1)) {
              controller_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.getDefaultInstance();
            }
            gradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradientOrBuilder>(
                    (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.IncreasingGradient) controller_,
                    getParentForChildren(),
                    isClean());
            controller_ = null;
          }
          controllerCase_ = 1;
          onChanged();;
          return gradientBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Controller>
          PARSER = new com.google.protobuf.AbstractParser<Controller>() {
        @java.lang.Override
        public Controller parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Controller(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Controller> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Controller> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CONTROLLER_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller_;
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     * @return Whether the controller field is set.
     */
    @java.lang.Override
    public boolean hasController() {
      return controller_ != null;
    }
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     * @return The controller.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getController() {
      return controller_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.getDefaultInstance() : controller_;
    }
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder getControllerOrBuilder() {
      return getController();
    }

    public static final int ALERTER_PARAMETERS_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters alerterParameters_;
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return Whether the alerterParameters field is set.
     */
    @java.lang.Override
    public boolean hasAlerterParameters() {
      return alerterParameters_ != null;
    }
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return The alerterParameters.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters() {
      return alerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
    }
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder() {
      return getAlerterParameters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (controller_ != null) {
        output.writeMessage(1, getController());
      }
      if (alerterParameters_ != null) {
        output.writeMessage(2, getAlerterParameters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (controller_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getController());
      }
      if (alerterParameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAlerterParameters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController) obj;

      if (hasController() != other.hasController()) return false;
      if (hasController()) {
        if (!getController()
            .equals(other.getController())) return false;
      }
      if (hasAlerterParameters() != other.hasAlerterParameters()) return false;
      if (hasAlerterParameters()) {
        if (!getAlerterParameters()
            .equals(other.getAlerterParameters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasController()) {
        hash = (37 * hash) + CONTROLLER_FIELD_NUMBER;
        hash = (53 * hash) + getController().hashCode();
      }
      if (hasAlerterParameters()) {
        hash = (37 * hash) + ALERTER_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getAlerterParameters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleOutController}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.ScaleOutController)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (controllerBuilder_ == null) {
          controller_ = null;
        } else {
          controller_ = null;
          controllerBuilder_ = null;
        }
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = null;
        } else {
          alerterParameters_ = null;
          alerterParametersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleOutController_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController(this);
        if (controllerBuilder_ == null) {
          result.controller_ = controller_;
        } else {
          result.controller_ = controllerBuilder_.build();
        }
        if (alerterParametersBuilder_ == null) {
          result.alerterParameters_ = alerterParameters_;
        } else {
          result.alerterParameters_ = alerterParametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.getDefaultInstance()) return this;
        if (other.hasController()) {
          mergeController(other.getController());
        }
        if (other.hasAlerterParameters()) {
          mergeAlerterParameters(other.getAlerterParameters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder> controllerBuilder_;
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       * @return Whether the controller field is set.
       */
      public boolean hasController() {
        return controllerBuilder_ != null || controller_ != null;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       * @return The controller.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller getController() {
        if (controllerBuilder_ == null) {
          return controller_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.getDefaultInstance() : controller_;
        } else {
          return controllerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder setController(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller value) {
        if (controllerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controller_ = value;
          onChanged();
        } else {
          controllerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder setController(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder builderForValue) {
        if (controllerBuilder_ == null) {
          controller_ = builderForValue.build();
          onChanged();
        } else {
          controllerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder mergeController(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller value) {
        if (controllerBuilder_ == null) {
          if (controller_ != null) {
            controller_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.newBuilder(controller_).mergeFrom(value).buildPartial();
          } else {
            controller_ = value;
          }
          onChanged();
        } else {
          controllerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder clearController() {
        if (controllerBuilder_ == null) {
          controller_ = null;
          onChanged();
        } else {
          controller_ = null;
          controllerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder getControllerBuilder() {
        
        onChanged();
        return getControllerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder getControllerOrBuilder() {
        if (controllerBuilder_ != null) {
          return controllerBuilder_.getMessageOrBuilder();
        } else {
          return controller_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.getDefaultInstance() : controller_;
        }
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller controller = 1 [json_name = "controller"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder> 
          getControllerFieldBuilder() {
        if (controllerBuilder_ == null) {
          controllerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.ControllerOrBuilder>(
                  getController(),
                  getParentForChildren(),
                  isClean());
          controller_ = null;
        }
        return controllerBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters alerterParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> alerterParametersBuilder_;
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       * @return Whether the alerterParameters field is set.
       */
      public boolean hasAlerterParameters() {
        return alerterParametersBuilder_ != null || alerterParameters_ != null;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       * @return The alerterParameters.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters() {
        if (alerterParametersBuilder_ == null) {
          return alerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
        } else {
          return alerterParametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder setAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
        if (alerterParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alerterParameters_ = value;
          onChanged();
        } else {
          alerterParametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder setAlerterParameters(
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder builderForValue) {
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = builderForValue.build();
          onChanged();
        } else {
          alerterParametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder mergeAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
        if (alerterParametersBuilder_ == null) {
          if (alerterParameters_ != null) {
            alerterParameters_ =
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder(alerterParameters_).mergeFrom(value).buildPartial();
          } else {
            alerterParameters_ = value;
          }
          onChanged();
        } else {
          alerterParametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder clearAlerterParameters() {
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = null;
          onChanged();
        } else {
          alerterParameters_ = null;
          alerterParametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder getAlerterParametersBuilder() {
        
        onChanged();
        return getAlerterParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder() {
        if (alerterParametersBuilder_ != null) {
          return alerterParametersBuilder_.getMessageOrBuilder();
        } else {
          return alerterParameters_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
        }
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> 
          getAlerterParametersFieldBuilder() {
        if (alerterParametersBuilder_ == null) {
          alerterParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder>(
                  getAlerterParameters(),
                  getParentForChildren(),
                  isClean());
          alerterParameters_ = null;
        }
        return alerterParametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.ScaleOutController)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.ScaleOutController)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScaleOutController>
        PARSER = new com.google.protobuf.AbstractParser<ScaleOutController>() {
      @java.lang.Override
      public ScaleOutController parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScaleOutController(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScaleOutController> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScaleOutController> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScaleInControllerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.ScaleInController)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     * @return Whether the controller field is set.
     */
    boolean hasController();
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     * @return The controller.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getController();
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder getControllerOrBuilder();

    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return Whether the alerterParameters field is set.
     */
    boolean hasAlerterParameters();
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return The alerterParameters.
     */
    com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters();
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder();
  }
  /**
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleInController}
   */
  public static final class ScaleInController extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.ScaleInController)
      ScaleInControllerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScaleInController.newBuilder() to construct.
    private ScaleInController(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScaleInController() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScaleInController();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScaleInController(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder subBuilder = null;
              if (controller_ != null) {
                subBuilder = controller_.toBuilder();
              }
              controller_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controller_);
                controller_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder subBuilder = null;
              if (alerterParameters_ != null) {
                subBuilder = alerterParameters_.toBuilder();
              }
              alerterParameters_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alerterParameters_);
                alerterParameters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder.class);
    }

    public interface ControllerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return Whether the gradient field is set.
       */
      boolean hasGradient();
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return The gradient.
       */
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getGradient();
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       */
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder getGradientOrBuilder();

      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.ControllerCase getControllerCase();
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleInController.Controller}
     */
    public static final class Controller extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)
        ControllerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Controller.newBuilder() to construct.
      private Controller(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Controller() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Controller();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Controller(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder subBuilder = null;
                if (controllerCase_ == 1) {
                  subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_).toBuilder();
                }
                controller_ =
                    input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_);
                  controller_ = subBuilder.buildPartial();
                }
                controllerCase_ = 1;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_Controller_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_Controller_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder.class);
      }

      private int controllerCase_ = 0;
      private java.lang.Object controller_;
      public enum ControllerCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        GRADIENT(1),
        CONTROLLER_NOT_SET(0);
        private final int value;
        private ControllerCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ControllerCase valueOf(int value) {
          return forNumber(value);
        }

        public static ControllerCase forNumber(int value) {
          switch (value) {
            case 1: return GRADIENT;
            case 0: return CONTROLLER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ControllerCase
      getControllerCase() {
        return ControllerCase.forNumber(
            controllerCase_);
      }

      public static final int GRADIENT_FIELD_NUMBER = 1;
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return Whether the gradient field is set.
       */
      @java.lang.Override
      public boolean hasGradient() {
        return controllerCase_ == 1;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       * @return The gradient.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getGradient() {
        if (controllerCase_ == 1) {
           return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder getGradientOrBuilder() {
        if (controllerCase_ == 1) {
           return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (controllerCase_ == 1) {
          output.writeMessage(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (controllerCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)) {
          return super.equals(obj);
        }
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller) obj;

        if (!getControllerCase().equals(other.getControllerCase())) return false;
        switch (controllerCase_) {
          case 1:
            if (!getGradient()
                .equals(other.getGradient())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (controllerCase_) {
          case 1:
            hash = (37 * hash) + GRADIENT_FIELD_NUMBER;
            hash = (53 * hash) + getGradient().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleInController.Controller}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_Controller_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_Controller_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder.class);
        }

        // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          controllerCase_ = 0;
          controller_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_Controller_descriptor;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getDefaultInstanceForType() {
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.getDefaultInstance();
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller build() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller buildPartial() {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller(this);
          if (controllerCase_ == 1) {
            if (gradientBuilder_ == null) {
              result.controller_ = controller_;
            } else {
              result.controller_ = gradientBuilder_.build();
            }
          }
          result.controllerCase_ = controllerCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller) {
            return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller other) {
          if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.getDefaultInstance()) return this;
          switch (other.getControllerCase()) {
            case GRADIENT: {
              mergeGradient(other.getGradient());
              break;
            }
            case CONTROLLER_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int controllerCase_ = 0;
        private java.lang.Object controller_;
        public ControllerCase
            getControllerCase() {
          return ControllerCase.forNumber(
              controllerCase_);
        }

        public Builder clearController() {
          controllerCase_ = 0;
          controller_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder> gradientBuilder_;
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         * @return Whether the gradient field is set.
         */
        @java.lang.Override
        public boolean hasGradient() {
          return controllerCase_ == 1;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         * @return The gradient.
         */
        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient getGradient() {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1) {
              return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_;
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
          } else {
            if (controllerCase_ == 1) {
              return gradientBuilder_.getMessage();
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
          }
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder setGradient(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient value) {
          if (gradientBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            controller_ = value;
            onChanged();
          } else {
            gradientBuilder_.setMessage(value);
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder setGradient(
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder builderForValue) {
          if (gradientBuilder_ == null) {
            controller_ = builderForValue.build();
            onChanged();
          } else {
            gradientBuilder_.setMessage(builderForValue.build());
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder mergeGradient(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient value) {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1 &&
                controller_ != com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance()) {
              controller_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_)
                  .mergeFrom(value).buildPartial();
            } else {
              controller_ = value;
            }
            onChanged();
          } else {
            if (controllerCase_ == 1) {
              gradientBuilder_.mergeFrom(value);
            } else {
              gradientBuilder_.setMessage(value);
            }
          }
          controllerCase_ = 1;
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public Builder clearGradient() {
          if (gradientBuilder_ == null) {
            if (controllerCase_ == 1) {
              controllerCase_ = 0;
              controller_ = null;
              onChanged();
            }
          } else {
            if (controllerCase_ == 1) {
              controllerCase_ = 0;
              controller_ = null;
            }
            gradientBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder getGradientBuilder() {
          return getGradientFieldBuilder().getBuilder();
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        @java.lang.Override
        public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder getGradientOrBuilder() {
          if ((controllerCase_ == 1) && (gradientBuilder_ != null)) {
            return gradientBuilder_.getMessageOrBuilder();
          } else {
            if (controllerCase_ == 1) {
              return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_;
            }
            return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
          }
        }
        /**
         * <code>.aperture.policy.language.v1.AutoScaler.DecreasingGradient gradient = 1 [json_name = "gradient"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder> 
            getGradientFieldBuilder() {
          if (gradientBuilder_ == null) {
            if (!(controllerCase_ == 1)) {
              controller_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.getDefaultInstance();
            }
            gradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradientOrBuilder>(
                    (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.DecreasingGradient) controller_,
                    getParentForChildren(),
                    isClean());
            controller_ = null;
          }
          controllerCase_ = 1;
          onChanged();;
          return gradientBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)
      }

      // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.ScaleInController.Controller)
      private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller();
      }

      public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Controller>
          PARSER = new com.google.protobuf.AbstractParser<Controller>() {
        @java.lang.Override
        public Controller parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Controller(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Controller> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Controller> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CONTROLLER_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller_;
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     * @return Whether the controller field is set.
     */
    @java.lang.Override
    public boolean hasController() {
      return controller_ != null;
    }
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     * @return The controller.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getController() {
      return controller_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.getDefaultInstance() : controller_;
    }
    /**
     * <pre>
     * Controller
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder getControllerOrBuilder() {
      return getController();
    }

    public static final int ALERTER_PARAMETERS_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters alerterParameters_;
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return Whether the alerterParameters field is set.
     */
    @java.lang.Override
    public boolean hasAlerterParameters() {
      return alerterParameters_ != null;
    }
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     * @return The alerterParameters.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters() {
      return alerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
    }
    /**
     * <pre>
     * Configuration for embedded alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder() {
      return getAlerterParameters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (controller_ != null) {
        output.writeMessage(1, getController());
      }
      if (alerterParameters_ != null) {
        output.writeMessage(2, getAlerterParameters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (controller_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getController());
      }
      if (alerterParameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAlerterParameters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController) obj;

      if (hasController() != other.hasController()) return false;
      if (hasController()) {
        if (!getController()
            .equals(other.getController())) return false;
      }
      if (hasAlerterParameters() != other.hasAlerterParameters()) return false;
      if (hasAlerterParameters()) {
        if (!getAlerterParameters()
            .equals(other.getAlerterParameters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasController()) {
        hash = (37 * hash) + CONTROLLER_FIELD_NUMBER;
        hash = (53 * hash) + getController().hashCode();
      }
      if (hasAlerterParameters()) {
        hash = (37 * hash) + ALERTER_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getAlerterParameters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.ScaleInController}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.ScaleInController)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (controllerBuilder_ == null) {
          controller_ = null;
        } else {
          controller_ = null;
          controllerBuilder_ = null;
        }
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = null;
        } else {
          alerterParameters_ = null;
          alerterParametersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_ScaleInController_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController(this);
        if (controllerBuilder_ == null) {
          result.controller_ = controller_;
        } else {
          result.controller_ = controllerBuilder_.build();
        }
        if (alerterParametersBuilder_ == null) {
          result.alerterParameters_ = alerterParameters_;
        } else {
          result.alerterParameters_ = alerterParametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.getDefaultInstance()) return this;
        if (other.hasController()) {
          mergeController(other.getController());
        }
        if (other.hasAlerterParameters()) {
          mergeAlerterParameters(other.getAlerterParameters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder> controllerBuilder_;
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       * @return Whether the controller field is set.
       */
      public boolean hasController() {
        return controllerBuilder_ != null || controller_ != null;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       * @return The controller.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller getController() {
        if (controllerBuilder_ == null) {
          return controller_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.getDefaultInstance() : controller_;
        } else {
          return controllerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder setController(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller value) {
        if (controllerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controller_ = value;
          onChanged();
        } else {
          controllerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder setController(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder builderForValue) {
        if (controllerBuilder_ == null) {
          controller_ = builderForValue.build();
          onChanged();
        } else {
          controllerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder mergeController(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller value) {
        if (controllerBuilder_ == null) {
          if (controller_ != null) {
            controller_ =
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.newBuilder(controller_).mergeFrom(value).buildPartial();
          } else {
            controller_ = value;
          }
          onChanged();
        } else {
          controllerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public Builder clearController() {
        if (controllerBuilder_ == null) {
          controller_ = null;
          onChanged();
        } else {
          controller_ = null;
          controllerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder getControllerBuilder() {
        
        onChanged();
        return getControllerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder getControllerOrBuilder() {
        if (controllerBuilder_ != null) {
          return controllerBuilder_.getMessageOrBuilder();
        } else {
          return controller_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.getDefaultInstance() : controller_;
        }
      }
      /**
       * <pre>
       * Controller
       * </pre>
       *
       * <code>.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller controller = 1 [json_name = "controller"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder> 
          getControllerFieldBuilder() {
        if (controllerBuilder_ == null) {
          controllerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Controller.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.ControllerOrBuilder>(
                  getController(),
                  getParentForChildren(),
                  isClean());
          controller_ = null;
        }
        return controllerBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters alerterParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> alerterParametersBuilder_;
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       * @return Whether the alerterParameters field is set.
       */
      public boolean hasAlerterParameters() {
        return alerterParametersBuilder_ != null || alerterParameters_ != null;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       * @return The alerterParameters.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getAlerterParameters() {
        if (alerterParametersBuilder_ == null) {
          return alerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
        } else {
          return alerterParametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder setAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
        if (alerterParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alerterParameters_ = value;
          onChanged();
        } else {
          alerterParametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder setAlerterParameters(
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder builderForValue) {
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = builderForValue.build();
          onChanged();
        } else {
          alerterParametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder mergeAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
        if (alerterParametersBuilder_ == null) {
          if (alerterParameters_ != null) {
            alerterParameters_ =
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder(alerterParameters_).mergeFrom(value).buildPartial();
          } else {
            alerterParameters_ = value;
          }
          onChanged();
        } else {
          alerterParametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public Builder clearAlerterParameters() {
        if (alerterParametersBuilder_ == null) {
          alerterParameters_ = null;
          onChanged();
        } else {
          alerterParameters_ = null;
          alerterParametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder getAlerterParametersBuilder() {
        
        onChanged();
        return getAlerterParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getAlerterParametersOrBuilder() {
        if (alerterParametersBuilder_ != null) {
          return alerterParametersBuilder_.getMessageOrBuilder();
        } else {
          return alerterParameters_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : alerterParameters_;
        }
      }
      /**
       * <pre>
       * Configuration for embedded alerter.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.Alerter.Parameters alerter_parameters = 2 [json_name = "alerterParameters"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> 
          getAlerterParametersFieldBuilder() {
        if (alerterParametersBuilder_ == null) {
          alerterParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder>(
                  getAlerterParameters(),
                  getParentForChildren(),
                  isClean());
          alerterParameters_ = null;
        }
        return alerterParametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.ScaleInController)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.ScaleInController)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScaleInController>
        PARSER = new com.google.protobuf.AbstractParser<ScaleInController>() {
      @java.lang.Override
      public ScaleInController parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScaleInController(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScaleInController> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScaleInController> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScalerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.Scaler)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     * @return Whether the kubernetesReplicas field is set.
     */
    boolean hasKubernetesReplicas();
    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     * @return The kubernetesReplicas.
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getKubernetesReplicas();
    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder getKubernetesReplicasOrBuilder();

    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.ScalerCase getScalerCase();
  }
  /**
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.Scaler}
   */
  public static final class Scaler extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.Scaler)
      ScalerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Scaler.newBuilder() to construct.
    private Scaler(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Scaler() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Scaler();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Scaler(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder subBuilder = null;
              if (scalerCase_ == 1) {
                subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_).toBuilder();
              }
              scaler_ =
                  input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_);
                scaler_ = subBuilder.buildPartial();
              }
              scalerCase_ = 1;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Scaler_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Scaler_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder.class);
    }

    private int scalerCase_ = 0;
    private java.lang.Object scaler_;
    public enum ScalerCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      KUBERNETES_REPLICAS(1),
      SCALER_NOT_SET(0);
      private final int value;
      private ScalerCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ScalerCase valueOf(int value) {
        return forNumber(value);
      }

      public static ScalerCase forNumber(int value) {
        switch (value) {
          case 1: return KUBERNETES_REPLICAS;
          case 0: return SCALER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ScalerCase
    getScalerCase() {
      return ScalerCase.forNumber(
          scalerCase_);
    }

    public static final int KUBERNETES_REPLICAS_FIELD_NUMBER = 1;
    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     * @return Whether the kubernetesReplicas field is set.
     */
    @java.lang.Override
    public boolean hasKubernetesReplicas() {
      return scalerCase_ == 1;
    }
    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     * @return The kubernetesReplicas.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getKubernetesReplicas() {
      if (scalerCase_ == 1) {
         return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_;
      }
      return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
    }
    /**
     * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder getKubernetesReplicasOrBuilder() {
      if (scalerCase_ == 1) {
         return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_;
      }
      return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scalerCase_ == 1) {
        output.writeMessage(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scalerCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler) obj;

      if (!getScalerCase().equals(other.getScalerCase())) return false;
      switch (scalerCase_) {
        case 1:
          if (!getKubernetesReplicas()
              .equals(other.getKubernetesReplicas())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (scalerCase_) {
        case 1:
          hash = (37 * hash) + KUBERNETES_REPLICAS_FIELD_NUMBER;
          hash = (53 * hash) + getKubernetesReplicas().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.Scaler}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.Scaler)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Scaler_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Scaler_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        scalerCase_ = 0;
        scaler_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Scaler_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler(this);
        if (scalerCase_ == 1) {
          if (kubernetesReplicasBuilder_ == null) {
            result.scaler_ = scaler_;
          } else {
            result.scaler_ = kubernetesReplicasBuilder_.build();
          }
        }
        result.scalerCase_ = scalerCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.getDefaultInstance()) return this;
        switch (other.getScalerCase()) {
          case KUBERNETES_REPLICAS: {
            mergeKubernetesReplicas(other.getKubernetesReplicas());
            break;
          }
          case SCALER_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int scalerCase_ = 0;
      private java.lang.Object scaler_;
      public ScalerCase
          getScalerCase() {
        return ScalerCase.forNumber(
            scalerCase_);
      }

      public Builder clearScaler() {
        scalerCase_ = 0;
        scaler_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder> kubernetesReplicasBuilder_;
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       * @return Whether the kubernetesReplicas field is set.
       */
      @java.lang.Override
      public boolean hasKubernetesReplicas() {
        return scalerCase_ == 1;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       * @return The kubernetesReplicas.
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getKubernetesReplicas() {
        if (kubernetesReplicasBuilder_ == null) {
          if (scalerCase_ == 1) {
            return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_;
          }
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
        } else {
          if (scalerCase_ == 1) {
            return kubernetesReplicasBuilder_.getMessage();
          }
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
        }
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      public Builder setKubernetesReplicas(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas value) {
        if (kubernetesReplicasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scaler_ = value;
          onChanged();
        } else {
          kubernetesReplicasBuilder_.setMessage(value);
        }
        scalerCase_ = 1;
        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      public Builder setKubernetesReplicas(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder builderForValue) {
        if (kubernetesReplicasBuilder_ == null) {
          scaler_ = builderForValue.build();
          onChanged();
        } else {
          kubernetesReplicasBuilder_.setMessage(builderForValue.build());
        }
        scalerCase_ = 1;
        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      public Builder mergeKubernetesReplicas(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas value) {
        if (kubernetesReplicasBuilder_ == null) {
          if (scalerCase_ == 1 &&
              scaler_ != com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance()) {
            scaler_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_)
                .mergeFrom(value).buildPartial();
          } else {
            scaler_ = value;
          }
          onChanged();
        } else {
          if (scalerCase_ == 1) {
            kubernetesReplicasBuilder_.mergeFrom(value);
          } else {
            kubernetesReplicasBuilder_.setMessage(value);
          }
        }
        scalerCase_ = 1;
        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      public Builder clearKubernetesReplicas() {
        if (kubernetesReplicasBuilder_ == null) {
          if (scalerCase_ == 1) {
            scalerCase_ = 0;
            scaler_ = null;
            onChanged();
          }
        } else {
          if (scalerCase_ == 1) {
            scalerCase_ = 0;
            scaler_ = null;
          }
          kubernetesReplicasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder getKubernetesReplicasBuilder() {
        return getKubernetesReplicasFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder getKubernetesReplicasOrBuilder() {
        if ((scalerCase_ == 1) && (kubernetesReplicasBuilder_ != null)) {
          return kubernetesReplicasBuilder_.getMessageOrBuilder();
        } else {
          if (scalerCase_ == 1) {
            return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_;
          }
          return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
        }
      }
      /**
       * <code>.aperture.policy.language.v1.AutoScaler.KubernetesReplicas kubernetes_replicas = 1 [json_name = "kubernetesReplicas"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder> 
          getKubernetesReplicasFieldBuilder() {
        if (kubernetesReplicasBuilder_ == null) {
          if (!(scalerCase_ == 1)) {
            scaler_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
          }
          kubernetesReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder>(
                  (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) scaler_,
                  getParentForChildren(),
                  isClean());
          scaler_ = null;
        }
        scalerCase_ = 1;
        onChanged();;
        return kubernetesReplicasBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.Scaler)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.Scaler)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Scaler>
        PARSER = new com.google.protobuf.AbstractParser<Scaler>() {
      @java.lang.Override
      public Scaler parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Scaler(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Scaler> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Scaler> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KubernetesReplicasOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.KubernetesReplicas)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return Whether the kubernetesObjectSelector field is set.
     */
    boolean hasKubernetesObjectSelector();
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return The kubernetesObjectSelector.
     */
    com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector();
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder();

    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The dynamicConfigKey.
     */
    java.lang.String getDynamicConfigKey();
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The bytes for dynamicConfigKey.
     */
    com.google.protobuf.ByteString
        getDynamicConfigKeyBytes();

    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return Whether the defaultConfig field is set.
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return The defaultConfig.
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * <pre>
   * KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.KubernetesReplicas}
   */
  public static final class KubernetesReplicas extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.KubernetesReplicas)
      KubernetesReplicasOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KubernetesReplicas.newBuilder() to construct.
    private KubernetesReplicas(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KubernetesReplicas() {
      dynamicConfigKey_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KubernetesReplicas();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KubernetesReplicas(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder subBuilder = null;
              if (kubernetesObjectSelector_ != null) {
                subBuilder = kubernetesObjectSelector_.toBuilder();
              }
              kubernetesObjectSelector_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kubernetesObjectSelector_);
                kubernetesObjectSelector_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              dynamicConfigKey_ = s;
              break;
            }
            case 26: {
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_KubernetesReplicas_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_KubernetesReplicas_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder.class);
    }

    public static final int KUBERNETES_OBJECT_SELECTOR_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector kubernetesObjectSelector_;
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return Whether the kubernetesObjectSelector field is set.
     */
    @java.lang.Override
    public boolean hasKubernetesObjectSelector() {
      return kubernetesObjectSelector_ != null;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     * @return The kubernetesObjectSelector.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector() {
      return kubernetesObjectSelector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
    }
    /**
     * <pre>
     * The Kubernetes object on which horizontal scaling is applied.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder() {
      return getKubernetesObjectSelector();
    }

    public static final int DYNAMIC_CONFIG_KEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object dynamicConfigKey_;
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The dynamicConfigKey.
     */
    @java.lang.Override
    public java.lang.String getDynamicConfigKey() {
      java.lang.Object ref = dynamicConfigKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dynamicConfigKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Configuration key for DynamicConfig
     * </pre>
     *
     * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
     * @return The bytes for dynamicConfigKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDynamicConfigKeyBytes() {
      java.lang.Object ref = dynamicConfigKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dynamicConfigKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return Whether the defaultConfig field is set.
     */
    @java.lang.Override
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     * @return The defaultConfig.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig() {
      return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (kubernetesObjectSelector_ != null) {
        output.writeMessage(1, getKubernetesObjectSelector());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dynamicConfigKey_);
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kubernetesObjectSelector_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKubernetesObjectSelector());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dynamicConfigKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dynamicConfigKey_);
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) obj;

      if (hasKubernetesObjectSelector() != other.hasKubernetesObjectSelector()) return false;
      if (hasKubernetesObjectSelector()) {
        if (!getKubernetesObjectSelector()
            .equals(other.getKubernetesObjectSelector())) return false;
      }
      if (!getDynamicConfigKey()
          .equals(other.getDynamicConfigKey())) return false;
      if (hasDefaultConfig() != other.hasDefaultConfig()) return false;
      if (hasDefaultConfig()) {
        if (!getDefaultConfig()
            .equals(other.getDefaultConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKubernetesObjectSelector()) {
        hash = (37 * hash) + KUBERNETES_OBJECT_SELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getKubernetesObjectSelector().hashCode();
      }
      hash = (37 * hash) + DYNAMIC_CONFIG_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getDynamicConfigKey().hashCode();
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.KubernetesReplicas}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.KubernetesReplicas)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicasOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_KubernetesReplicas_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_KubernetesReplicas_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (kubernetesObjectSelectorBuilder_ == null) {
          kubernetesObjectSelector_ = null;
        } else {
          kubernetesObjectSelector_ = null;
          kubernetesObjectSelectorBuilder_ = null;
        }
        dynamicConfigKey_ = "";

        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_KubernetesReplicas_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas(this);
        if (kubernetesObjectSelectorBuilder_ == null) {
          result.kubernetesObjectSelector_ = kubernetesObjectSelector_;
        } else {
          result.kubernetesObjectSelector_ = kubernetesObjectSelectorBuilder_.build();
        }
        result.dynamicConfigKey_ = dynamicConfigKey_;
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas.getDefaultInstance()) return this;
        if (other.hasKubernetesObjectSelector()) {
          mergeKubernetesObjectSelector(other.getKubernetesObjectSelector());
        }
        if (!other.getDynamicConfigKey().isEmpty()) {
          dynamicConfigKey_ = other.dynamicConfigKey_;
          onChanged();
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector kubernetesObjectSelector_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder> kubernetesObjectSelectorBuilder_;
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       * @return Whether the kubernetesObjectSelector field is set.
       */
      public boolean hasKubernetesObjectSelector() {
        return kubernetesObjectSelectorBuilder_ != null || kubernetesObjectSelector_ != null;
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       * @return The kubernetesObjectSelector.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector getKubernetesObjectSelector() {
        if (kubernetesObjectSelectorBuilder_ == null) {
          return kubernetesObjectSelector_ == null ? com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
        } else {
          return kubernetesObjectSelectorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public Builder setKubernetesObjectSelector(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector value) {
        if (kubernetesObjectSelectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kubernetesObjectSelector_ = value;
          onChanged();
        } else {
          kubernetesObjectSelectorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public Builder setKubernetesObjectSelector(
          com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder builderForValue) {
        if (kubernetesObjectSelectorBuilder_ == null) {
          kubernetesObjectSelector_ = builderForValue.build();
          onChanged();
        } else {
          kubernetesObjectSelectorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public Builder mergeKubernetesObjectSelector(com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector value) {
        if (kubernetesObjectSelectorBuilder_ == null) {
          if (kubernetesObjectSelector_ != null) {
            kubernetesObjectSelector_ =
              com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.newBuilder(kubernetesObjectSelector_).mergeFrom(value).buildPartial();
          } else {
            kubernetesObjectSelector_ = value;
          }
          onChanged();
        } else {
          kubernetesObjectSelectorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public Builder clearKubernetesObjectSelector() {
        if (kubernetesObjectSelectorBuilder_ == null) {
          kubernetesObjectSelector_ = null;
          onChanged();
        } else {
          kubernetesObjectSelector_ = null;
          kubernetesObjectSelectorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder getKubernetesObjectSelectorBuilder() {
        
        onChanged();
        return getKubernetesObjectSelectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder getKubernetesObjectSelectorOrBuilder() {
        if (kubernetesObjectSelectorBuilder_ != null) {
          return kubernetesObjectSelectorBuilder_.getMessageOrBuilder();
        } else {
          return kubernetesObjectSelector_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.getDefaultInstance() : kubernetesObjectSelector_;
        }
      }
      /**
       * <pre>
       * The Kubernetes object on which horizontal scaling is applied.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.KubernetesObjectSelector kubernetes_object_selector = 1 [json_name = "kubernetesObjectSelector"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder> 
          getKubernetesObjectSelectorFieldBuilder() {
        if (kubernetesObjectSelectorBuilder_ == null) {
          kubernetesObjectSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelector.Builder, com.fluxninja.generated.aperture.policy.language.v1.KubernetesObjectSelectorOrBuilder>(
                  getKubernetesObjectSelector(),
                  getParentForChildren(),
                  isClean());
          kubernetesObjectSelector_ = null;
        }
        return kubernetesObjectSelectorBuilder_;
      }

      private java.lang.Object dynamicConfigKey_ = "";
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return The dynamicConfigKey.
       */
      public java.lang.String getDynamicConfigKey() {
        java.lang.Object ref = dynamicConfigKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dynamicConfigKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return The bytes for dynamicConfigKey.
       */
      public com.google.protobuf.ByteString
          getDynamicConfigKeyBytes() {
        java.lang.Object ref = dynamicConfigKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dynamicConfigKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @param value The dynamicConfigKey to set.
       * @return This builder for chaining.
       */
      public Builder setDynamicConfigKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dynamicConfigKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDynamicConfigKey() {
        
        dynamicConfigKey_ = getDefaultInstance().getDynamicConfigKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration key for DynamicConfig
       * </pre>
       *
       * <code>string dynamic_config_key = 2 [json_name = "dynamicConfigKey"];</code>
       * @param value The bytes for dynamicConfigKey to set.
       * @return This builder for chaining.
       */
      public Builder setDynamicConfigKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dynamicConfigKey_ = value;
        onChanged();
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig defaultConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       * @return Whether the defaultConfig field is set.
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       * @return The defaultConfig.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder setDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder setDefaultConfig(
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder mergeDefaultConfig(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration.
       * </pre>
       *
       * <code>.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig default_config = 3 [json_name = "defaultConfig"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfig.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.ScaleActuator.DynamicConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.KubernetesReplicas)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.KubernetesReplicas)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KubernetesReplicas>
        PARSER = new com.google.protobuf.AbstractParser<KubernetesReplicas>() {
      @java.lang.Override
      public KubernetesReplicas parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KubernetesReplicas(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KubernetesReplicas> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KubernetesReplicas> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.KubernetesReplicas getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.AutoScaler.Outs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     * @return Whether the actualScale field is set.
     */
    boolean hasActualScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     * @return The actualScale.
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualScaleOrBuilder();

    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     * @return Whether the configuredScale field is set.
     */
    boolean hasConfiguredScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     * @return The configuredScale.
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredScaleOrBuilder();

    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     * @return Whether the desiredScale field is set.
     */
    boolean hasDesiredScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     * @return The desiredScale.
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPort getDesiredScale();
    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     */
    com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getDesiredScaleOrBuilder();
  }
  /**
   * <pre>
   * Outputs for _AutoScaler_.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler.Outs}
   */
  public static final class Outs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScaler.Outs)
      OutsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Outs.newBuilder() to construct.
    private Outs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Outs() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Outs();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Outs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder subBuilder = null;
              if (actualScale_ != null) {
                subBuilder = actualScale_.toBuilder();
              }
              actualScale_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.OutPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actualScale_);
                actualScale_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder subBuilder = null;
              if (configuredScale_ != null) {
                subBuilder = configuredScale_.toBuilder();
              }
              configuredScale_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.OutPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(configuredScale_);
                configuredScale_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder subBuilder = null;
              if (desiredScale_ != null) {
                subBuilder = desiredScale_.toBuilder();
              }
              desiredScale_ = input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.OutPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(desiredScale_);
                desiredScale_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Outs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Outs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder.class);
    }

    public static final int ACTUAL_SCALE_FIELD_NUMBER = 1;
    private com.fluxninja.generated.aperture.policy.language.v1.OutPort actualScale_;
    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     * @return Whether the actualScale field is set.
     */
    @java.lang.Override
    public boolean hasActualScale() {
      return actualScale_ != null;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     * @return The actualScale.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualScale() {
      return actualScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualScale_;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualScaleOrBuilder() {
      return getActualScale();
    }

    public static final int CONFIGURED_SCALE_FIELD_NUMBER = 2;
    private com.fluxninja.generated.aperture.policy.language.v1.OutPort configuredScale_;
    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     * @return Whether the configuredScale field is set.
     */
    @java.lang.Override
    public boolean hasConfiguredScale() {
      return configuredScale_ != null;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     * @return The configuredScale.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredScale() {
      return configuredScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredScale_;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredScaleOrBuilder() {
      return getConfiguredScale();
    }

    public static final int DESIRED_SCALE_FIELD_NUMBER = 3;
    private com.fluxninja.generated.aperture.policy.language.v1.OutPort desiredScale_;
    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     * @return Whether the desiredScale field is set.
     */
    @java.lang.Override
    public boolean hasDesiredScale() {
      return desiredScale_ != null;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     * @return The desiredScale.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPort getDesiredScale() {
      return desiredScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : desiredScale_;
    }
    /**
     * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getDesiredScaleOrBuilder() {
      return getDesiredScale();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (actualScale_ != null) {
        output.writeMessage(1, getActualScale());
      }
      if (configuredScale_ != null) {
        output.writeMessage(2, getConfiguredScale());
      }
      if (desiredScale_ != null) {
        output.writeMessage(3, getDesiredScale());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (actualScale_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getActualScale());
      }
      if (configuredScale_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfiguredScale());
      }
      if (desiredScale_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDesiredScale());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs)) {
        return super.equals(obj);
      }
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs) obj;

      if (hasActualScale() != other.hasActualScale()) return false;
      if (hasActualScale()) {
        if (!getActualScale()
            .equals(other.getActualScale())) return false;
      }
      if (hasConfiguredScale() != other.hasConfiguredScale()) return false;
      if (hasConfiguredScale()) {
        if (!getConfiguredScale()
            .equals(other.getConfiguredScale())) return false;
      }
      if (hasDesiredScale() != other.hasDesiredScale()) return false;
      if (hasDesiredScale()) {
        if (!getDesiredScale()
            .equals(other.getDesiredScale())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasActualScale()) {
        hash = (37 * hash) + ACTUAL_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getActualScale().hashCode();
      }
      if (hasConfiguredScale()) {
        hash = (37 * hash) + CONFIGURED_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getConfiguredScale().hashCode();
      }
      if (hasDesiredScale()) {
        hash = (37 * hash) + DESIRED_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getDesiredScale().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Outputs for _AutoScaler_.
     * </pre>
     *
     * Protobuf type {@code aperture.policy.language.v1.AutoScaler.Outs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler.Outs)
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Outs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Outs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder.class);
      }

      // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (actualScaleBuilder_ == null) {
          actualScale_ = null;
        } else {
          actualScale_ = null;
          actualScaleBuilder_ = null;
        }
        if (configuredScaleBuilder_ == null) {
          configuredScale_ = null;
        } else {
          configuredScale_ = null;
          configuredScaleBuilder_ = null;
        }
        if (desiredScaleBuilder_ == null) {
          desiredScale_ = null;
        } else {
          desiredScale_ = null;
          desiredScaleBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_Outs_descriptor;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs getDefaultInstanceForType() {
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.getDefaultInstance();
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs build() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs buildPartial() {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs(this);
        if (actualScaleBuilder_ == null) {
          result.actualScale_ = actualScale_;
        } else {
          result.actualScale_ = actualScaleBuilder_.build();
        }
        if (configuredScaleBuilder_ == null) {
          result.configuredScale_ = configuredScale_;
        } else {
          result.configuredScale_ = configuredScaleBuilder_.build();
        }
        if (desiredScaleBuilder_ == null) {
          result.desiredScale_ = desiredScale_;
        } else {
          result.desiredScale_ = desiredScaleBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs) {
          return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs other) {
        if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.getDefaultInstance()) return this;
        if (other.hasActualScale()) {
          mergeActualScale(other.getActualScale());
        }
        if (other.hasConfiguredScale()) {
          mergeConfiguredScale(other.getConfiguredScale());
        }
        if (other.hasDesiredScale()) {
          mergeDesiredScale(other.getDesiredScale());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.OutPort actualScale_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> actualScaleBuilder_;
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       * @return Whether the actualScale field is set.
       */
      public boolean hasActualScale() {
        return actualScaleBuilder_ != null || actualScale_ != null;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       * @return The actualScale.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort getActualScale() {
        if (actualScaleBuilder_ == null) {
          return actualScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualScale_;
        } else {
          return actualScaleBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public Builder setActualScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (actualScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualScale_ = value;
          onChanged();
        } else {
          actualScaleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public Builder setActualScale(
          com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder builderForValue) {
        if (actualScaleBuilder_ == null) {
          actualScale_ = builderForValue.build();
          onChanged();
        } else {
          actualScaleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public Builder mergeActualScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (actualScaleBuilder_ == null) {
          if (actualScale_ != null) {
            actualScale_ =
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.newBuilder(actualScale_).mergeFrom(value).buildPartial();
          } else {
            actualScale_ = value;
          }
          onChanged();
        } else {
          actualScaleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public Builder clearActualScale() {
        if (actualScaleBuilder_ == null) {
          actualScale_ = null;
          onChanged();
        } else {
          actualScale_ = null;
          actualScaleBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder getActualScaleBuilder() {
        
        onChanged();
        return getActualScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getActualScaleOrBuilder() {
        if (actualScaleBuilder_ != null) {
          return actualScaleBuilder_.getMessageOrBuilder();
        } else {
          return actualScale_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : actualScale_;
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort actual_scale = 1 [json_name = "actualScale"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> 
          getActualScaleFieldBuilder() {
        if (actualScaleBuilder_ == null) {
          actualScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder>(
                  getActualScale(),
                  getParentForChildren(),
                  isClean());
          actualScale_ = null;
        }
        return actualScaleBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.OutPort configuredScale_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> configuredScaleBuilder_;
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       * @return Whether the configuredScale field is set.
       */
      public boolean hasConfiguredScale() {
        return configuredScaleBuilder_ != null || configuredScale_ != null;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       * @return The configuredScale.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort getConfiguredScale() {
        if (configuredScaleBuilder_ == null) {
          return configuredScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredScale_;
        } else {
          return configuredScaleBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public Builder setConfiguredScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (configuredScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          configuredScale_ = value;
          onChanged();
        } else {
          configuredScaleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public Builder setConfiguredScale(
          com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder builderForValue) {
        if (configuredScaleBuilder_ == null) {
          configuredScale_ = builderForValue.build();
          onChanged();
        } else {
          configuredScaleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public Builder mergeConfiguredScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (configuredScaleBuilder_ == null) {
          if (configuredScale_ != null) {
            configuredScale_ =
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.newBuilder(configuredScale_).mergeFrom(value).buildPartial();
          } else {
            configuredScale_ = value;
          }
          onChanged();
        } else {
          configuredScaleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public Builder clearConfiguredScale() {
        if (configuredScaleBuilder_ == null) {
          configuredScale_ = null;
          onChanged();
        } else {
          configuredScale_ = null;
          configuredScaleBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder getConfiguredScaleBuilder() {
        
        onChanged();
        return getConfiguredScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getConfiguredScaleOrBuilder() {
        if (configuredScaleBuilder_ != null) {
          return configuredScaleBuilder_.getMessageOrBuilder();
        } else {
          return configuredScale_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : configuredScale_;
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort configured_scale = 2 [json_name = "configuredScale"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> 
          getConfiguredScaleFieldBuilder() {
        if (configuredScaleBuilder_ == null) {
          configuredScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder>(
                  getConfiguredScale(),
                  getParentForChildren(),
                  isClean());
          configuredScale_ = null;
        }
        return configuredScaleBuilder_;
      }

      private com.fluxninja.generated.aperture.policy.language.v1.OutPort desiredScale_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> desiredScaleBuilder_;
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       * @return Whether the desiredScale field is set.
       */
      public boolean hasDesiredScale() {
        return desiredScaleBuilder_ != null || desiredScale_ != null;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       * @return The desiredScale.
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort getDesiredScale() {
        if (desiredScaleBuilder_ == null) {
          return desiredScale_ == null ? com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : desiredScale_;
        } else {
          return desiredScaleBuilder_.getMessage();
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public Builder setDesiredScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (desiredScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          desiredScale_ = value;
          onChanged();
        } else {
          desiredScaleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public Builder setDesiredScale(
          com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder builderForValue) {
        if (desiredScaleBuilder_ == null) {
          desiredScale_ = builderForValue.build();
          onChanged();
        } else {
          desiredScaleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public Builder mergeDesiredScale(com.fluxninja.generated.aperture.policy.language.v1.OutPort value) {
        if (desiredScaleBuilder_ == null) {
          if (desiredScale_ != null) {
            desiredScale_ =
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.newBuilder(desiredScale_).mergeFrom(value).buildPartial();
          } else {
            desiredScale_ = value;
          }
          onChanged();
        } else {
          desiredScaleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public Builder clearDesiredScale() {
        if (desiredScaleBuilder_ == null) {
          desiredScale_ = null;
          onChanged();
        } else {
          desiredScale_ = null;
          desiredScaleBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder getDesiredScaleBuilder() {
        
        onChanged();
        return getDesiredScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      public com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder getDesiredScaleOrBuilder() {
        if (desiredScaleBuilder_ != null) {
          return desiredScaleBuilder_.getMessageOrBuilder();
        } else {
          return desiredScale_ == null ?
              com.fluxninja.generated.aperture.policy.language.v1.OutPort.getDefaultInstance() : desiredScale_;
        }
      }
      /**
       * <code>.aperture.policy.language.v1.OutPort desired_scale = 3 [json_name = "desiredScale"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder> 
          getDesiredScaleFieldBuilder() {
        if (desiredScaleBuilder_ == null) {
          desiredScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.fluxninja.generated.aperture.policy.language.v1.OutPort, com.fluxninja.generated.aperture.policy.language.v1.OutPort.Builder, com.fluxninja.generated.aperture.policy.language.v1.OutPortOrBuilder>(
                  getDesiredScale(),
                  getParentForChildren(),
                  isClean());
          desiredScale_ = null;
        }
        return desiredScaleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler.Outs)
    }

    // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler.Outs)
    private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs();
    }

    public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Outs>
        PARSER = new com.google.protobuf.AbstractParser<Outs>() {
      @java.lang.Override
      public Outs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Outs(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Outs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Outs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int OUT_PORTS_FIELD_NUMBER = 1;
  private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs outPorts_;
  /**
   * <pre>
   * Output ports for the _AutoScaler_.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
   * @return Whether the outPorts field is set.
   */
  @java.lang.Override
  public boolean hasOutPorts() {
    return outPorts_ != null;
  }
  /**
   * <pre>
   * Output ports for the _AutoScaler_.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
   * @return The outPorts.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs getOutPorts() {
    return outPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.getDefaultInstance() : outPorts_;
  }
  /**
   * <pre>
   * Output ports for the _AutoScaler_.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder getOutPortsOrBuilder() {
    return getOutPorts();
  }

  public static final int SCALER_FIELD_NUMBER = 2;
  private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler scaler_;
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
   * @return Whether the scaler field is set.
   */
  @java.lang.Override
  public boolean hasScaler() {
    return scaler_ != null;
  }
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
   * @return The scaler.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler getScaler() {
    return scaler_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.getDefaultInstance() : scaler_;
  }
  /**
   * <pre>
   * &#64;gotags: validate:"required"
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder getScalerOrBuilder() {
    return getScaler();
  }

  public static final int MIN_SCALE_FIELD_NUMBER = 3;
  private long minScale_;
  /**
   * <pre>
   * The minimum scale to which the _AutoScaler_ can scale-in. E.g. in case of KubernetesReplicas Scaler, this is the minimum number of replicas.
   * </pre>
   *
   * <code>int64 min_scale = 3 [json_name = "minScale"];</code>
   * @return The minScale.
   */
  @java.lang.Override
  public long getMinScale() {
    return minScale_;
  }

  public static final int MAX_SCALE_FIELD_NUMBER = 4;
  private long maxScale_;
  /**
   * <pre>
   * The maximum scale to which the _AutoScaler_ can scale-out. E.g. in case of KubernetesReplicas Scaler, this is the maximum number of replicas.
   * </pre>
   *
   * <code>int64 max_scale = 4 [json_name = "maxScale"];</code>
   * @return The maxScale.
   */
  @java.lang.Override
  public long getMaxScale() {
    return maxScale_;
  }

  public static final int SCALE_OUT_CONTROLLERS_FIELD_NUMBER = 5;
  private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController> scaleOutControllers_;
  /**
   * <pre>
   * List of _Controllers_ for scaling out.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController> getScaleOutControllersList() {
    return scaleOutControllers_;
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling out.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder> 
      getScaleOutControllersOrBuilderList() {
    return scaleOutControllers_;
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling out.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
   */
  @java.lang.Override
  public int getScaleOutControllersCount() {
    return scaleOutControllers_.size();
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling out.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController getScaleOutControllers(int index) {
    return scaleOutControllers_.get(index);
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling out.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder getScaleOutControllersOrBuilder(
      int index) {
    return scaleOutControllers_.get(index);
  }

  public static final int SCALE_IN_CONTROLLERS_FIELD_NUMBER = 6;
  private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController> scaleInControllers_;
  /**
   * <pre>
   * List of _Controllers_ for scaling in.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController> getScaleInControllersList() {
    return scaleInControllers_;
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling in.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder> 
      getScaleInControllersOrBuilderList() {
    return scaleInControllers_;
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling in.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
   */
  @java.lang.Override
  public int getScaleInControllersCount() {
    return scaleInControllers_.size();
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling in.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController getScaleInControllers(int index) {
    return scaleInControllers_.get(index);
  }
  /**
   * <pre>
   * List of _Controllers_ for scaling in.
   * </pre>
   *
   * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder getScaleInControllersOrBuilder(
      int index) {
    return scaleInControllers_.get(index);
  }

  public static final int MAX_SCALE_OUT_PERCENTAGE_FIELD_NUMBER = 8;
  private double maxScaleOutPercentage_;
  /**
   * <pre>
   * The maximum increase of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
   * </pre>
   *
   * <code>double max_scale_out_percentage = 8 [json_name = "maxScaleOutPercentage"];</code>
   * @return The maxScaleOutPercentage.
   */
  @java.lang.Override
  public double getMaxScaleOutPercentage() {
    return maxScaleOutPercentage_;
  }

  public static final int MAX_SCALE_IN_PERCENTAGE_FIELD_NUMBER = 7;
  private double maxScaleInPercentage_;
  /**
   * <pre>
   * The maximum decrease of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
   * </pre>
   *
   * <code>double max_scale_in_percentage = 7 [json_name = "maxScaleInPercentage"];</code>
   * @return The maxScaleInPercentage.
   */
  @java.lang.Override
  public double getMaxScaleInPercentage() {
    return maxScaleInPercentage_;
  }

  public static final int SCALE_OUT_COOLDOWN_FIELD_NUMBER = 9;
  private com.google.protobuf.Duration scaleOutCooldown_;
  /**
   * <pre>
   * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
   * @return Whether the scaleOutCooldown field is set.
   */
  @java.lang.Override
  public boolean hasScaleOutCooldown() {
    return scaleOutCooldown_ != null;
  }
  /**
   * <pre>
   * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
   * @return The scaleOutCooldown.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getScaleOutCooldown() {
    return scaleOutCooldown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : scaleOutCooldown_;
  }
  /**
   * <pre>
   * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getScaleOutCooldownOrBuilder() {
    return getScaleOutCooldown();
  }

  public static final int SCALE_IN_COOLDOWN_FIELD_NUMBER = 10;
  private com.google.protobuf.Duration scaleInCooldown_;
  /**
   * <pre>
   * The amount of time to wait after a scale-in operation for another scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
   * @return Whether the scaleInCooldown field is set.
   */
  @java.lang.Override
  public boolean hasScaleInCooldown() {
    return scaleInCooldown_ != null;
  }
  /**
   * <pre>
   * The amount of time to wait after a scale-in operation for another scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
   * @return The scaleInCooldown.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getScaleInCooldown() {
    return scaleInCooldown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : scaleInCooldown_;
  }
  /**
   * <pre>
   * The amount of time to wait after a scale-in operation for another scale-in operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getScaleInCooldownOrBuilder() {
    return getScaleInCooldown();
  }

  public static final int COOLDOWN_OVERRIDE_PERCENTAGE_FIELD_NUMBER = 11;
  private double cooldownOverridePercentage_;
  /**
   * <pre>
   * Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
   * For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
   * scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
   * </pre>
   *
   * <code>double cooldown_override_percentage = 11 [json_name = "cooldownOverridePercentage"];</code>
   * @return The cooldownOverridePercentage.
   */
  @java.lang.Override
  public double getCooldownOverridePercentage() {
    return cooldownOverridePercentage_;
  }

  public static final int SCALE_OUT_ALERTER_PARAMETERS_FIELD_NUMBER = 12;
  private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters scaleOutAlerterParameters_;
  /**
   * <pre>
   * Configuration for scale-out alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
   * @return Whether the scaleOutAlerterParameters field is set.
   */
  @java.lang.Override
  public boolean hasScaleOutAlerterParameters() {
    return scaleOutAlerterParameters_ != null;
  }
  /**
   * <pre>
   * Configuration for scale-out alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
   * @return The scaleOutAlerterParameters.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getScaleOutAlerterParameters() {
    return scaleOutAlerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleOutAlerterParameters_;
  }
  /**
   * <pre>
   * Configuration for scale-out alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getScaleOutAlerterParametersOrBuilder() {
    return getScaleOutAlerterParameters();
  }

  public static final int SCALE_IN_ALERTER_PARAMETERS_FIELD_NUMBER = 13;
  private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters scaleInAlerterParameters_;
  /**
   * <pre>
   * Configuration for scale-in alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
   * @return Whether the scaleInAlerterParameters field is set.
   */
  @java.lang.Override
  public boolean hasScaleInAlerterParameters() {
    return scaleInAlerterParameters_ != null;
  }
  /**
   * <pre>
   * Configuration for scale-in alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
   * @return The scaleInAlerterParameters.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getScaleInAlerterParameters() {
    return scaleInAlerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleInAlerterParameters_;
  }
  /**
   * <pre>
   * Configuration for scale-in alerter.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getScaleInAlerterParametersOrBuilder() {
    return getScaleInAlerterParameters();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (outPorts_ != null) {
      output.writeMessage(1, getOutPorts());
    }
    if (scaler_ != null) {
      output.writeMessage(2, getScaler());
    }
    if (minScale_ != 0L) {
      output.writeInt64(3, minScale_);
    }
    if (maxScale_ != 0L) {
      output.writeInt64(4, maxScale_);
    }
    for (int i = 0; i < scaleOutControllers_.size(); i++) {
      output.writeMessage(5, scaleOutControllers_.get(i));
    }
    for (int i = 0; i < scaleInControllers_.size(); i++) {
      output.writeMessage(6, scaleInControllers_.get(i));
    }
    if (java.lang.Double.doubleToRawLongBits(maxScaleInPercentage_) != 0) {
      output.writeDouble(7, maxScaleInPercentage_);
    }
    if (java.lang.Double.doubleToRawLongBits(maxScaleOutPercentage_) != 0) {
      output.writeDouble(8, maxScaleOutPercentage_);
    }
    if (scaleOutCooldown_ != null) {
      output.writeMessage(9, getScaleOutCooldown());
    }
    if (scaleInCooldown_ != null) {
      output.writeMessage(10, getScaleInCooldown());
    }
    if (java.lang.Double.doubleToRawLongBits(cooldownOverridePercentage_) != 0) {
      output.writeDouble(11, cooldownOverridePercentage_);
    }
    if (scaleOutAlerterParameters_ != null) {
      output.writeMessage(12, getScaleOutAlerterParameters());
    }
    if (scaleInAlerterParameters_ != null) {
      output.writeMessage(13, getScaleInAlerterParameters());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (outPorts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOutPorts());
    }
    if (scaler_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScaler());
    }
    if (minScale_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, minScale_);
    }
    if (maxScale_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, maxScale_);
    }
    for (int i = 0; i < scaleOutControllers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, scaleOutControllers_.get(i));
    }
    for (int i = 0; i < scaleInControllers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, scaleInControllers_.get(i));
    }
    if (java.lang.Double.doubleToRawLongBits(maxScaleInPercentage_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, maxScaleInPercentage_);
    }
    if (java.lang.Double.doubleToRawLongBits(maxScaleOutPercentage_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, maxScaleOutPercentage_);
    }
    if (scaleOutCooldown_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getScaleOutCooldown());
    }
    if (scaleInCooldown_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getScaleInCooldown());
    }
    if (java.lang.Double.doubleToRawLongBits(cooldownOverridePercentage_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(11, cooldownOverridePercentage_);
    }
    if (scaleOutAlerterParameters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getScaleOutAlerterParameters());
    }
    if (scaleInAlerterParameters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getScaleInAlerterParameters());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.AutoScaler other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) obj;

    if (hasOutPorts() != other.hasOutPorts()) return false;
    if (hasOutPorts()) {
      if (!getOutPorts()
          .equals(other.getOutPorts())) return false;
    }
    if (hasScaler() != other.hasScaler()) return false;
    if (hasScaler()) {
      if (!getScaler()
          .equals(other.getScaler())) return false;
    }
    if (getMinScale()
        != other.getMinScale()) return false;
    if (getMaxScale()
        != other.getMaxScale()) return false;
    if (!getScaleOutControllersList()
        .equals(other.getScaleOutControllersList())) return false;
    if (!getScaleInControllersList()
        .equals(other.getScaleInControllersList())) return false;
    if (java.lang.Double.doubleToLongBits(getMaxScaleOutPercentage())
        != java.lang.Double.doubleToLongBits(
            other.getMaxScaleOutPercentage())) return false;
    if (java.lang.Double.doubleToLongBits(getMaxScaleInPercentage())
        != java.lang.Double.doubleToLongBits(
            other.getMaxScaleInPercentage())) return false;
    if (hasScaleOutCooldown() != other.hasScaleOutCooldown()) return false;
    if (hasScaleOutCooldown()) {
      if (!getScaleOutCooldown()
          .equals(other.getScaleOutCooldown())) return false;
    }
    if (hasScaleInCooldown() != other.hasScaleInCooldown()) return false;
    if (hasScaleInCooldown()) {
      if (!getScaleInCooldown()
          .equals(other.getScaleInCooldown())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getCooldownOverridePercentage())
        != java.lang.Double.doubleToLongBits(
            other.getCooldownOverridePercentage())) return false;
    if (hasScaleOutAlerterParameters() != other.hasScaleOutAlerterParameters()) return false;
    if (hasScaleOutAlerterParameters()) {
      if (!getScaleOutAlerterParameters()
          .equals(other.getScaleOutAlerterParameters())) return false;
    }
    if (hasScaleInAlerterParameters() != other.hasScaleInAlerterParameters()) return false;
    if (hasScaleInAlerterParameters()) {
      if (!getScaleInAlerterParameters()
          .equals(other.getScaleInAlerterParameters())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOutPorts()) {
      hash = (37 * hash) + OUT_PORTS_FIELD_NUMBER;
      hash = (53 * hash) + getOutPorts().hashCode();
    }
    if (hasScaler()) {
      hash = (37 * hash) + SCALER_FIELD_NUMBER;
      hash = (53 * hash) + getScaler().hashCode();
    }
    hash = (37 * hash) + MIN_SCALE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinScale());
    hash = (37 * hash) + MAX_SCALE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxScale());
    if (getScaleOutControllersCount() > 0) {
      hash = (37 * hash) + SCALE_OUT_CONTROLLERS_FIELD_NUMBER;
      hash = (53 * hash) + getScaleOutControllersList().hashCode();
    }
    if (getScaleInControllersCount() > 0) {
      hash = (37 * hash) + SCALE_IN_CONTROLLERS_FIELD_NUMBER;
      hash = (53 * hash) + getScaleInControllersList().hashCode();
    }
    hash = (37 * hash) + MAX_SCALE_OUT_PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxScaleOutPercentage()));
    hash = (37 * hash) + MAX_SCALE_IN_PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxScaleInPercentage()));
    if (hasScaleOutCooldown()) {
      hash = (37 * hash) + SCALE_OUT_COOLDOWN_FIELD_NUMBER;
      hash = (53 * hash) + getScaleOutCooldown().hashCode();
    }
    if (hasScaleInCooldown()) {
      hash = (37 * hash) + SCALE_IN_COOLDOWN_FIELD_NUMBER;
      hash = (53 * hash) + getScaleInCooldown().hashCode();
    }
    hash = (37 * hash) + COOLDOWN_OVERRIDE_PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCooldownOverridePercentage()));
    if (hasScaleOutAlerterParameters()) {
      hash = (37 * hash) + SCALE_OUT_ALERTER_PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + getScaleOutAlerterParameters().hashCode();
    }
    if (hasScaleInAlerterParameters()) {
      hash = (37 * hash) + SCALE_IN_ALERTER_PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + getScaleInAlerterParameters().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScaler}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScaler)
      com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getScaleOutControllersFieldBuilder();
        getScaleInControllersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (outPortsBuilder_ == null) {
        outPorts_ = null;
      } else {
        outPorts_ = null;
        outPortsBuilder_ = null;
      }
      if (scalerBuilder_ == null) {
        scaler_ = null;
      } else {
        scaler_ = null;
        scalerBuilder_ = null;
      }
      minScale_ = 0L;

      maxScale_ = 0L;

      if (scaleOutControllersBuilder_ == null) {
        scaleOutControllers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        scaleOutControllersBuilder_.clear();
      }
      if (scaleInControllersBuilder_ == null) {
        scaleInControllers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        scaleInControllersBuilder_.clear();
      }
      maxScaleOutPercentage_ = 0D;

      maxScaleInPercentage_ = 0D;

      if (scaleOutCooldownBuilder_ == null) {
        scaleOutCooldown_ = null;
      } else {
        scaleOutCooldown_ = null;
        scaleOutCooldownBuilder_ = null;
      }
      if (scaleInCooldownBuilder_ == null) {
        scaleInCooldown_ = null;
      } else {
        scaleInCooldown_ = null;
        scaleInCooldownBuilder_ = null;
      }
      cooldownOverridePercentage_ = 0D;

      if (scaleOutAlerterParametersBuilder_ == null) {
        scaleOutAlerterParameters_ = null;
      } else {
        scaleOutAlerterParameters_ = null;
        scaleOutAlerterParametersBuilder_ = null;
      }
      if (scaleInAlerterParametersBuilder_ == null) {
        scaleInAlerterParameters_ = null;
      } else {
        scaleInAlerterParameters_ = null;
        scaleInAlerterParametersBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScaler_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler build() {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler(this);
      int from_bitField0_ = bitField0_;
      if (outPortsBuilder_ == null) {
        result.outPorts_ = outPorts_;
      } else {
        result.outPorts_ = outPortsBuilder_.build();
      }
      if (scalerBuilder_ == null) {
        result.scaler_ = scaler_;
      } else {
        result.scaler_ = scalerBuilder_.build();
      }
      result.minScale_ = minScale_;
      result.maxScale_ = maxScale_;
      if (scaleOutControllersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          scaleOutControllers_ = java.util.Collections.unmodifiableList(scaleOutControllers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.scaleOutControllers_ = scaleOutControllers_;
      } else {
        result.scaleOutControllers_ = scaleOutControllersBuilder_.build();
      }
      if (scaleInControllersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          scaleInControllers_ = java.util.Collections.unmodifiableList(scaleInControllers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.scaleInControllers_ = scaleInControllers_;
      } else {
        result.scaleInControllers_ = scaleInControllersBuilder_.build();
      }
      result.maxScaleOutPercentage_ = maxScaleOutPercentage_;
      result.maxScaleInPercentage_ = maxScaleInPercentage_;
      if (scaleOutCooldownBuilder_ == null) {
        result.scaleOutCooldown_ = scaleOutCooldown_;
      } else {
        result.scaleOutCooldown_ = scaleOutCooldownBuilder_.build();
      }
      if (scaleInCooldownBuilder_ == null) {
        result.scaleInCooldown_ = scaleInCooldown_;
      } else {
        result.scaleInCooldown_ = scaleInCooldownBuilder_.build();
      }
      result.cooldownOverridePercentage_ = cooldownOverridePercentage_;
      if (scaleOutAlerterParametersBuilder_ == null) {
        result.scaleOutAlerterParameters_ = scaleOutAlerterParameters_;
      } else {
        result.scaleOutAlerterParameters_ = scaleOutAlerterParametersBuilder_.build();
      }
      if (scaleInAlerterParametersBuilder_ == null) {
        result.scaleInAlerterParameters_ = scaleInAlerterParameters_;
      } else {
        result.scaleInAlerterParameters_ = scaleInAlerterParametersBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance()) return this;
      if (other.hasOutPorts()) {
        mergeOutPorts(other.getOutPorts());
      }
      if (other.hasScaler()) {
        mergeScaler(other.getScaler());
      }
      if (other.getMinScale() != 0L) {
        setMinScale(other.getMinScale());
      }
      if (other.getMaxScale() != 0L) {
        setMaxScale(other.getMaxScale());
      }
      if (scaleOutControllersBuilder_ == null) {
        if (!other.scaleOutControllers_.isEmpty()) {
          if (scaleOutControllers_.isEmpty()) {
            scaleOutControllers_ = other.scaleOutControllers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureScaleOutControllersIsMutable();
            scaleOutControllers_.addAll(other.scaleOutControllers_);
          }
          onChanged();
        }
      } else {
        if (!other.scaleOutControllers_.isEmpty()) {
          if (scaleOutControllersBuilder_.isEmpty()) {
            scaleOutControllersBuilder_.dispose();
            scaleOutControllersBuilder_ = null;
            scaleOutControllers_ = other.scaleOutControllers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            scaleOutControllersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getScaleOutControllersFieldBuilder() : null;
          } else {
            scaleOutControllersBuilder_.addAllMessages(other.scaleOutControllers_);
          }
        }
      }
      if (scaleInControllersBuilder_ == null) {
        if (!other.scaleInControllers_.isEmpty()) {
          if (scaleInControllers_.isEmpty()) {
            scaleInControllers_ = other.scaleInControllers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureScaleInControllersIsMutable();
            scaleInControllers_.addAll(other.scaleInControllers_);
          }
          onChanged();
        }
      } else {
        if (!other.scaleInControllers_.isEmpty()) {
          if (scaleInControllersBuilder_.isEmpty()) {
            scaleInControllersBuilder_.dispose();
            scaleInControllersBuilder_ = null;
            scaleInControllers_ = other.scaleInControllers_;
            bitField0_ = (bitField0_ & ~0x00000002);
            scaleInControllersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getScaleInControllersFieldBuilder() : null;
          } else {
            scaleInControllersBuilder_.addAllMessages(other.scaleInControllers_);
          }
        }
      }
      if (other.getMaxScaleOutPercentage() != 0D) {
        setMaxScaleOutPercentage(other.getMaxScaleOutPercentage());
      }
      if (other.getMaxScaleInPercentage() != 0D) {
        setMaxScaleInPercentage(other.getMaxScaleInPercentage());
      }
      if (other.hasScaleOutCooldown()) {
        mergeScaleOutCooldown(other.getScaleOutCooldown());
      }
      if (other.hasScaleInCooldown()) {
        mergeScaleInCooldown(other.getScaleInCooldown());
      }
      if (other.getCooldownOverridePercentage() != 0D) {
        setCooldownOverridePercentage(other.getCooldownOverridePercentage());
      }
      if (other.hasScaleOutAlerterParameters()) {
        mergeScaleOutAlerterParameters(other.getScaleOutAlerterParameters());
      }
      if (other.hasScaleInAlerterParameters()) {
        mergeScaleInAlerterParameters(other.getScaleInAlerterParameters());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaler parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs outPorts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder> outPortsBuilder_;
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return Whether the outPorts field is set.
     */
    public boolean hasOutPorts() {
      return outPortsBuilder_ != null || outPorts_ != null;
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     * @return The outPorts.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs getOutPorts() {
      if (outPortsBuilder_ == null) {
        return outPorts_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.getDefaultInstance() : outPorts_;
      } else {
        return outPortsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public Builder setOutPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs value) {
      if (outPortsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outPorts_ = value;
        onChanged();
      } else {
        outPortsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public Builder setOutPorts(
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder builderForValue) {
      if (outPortsBuilder_ == null) {
        outPorts_ = builderForValue.build();
        onChanged();
      } else {
        outPortsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public Builder mergeOutPorts(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs value) {
      if (outPortsBuilder_ == null) {
        if (outPorts_ != null) {
          outPorts_ =
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.newBuilder(outPorts_).mergeFrom(value).buildPartial();
        } else {
          outPorts_ = value;
        }
        onChanged();
      } else {
        outPortsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public Builder clearOutPorts() {
      if (outPortsBuilder_ == null) {
        outPorts_ = null;
        onChanged();
      } else {
        outPorts_ = null;
        outPortsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder getOutPortsBuilder() {
      
      onChanged();
      return getOutPortsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder getOutPortsOrBuilder() {
      if (outPortsBuilder_ != null) {
        return outPortsBuilder_.getMessageOrBuilder();
      } else {
        return outPorts_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.getDefaultInstance() : outPorts_;
      }
    }
    /**
     * <pre>
     * Output ports for the _AutoScaler_.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Outs out_ports = 1 [json_name = "outPorts"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder> 
        getOutPortsFieldBuilder() {
      if (outPortsBuilder_ == null) {
        outPortsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Outs.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.OutsOrBuilder>(
                getOutPorts(),
                getParentForChildren(),
                isClean());
        outPorts_ = null;
      }
      return outPortsBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler scaler_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder> scalerBuilder_;
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     * @return Whether the scaler field is set.
     */
    public boolean hasScaler() {
      return scalerBuilder_ != null || scaler_ != null;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     * @return The scaler.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler getScaler() {
      if (scalerBuilder_ == null) {
        return scaler_ == null ? com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.getDefaultInstance() : scaler_;
      } else {
        return scalerBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public Builder setScaler(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler value) {
      if (scalerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaler_ = value;
        onChanged();
      } else {
        scalerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public Builder setScaler(
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder builderForValue) {
      if (scalerBuilder_ == null) {
        scaler_ = builderForValue.build();
        onChanged();
      } else {
        scalerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public Builder mergeScaler(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler value) {
      if (scalerBuilder_ == null) {
        if (scaler_ != null) {
          scaler_ =
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.newBuilder(scaler_).mergeFrom(value).buildPartial();
        } else {
          scaler_ = value;
        }
        onChanged();
      } else {
        scalerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public Builder clearScaler() {
      if (scalerBuilder_ == null) {
        scaler_ = null;
        onChanged();
      } else {
        scaler_ = null;
        scalerBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder getScalerBuilder() {
      
      onChanged();
      return getScalerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder getScalerOrBuilder() {
      if (scalerBuilder_ != null) {
        return scalerBuilder_.getMessageOrBuilder();
      } else {
        return scaler_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.getDefaultInstance() : scaler_;
      }
    }
    /**
     * <pre>
     * &#64;gotags: validate:"required"
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler.Scaler scaler = 2 [json_name = "scaler"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder> 
        getScalerFieldBuilder() {
      if (scalerBuilder_ == null) {
        scalerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Scaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScalerOrBuilder>(
                getScaler(),
                getParentForChildren(),
                isClean());
        scaler_ = null;
      }
      return scalerBuilder_;
    }

    private long minScale_ ;
    /**
     * <pre>
     * The minimum scale to which the _AutoScaler_ can scale-in. E.g. in case of KubernetesReplicas Scaler, this is the minimum number of replicas.
     * </pre>
     *
     * <code>int64 min_scale = 3 [json_name = "minScale"];</code>
     * @return The minScale.
     */
    @java.lang.Override
    public long getMinScale() {
      return minScale_;
    }
    /**
     * <pre>
     * The minimum scale to which the _AutoScaler_ can scale-in. E.g. in case of KubernetesReplicas Scaler, this is the minimum number of replicas.
     * </pre>
     *
     * <code>int64 min_scale = 3 [json_name = "minScale"];</code>
     * @param value The minScale to set.
     * @return This builder for chaining.
     */
    public Builder setMinScale(long value) {
      
      minScale_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum scale to which the _AutoScaler_ can scale-in. E.g. in case of KubernetesReplicas Scaler, this is the minimum number of replicas.
     * </pre>
     *
     * <code>int64 min_scale = 3 [json_name = "minScale"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinScale() {
      
      minScale_ = 0L;
      onChanged();
      return this;
    }

    private long maxScale_ ;
    /**
     * <pre>
     * The maximum scale to which the _AutoScaler_ can scale-out. E.g. in case of KubernetesReplicas Scaler, this is the maximum number of replicas.
     * </pre>
     *
     * <code>int64 max_scale = 4 [json_name = "maxScale"];</code>
     * @return The maxScale.
     */
    @java.lang.Override
    public long getMaxScale() {
      return maxScale_;
    }
    /**
     * <pre>
     * The maximum scale to which the _AutoScaler_ can scale-out. E.g. in case of KubernetesReplicas Scaler, this is the maximum number of replicas.
     * </pre>
     *
     * <code>int64 max_scale = 4 [json_name = "maxScale"];</code>
     * @param value The maxScale to set.
     * @return This builder for chaining.
     */
    public Builder setMaxScale(long value) {
      
      maxScale_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum scale to which the _AutoScaler_ can scale-out. E.g. in case of KubernetesReplicas Scaler, this is the maximum number of replicas.
     * </pre>
     *
     * <code>int64 max_scale = 4 [json_name = "maxScale"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxScale() {
      
      maxScale_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController> scaleOutControllers_ =
      java.util.Collections.emptyList();
    private void ensureScaleOutControllersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        scaleOutControllers_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController>(scaleOutControllers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder> scaleOutControllersBuilder_;

    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController> getScaleOutControllersList() {
      if (scaleOutControllersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(scaleOutControllers_);
      } else {
        return scaleOutControllersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public int getScaleOutControllersCount() {
      if (scaleOutControllersBuilder_ == null) {
        return scaleOutControllers_.size();
      } else {
        return scaleOutControllersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController getScaleOutControllers(int index) {
      if (scaleOutControllersBuilder_ == null) {
        return scaleOutControllers_.get(index);
      } else {
        return scaleOutControllersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder setScaleOutControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController value) {
      if (scaleOutControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.set(index, value);
        onChanged();
      } else {
        scaleOutControllersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder setScaleOutControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder builderForValue) {
      if (scaleOutControllersBuilder_ == null) {
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.set(index, builderForValue.build());
        onChanged();
      } else {
        scaleOutControllersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder addScaleOutControllers(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController value) {
      if (scaleOutControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.add(value);
        onChanged();
      } else {
        scaleOutControllersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder addScaleOutControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController value) {
      if (scaleOutControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.add(index, value);
        onChanged();
      } else {
        scaleOutControllersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder addScaleOutControllers(
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder builderForValue) {
      if (scaleOutControllersBuilder_ == null) {
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.add(builderForValue.build());
        onChanged();
      } else {
        scaleOutControllersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder addScaleOutControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder builderForValue) {
      if (scaleOutControllersBuilder_ == null) {
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.add(index, builderForValue.build());
        onChanged();
      } else {
        scaleOutControllersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder addAllScaleOutControllers(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController> values) {
      if (scaleOutControllersBuilder_ == null) {
        ensureScaleOutControllersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scaleOutControllers_);
        onChanged();
      } else {
        scaleOutControllersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder clearScaleOutControllers() {
      if (scaleOutControllersBuilder_ == null) {
        scaleOutControllers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        scaleOutControllersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public Builder removeScaleOutControllers(int index) {
      if (scaleOutControllersBuilder_ == null) {
        ensureScaleOutControllersIsMutable();
        scaleOutControllers_.remove(index);
        onChanged();
      } else {
        scaleOutControllersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder getScaleOutControllersBuilder(
        int index) {
      return getScaleOutControllersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder getScaleOutControllersOrBuilder(
        int index) {
      if (scaleOutControllersBuilder_ == null) {
        return scaleOutControllers_.get(index);  } else {
        return scaleOutControllersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder> 
         getScaleOutControllersOrBuilderList() {
      if (scaleOutControllersBuilder_ != null) {
        return scaleOutControllersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(scaleOutControllers_);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder addScaleOutControllersBuilder() {
      return getScaleOutControllersFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.getDefaultInstance());
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder addScaleOutControllersBuilder(
        int index) {
      return getScaleOutControllersFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.getDefaultInstance());
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling out.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleOutController scale_out_controllers = 5 [json_name = "scaleOutControllers"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder> 
         getScaleOutControllersBuilderList() {
      return getScaleOutControllersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder> 
        getScaleOutControllersFieldBuilder() {
      if (scaleOutControllersBuilder_ == null) {
        scaleOutControllersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleOutControllerOrBuilder>(
                scaleOutControllers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        scaleOutControllers_ = null;
      }
      return scaleOutControllersBuilder_;
    }

    private java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController> scaleInControllers_ =
      java.util.Collections.emptyList();
    private void ensureScaleInControllersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        scaleInControllers_ = new java.util.ArrayList<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController>(scaleInControllers_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder> scaleInControllersBuilder_;

    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController> getScaleInControllersList() {
      if (scaleInControllersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(scaleInControllers_);
      } else {
        return scaleInControllersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public int getScaleInControllersCount() {
      if (scaleInControllersBuilder_ == null) {
        return scaleInControllers_.size();
      } else {
        return scaleInControllersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController getScaleInControllers(int index) {
      if (scaleInControllersBuilder_ == null) {
        return scaleInControllers_.get(index);
      } else {
        return scaleInControllersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder setScaleInControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController value) {
      if (scaleInControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleInControllersIsMutable();
        scaleInControllers_.set(index, value);
        onChanged();
      } else {
        scaleInControllersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder setScaleInControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder builderForValue) {
      if (scaleInControllersBuilder_ == null) {
        ensureScaleInControllersIsMutable();
        scaleInControllers_.set(index, builderForValue.build());
        onChanged();
      } else {
        scaleInControllersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder addScaleInControllers(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController value) {
      if (scaleInControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleInControllersIsMutable();
        scaleInControllers_.add(value);
        onChanged();
      } else {
        scaleInControllersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder addScaleInControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController value) {
      if (scaleInControllersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScaleInControllersIsMutable();
        scaleInControllers_.add(index, value);
        onChanged();
      } else {
        scaleInControllersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder addScaleInControllers(
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder builderForValue) {
      if (scaleInControllersBuilder_ == null) {
        ensureScaleInControllersIsMutable();
        scaleInControllers_.add(builderForValue.build());
        onChanged();
      } else {
        scaleInControllersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder addScaleInControllers(
        int index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder builderForValue) {
      if (scaleInControllersBuilder_ == null) {
        ensureScaleInControllersIsMutable();
        scaleInControllers_.add(index, builderForValue.build());
        onChanged();
      } else {
        scaleInControllersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder addAllScaleInControllers(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController> values) {
      if (scaleInControllersBuilder_ == null) {
        ensureScaleInControllersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scaleInControllers_);
        onChanged();
      } else {
        scaleInControllersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder clearScaleInControllers() {
      if (scaleInControllersBuilder_ == null) {
        scaleInControllers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        scaleInControllersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public Builder removeScaleInControllers(int index) {
      if (scaleInControllersBuilder_ == null) {
        ensureScaleInControllersIsMutable();
        scaleInControllers_.remove(index);
        onChanged();
      } else {
        scaleInControllersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder getScaleInControllersBuilder(
        int index) {
      return getScaleInControllersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder getScaleInControllersOrBuilder(
        int index) {
      if (scaleInControllersBuilder_ == null) {
        return scaleInControllers_.get(index);  } else {
        return scaleInControllersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder> 
         getScaleInControllersOrBuilderList() {
      if (scaleInControllersBuilder_ != null) {
        return scaleInControllersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(scaleInControllers_);
      }
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder addScaleInControllersBuilder() {
      return getScaleInControllersFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.getDefaultInstance());
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder addScaleInControllersBuilder(
        int index) {
      return getScaleInControllersFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.getDefaultInstance());
    }
    /**
     * <pre>
     * List of _Controllers_ for scaling in.
     * </pre>
     *
     * <code>repeated .aperture.policy.language.v1.AutoScaler.ScaleInController scale_in_controllers = 6 [json_name = "scaleInControllers"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder> 
         getScaleInControllersBuilderList() {
      return getScaleInControllersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder> 
        getScaleInControllersFieldBuilder() {
      if (scaleInControllersBuilder_ == null) {
        scaleInControllersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInController.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.ScaleInControllerOrBuilder>(
                scaleInControllers_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        scaleInControllers_ = null;
      }
      return scaleInControllersBuilder_;
    }

    private double maxScaleOutPercentage_ ;
    /**
     * <pre>
     * The maximum increase of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
     * </pre>
     *
     * <code>double max_scale_out_percentage = 8 [json_name = "maxScaleOutPercentage"];</code>
     * @return The maxScaleOutPercentage.
     */
    @java.lang.Override
    public double getMaxScaleOutPercentage() {
      return maxScaleOutPercentage_;
    }
    /**
     * <pre>
     * The maximum increase of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
     * </pre>
     *
     * <code>double max_scale_out_percentage = 8 [json_name = "maxScaleOutPercentage"];</code>
     * @param value The maxScaleOutPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setMaxScaleOutPercentage(double value) {
      
      maxScaleOutPercentage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum increase of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
     * </pre>
     *
     * <code>double max_scale_out_percentage = 8 [json_name = "maxScaleOutPercentage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxScaleOutPercentage() {
      
      maxScaleOutPercentage_ = 0D;
      onChanged();
      return this;
    }

    private double maxScaleInPercentage_ ;
    /**
     * <pre>
     * The maximum decrease of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
     * </pre>
     *
     * <code>double max_scale_in_percentage = 7 [json_name = "maxScaleInPercentage"];</code>
     * @return The maxScaleInPercentage.
     */
    @java.lang.Override
    public double getMaxScaleInPercentage() {
      return maxScaleInPercentage_;
    }
    /**
     * <pre>
     * The maximum decrease of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
     * </pre>
     *
     * <code>double max_scale_in_percentage = 7 [json_name = "maxScaleInPercentage"];</code>
     * @param value The maxScaleInPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setMaxScaleInPercentage(double value) {
      
      maxScaleInPercentage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum decrease of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
     * </pre>
     *
     * <code>double max_scale_in_percentage = 7 [json_name = "maxScaleInPercentage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxScaleInPercentage() {
      
      maxScaleInPercentage_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration scaleOutCooldown_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> scaleOutCooldownBuilder_;
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     * @return Whether the scaleOutCooldown field is set.
     */
    public boolean hasScaleOutCooldown() {
      return scaleOutCooldownBuilder_ != null || scaleOutCooldown_ != null;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     * @return The scaleOutCooldown.
     */
    public com.google.protobuf.Duration getScaleOutCooldown() {
      if (scaleOutCooldownBuilder_ == null) {
        return scaleOutCooldown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : scaleOutCooldown_;
      } else {
        return scaleOutCooldownBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public Builder setScaleOutCooldown(com.google.protobuf.Duration value) {
      if (scaleOutCooldownBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleOutCooldown_ = value;
        onChanged();
      } else {
        scaleOutCooldownBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public Builder setScaleOutCooldown(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (scaleOutCooldownBuilder_ == null) {
        scaleOutCooldown_ = builderForValue.build();
        onChanged();
      } else {
        scaleOutCooldownBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public Builder mergeScaleOutCooldown(com.google.protobuf.Duration value) {
      if (scaleOutCooldownBuilder_ == null) {
        if (scaleOutCooldown_ != null) {
          scaleOutCooldown_ =
            com.google.protobuf.Duration.newBuilder(scaleOutCooldown_).mergeFrom(value).buildPartial();
        } else {
          scaleOutCooldown_ = value;
        }
        onChanged();
      } else {
        scaleOutCooldownBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public Builder clearScaleOutCooldown() {
      if (scaleOutCooldownBuilder_ == null) {
        scaleOutCooldown_ = null;
        onChanged();
      } else {
        scaleOutCooldown_ = null;
        scaleOutCooldownBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public com.google.protobuf.Duration.Builder getScaleOutCooldownBuilder() {
      
      onChanged();
      return getScaleOutCooldownFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    public com.google.protobuf.DurationOrBuilder getScaleOutCooldownOrBuilder() {
      if (scaleOutCooldownBuilder_ != null) {
        return scaleOutCooldownBuilder_.getMessageOrBuilder();
      } else {
        return scaleOutCooldown_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : scaleOutCooldown_;
      }
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_out_cooldown = 9 [json_name = "scaleOutCooldown"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getScaleOutCooldownFieldBuilder() {
      if (scaleOutCooldownBuilder_ == null) {
        scaleOutCooldownBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getScaleOutCooldown(),
                getParentForChildren(),
                isClean());
        scaleOutCooldown_ = null;
      }
      return scaleOutCooldownBuilder_;
    }

    private com.google.protobuf.Duration scaleInCooldown_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> scaleInCooldownBuilder_;
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     * @return Whether the scaleInCooldown field is set.
     */
    public boolean hasScaleInCooldown() {
      return scaleInCooldownBuilder_ != null || scaleInCooldown_ != null;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     * @return The scaleInCooldown.
     */
    public com.google.protobuf.Duration getScaleInCooldown() {
      if (scaleInCooldownBuilder_ == null) {
        return scaleInCooldown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : scaleInCooldown_;
      } else {
        return scaleInCooldownBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public Builder setScaleInCooldown(com.google.protobuf.Duration value) {
      if (scaleInCooldownBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleInCooldown_ = value;
        onChanged();
      } else {
        scaleInCooldownBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public Builder setScaleInCooldown(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (scaleInCooldownBuilder_ == null) {
        scaleInCooldown_ = builderForValue.build();
        onChanged();
      } else {
        scaleInCooldownBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public Builder mergeScaleInCooldown(com.google.protobuf.Duration value) {
      if (scaleInCooldownBuilder_ == null) {
        if (scaleInCooldown_ != null) {
          scaleInCooldown_ =
            com.google.protobuf.Duration.newBuilder(scaleInCooldown_).mergeFrom(value).buildPartial();
        } else {
          scaleInCooldown_ = value;
        }
        onChanged();
      } else {
        scaleInCooldownBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public Builder clearScaleInCooldown() {
      if (scaleInCooldownBuilder_ == null) {
        scaleInCooldown_ = null;
        onChanged();
      } else {
        scaleInCooldown_ = null;
        scaleInCooldownBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public com.google.protobuf.Duration.Builder getScaleInCooldownBuilder() {
      
      onChanged();
      return getScaleInCooldownFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    public com.google.protobuf.DurationOrBuilder getScaleInCooldownOrBuilder() {
      if (scaleInCooldownBuilder_ != null) {
        return scaleInCooldownBuilder_.getMessageOrBuilder();
      } else {
        return scaleInCooldown_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : scaleInCooldown_;
      }
    }
    /**
     * <pre>
     * The amount of time to wait after a scale-in operation for another scale-in operation.
     * </pre>
     *
     * <code>.google.protobuf.Duration scale_in_cooldown = 10 [json_name = "scaleInCooldown"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getScaleInCooldownFieldBuilder() {
      if (scaleInCooldownBuilder_ == null) {
        scaleInCooldownBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getScaleInCooldown(),
                getParentForChildren(),
                isClean());
        scaleInCooldown_ = null;
      }
      return scaleInCooldownBuilder_;
    }

    private double cooldownOverridePercentage_ ;
    /**
     * <pre>
     * Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
     * For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
     * scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
     * </pre>
     *
     * <code>double cooldown_override_percentage = 11 [json_name = "cooldownOverridePercentage"];</code>
     * @return The cooldownOverridePercentage.
     */
    @java.lang.Override
    public double getCooldownOverridePercentage() {
      return cooldownOverridePercentage_;
    }
    /**
     * <pre>
     * Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
     * For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
     * scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
     * </pre>
     *
     * <code>double cooldown_override_percentage = 11 [json_name = "cooldownOverridePercentage"];</code>
     * @param value The cooldownOverridePercentage to set.
     * @return This builder for chaining.
     */
    public Builder setCooldownOverridePercentage(double value) {
      
      cooldownOverridePercentage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
     * For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
     * scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
     * </pre>
     *
     * <code>double cooldown_override_percentage = 11 [json_name = "cooldownOverridePercentage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCooldownOverridePercentage() {
      
      cooldownOverridePercentage_ = 0D;
      onChanged();
      return this;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters scaleOutAlerterParameters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> scaleOutAlerterParametersBuilder_;
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     * @return Whether the scaleOutAlerterParameters field is set.
     */
    public boolean hasScaleOutAlerterParameters() {
      return scaleOutAlerterParametersBuilder_ != null || scaleOutAlerterParameters_ != null;
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     * @return The scaleOutAlerterParameters.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getScaleOutAlerterParameters() {
      if (scaleOutAlerterParametersBuilder_ == null) {
        return scaleOutAlerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleOutAlerterParameters_;
      } else {
        return scaleOutAlerterParametersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public Builder setScaleOutAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (scaleOutAlerterParametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleOutAlerterParameters_ = value;
        onChanged();
      } else {
        scaleOutAlerterParametersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public Builder setScaleOutAlerterParameters(
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder builderForValue) {
      if (scaleOutAlerterParametersBuilder_ == null) {
        scaleOutAlerterParameters_ = builderForValue.build();
        onChanged();
      } else {
        scaleOutAlerterParametersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public Builder mergeScaleOutAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (scaleOutAlerterParametersBuilder_ == null) {
        if (scaleOutAlerterParameters_ != null) {
          scaleOutAlerterParameters_ =
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder(scaleOutAlerterParameters_).mergeFrom(value).buildPartial();
        } else {
          scaleOutAlerterParameters_ = value;
        }
        onChanged();
      } else {
        scaleOutAlerterParametersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public Builder clearScaleOutAlerterParameters() {
      if (scaleOutAlerterParametersBuilder_ == null) {
        scaleOutAlerterParameters_ = null;
        onChanged();
      } else {
        scaleOutAlerterParameters_ = null;
        scaleOutAlerterParametersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder getScaleOutAlerterParametersBuilder() {
      
      onChanged();
      return getScaleOutAlerterParametersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getScaleOutAlerterParametersOrBuilder() {
      if (scaleOutAlerterParametersBuilder_ != null) {
        return scaleOutAlerterParametersBuilder_.getMessageOrBuilder();
      } else {
        return scaleOutAlerterParameters_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleOutAlerterParameters_;
      }
    }
    /**
     * <pre>
     * Configuration for scale-out alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_out_alerter_parameters = 12 [json_name = "scaleOutAlerterParameters"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> 
        getScaleOutAlerterParametersFieldBuilder() {
      if (scaleOutAlerterParametersBuilder_ == null) {
        scaleOutAlerterParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder>(
                getScaleOutAlerterParameters(),
                getParentForChildren(),
                isClean());
        scaleOutAlerterParameters_ = null;
      }
      return scaleOutAlerterParametersBuilder_;
    }

    private com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters scaleInAlerterParameters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> scaleInAlerterParametersBuilder_;
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     * @return Whether the scaleInAlerterParameters field is set.
     */
    public boolean hasScaleInAlerterParameters() {
      return scaleInAlerterParametersBuilder_ != null || scaleInAlerterParameters_ != null;
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     * @return The scaleInAlerterParameters.
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters getScaleInAlerterParameters() {
      if (scaleInAlerterParametersBuilder_ == null) {
        return scaleInAlerterParameters_ == null ? com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleInAlerterParameters_;
      } else {
        return scaleInAlerterParametersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public Builder setScaleInAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (scaleInAlerterParametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scaleInAlerterParameters_ = value;
        onChanged();
      } else {
        scaleInAlerterParametersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public Builder setScaleInAlerterParameters(
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder builderForValue) {
      if (scaleInAlerterParametersBuilder_ == null) {
        scaleInAlerterParameters_ = builderForValue.build();
        onChanged();
      } else {
        scaleInAlerterParametersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public Builder mergeScaleInAlerterParameters(com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters value) {
      if (scaleInAlerterParametersBuilder_ == null) {
        if (scaleInAlerterParameters_ != null) {
          scaleInAlerterParameters_ =
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.newBuilder(scaleInAlerterParameters_).mergeFrom(value).buildPartial();
        } else {
          scaleInAlerterParameters_ = value;
        }
        onChanged();
      } else {
        scaleInAlerterParametersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public Builder clearScaleInAlerterParameters() {
      if (scaleInAlerterParametersBuilder_ == null) {
        scaleInAlerterParameters_ = null;
        onChanged();
      } else {
        scaleInAlerterParameters_ = null;
        scaleInAlerterParametersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder getScaleInAlerterParametersBuilder() {
      
      onChanged();
      return getScaleInAlerterParametersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder getScaleInAlerterParametersOrBuilder() {
      if (scaleInAlerterParametersBuilder_ != null) {
        return scaleInAlerterParametersBuilder_.getMessageOrBuilder();
      } else {
        return scaleInAlerterParameters_ == null ?
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.getDefaultInstance() : scaleInAlerterParameters_;
      }
    }
    /**
     * <pre>
     * Configuration for scale-in alerter.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.Alerter.Parameters scale_in_alerter_parameters = 13 [json_name = "scaleInAlerterParameters"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder> 
        getScaleInAlerterParametersFieldBuilder() {
      if (scaleInAlerterParametersBuilder_ == null) {
        scaleInAlerterParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters, com.fluxninja.generated.aperture.policy.language.v1.Alerter.Parameters.Builder, com.fluxninja.generated.aperture.policy.language.v1.Alerter.ParametersOrBuilder>(
                getScaleInAlerterParameters(),
                getParentForChildren(),
                isClean());
        scaleInAlerterParameters_ = null;
      }
      return scaleInAlerterParametersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScaler)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScaler)
  private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScaler DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScaler();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScaler getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutoScaler>
      PARSER = new com.google.protobuf.AbstractParser<AutoScaler>() {
    @java.lang.Override
    public AutoScaler parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AutoScaler(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AutoScaler> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutoScaler> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

