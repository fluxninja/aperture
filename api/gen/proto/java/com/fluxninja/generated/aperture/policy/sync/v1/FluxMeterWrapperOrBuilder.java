// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/sync/v1/flux_meter.proto

package com.fluxninja.generated.aperture.policy.sync.v1;

public interface FluxMeterWrapperOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.sync.v1.FluxMeterWrapper)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Flux Meter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FluxMeter flux_meter = 1 [json_name = "fluxMeter"];</code>
   * @return Whether the fluxMeter field is set.
   */
  boolean hasFluxMeter();
  /**
   * <pre>
   * Flux Meter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FluxMeter flux_meter = 1 [json_name = "fluxMeter"];</code>
   * @return The fluxMeter.
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeter getFluxMeter();
  /**
   * <pre>
   * Flux Meter
   * </pre>
   *
   * <code>.aperture.policy.language.v1.FluxMeter flux_meter = 1 [json_name = "fluxMeter"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.FluxMeterOrBuilder getFluxMeterOrBuilder();

  /**
   * <pre>
   * Name of Flux Meter metric.
   * </pre>
   *
   * <code>string flux_meter_name = 4 [json_name = "fluxMeterName"];</code>
   * @return The fluxMeterName.
   */
  java.lang.String getFluxMeterName();
  /**
   * <pre>
   * Name of Flux Meter metric.
   * </pre>
   *
   * <code>string flux_meter_name = 4 [json_name = "fluxMeterName"];</code>
   * @return The bytes for fluxMeterName.
   */
  com.google.protobuf.ByteString
      getFluxMeterNameBytes();
}
