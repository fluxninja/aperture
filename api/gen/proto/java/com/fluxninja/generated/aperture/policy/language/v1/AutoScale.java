// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/autoscale.proto

package com.fluxninja.generated.aperture.policy.language.v1;

/**
 * <pre>
 * AutoScale components are used to scale a service.
 * </pre>
 *
 * Protobuf type {@code aperture.policy.language.v1.AutoScale}
 */
public final class AutoScale extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.policy.language.v1.AutoScale)
    AutoScaleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AutoScale.newBuilder() to construct.
  private AutoScale(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AutoScale() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AutoScale();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AutoScale(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder subBuilder = null;
            if (componentCase_ == 1) {
              subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_).toBuilder();
            }
            component_ =
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.PodScaler.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_);
              component_ = subBuilder.buildPartial();
            }
            componentCase_ = 1;
            break;
          }
          case 18: {
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder subBuilder = null;
            if (componentCase_ == 2) {
              subBuilder = ((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_).toBuilder();
            }
            component_ =
                input.readMessage(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_);
              component_ = subBuilder.buildPartial();
            }
            componentCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScale_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScale_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.policy.language.v1.AutoScale.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScale.Builder.class);
  }

  private int componentCase_ = 0;
  private java.lang.Object component_;
  public enum ComponentCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    POD_SCALER(1),
    AUTO_SCALER(2),
    COMPONENT_NOT_SET(0);
    private final int value;
    private ComponentCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ComponentCase valueOf(int value) {
      return forNumber(value);
    }

    public static ComponentCase forNumber(int value) {
      switch (value) {
        case 1: return POD_SCALER;
        case 2: return AUTO_SCALER;
        case 0: return COMPONENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ComponentCase
  getComponentCase() {
    return ComponentCase.forNumber(
        componentCase_);
  }

  public static final int POD_SCALER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
   * @return Whether the podScaler field is set.
   */
  @java.lang.Override
  public boolean hasPodScaler() {
    return componentCase_ == 1;
  }
  /**
   * <pre>
   * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
   * @return The podScaler.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScaler getPodScaler() {
    if (componentCase_ == 1) {
       return (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
  }
  /**
   * <pre>
   * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder getPodScalerOrBuilder() {
    if (componentCase_ == 1) {
       return (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
  }

  public static final int AUTO_SCALER_FIELD_NUMBER = 2;
  /**
   * <pre>
   * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
   * @return Whether the autoScaler field is set.
   */
  @java.lang.Override
  public boolean hasAutoScaler() {
    return componentCase_ == 2;
  }
  /**
   * <pre>
   * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
   * @return The autoScaler.
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler getAutoScaler() {
    if (componentCase_ == 2) {
       return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
  }
  /**
   * <pre>
   * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder getAutoScalerOrBuilder() {
    if (componentCase_ == 2) {
       return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_;
    }
    return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (componentCase_ == 1) {
      output.writeMessage(1, (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_);
    }
    if (componentCase_ == 2) {
      output.writeMessage(2, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (componentCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_);
    }
    if (componentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScale)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.policy.language.v1.AutoScale other = (com.fluxninja.generated.aperture.policy.language.v1.AutoScale) obj;

    if (!getComponentCase().equals(other.getComponentCase())) return false;
    switch (componentCase_) {
      case 1:
        if (!getPodScaler()
            .equals(other.getPodScaler())) return false;
        break;
      case 2:
        if (!getAutoScaler()
            .equals(other.getAutoScaler())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (componentCase_) {
      case 1:
        hash = (37 * hash) + POD_SCALER_FIELD_NUMBER;
        hash = (53 * hash) + getPodScaler().hashCode();
        break;
      case 2:
        hash = (37 * hash) + AUTO_SCALER_FIELD_NUMBER;
        hash = (53 * hash) + getAutoScaler().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.policy.language.v1.AutoScale prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * AutoScale components are used to scale a service.
   * </pre>
   *
   * Protobuf type {@code aperture.policy.language.v1.AutoScale}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.policy.language.v1.AutoScale)
      com.fluxninja.generated.aperture.policy.language.v1.AutoScaleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScale_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScale_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.policy.language.v1.AutoScale.class, com.fluxninja.generated.aperture.policy.language.v1.AutoScale.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.policy.language.v1.AutoScale.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      componentCase_ = 0;
      component_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoscaleProto.internal_static_aperture_policy_language_v1_AutoScale_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScale getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.policy.language.v1.AutoScale.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScale build() {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScale result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScale buildPartial() {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScale result = new com.fluxninja.generated.aperture.policy.language.v1.AutoScale(this);
      if (componentCase_ == 1) {
        if (podScalerBuilder_ == null) {
          result.component_ = component_;
        } else {
          result.component_ = podScalerBuilder_.build();
        }
      }
      if (componentCase_ == 2) {
        if (autoScalerBuilder_ == null) {
          result.component_ = component_;
        } else {
          result.component_ = autoScalerBuilder_.build();
        }
      }
      result.componentCase_ = componentCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.policy.language.v1.AutoScale) {
        return mergeFrom((com.fluxninja.generated.aperture.policy.language.v1.AutoScale)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.policy.language.v1.AutoScale other) {
      if (other == com.fluxninja.generated.aperture.policy.language.v1.AutoScale.getDefaultInstance()) return this;
      switch (other.getComponentCase()) {
        case POD_SCALER: {
          mergePodScaler(other.getPodScaler());
          break;
        }
        case AUTO_SCALER: {
          mergeAutoScaler(other.getAutoScaler());
          break;
        }
        case COMPONENT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.policy.language.v1.AutoScale parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.policy.language.v1.AutoScale) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int componentCase_ = 0;
    private java.lang.Object component_;
    public ComponentCase
        getComponentCase() {
      return ComponentCase.forNumber(
          componentCase_);
    }

    public Builder clearComponent() {
      componentCase_ = 0;
      component_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder> podScalerBuilder_;
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     * @return Whether the podScaler field is set.
     */
    @java.lang.Override
    public boolean hasPodScaler() {
      return componentCase_ == 1;
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     * @return The podScaler.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler getPodScaler() {
      if (podScalerBuilder_ == null) {
        if (componentCase_ == 1) {
          return (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
      } else {
        if (componentCase_ == 1) {
          return podScalerBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    public Builder setPodScaler(com.fluxninja.generated.aperture.policy.language.v1.PodScaler value) {
      if (podScalerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        component_ = value;
        onChanged();
      } else {
        podScalerBuilder_.setMessage(value);
      }
      componentCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    public Builder setPodScaler(
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder builderForValue) {
      if (podScalerBuilder_ == null) {
        component_ = builderForValue.build();
        onChanged();
      } else {
        podScalerBuilder_.setMessage(builderForValue.build());
      }
      componentCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    public Builder mergePodScaler(com.fluxninja.generated.aperture.policy.language.v1.PodScaler value) {
      if (podScalerBuilder_ == null) {
        if (componentCase_ == 1 &&
            component_ != com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance()) {
          component_ = com.fluxninja.generated.aperture.policy.language.v1.PodScaler.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_)
              .mergeFrom(value).buildPartial();
        } else {
          component_ = value;
        }
        onChanged();
      } else {
        if (componentCase_ == 1) {
          podScalerBuilder_.mergeFrom(value);
        } else {
          podScalerBuilder_.setMessage(value);
        }
      }
      componentCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    public Builder clearPodScaler() {
      if (podScalerBuilder_ == null) {
        if (componentCase_ == 1) {
          componentCase_ = 0;
          component_ = null;
          onChanged();
        }
      } else {
        if (componentCase_ == 1) {
          componentCase_ = 0;
          component_ = null;
        }
        podScalerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder getPodScalerBuilder() {
      return getPodScalerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder getPodScalerOrBuilder() {
      if ((componentCase_ == 1) && (podScalerBuilder_ != null)) {
        return podScalerBuilder_.getMessageOrBuilder();
      } else {
        if (componentCase_ == 1) {
          return (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.PodScaler pod_scaler = 1 [json_name = "podScaler"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.PodScaler, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder> 
        getPodScalerFieldBuilder() {
      if (podScalerBuilder_ == null) {
        if (!(componentCase_ == 1)) {
          component_ = com.fluxninja.generated.aperture.policy.language.v1.PodScaler.getDefaultInstance();
        }
        podScalerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.PodScaler, com.fluxninja.generated.aperture.policy.language.v1.PodScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.PodScalerOrBuilder>(
                (com.fluxninja.generated.aperture.policy.language.v1.PodScaler) component_,
                getParentForChildren(),
                isClean());
        component_ = null;
      }
      componentCase_ = 1;
      onChanged();;
      return podScalerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder> autoScalerBuilder_;
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     * @return Whether the autoScaler field is set.
     */
    @java.lang.Override
    public boolean hasAutoScaler() {
      return componentCase_ == 2;
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     * @return The autoScaler.
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler getAutoScaler() {
      if (autoScalerBuilder_ == null) {
        if (componentCase_ == 2) {
          return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
      } else {
        if (componentCase_ == 2) {
          return autoScalerBuilder_.getMessage();
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    public Builder setAutoScaler(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler value) {
      if (autoScalerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        component_ = value;
        onChanged();
      } else {
        autoScalerBuilder_.setMessage(value);
      }
      componentCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    public Builder setAutoScaler(
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder builderForValue) {
      if (autoScalerBuilder_ == null) {
        component_ = builderForValue.build();
        onChanged();
      } else {
        autoScalerBuilder_.setMessage(builderForValue.build());
      }
      componentCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    public Builder mergeAutoScaler(com.fluxninja.generated.aperture.policy.language.v1.AutoScaler value) {
      if (autoScalerBuilder_ == null) {
        if (componentCase_ == 2 &&
            component_ != com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance()) {
          component_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.newBuilder((com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_)
              .mergeFrom(value).buildPartial();
        } else {
          component_ = value;
        }
        onChanged();
      } else {
        if (componentCase_ == 2) {
          autoScalerBuilder_.mergeFrom(value);
        } else {
          autoScalerBuilder_.setMessage(value);
        }
      }
      componentCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    public Builder clearAutoScaler() {
      if (autoScalerBuilder_ == null) {
        if (componentCase_ == 2) {
          componentCase_ = 0;
          component_ = null;
          onChanged();
        }
      } else {
        if (componentCase_ == 2) {
          componentCase_ = 0;
          component_ = null;
        }
        autoScalerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder getAutoScalerBuilder() {
      return getAutoScalerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    @java.lang.Override
    public com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder getAutoScalerOrBuilder() {
      if ((componentCase_ == 2) && (autoScalerBuilder_ != null)) {
        return autoScalerBuilder_.getMessageOrBuilder();
      } else {
        if (componentCase_ == 2) {
          return (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_;
        }
        return com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * _AutoScaler_ provides auto-scaling functionality for any scalable resource.
     * </pre>
     *
     * <code>.aperture.policy.language.v1.AutoScaler auto_scaler = 2 [json_name = "autoScaler"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.fluxninja.generated.aperture.policy.language.v1.AutoScaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder> 
        getAutoScalerFieldBuilder() {
      if (autoScalerBuilder_ == null) {
        if (!(componentCase_ == 2)) {
          component_ = com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.getDefaultInstance();
        }
        autoScalerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.fluxninja.generated.aperture.policy.language.v1.AutoScaler, com.fluxninja.generated.aperture.policy.language.v1.AutoScaler.Builder, com.fluxninja.generated.aperture.policy.language.v1.AutoScalerOrBuilder>(
                (com.fluxninja.generated.aperture.policy.language.v1.AutoScaler) component_,
                getParentForChildren(),
                isClean());
        component_ = null;
      }
      componentCase_ = 2;
      onChanged();;
      return autoScalerBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.policy.language.v1.AutoScale)
  }

  // @@protoc_insertion_point(class_scope:aperture.policy.language.v1.AutoScale)
  private static final com.fluxninja.generated.aperture.policy.language.v1.AutoScale DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.policy.language.v1.AutoScale();
  }

  public static com.fluxninja.generated.aperture.policy.language.v1.AutoScale getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutoScale>
      PARSER = new com.google.protobuf.AbstractParser<AutoScale>() {
    @java.lang.Override
    public AutoScale parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AutoScale(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AutoScale> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutoScale> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.policy.language.v1.AutoScale getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

