// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/cmd/v1/cmd.proto

package com.fluxninja.generated.aperture.cmd.v1;

/**
 * Protobuf type {@code aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse}
 */
public final class ListAutoScaleControlPointsControllerResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)
    ListAutoScaleControlPointsControllerResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListAutoScaleControlPointsControllerResponse.newBuilder() to construct.
  private ListAutoScaleControlPointsControllerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListAutoScaleControlPointsControllerResponse() {
    globalAutoScaleControlPoints_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListAutoScaleControlPointsControllerResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ListAutoScaleControlPointsControllerResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              globalAutoScaleControlPoints_ = new java.util.ArrayList<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint>();
              mutable_bitField0_ |= 0x00000001;
            }
            globalAutoScaleControlPoints_.add(
                input.readMessage(com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.parser(), extensionRegistry));
            break;
          }
          case 16: {

            errorsCount_ = input.readUInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        globalAutoScaleControlPoints_ = java.util.Collections.unmodifiableList(globalAutoScaleControlPoints_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.fluxninja.generated.aperture.cmd.v1.CmdProto.internal_static_aperture_cmd_v1_ListAutoScaleControlPointsControllerResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.fluxninja.generated.aperture.cmd.v1.CmdProto.internal_static_aperture_cmd_v1_ListAutoScaleControlPointsControllerResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.class, com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.Builder.class);
  }

  public static final int GLOBAL_AUTO_SCALE_CONTROL_POINTS_FIELD_NUMBER = 1;
  private java.util.List<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint> globalAutoScaleControlPoints_;
  /**
   * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
   */
  @java.lang.Override
  public java.util.List<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint> getGlobalAutoScaleControlPointsList() {
    return globalAutoScaleControlPoints_;
  }
  /**
   * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder> 
      getGlobalAutoScaleControlPointsOrBuilderList() {
    return globalAutoScaleControlPoints_;
  }
  /**
   * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
   */
  @java.lang.Override
  public int getGlobalAutoScaleControlPointsCount() {
    return globalAutoScaleControlPoints_.size();
  }
  /**
   * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint getGlobalAutoScaleControlPoints(int index) {
    return globalAutoScaleControlPoints_.get(index);
  }
  /**
   * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
   */
  @java.lang.Override
  public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder getGlobalAutoScaleControlPointsOrBuilder(
      int index) {
    return globalAutoScaleControlPoints_.get(index);
  }

  public static final int ERRORS_COUNT_FIELD_NUMBER = 2;
  private int errorsCount_;
  /**
   * <code>uint32 errors_count = 2 [json_name = "errorsCount"];</code>
   * @return The errorsCount.
   */
  @java.lang.Override
  public int getErrorsCount() {
    return errorsCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < globalAutoScaleControlPoints_.size(); i++) {
      output.writeMessage(1, globalAutoScaleControlPoints_.get(i));
    }
    if (errorsCount_ != 0) {
      output.writeUInt32(2, errorsCount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < globalAutoScaleControlPoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, globalAutoScaleControlPoints_.get(i));
    }
    if (errorsCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, errorsCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)) {
      return super.equals(obj);
    }
    com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse other = (com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse) obj;

    if (!getGlobalAutoScaleControlPointsList()
        .equals(other.getGlobalAutoScaleControlPointsList())) return false;
    if (getErrorsCount()
        != other.getErrorsCount()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getGlobalAutoScaleControlPointsCount() > 0) {
      hash = (37 * hash) + GLOBAL_AUTO_SCALE_CONTROL_POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getGlobalAutoScaleControlPointsList().hashCode();
    }
    hash = (37 * hash) + ERRORS_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getErrorsCount();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)
      com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fluxninja.generated.aperture.cmd.v1.CmdProto.internal_static_aperture_cmd_v1_ListAutoScaleControlPointsControllerResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fluxninja.generated.aperture.cmd.v1.CmdProto.internal_static_aperture_cmd_v1_ListAutoScaleControlPointsControllerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.class, com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.Builder.class);
    }

    // Construct using com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGlobalAutoScaleControlPointsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (globalAutoScaleControlPointsBuilder_ == null) {
        globalAutoScaleControlPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        globalAutoScaleControlPointsBuilder_.clear();
      }
      errorsCount_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.fluxninja.generated.aperture.cmd.v1.CmdProto.internal_static_aperture_cmd_v1_ListAutoScaleControlPointsControllerResponse_descriptor;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse getDefaultInstanceForType() {
      return com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse build() {
      com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse buildPartial() {
      com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse result = new com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse(this);
      int from_bitField0_ = bitField0_;
      if (globalAutoScaleControlPointsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          globalAutoScaleControlPoints_ = java.util.Collections.unmodifiableList(globalAutoScaleControlPoints_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.globalAutoScaleControlPoints_ = globalAutoScaleControlPoints_;
      } else {
        result.globalAutoScaleControlPoints_ = globalAutoScaleControlPointsBuilder_.build();
      }
      result.errorsCount_ = errorsCount_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse) {
        return mergeFrom((com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse other) {
      if (other == com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse.getDefaultInstance()) return this;
      if (globalAutoScaleControlPointsBuilder_ == null) {
        if (!other.globalAutoScaleControlPoints_.isEmpty()) {
          if (globalAutoScaleControlPoints_.isEmpty()) {
            globalAutoScaleControlPoints_ = other.globalAutoScaleControlPoints_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGlobalAutoScaleControlPointsIsMutable();
            globalAutoScaleControlPoints_.addAll(other.globalAutoScaleControlPoints_);
          }
          onChanged();
        }
      } else {
        if (!other.globalAutoScaleControlPoints_.isEmpty()) {
          if (globalAutoScaleControlPointsBuilder_.isEmpty()) {
            globalAutoScaleControlPointsBuilder_.dispose();
            globalAutoScaleControlPointsBuilder_ = null;
            globalAutoScaleControlPoints_ = other.globalAutoScaleControlPoints_;
            bitField0_ = (bitField0_ & ~0x00000001);
            globalAutoScaleControlPointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGlobalAutoScaleControlPointsFieldBuilder() : null;
          } else {
            globalAutoScaleControlPointsBuilder_.addAllMessages(other.globalAutoScaleControlPoints_);
          }
        }
      }
      if (other.getErrorsCount() != 0) {
        setErrorsCount(other.getErrorsCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint> globalAutoScaleControlPoints_ =
      java.util.Collections.emptyList();
    private void ensureGlobalAutoScaleControlPointsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        globalAutoScaleControlPoints_ = new java.util.ArrayList<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint>(globalAutoScaleControlPoints_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder> globalAutoScaleControlPointsBuilder_;

    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint> getGlobalAutoScaleControlPointsList() {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(globalAutoScaleControlPoints_);
      } else {
        return globalAutoScaleControlPointsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public int getGlobalAutoScaleControlPointsCount() {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        return globalAutoScaleControlPoints_.size();
      } else {
        return globalAutoScaleControlPointsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint getGlobalAutoScaleControlPoints(int index) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        return globalAutoScaleControlPoints_.get(index);
      } else {
        return globalAutoScaleControlPointsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder setGlobalAutoScaleControlPoints(
        int index, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint value) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.set(index, value);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder setGlobalAutoScaleControlPoints(
        int index, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder builderForValue) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder addGlobalAutoScaleControlPoints(com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint value) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.add(value);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder addGlobalAutoScaleControlPoints(
        int index, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint value) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.add(index, value);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder addGlobalAutoScaleControlPoints(
        com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder builderForValue) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.add(builderForValue.build());
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder addGlobalAutoScaleControlPoints(
        int index, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder builderForValue) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder addAllGlobalAutoScaleControlPoints(
        java.lang.Iterable<? extends com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint> values) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        ensureGlobalAutoScaleControlPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, globalAutoScaleControlPoints_);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder clearGlobalAutoScaleControlPoints() {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        globalAutoScaleControlPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public Builder removeGlobalAutoScaleControlPoints(int index) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        ensureGlobalAutoScaleControlPointsIsMutable();
        globalAutoScaleControlPoints_.remove(index);
        onChanged();
      } else {
        globalAutoScaleControlPointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder getGlobalAutoScaleControlPointsBuilder(
        int index) {
      return getGlobalAutoScaleControlPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder getGlobalAutoScaleControlPointsOrBuilder(
        int index) {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        return globalAutoScaleControlPoints_.get(index);  } else {
        return globalAutoScaleControlPointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public java.util.List<? extends com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder> 
         getGlobalAutoScaleControlPointsOrBuilderList() {
      if (globalAutoScaleControlPointsBuilder_ != null) {
        return globalAutoScaleControlPointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(globalAutoScaleControlPoints_);
      }
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder addGlobalAutoScaleControlPointsBuilder() {
      return getGlobalAutoScaleControlPointsFieldBuilder().addBuilder(
          com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder addGlobalAutoScaleControlPointsBuilder(
        int index) {
      return getGlobalAutoScaleControlPointsFieldBuilder().addBuilder(
          index, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.getDefaultInstance());
    }
    /**
     * <code>repeated .aperture.cmd.v1.GlobalAutoScaleControlPoint global_auto_scale_control_points = 1 [json_name = "globalAutoScaleControlPoints"];</code>
     */
    public java.util.List<com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder> 
         getGlobalAutoScaleControlPointsBuilderList() {
      return getGlobalAutoScaleControlPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder> 
        getGlobalAutoScaleControlPointsFieldBuilder() {
      if (globalAutoScaleControlPointsBuilder_ == null) {
        globalAutoScaleControlPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPoint.Builder, com.fluxninja.generated.aperture.cmd.v1.GlobalAutoScaleControlPointOrBuilder>(
                globalAutoScaleControlPoints_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        globalAutoScaleControlPoints_ = null;
      }
      return globalAutoScaleControlPointsBuilder_;
    }

    private int errorsCount_ ;
    /**
     * <code>uint32 errors_count = 2 [json_name = "errorsCount"];</code>
     * @return The errorsCount.
     */
    @java.lang.Override
    public int getErrorsCount() {
      return errorsCount_;
    }
    /**
     * <code>uint32 errors_count = 2 [json_name = "errorsCount"];</code>
     * @param value The errorsCount to set.
     * @return This builder for chaining.
     */
    public Builder setErrorsCount(int value) {
      
      errorsCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 errors_count = 2 [json_name = "errorsCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearErrorsCount() {
      
      errorsCount_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)
  }

  // @@protoc_insertion_point(class_scope:aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse)
  private static final com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse();
  }

  public static com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListAutoScaleControlPointsControllerResponse>
      PARSER = new com.google.protobuf.AbstractParser<ListAutoScaleControlPointsControllerResponse>() {
    @java.lang.Override
    public ListAutoScaleControlPointsControllerResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ListAutoScaleControlPointsControllerResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ListAutoScaleControlPointsControllerResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListAutoScaleControlPointsControllerResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.fluxninja.generated.aperture.cmd.v1.ListAutoScaleControlPointsControllerResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

