// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/policy.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface ConcurrencyLimiterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.ConcurrencyLimiter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Selector decides the service and flows at which the concurrency limiter is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the selector field is set.
   */
  boolean hasSelector();
  /**
   * <pre>
   * Selector decides the service and flows at which the concurrency limiter is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The selector.
   */
  com.fluxninja.generated.aperture.policy.language.v1.Selector getSelector();
  /**
   * <pre>
   * Selector decides the service and flows at which the concurrency limiter is applied.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Selector selector = 1 [json_name = "selector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.SelectorOrBuilder getSelectorOrBuilder();

  /**
   * <pre>
   * Configuration of Weighted Fair Queuing-based workload scheduler.
   * Contains configuration of per-agent scheduler, and also defines some
   * output signals.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Scheduler scheduler = 2 [json_name = "scheduler", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the scheduler field is set.
   */
  boolean hasScheduler();
  /**
   * <pre>
   * Configuration of Weighted Fair Queuing-based workload scheduler.
   * Contains configuration of per-agent scheduler, and also defines some
   * output signals.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Scheduler scheduler = 2 [json_name = "scheduler", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The scheduler.
   */
  com.fluxninja.generated.aperture.policy.language.v1.Scheduler getScheduler();
  /**
   * <pre>
   * Configuration of Weighted Fair Queuing-based workload scheduler.
   * Contains configuration of per-agent scheduler, and also defines some
   * output signals.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Scheduler scheduler = 2 [json_name = "scheduler", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.SchedulerOrBuilder getSchedulerOrBuilder();

  /**
   * <pre>
   * Actuator based on limiting the accepted concurrency under incoming concurrency * load multiplier.
   * Actuation strategy defines the input signal that will drive the scheduler.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LoadActuator load_actuator = 3 [json_name = "loadActuator"];</code>
   * @return Whether the loadActuator field is set.
   */
  boolean hasLoadActuator();
  /**
   * <pre>
   * Actuator based on limiting the accepted concurrency under incoming concurrency * load multiplier.
   * Actuation strategy defines the input signal that will drive the scheduler.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LoadActuator load_actuator = 3 [json_name = "loadActuator"];</code>
   * @return The loadActuator.
   */
  com.fluxninja.generated.aperture.policy.language.v1.LoadActuator getLoadActuator();
  /**
   * <pre>
   * Actuator based on limiting the accepted concurrency under incoming concurrency * load multiplier.
   * Actuation strategy defines the input signal that will drive the scheduler.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LoadActuator load_actuator = 3 [json_name = "loadActuator"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.LoadActuatorOrBuilder getLoadActuatorOrBuilder();

  public com.fluxninja.generated.aperture.policy.language.v1.ConcurrencyLimiter.ActuationStrategyCase getActuationStrategyCase();
}
