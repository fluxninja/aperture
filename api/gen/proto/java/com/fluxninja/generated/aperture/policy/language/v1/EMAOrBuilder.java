// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/std_components.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface EMAOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.EMA)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Input ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return Whether the inPorts field is set.
   */
  boolean hasInPorts();
  /**
   * <pre>
   * Input ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Ins in_ports = 1 [json_name = "inPorts"];</code>
   * @return The inPorts.
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.Ins getInPorts();
  /**
   * <pre>
   * Input ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Ins in_ports = 1 [json_name = "inPorts"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.InsOrBuilder getInPortsOrBuilder();

  /**
   * <pre>
   * Output ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Outs out_ports = 2 [json_name = "outPorts"];</code>
   * @return Whether the outPorts field is set.
   */
  boolean hasOutPorts();
  /**
   * <pre>
   * Output ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Outs out_ports = 2 [json_name = "outPorts"];</code>
   * @return The outPorts.
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.Outs getOutPorts();
  /**
   * <pre>
   * Output ports for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Outs out_ports = 2 [json_name = "outPorts"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.OutsOrBuilder getOutPortsOrBuilder();

  /**
   * <pre>
   * Parameters for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return Whether the parameters field is set.
   */
  boolean hasParameters();
  /**
   * <pre>
   * Parameters for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Parameters parameters = 3 [json_name = "parameters"];</code>
   * @return The parameters.
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.Parameters getParameters();
  /**
   * <pre>
   * Parameters for the EMA component.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.EMA.Parameters parameters = 3 [json_name = "parameters"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.EMA.ParametersOrBuilder getParametersOrBuilder();
}
