// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/policy.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface PoliciesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.Policies)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, .aperture.policy.language.v1.Policy&gt; policies = 1 [json_name = "policies"];</code>
   */
  int getPoliciesCount();
  /**
   * <code>map&lt;string, .aperture.policy.language.v1.Policy&gt; policies = 1 [json_name = "policies"];</code>
   */
  boolean containsPolicies(
      java.lang.String key);
  /**
   * Use {@link #getPoliciesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.fluxninja.generated.aperture.policy.language.v1.Policy>
  getPolicies();
  /**
   * <code>map&lt;string, .aperture.policy.language.v1.Policy&gt; policies = 1 [json_name = "policies"];</code>
   */
  java.util.Map<java.lang.String, com.fluxninja.generated.aperture.policy.language.v1.Policy>
  getPoliciesMap();
  /**
   * <code>map&lt;string, .aperture.policy.language.v1.Policy&gt; policies = 1 [json_name = "policies"];</code>
   */

  /* nullable */
com.fluxninja.generated.aperture.policy.language.v1.Policy getPoliciesOrDefault(
      java.lang.String key,
      /* nullable */
com.fluxninja.generated.aperture.policy.language.v1.Policy defaultValue);
  /**
   * <code>map&lt;string, .aperture.policy.language.v1.Policy&gt; policies = 1 [json_name = "policies"];</code>
   */

  com.fluxninja.generated.aperture.policy.language.v1.Policy getPoliciesOrThrow(
      java.lang.String key);
}
