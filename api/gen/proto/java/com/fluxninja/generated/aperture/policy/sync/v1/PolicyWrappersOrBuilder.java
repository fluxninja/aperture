// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/sync/v1/policy.proto

package com.fluxninja.generated.aperture.policy.sync.v1;

public interface PolicyWrappersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.sync.v1.PolicyWrappers)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, .aperture.policy.sync.v1.PolicyWrapper&gt; policy_wrappers = 1 [json_name = "policyWrappers"];</code>
   */
  int getPolicyWrappersCount();
  /**
   * <code>map&lt;string, .aperture.policy.sync.v1.PolicyWrapper&gt; policy_wrappers = 1 [json_name = "policyWrappers"];</code>
   */
  boolean containsPolicyWrappers(
      java.lang.String key);
  /**
   * Use {@link #getPolicyWrappersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.fluxninja.generated.aperture.policy.sync.v1.PolicyWrapper>
  getPolicyWrappers();
  /**
   * <code>map&lt;string, .aperture.policy.sync.v1.PolicyWrapper&gt; policy_wrappers = 1 [json_name = "policyWrappers"];</code>
   */
  java.util.Map<java.lang.String, com.fluxninja.generated.aperture.policy.sync.v1.PolicyWrapper>
  getPolicyWrappersMap();
  /**
   * <code>map&lt;string, .aperture.policy.sync.v1.PolicyWrapper&gt; policy_wrappers = 1 [json_name = "policyWrappers"];</code>
   */

  /* nullable */
com.fluxninja.generated.aperture.policy.sync.v1.PolicyWrapper getPolicyWrappersOrDefault(
      java.lang.String key,
      /* nullable */
com.fluxninja.generated.aperture.policy.sync.v1.PolicyWrapper defaultValue);
  /**
   * <code>map&lt;string, .aperture.policy.sync.v1.PolicyWrapper&gt; policy_wrappers = 1 [json_name = "policyWrappers"];</code>
   */

  com.fluxninja.generated.aperture.policy.sync.v1.PolicyWrapper getPolicyWrappersOrThrow(
      java.lang.String key);
}
