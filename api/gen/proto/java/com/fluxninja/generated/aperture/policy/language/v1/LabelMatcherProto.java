// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/label_matcher.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public final class LabelMatcherProto {
  private LabelMatcherProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LabelMatcher_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LabelMatcher_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchExpression_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchExpression_List_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_EqualsMatchExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_policy_language_v1_MatchesMatchExpression_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/aperture/policy/language/v1/label_matc" +
      "her.proto\022\033aperture.policy.language.v1\"\341" +
      "\002\n\014LabelMatcher\022]\n\014match_labels\030\001 \003(\0132:." +
      "aperture.policy.language.v1.LabelMatcher" +
      ".MatchLabelsEntryR\013matchLabels\022d\n\021match_" +
      "expressions\030\002 \003(\01327.aperture.policy.lang" +
      "uage.v1.K8sLabelMatcherRequirementR\020matc" +
      "hExpressions\022L\n\nexpression\030\003 \001(\0132,.apert" +
      "ure.policy.language.v1.MatchExpressionR\n" +
      "expression\032>\n\020MatchLabelsEntry\022\020\n\003key\030\001 " +
      "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"b\n\032K8" +
      "sLabelMatcherRequirement\022\020\n\003key\030\001 \001(\tR\003k" +
      "ey\022\032\n\010operator\030\002 \001(\tR\010operator\022\026\n\006values" +
      "\030\003 \003(\tR\006values\"\214\004\n\017MatchExpression\022@\n\003no" +
      "t\030\001 \001(\0132,.aperture.policy.language.v1.Ma" +
      "tchExpressionH\000R\003not\022E\n\003all\030\002 \001(\01321.aper" +
      "ture.policy.language.v1.MatchExpression." +
      "ListH\000R\003all\022E\n\003any\030\003 \001(\01321.aperture.poli" +
      "cy.language.v1.MatchExpression.ListH\000R\003a" +
      "ny\022#\n\014label_exists\030\004 \001(\tH\000R\013labelExists\022" +
      "W\n\014label_equals\030\005 \001(\01322.aperture.policy." +
      "language.v1.EqualsMatchExpressionH\000R\013lab" +
      "elEquals\022Z\n\rlabel_matches\030\006 \001(\01323.apertu" +
      "re.policy.language.v1.MatchesMatchExpres" +
      "sionH\000R\014labelMatches\032D\n\004List\022<\n\002of\030\001 \003(\013" +
      "2,.aperture.policy.language.v1.MatchExpr" +
      "essionR\002ofB\t\n\007variant\"C\n\025EqualsMatchExpr" +
      "ession\022\024\n\005label\030\001 \001(\tR\005label\022\024\n\005value\030\002 " +
      "\001(\tR\005value\"D\n\026MatchesMatchExpression\022\024\n\005" +
      "label\030\001 \001(\tR\005label\022\024\n\005regex\030\002 \001(\tR\005regex" +
      "B\256\002\n3com.fluxninja.generated.aperture.po" +
      "licy.language.v1B\021LabelMatcherProtoP\001ZUg" +
      "ithub.com/fluxninja/aperture/api/gen/pro" +
      "to/go/aperture/policy/language/v1;langua" +
      "gev1\242\002\003APL\252\002\033Aperture.Policy.Language.V1" +
      "\312\002\033Aperture\\Policy\\Language\\V1\342\002\'Apertur" +
      "e\\Policy\\Language\\V1\\GPBMetadata\352\002\036Apert" +
      "ure::Policy::Language::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_aperture_policy_language_v1_LabelMatcher_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_policy_language_v1_LabelMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LabelMatcher_descriptor,
        new java.lang.String[] { "MatchLabels", "MatchExpressions", "Expression", });
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor =
      internal_static_aperture_policy_language_v1_LabelMatcher_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_LabelMatcher_MatchLabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_K8sLabelMatcherRequirement_descriptor,
        new java.lang.String[] { "Key", "Operator", "Values", });
    internal_static_aperture_policy_language_v1_MatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_policy_language_v1_MatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchExpression_descriptor,
        new java.lang.String[] { "Not", "All", "Any", "LabelExists", "LabelEquals", "LabelMatches", "Variant", });
    internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor =
      internal_static_aperture_policy_language_v1_MatchExpression_descriptor.getNestedTypes().get(0);
    internal_static_aperture_policy_language_v1_MatchExpression_List_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchExpression_List_descriptor,
        new java.lang.String[] { "Of", });
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_policy_language_v1_EqualsMatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_EqualsMatchExpression_descriptor,
        new java.lang.String[] { "Label", "Value", });
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_policy_language_v1_MatchesMatchExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_policy_language_v1_MatchesMatchExpression_descriptor,
        new java.lang.String[] { "Label", "Regex", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
