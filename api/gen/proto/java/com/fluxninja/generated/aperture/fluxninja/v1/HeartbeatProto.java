// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/fluxninja/v1/heartbeat.proto

package com.fluxninja.generated.aperture.fluxninja.v1;

public final class HeartbeatProto {
  private HeartbeatProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_ReportRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_ReportRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_ReportResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_ReportResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_ControllerInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_ControllerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_ServicesList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_ServicesList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_Service_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_Service_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_fluxninja_v1_OverlappingService_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_fluxninja_v1_OverlappingService_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%aperture/fluxninja/v1/heartbeat.proto\022" +
      "\025aperture.fluxninja.v1\032Baperture/autosca" +
      "le/kubernetes/controlpoints/v1/controlpo" +
      "ints.proto\0329aperture/flowcontrol/control" +
      "points/v1/controlpoints.proto\032\033aperture/" +
      "info/v1/info.proto\032\035aperture/peers/v1/pe" +
      "ers.proto\032$aperture/policy/sync/v1/polic" +
      "y.proto\032\037aperture/status/v1/status.proto" +
      "\032\034google/api/annotations.proto\032\033google/p" +
      "rotobuf/empty.proto\"\372\006\n\rReportRequest\022@\n" +
      "\014version_info\030\001 \001(\0132\035.aperture.info.v1.V" +
      "ersionInfoR\013versionInfo\022@\n\014process_info\030" +
      "\002 \001(\0132\035.aperture.info.v1.ProcessInfoR\013pr" +
      "ocessInfo\0227\n\thost_info\030\003 \001(\0132\032.aperture." +
      "info.v1.HostInfoR\010hostInfo\022\037\n\013agent_grou" +
      "p\030\004 \001(\tR\nagentGroup\022N\n\017controller_info\030\005" +
      " \001(\0132%.aperture.fluxninja.v1.ControllerI" +
      "nfoR\016controllerInfo\022.\n\005peers\030\006 \001(\0132\030.ape" +
      "rture.peers.v1.PeersR\005peers\022H\n\rservices_" +
      "list\030\010 \001(\0132#.aperture.fluxninja.v1.Servi" +
      "cesListR\014servicesList\022B\n\014all_statuses\030\t " +
      "\001(\0132\037.aperture.status.v1.GroupStatusR\013al" +
      "lStatuses\022C\n\010policies\030\n \001(\0132\'.aperture.p" +
      "olicy.sync.v1.PolicyWrappersR\010policies\022h" +
      "\n\023flow_control_points\030\013 \001(\01328.aperture.f" +
      "lowcontrol.controlpoints.v1.FlowControlP" +
      "ointsR\021flowControlPoints\022\240\001\n$auto_scale_" +
      "kubernetes_control_points\030\014 \001(\0132P.apertu" +
      "re.autoscale.kubernetes.controlpoints.v1" +
      ".AutoScaleKubernetesControlPointsR autoS" +
      "caleKubernetesControlPoints\022+\n\021installat" +
      "ion_mode\030\r \001(\tR\020installationMode\"\020\n\016Repo" +
      "rtResponse\" \n\016ControllerInfo\022\016\n\002id\030\001 \001(\t" +
      "R\002id\"\250\001\n\014ServicesList\022:\n\010services\030\001 \003(\0132" +
      "\036.aperture.fluxninja.v1.ServiceR\010service" +
      "s\022\\\n\024overlapping_services\030\002 \003(\0132).apertu" +
      "re.fluxninja.v1.OverlappingServiceR\023over" +
      "lappingServices\"D\n\007Service\022\022\n\004name\030\001 \001(\t" +
      "R\004name\022%\n\016entities_count\030\002 \001(\005R\rentities" +
      "Count\"s\n\022OverlappingService\022\032\n\010service1\030" +
      "\001 \001(\tR\010service1\022\032\n\010service2\030\002 \001(\tR\010servi" +
      "ce2\022%\n\016entities_count\030\003 \001(\005R\rentitiesCou" +
      "nt2\212\001\n\020FluxNinjaService\022v\n\006Report\022$.aper" +
      "ture.fluxninja.v1.ReportRequest\032%.apertu" +
      "re.fluxninja.v1.ReportResponse\"\037\202\323\344\223\002\031:\001" +
      "*\"\024/fluxninja/v1/report2\221\001\n\025ControllerIn" +
      "foService\022x\n\021GetControllerInfo\022\026.google." +
      "protobuf.Empty\032%.aperture.fluxninja.v1.C" +
      "ontrollerInfo\"$\202\323\344\223\002\036\022\034/fluxninja/v1/con" +
      "trollerinfoB\207\002\n-com.fluxninja.generated." +
      "aperture.fluxninja.v1B\016HeartbeatProtoP\001Z" +
      "Pgithub.com/fluxninja/aperture/api/gen/p" +
      "roto/go/aperture/fluxninja/v1;fluxninjav" +
      "1\242\002\003AFX\252\002\025Aperture.Fluxninja.V1\312\002\025Apertu" +
      "re\\Fluxninja\\V1\342\002!Aperture\\Fluxninja\\V1\\" +
      "GPBMetadata\352\002\027Aperture::Fluxninja::V1b\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.generated.aperture.autoscale.kubernetes.controlpoints.v1.ControlpointsProto.getDescriptor(),
          com.fluxninja.generated.aperture.flowcontrol.controlpoints.v1.ControlpointsProto.getDescriptor(),
          com.fluxninja.generated.aperture.info.v1.InfoProto.getDescriptor(),
          com.fluxninja.generated.aperture.peers.v1.PeersProto.getDescriptor(),
          com.fluxninja.generated.aperture.policy.sync.v1.PolicyProto.getDescriptor(),
          com.fluxninja.generated.aperture.status.v1.StatusProto.getDescriptor(),
          com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_aperture_fluxninja_v1_ReportRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_fluxninja_v1_ReportRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_ReportRequest_descriptor,
        new java.lang.String[] { "VersionInfo", "ProcessInfo", "HostInfo", "AgentGroup", "ControllerInfo", "Peers", "ServicesList", "AllStatuses", "Policies", "FlowControlPoints", "AutoScaleKubernetesControlPoints", "InstallationMode", });
    internal_static_aperture_fluxninja_v1_ReportResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_fluxninja_v1_ReportResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_ReportResponse_descriptor,
        new java.lang.String[] { });
    internal_static_aperture_fluxninja_v1_ControllerInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_fluxninja_v1_ControllerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_ControllerInfo_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_aperture_fluxninja_v1_ServicesList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_fluxninja_v1_ServicesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_ServicesList_descriptor,
        new java.lang.String[] { "Services", "OverlappingServices", });
    internal_static_aperture_fluxninja_v1_Service_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_fluxninja_v1_Service_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_Service_descriptor,
        new java.lang.String[] { "Name", "EntitiesCount", });
    internal_static_aperture_fluxninja_v1_OverlappingService_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_fluxninja_v1_OverlappingService_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_fluxninja_v1_OverlappingService_descriptor,
        new java.lang.String[] { "Service1", "Service2", "EntitiesCount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.generated.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.generated.aperture.autoscale.kubernetes.controlpoints.v1.ControlpointsProto.getDescriptor();
    com.fluxninja.generated.aperture.flowcontrol.controlpoints.v1.ControlpointsProto.getDescriptor();
    com.fluxninja.generated.aperture.info.v1.InfoProto.getDescriptor();
    com.fluxninja.generated.aperture.peers.v1.PeersProto.getDescriptor();
    com.fluxninja.generated.aperture.policy.sync.v1.PolicyProto.getDescriptor();
    com.fluxninja.generated.aperture.status.v1.StatusProto.getDescriptor();
    com.fluxninja.generated.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
