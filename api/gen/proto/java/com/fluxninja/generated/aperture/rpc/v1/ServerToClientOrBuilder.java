// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/rpc/v1/rpc.proto

package com.fluxninja.generated.aperture.rpc.v1;

public interface ServerToClientOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.rpc.v1.ServerToClient)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Make a request to client. Expect AgentToController message in the
   * future containing Response with the same id.
   * </pre>
   *
   * <code>.aperture.rpc.v1.Request request = 1 [json_name = "request"];</code>
   * @return Whether the request field is set.
   */
  boolean hasRequest();
  /**
   * <pre>
   * Make a request to client. Expect AgentToController message in the
   * future containing Response with the same id.
   * </pre>
   *
   * <code>.aperture.rpc.v1.Request request = 1 [json_name = "request"];</code>
   * @return The request.
   */
  com.fluxninja.generated.aperture.rpc.v1.Request getRequest();
  /**
   * <pre>
   * Make a request to client. Expect AgentToController message in the
   * future containing Response with the same id.
   * </pre>
   *
   * <code>.aperture.rpc.v1.Request request = 1 [json_name = "request"];</code>
   */
  com.fluxninja.generated.aperture.rpc.v1.RequestOrBuilder getRequestOrBuilder();

  /**
   * <pre>
   * Cancels in-flight request.
   * After cancellation, the response is not expected to be received, but
   * might happen that it will be received. If so, it should be ignored.
   * </pre>
   *
   * <code>uint64 cancel_id = 2 [json_name = "cancelId"];</code>
   * @return Whether the cancelId field is set.
   */
  boolean hasCancelId();
  /**
   * <pre>
   * Cancels in-flight request.
   * After cancellation, the response is not expected to be received, but
   * might happen that it will be received. If so, it should be ignored.
   * </pre>
   *
   * <code>uint64 cancel_id = 2 [json_name = "cancelId"];</code>
   * @return The cancelId.
   */
  long getCancelId();

  public com.fluxninja.generated.aperture.rpc.v1.ServerToClient.CommandCase getCommandCase();
}
