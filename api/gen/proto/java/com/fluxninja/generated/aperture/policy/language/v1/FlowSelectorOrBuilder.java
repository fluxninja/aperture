// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/language/v1/selector.proto

package com.fluxninja.generated.aperture.policy.language.v1;

public interface FlowSelectorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.language.v1.FlowSelector)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Describes
   * [control point](/concepts/flow-control/flow-control.md#control-point)
   * within the entity where the policy should apply to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ControlPoint control_point = 1 [json_name = "controlPoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the controlPoint field is set.
   */
  boolean hasControlPoint();
  /**
   * <pre>
   * Describes
   * [control point](/concepts/flow-control/flow-control.md#control-point)
   * within the entity where the policy should apply to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ControlPoint control_point = 1 [json_name = "controlPoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The controlPoint.
   */
  com.fluxninja.generated.aperture.policy.language.v1.ControlPoint getControlPoint();
  /**
   * <pre>
   * Describes
   * [control point](/concepts/flow-control/flow-control.md#control-point)
   * within the entity where the policy should apply to.
   * </pre>
   *
   * <code>.aperture.policy.language.v1.ControlPoint control_point = 1 [json_name = "controlPoint", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.ControlPointOrBuilder getControlPointOrBuilder();

  /**
   * <pre>
   * Label matcher allows to add _additional_ condition on
   * [flow labels](/concepts/flow-control/flow-label.md)
   * must also be satisfied (in addition to service+control point matching)
   * :::info
   * See also [Label Matcher overview](/concepts/flow-control/selector.md#label-matcher).
   * :::
   * :::note
   * [Classifiers](#v1-classifier) _can_ use flow labels created by some other
   * classifier, but only if they were created at some previous control point
   * (and propagated in baggage).
   * This limitation doesn't apply to selectors of other entities, like
   * Flux Meters or Actuators. It's valid to create a flow label on a control
   * point using classifier, and immediately use it for matching on the same
   * control point.
   * :::
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 2 [json_name = "labelMatcher"];</code>
   * @return Whether the labelMatcher field is set.
   */
  boolean hasLabelMatcher();
  /**
   * <pre>
   * Label matcher allows to add _additional_ condition on
   * [flow labels](/concepts/flow-control/flow-label.md)
   * must also be satisfied (in addition to service+control point matching)
   * :::info
   * See also [Label Matcher overview](/concepts/flow-control/selector.md#label-matcher).
   * :::
   * :::note
   * [Classifiers](#v1-classifier) _can_ use flow labels created by some other
   * classifier, but only if they were created at some previous control point
   * (and propagated in baggage).
   * This limitation doesn't apply to selectors of other entities, like
   * Flux Meters or Actuators. It's valid to create a flow label on a control
   * point using classifier, and immediately use it for matching on the same
   * control point.
   * :::
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 2 [json_name = "labelMatcher"];</code>
   * @return The labelMatcher.
   */
  com.fluxninja.generated.aperture.policy.language.v1.LabelMatcher getLabelMatcher();
  /**
   * <pre>
   * Label matcher allows to add _additional_ condition on
   * [flow labels](/concepts/flow-control/flow-label.md)
   * must also be satisfied (in addition to service+control point matching)
   * :::info
   * See also [Label Matcher overview](/concepts/flow-control/selector.md#label-matcher).
   * :::
   * :::note
   * [Classifiers](#v1-classifier) _can_ use flow labels created by some other
   * classifier, but only if they were created at some previous control point
   * (and propagated in baggage).
   * This limitation doesn't apply to selectors of other entities, like
   * Flux Meters or Actuators. It's valid to create a flow label on a control
   * point using classifier, and immediately use it for matching on the same
   * control point.
   * :::
   * </pre>
   *
   * <code>.aperture.policy.language.v1.LabelMatcher label_matcher = 2 [json_name = "labelMatcher"];</code>
   */
  com.fluxninja.generated.aperture.policy.language.v1.LabelMatcherOrBuilder getLabelMatcherOrBuilder();
}
