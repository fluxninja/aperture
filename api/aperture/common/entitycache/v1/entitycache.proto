syntax = "proto3";

package aperture.common.entitycache.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

//
// gRPC service
//

// EntityCacheService is used to query EntityCache.
service EntityCacheService {
  rpc GetServicesList(google.protobuf.Empty) returns (ServicesList) {
    option (google.api.http) = {
      get: "/v1/entity-cache/services-list"
    };
  }
}

//
// Data models
//

message ServicesList {
  repeated Service services = 1;
  repeated OverlappingService overlapping_services = 2;
}

// Service contains information about single service discovered in agent group by a
// particular agent
message Service {
  string name = 1;
  int32 entities_count = 2;
}

// OverlappingService contains info about a service that overlaps with another one
message OverlappingService {
  string service1 = 1;
  string service2 = 2;
  int32 entities_count = 3;
}
