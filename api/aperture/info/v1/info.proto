syntax = "proto3";

package aperture.info.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// InfoService is used to provide information about the aperture system.
service InfoService {
  rpc Version(google.protobuf.Empty) returns (VersionInfo) {
    option (google.api.http) = {get: "/v1/info/version"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: [
        "aperture-agent",
        "aperture-controller"
      ];
    };
  }
  rpc Process(google.protobuf.Empty) returns (ProcessInfo) {
    option (google.api.http) = {get: "/v1/info/process"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: [
        "aperture-agent",
        "aperture-controller"
      ];
    };
  }
  rpc Host(google.protobuf.Empty) returns (HostInfo) {
    option (google.api.http) = {get: "/v1/info/host"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: [
        "aperture-agent",
        "aperture-controller"
      ];
    };
  }
}

message VersionInfo {
  string version = 1;
  string service = 2;
  string build_host = 3;
  string build_os = 4;
  string build_time = 5;
  string git_branch = 6;
  string git_commit_hash = 7;
}

message ProcessInfo {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Duration uptime = 2;
  repeated string extensions = 3;
}

message HostInfo {
  string uuid = 1;
  string hostname = 2;
  string local_ip = 3;
}
