syntax = "proto3";

package aperture.policy.monitoring.v1;

import "google/protobuf/struct.proto";

// Components are interconnected with each other via Ports
message PortView {
  // Port name
  string port_name = 1;
  oneof value {
    // Name of the Signal on the Port.
    string signal_name = 2;
    // Constant value at an incoming Port
    double constant_value = 3;
  }
  // True if port is looped.
  bool looped = 4;
  // Sub circuit id, applicable only if value is of type signal_name.
  string sub_circuit_id = 5;
}

message ComponentView {
  string component_id = 1;
  string component_name = 2;
  string component_type = 3;
  string component_description = 4;
  google.protobuf.Struct component = 5;
  repeated PortView in_ports = 6;
  repeated PortView out_ports = 7;
}

// SourceTarget describes a link attachment to a component.
message SourceTarget {
  string component_id = 1;
  string port_name = 2;
}

// Link is a connection between Components.
message Link {
  SourceTarget source = 1;
  SourceTarget target = 2;
  oneof value {
    // Name of the Signal on the Port.
    string signal_name = 3;
    // Constant value at an incoming Port
    double constant_value = 4;
  }
  string looped = 5;
  string sub_circuit_id = 6;
}

message Graph {
  repeated ComponentView internal_components = 1;
  repeated ComponentView external_components = 2;
  repeated Link internal_links = 3;
  repeated Link external_links = 4;
}

message CircuitView {
  Tree tree = 1;
}

message Tree {
  ComponentView node = 1;
  Graph graph = 2;
  repeated Tree children = 3;
  repeated ComponentView actuators = 4;
}
