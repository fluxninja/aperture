syntax = "proto3";

package aperture.policy.language.v1;

import "aperture/common/selector/v1/selector.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// FluxMeter gathers metrics for the traffic that matches its selector
//
// :::info
// See also [FluxMeter overview](/concepts/flow-control/flux-meter.md).
// :::
//
// Example of a selector that creates a histogram metric for all HTTP requests
// to particular service:
// ```yaml
// selector:
//   service_selector:
//     service: myservice.mynamespace.svc.cluster.local
//   flow_selector:
//     control_point:
//       traffic: ingress
// ```
message FluxMeter {
  message StaticBuckets {
    repeated double buckets = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-default"
        value: {
          string_value: "[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
        }
      }
    }]; // @gotags: default:"[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
  }

  message LinearBuckets {
    double start = 1;
    double width = 2;
    int32 count = 3;
  }

  message ExponentialBuckets {
    double start = 1;
    double factor = 2;
    int32 count = 3;
  }

  message ExponentialBucketsRange {
    double min = 1;
    double max = 2;
    int32 count = 3;
  }

  // What latency should we measure in the histogram created by this FluxMeter.
  //
  // * For traffic control points, fluxmeter will measure the duration of the
  //   whole http transaction (including sending request and receiving
  //   response).
  // * For feature control points, fluxmeter will measure execution of the span
  //   associated with particular feature. What contributes to the span's
  //   duration is entirely up to the user code that uses Aperture SDK.
  common.selector.v1.Selector selector = 1;

  // Histogram buckets (in ms) for this FluxMeter.
  oneof histogram_buckets {
    StaticBuckets static_buckets = 2;
    LinearBuckets linear_buckets = 3;
    ExponentialBuckets exponential_buckets = 4;
    ExponentialBucketsRange exponential_buckets_range = 5;
  }

  // Key of the attribute in access log or span from which the metric for this flux meter is read.
  //
  // :::info
  // For list of available attributes in Envoy access logs, refer
  // [Envoy Filter](/get-started/installation/agent/envoy/istio.md#envoy-filter)
  // :::
  //
  string attribute_key = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    extensions: {
      key: "x-go-default"
      value: {
        string_value: "workload_duration_ms"
      }
    }
  }]; // @gotags: default:"workload_duration_ms"
}
