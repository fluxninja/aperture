syntax = "proto3";

package aperture.policy.language.v1;

import "aperture/policy/language/v1/selector.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Flux Meter gathers metrics for the traffic that matches its selector.
// The histogram created by Flux Meter measures the workload latency by default.
//
// :::info
// See also [Flux Meter overview](/concepts/flow-control/flux-meter.md).
// :::
//
// Example of a selector that creates a histogram metric for all HTTP requests
// to particular service:
// ```yaml
// selector:
//   service_selector:
//     service: myservice.mynamespace.svc.cluster.local
//   flow_selector:
//     control_point: ingress
// ```
message FluxMeter {
  // StaticBuckets holds the static value of the buckets where latency histogram will be stored.
  message StaticBuckets {
    repeated double buckets = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-default"
        value: {string_value: "[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"}
      }
    }]; // @gotags: default:"[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
  }

  // LinearBuckets creates `count` number of buckets, each `width` wide, where the lowest bucket has an
  // upper bound of `start`. The final +inf bucket is not counted.
  message LinearBuckets {
    // Upper bound of the lowest bucket.
    double start = 1;

    // Width of each bucket.
    double width = 2;

    // Number of buckets.
    int32 count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=0"}
      }
    }]; // @gotags: validate:"gt=0"
  }

  // ExponentialBuckets creates `count` number of buckets where the lowest bucket has an upper bound of `start`
  // and each following bucket's upper bound is `factor` times the previous bucket's upper bound. The final +inf
  // bucket is not counted.
  message ExponentialBuckets {
    // Upper bound of the lowest bucket.
    double start = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=0"}
      }
    }]; // @gotags: validate:"gt=0.0"

    // Factor to be multiplied to the previous bucket's upper bound to calculate the following bucket's upper bound.
    double factor = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=1.0"}
      }
    }]; // @gotags: validate:"gt=1.0"

    // Number of buckets.
    int32 count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=0"}
      }
    }]; // @gotags: validate:"gt=0"
  }

  // ExponentialBucketsRange creates `count` number of buckets where the lowest bucket is `min` and the highest
  // bucket is `max`. The final +inf bucket is not counted.
  message ExponentialBucketsRange {
    // Lowest bucket.
    double min = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=0"}
      }
    }]; // @gotags: validate:"gt=0.0"

    // Highest bucket.
    double max = 2;

    // Number of buckets.
    int32 count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      extensions: {
        key: "x-go-validate"
        value: {string_value: "gt=0"}
      }
    }]; // @gotags: validate:"gt=0"
  }

  // The selection criteria for the traffic that will be measured.
  FlowSelector flow_selector = 1;

  // Latency histogram buckets (in ms) for this Flux Meter.
  oneof histogram_buckets {
    StaticBuckets static_buckets = 2;
    LinearBuckets linear_buckets = 3;
    ExponentialBuckets exponential_buckets = 4;
    ExponentialBucketsRange exponential_buckets_range = 5;
  }

  // Key of the attribute in access log or span from which the metric for this flux meter is read.
  //
  // :::info
  // For list of available attributes in Envoy access logs, refer
  // [Envoy Filter](/get-started/integrations/flow-control/envoy/istio.md#envoy-filter)
  // :::
  //
  string attribute_key = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    extensions: {
      key: "x-go-default"
      value: {string_value: "workload_duration_ms"}
    }
  }]; // @gotags: default:"workload_duration_ms"
}
