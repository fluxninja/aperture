syntax = "proto3";

package aperture.policy.language.v1;

import "aperture/policy/language/v1/selector.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Note: this is unused at this time.
service PolicyService {
  rpc AllPolicies(google.protobuf.Empty) returns (AllPoliciesResponse) {
    option (google.api.http) = {
      get: "/v1/policies"
    };
  }
}

message AllPoliciesResponse {
  AllPolicies all_policies = 1;
}

message AllPolicies {
  map<string, Policy> all_policies = 1;
}

message Policy {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Policy is defined as a dataflow graph (circuit) of inter-connected components.\nSignals flow between components via ports.\nAs signals traverse the circuit, they get processed, stored within components or get acted upon (e.g. load shed, rate-limit, auto-scale etc.).\nPolicies are evaluated periodically in order to respond to changes in signal readings."
    }
  };

  repeated Component circuit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Defines a signal processing graph as a list of components."
  }];

  google.protobuf.Duration evaluation_interval = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Evaluation interval (ticks) is the time period between consecutive runs of the policy circuit.\nThis interval is typically aligned with how often the corrective action (actuation) needs to be taken."
    extensions: {
      key: "x-go-default";
      value: {
        string_value: "0.5s"
      }
    }
  }]; // @gotags: default:"0.5s"

  repeated FluxMeter flux_meters = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "FluxMeters are installed in the data-plane and form the observability leg of the feedback loop."
  }];
}

message FluxMeter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "FluxMeter gathers metrics for the traffic that matches its selector."
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Name of the flux meter."
  }];

  Selector selector = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Policies are only applied to flows that are matched based on the fields in the selector."
  }];

  repeated double histogram_buckets = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Latency histogram buckets (in ms) for this FluxMeter."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
      }
    }
  }]; // @gotags: default:"[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]"
}

message Component {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Computational blocks that form the circuit.\nSignals flow into the components via input ports and results are emitted on output ports.\nComponents are wired to each other based on signal names forming an execution graph of the circuit.\nLoops are broken by the runtime at the earliest component index that is part of the loop.\nThe looped signals are saved in the tick they are generated and served in the subsequent tick."
    }
  };

  oneof component {
    GradientController gradient_controller = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Gradient controller basically calculates the ratio between the signal and the setpoint to determine the magnitude of the correction that need to be applied. This controller can be used to build AIMD (Additive Increase, Multiplicative Decrease) or MIMD style response."
    }];

    EMA ema = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Exponential Moving Average filter."
    }];

    ArithmeticCombinator arithmetic_combinator = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Applies the given operator on input operands (signals) and emits the result."
    }];

    Decider decider = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Decider acts as a switch that emits one of the two signals based on the binary result of comparison operator on two operands."
    }];

    ConcurrencyLimiter concurrency_limiter = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Concurrency Limiter provides service protection by applying prioritized load shedding of flows using a network scheduler (e.g. Weighted Fair Queuing)."
    }];

    RateLimiter rate_limiter = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Rate Limiter provides service protection by applying rate limiter."
    }];

    PromQL promql = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Periodically runs a Prometheus query in the background and emits the result."
    }];

    Constant constant = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Emits a constant signal."
    }];

    Sqrt sqrt = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Takes an input signal and emits the square root of the input signal."
    }];

    Extrapolator extrapolator = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Takes an input signal and emits the extrapolated value; either mirroring the input value or repeating the last known value up to the maximum extrapolation interval."
    }];

    Max max = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Emits the maximum of the input siganls."
    }];

    Min min = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Emits the minimum of the input signals."
    }];
  }
}

message Port {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Components are interconnected with each other via Ports."
    }
  };

  string signal_name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Name of the incoming or outgoing Signal on the Port."
  }];
}

message GradientController {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Describes the gradient values which is computed as follows: gradient = (setpoint)/(signal) \\* tolerance.\nLimits gradient to range [min_gradient, max_gradient].\nOutput: (gradient \\* control_variable) + optimize."
    }
  };
  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Gradient Controller component."
      }
    };

    Port signal = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Signal to be used for the gradient computation."
    }];

    Port setpoint = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Setpoint to be used for the gradient computation."
    }];

    Port optimize = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optimize signal is added to the output of the gradient calculation."
    }];

    Port max = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Maximum value to limit the gradient."
    }];

    Port min = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Minimum value to limit the gradient."
    }];

    Port control_variable = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Control variable is multiplied by the gradient to produce the output."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Gradient Controller component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Computed desired value of the control variable."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports of the Gradient Controller."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports of the Gradient Controller."
  }];

  double tolerance = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Tolerance of the gradient controller beyond which the correction is made."
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "gte=0.0"
      }
    }
  }]; // @gotags: validate:"gte=0.0"

  double min_gradient = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Minimum gradient which clamps the computed gradient value to the range, [min_gradient, max_gradient]."
    extensions: {
      key: "x-go-default";
      value {
        number_value: -1.7976931348623157e+308
      }
    }
  }]; // @gotags: default:"-1.79769313486231570814527423731704356798070e+308"

  double max_gradient = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Maximum gradient which clamps the computed gradient value to the range, [min_gradient, max_gradient]."
    extensions: {
      key: "x-go-default";
      value {
        number_value: 1.7976931348623157e+308
      }
    }
  }]; // @gotags: default:"1.79769313486231570814527423731704356798070e+308"
}

message EMA {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Exponential Moving Average (EMA) is a type of moving average that applies exponenially more weight to recent signal readings.\nAt any time EMA component operates in one of the following states:\n1. Warm up state: The first warm_up_window samples are used to compute the initial EMA.\nIf an invalid reading is received during the warm_up_window, the last good average is emitted and the state gets reset back to beginning of Warm up state.\n2. Normal state: The EMA is computed using following formula.\nIf an invalid reading is received continuously for ema_window during the EMA stage, the last good EMA is emitted and the state gets reset back to Warm up state.\nThe EMA for a series Y is calculated recursively as:\nEMAt = Y0 , t = 0\nEMAt = alpha \\* Yt + (1 - alpha) \\* EMAt-1 , t > 0\nThe coefficient alpha represents the degree of weighting decrease, a constant smoothing factor between 0 and 1.\nA higher alpha discounts older observations faster.\nThe alpha is computed using ema_window: alpha = 2 / (N + 1). Where, N = ema_window / evalutation_period."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the EMA component."
      }
    };

    Port input = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Input signal to be used for the EMA computation."
    }];

    Port max_envelope = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Upper bound of the moving average."
    }];

    Port min_envelope = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Lower bound of the moving average."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the EMA component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Exponential moving average of the series of reading as an output signal."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the EMA component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the EMA component."
  }];

  google.protobuf.Duration ema_window = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Duration of EMA sampling window."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "5s"
      }
    }
  }]; // @gotags: default:"5s"

  google.protobuf.Duration warm_up_window = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Duration of EMA warming up window.\nThe initial value of the EMA is the average of signal readings received during the warm up window."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "0s"
      }
    }
  }]; // @gotags: default:"0s"

  double correction_factor_on_min_envelope_violation = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Correction factor to apply on the output value if its in violation of the min envelope."
    extensions: {
      key: "x-go-default";
      value {
        number_value: 1
      }
    }
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "gte=1.0"
      }
    }
  }]; // @gotags: validate:"gte=1.0" default:"1.0"

  double correction_factor_on_max_envelope_violation = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Correction factor to apply on the output value if its in violation of the max envelope."
    extensions: {
      key: "x-go-default";
      value {
        number_value: 1
      }
    }
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "gte=0,lte=1.0"
      }
    }
  }]; // @gotags: validate:"gte=0,lte=1.0" default:"1.0"
}

message ArithmeticCombinator {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Type of combinator that computes the arithmetic operation on the operand signals.\nThe arithmetic operation can be addition, subtraction, multiplication, division, XOR, right bit shift or left bit shift."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Arithmetic Combinator component."
      }
    };

    Port lhs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Left hand side of the arithmetic operation."
    }];

    Port rhs = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Right hand side of the arithmetic operation."
    }];
  }
  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Arithmetic Combinator component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Result of arithmetic operation."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Arithmetic Combinator component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Arithmetic Combinator component."
  }];

  string operator = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Operator of the arithmetic operation."
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "oneof=add sub mul div xor lshift rshift"
      }
    }
  }]; // @gotags: validate:"oneof=add sub mul div xor lshift rshift"
}

message Decider {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Type of combinator that computes the comparison operation on lhs and rhs signals and switches between on_true and on_false signals based on the result of the comparison.\nThe comparison operator can be greater-than, less-than, greater-than-or-equal, less-than-or-equal, equal, or not-equal.\nThis component also supports time-based response, i.e. the output transitions between on_true or on_false signal if the decider condition is true or false for at least \"positive_for\" or \"negative_for\" duration.\nIf true_for and false_for durations are zero then the transitions are instantaneous."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Decider component."
      }
    };

    Port lhs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Left hand side input signal for the comparison operation."
    }];
    Port rhs = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Right hand side input signal for the comparison operation."
    }];
    Port on_true = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Output signal when the result of the operation is true."
    }];
    Port on_false = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Output signal when the result of the operation is false."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Decider component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Selected signal (on_true or on_false)."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Decider component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Decider component."
  }];

  string operator = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Comparison operator that computes operation on lhs and rhs input signals."
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "oneof=gt lt gte lte eq neq"
      }
    }
  }]; // @gotags: validate:"oneof=gt lt gte lte eq neq"

  google.protobuf.Duration true_for = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Duration of time to wait before a transition to true state.\nIf the duration is zero, the transition will happen instantaneously."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "0s"
      }
    }
  }]; // @gotags: default:"0s"

  google.protobuf.Duration false_for = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Duration of time to wait before a transition to false state.\nIf the duration is zero, the transition will happen instantaneously."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "0s"
      }
    }
  }]; // @gotags: default:"0s"
}

message RateLimiter {
  message LazySyncConfig {
    bool enabled = 1; // @gotags: default:"true"
    // Number of times to lazy sync within the limit_reset_interval
    uint32 num_sync = 2; // @gotags: default:"5" validate:"gt=0"
  }

  message OverrideConfig {
    string label_value = 1; // @gotags: validate:"required"
    double limit_scale_factor = 2; // @gotags: default:"1.0"
  }

  message Ins {
    // negative limit means no limit is applied
    Port limit = 1; // @gotags: validate:"required" default:"-1.0"
  }

  Ins in_ports = 1; // @gotags: validate:"required"
  Selector selector = 2; // @gotags: validate:"required"
  google.protobuf.Duration limit_reset_interval = 3; // @gotags: default:"60s"
  string label_key = 4; // @gotags: validate:"required"
  repeated OverrideConfig overrides = 5;
  LazySyncConfig lazy_sync_config = 6;
}

message ConcurrencyLimiter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Concurrency Limiter is an actuator component that regulates flows in order to provide active service protection. It is based on the actuation strategy (e.g. load shed) and workload scheduling which is based on Weighted Fair Queuing principles. Concurrency is calculated in terms of total tokens which translate to (avg. latency * inflight requests), i.e. Little's Law."
    }
  };

  Scheduler scheduler = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Weighted Fair Queuing based workfload scheduler."
    extensions: {
      key: "x-go-validate";
      value {
        string_value: "required"
      }
    }
  }]; // @gotags: validate:"required"

  oneof actuation_strategy {
    LoadShedActuator load_shed_actuator = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Actuator based on load shedding a portion of requests."
    }];
  }
}

message Scheduler {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Weighted Fair Queuing based workload scheduler."
    }
  };

  message WorkloadConfig {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Configuration that provides scheduling parameters such as priority for the given workloads."
      }
    };

    message Workload {
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
          description: "Workload defines a class of requests that preferably have similar properties such as response latency."
        }
      };

      uint32 priority = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Describes priority level of the requests within the workload.\nPriority level ranges from 0 to 255.\nHigher numbers means higher priority level."
        extensions: {
          key: "x-go-validate";
          value {
            string_value: "gte=0,lte=255"
          }
        }
      }]; // @gotags: validate:"gte=0,lte=255"

      uint64 tokens = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Tokens determines the cost of admitting a single request the workload, which is typically defined as milliseconds of response latency. This override is applicable only if auto_tokens is set to false.\n"
        extensions: {
          key: "x-go-default";
          value {
            number_value: 1
          }
        }
      }]; // @gotags: default:"1"

      google.protobuf.Duration timeout = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Timeout override decides how long a request in the workload can wait for tokens. This value impacts the fairness because the larger the timeout the higher the chance a request has to get scheduled."
        extensions: {
          key: "x-go-default";
          value {
            string_value: "0.005s"
          }
        }
      }]; // @gotags: default:"0.005s"

      string label_value = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Value of label for specified workload label key."
      }];
    }

    message DefaultWorkload {
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
          description: "Workload defines a class of requests that preferably have similar properties such as response latency."
        }
      };

      uint32 priority = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Describes priority level of the requests within the workload.\nPriority level ranges from 0 to 255.\nHigher numbers means higher priority level."
        extensions: {
          key: "x-go-validate";
          value {
            string_value: "gte=0,lte=255"
          }
        }
      }]; // @gotags: validate:"gte=0,lte=255"

      uint64 tokens = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Tokens determines the cost of admitting a single request the workload, which is typically defined as milliseconds of response latency. This override is applicable only if auto_tokens is set to false.\n"
        extensions: {
          key: "x-go-default";
          value {
            number_value: 1
          }
        }
      }]; // @gotags: default:"1"

      google.protobuf.Duration timeout = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Timeout override decides how long a request in the workload can wait for tokens. This value impacts the fairness because the larger the timeout the higher the chance a request has to get scheduled."
        extensions: {
          key: "x-go-default";
          value {
            string_value: "0.005s"
          }
        }
      }]; // @gotags: default:"0.005s"
    }

    // TODO: this entire section is being reworked by @TanveerGill
    string label_key = 1;

    bool auto_tokens = 2; // @gotags: default:"true"

    DefaultWorkload default_workload = 3;
    // list of workloads
    // workload can describe priority, tokens (if auto_tokens are set to false) and timeout
    repeated Workload workloads = 4;
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Output for the Scheduler component."
      }
    };

    Port accepted_concurrency = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Accepted concurrency is the number of accepted tokens/sec."
    }];

    Port incoming_concurrency = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Incoming concurrency is the number of incoming tokens/sec."
    }];
  }

  Outs out_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Scheduler component."
  }];

  Selector selector = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Selector decides for which service or flows the scheduler will be applied."
  }];

  // TODO: this is getting reworked.
  string fairness_key = 3;

  WorkloadConfig workload_config = 4;
}

message LoadShedActuator {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Takes the load shed factor input signal and publishes it to the schedulers in the data-plane."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Input for the Load Shed Actuator component."
      }
    };

    Port load_shed_factor = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Load shedding factor is a fraction of incoming concurrency (tokens * requests) that needs to be dropped."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Load Shed Actuator component."
  }];
}

message PromQL {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Component that runs a Prometheus query periodically and returns the result as an output signal."
    }
  };

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Output for the PromQL component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The result of the Prometheus query as an output signal."
    }];
  }

  Outs out_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the PromQL component."
  }];

  string query_string = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Describes the Prometheus query to be run."
  }];

  google.protobuf.Duration evaluation_interval = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Describes the interval between successive evaluations of the Prometheus query."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "10s"
      }
    }
  }]; // @gotags: default:"10s"
}

message Constant {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Component that emits a constant value as an output signal."
    }
  };

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Constant component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The constant value is emitted to the output port."
    }];
  }

  Outs out_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Constant component."
  }];

  double value = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The constant value to be emitted."
  }];
}

message Sqrt {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Takes an input signal and emits the square root of it multiplied by scale as an output.\nSqrt: output = sqrt(input) * scale."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Sqrt component."
      }
    };

    Port input = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Input signal."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Sqrt component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Output signal."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Sqrt component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Sqrt component."
  }];

  double scale = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Scaling factor to be multiplied with the square root of the input signal."
    extensions: {
      key: "x-go-default";
      value {
        number_value: 1
      }
    }
  }]; // @gotags default:"1.0"
}

message Extrapolator {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Extrapolates the input signal by repeating the last valid value during the period in which it is invalid. It does so until maximum_extrapolation_interval is reached, beyond which it emits invalid signal unless input signal becomes valid again."
    }
  };
  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Extrapolator component."
      }
    };

    Port input = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Input signal for the Extrapolator component."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Outputs for the Extrapolator component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Extrapolated signal."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Extrapolator component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Extrapolator component."
  }];

  google.protobuf.Duration max_extrapolation_interval = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Maximum time interval to repeat the last valid value of input signal."
    extensions: {
      key: "x-go-default";
      value {
        string_value: "10s"
      }
    }
  }]; // @gotags: default:"10s"
}

message Max {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Takes a list of input signals and emits the signal with the maximum value.\nMax: output = max([]inputs)."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Max component."
      }
    };

    repeated Port inputs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Array of input signals."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Output for the Max component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Signal with maximum value as an output signal."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Max component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Max component."
  }];
}

message Min {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Takes an array of input signals and emits the signal with the minimum value.\nMin: output = min([]inputs)."
    }
  };

  message Ins {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Inputs for the Min component."
      }
    };

    repeated Port inputs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Array of input signals."
    }];
  }

  message Outs {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        description: "Output ports for the Min component."
      }
    };

    Port output = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Signal with minimum value as an output signal."
    }];
  }

  Ins in_ports = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Input ports for the Min component."
  }];

  Outs out_ports = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Output ports for the Min component."
  }];
}
