syntax = "proto3";

package aperture.policy.language.v1;

import "aperture/policy/language/v1/ports.proto";
import "aperture/policy/language/v1/std_components.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

// Describes which pods a control or observability
// component should apply to.
message KubernetesObjectSelector {
  // Which [agent-group](/concepts/selector.md#agent-group) this
  // selector applies to.
  string agent_group = 1; // @gotags: default:"default"

  // Kubernetes namespace that the resource belongs to.
  string namespace = 2; // @gotags: validate:"required"

  // API version of Kubernetes resource
  string api_version = 3; // @gotags: validate:"required"

  // Kubernetes resource type.
  string kind = 4; // @gotags: validate:"required"

  // Kubernetes resource name.
  string name = 5; // @gotags: validate:"required"
}

// AutoScale components are used to scale a service.
message AutoScale {
  oneof component {
    // PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
    PodScaler pod_scaler = 1;

    // _AutoScaler_ provides auto-scaling functionality for any scalable resource.
    AutoScaler auto_scaler = 2;

    // Extends auto scale with private components.
    google.protobuf.Any private = 1000;
  }
}

// Component for scaling pods based on a signal.
message PodScaler {
  // Inputs for the PodScaler component.
  message Ins {
    // The number of replicas to configure for the Kubernetes resource
    InPort replicas = 1;
  }

  // Outputs for the PodScaler component.
  message Outs {
    // The number of replicas that are currently running.
    OutPort actual_replicas = 1;
    // The number of replicas that are desired.
    OutPort configured_replicas = 2;
  }

  // Input ports for the PodScaler component.
  Ins in_ports = 1;

  // Output ports for the PodScaler component.
  Outs out_ports = 2;

  // Dry run mode ensures that no scaling is invoked by this pod scaler.
  // This is useful for observing the behavior of pod scaler without disrupting any real deployment.
  // This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
  bool dry_run = 3;

  // Configuration key for overriding dry run setting through dynamic configuration.
  string dry_run_config_key = 4;

  // The Kubernetes object to which this pod scaler applies.
  KubernetesObjectSelector kubernetes_object_selector = 5; // @gotags: validate:"required"
}

// Increasing Gradient defines a controller for scaling out based on _Gradient Controller_.
message IncreasingGradient {
  // This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
  message Parameters {
    double slope = 1; // @gotags: default:"1.0"

    double max_gradient = 3; // @gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
  }

  // Inputs for Gradient.
  message Ins {
    // The signal to use for scale-out.
    InPort signal = 1;
    // The setpoint to use for scale-out.
    InPort setpoint = 2;
  }

  // Input ports for the Gradient.
  Ins in_ports = 1;

  // Gradient parameters for the controller. Defaults and constraints:
  // * `slope` = 1
  // * `min_gradient` = 1 (cannot be changed)
  // * `max_gradient` = +Inf (must be greater than 1)
  Parameters parameters = 2;
}

// Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
message DecreasingGradient {
  // This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
  message Parameters {
    double slope = 1; // @gotags: default:"1.0"

    double min_gradient = 2; // @gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
  }

  // Inputs for Gradient.
  message Ins {
    // The signal to use for scale-in.
    InPort signal = 1;
    // The setpoint to use for scale-in.
    InPort setpoint = 2;
  }

  // Input ports for the Gradient.
  Ins in_ports = 1;

  // Gradient parameters for the controller. Defaults and constraints:
  // * `slope` = 1
  // * `min_gradient` = -Inf (must be less than 1)
  // * `max_gradient` = 1 (cannot be changed)
  Parameters parameters = 2;
}

// PeriodicDecrease defines a controller for scaling in based on a periodic timer.
message PeriodicDecrease {
  // The period of the timer.
  // This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
  google.protobuf.Duration period = 1; // @gotags: validate:"required"
  // The percentage of scale to reduce.
  double scale_in_percentage = 2; // @gotags: validate:"required,gte=0,lte=100"
}

message ScaleOutController {
  message Controller {
    oneof controller {
      IncreasingGradient gradient = 1;
    } // @gotags: validate:"required"
  }

  // Controller
  Controller controller = 1; // @gotags: validate:"required"

  // Configuration for embedded Alerter.
  Alerter.Parameters alerter = 2; // @gotags: validate:"required"
}

message ScaleInController {
  message Controller {
    oneof controller {
      DecreasingGradient gradient = 1;
      PeriodicDecrease periodic = 2;
    } // @gotags: validate:"required"
  }

  // Controller
  Controller controller = 1; // @gotags: validate:"required"

  // Configuration for embedded Alerter.
  Alerter.Parameters alerter = 2; // @gotags: validate:"required"
}

// _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
message AutoScaler {
  message ScalingParameters {
    // The maximum increase of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
    double max_scale_out_percentage = 1; // @gotags: default:"10"
    // The maximum decrease of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
    double max_scale_in_percentage = 2; // @gotags: default:"1"

    // The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
    // This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
    google.protobuf.Duration scale_out_cooldown = 3; // @gotags: default:"30s"
    // The amount of time to wait after a scale-in operation for another scale-in operation.
    // This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
    google.protobuf.Duration scale_in_cooldown = 4; // @gotags: default:"120s"

    // Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
    // For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
    // scale-increases by 10% or more, the previous cooldown is canceled. Defaults to 50%.
    double cooldown_override_percentage = 5; // @gotags: default:"50"

    // Configuration for scale-out Alerter.
    Alerter.Parameters scale_out_alerter = 6; // @gotags: validate:"required"

    // Configuration for scale-in Alerter.
    Alerter.Parameters scale_in_alerter = 7; // @gotags: validate:"required"
  }

  message ScalingBackend {
    // KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
    message KubernetesReplicas {
      // Outputs
      message Outs {
        OutPort actual_replicas = 1;
        OutPort configured_replicas = 2;
        OutPort desired_replicas = 3;
      }
      // The Kubernetes object on which horizontal scaling is applied.
      KubernetesObjectSelector kubernetes_object_selector = 1; // @gotags: validate:"required"
      // The minimum replicas to which the _AutoScaler_ can scale-in.
      int64 min_replicas = 2; // @gotags: default:"0" validate:"gte=0"
      // The maximum replicas to which the _AutoScaler_ can scale-out.
      int64 max_replicas = 3; // @gotags: default:"9223372036854775807" validate:"gt=0"
      // Output ports for _Kubernetes Replicas_.
      Outs out_ports = 4;
    }
    oneof scaler {
      KubernetesReplicas kubernetes_replicas = 1;
    } // @gotags: validate:"required"
  }

  ScalingBackend scaling_backend = 1; // @gotags: validate:"required"

  // List of _Controllers_ for scaling out.
  repeated ScaleOutController scale_out_controllers = 2; // @gotags: validate:"dive"

  // List of _Controllers_ for scaling in.
  repeated ScaleInController scale_in_controllers = 3; // @gotags: validate:"dive"

  // Parameters that define the scaling behavior.
  ScalingParameters scaling_parameters = 4; // @gotags: validate:"required"

  // Dry run mode ensures that no scaling is invoked by this auto scaler.
  // This is useful for observing the behavior of auto scaler without disrupting any real deployment.
  // This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
  bool dry_run = 5;

  // Configuration key for overriding dry run setting through dynamic configuration.
  string dry_run_config_key = 6;
}
