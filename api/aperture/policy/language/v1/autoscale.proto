syntax = "proto3";

package aperture.policy.language.v1;

import "aperture/policy/language/v1/ports.proto";
import "aperture/policy/language/v1/std_components.proto";
import "google/protobuf/duration.proto";

// Describes which pods a control or observability
// component should apply to.
message KubernetesObjectSelector {
  // Which [agent-group](/concepts/flow-control/flow-selector.md#agent-group) this
  // selector applies to.
  string agent_group = 1; // @gotags: default:"default"

  // Kubernetes namespace that the resource belongs to.
  string namespace = 2; // @gotags: validate:"required"

  // API version of Kubernetes resource
  string api_version = 3; // @gotags: validate:"required"

  // Kubernetes resource type.
  string kind = 4; // @gotags: validate:"required"

  // Kubernetes resource name.
  string name = 5; // @gotags: validate:"required"
}

// AutoScale components are used to scale a service.
message AutoScale {
  oneof component {
    // PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
    PodScaler pod_scaler = 1;
    // _AutoScaler_ provides auto-scaling functionality for any scalable resource.
    AutoScaler auto_scaler = 2;
  }
}

// Component for scaling pods based on a signal.
message PodScaler {
  // Reports actual and configured number of replicas.
  message ScaleReporter {
    // Outputs for the PodScaler component.
    message Outs {
      // The number of replicas that are currently running.
      OutPort actual_replicas = 1;
      // The number of replicas that are desired.
      OutPort configured_replicas = 2;
    }

    // Output ports for the PodScaler component.
    Outs out_ports = 1;
  }

  // Actuates scaling of pods based on a signal.
  message ScaleActuator {
    // Dynamic Configuration for ScaleActuator
    message DynamicConfig {
      // Decides whether to run the pod scaler in dry-run mode. Dry run mode ensures that no scaling is invoked by this pod scaler.
      // Useful for observing the behavior of Scaler without disrupting any real traffic.
      bool dry_run = 1; // @gotags: default:"false"
    }

    // Inputs for the PodScaler component.
    message Ins {
      InPort desired_replicas = 1;
    }

    // Input ports for the PodScaler component.
    Ins in_ports = 1;

    // Configuration key for DynamicConfig
    string dynamic_config_key = 2;

    // Default configuration.
    DynamicConfig default_config = 3;
  }

  // The Kubernetes object on which horizontal scaling is applied.
  KubernetesObjectSelector kubernetes_object_selector = 1; // @gotags: validate:"required"

  // Reports actual and configured number of replicas.
  ScaleReporter scale_reporter = 2;

  // Actuates scaling of pods based on a signal.
  ScaleActuator scale_actuator = 3;
}

// _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
message AutoScaler {
  // Increasing Gradient defines a controller for scaling out based on Gradient Controller.
  message IncreasingGradient {
    // This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
    message Parameters {
      double slope = 1; // @gotags: default:"1.0"

      double max_gradient = 3; // @gotags: default:"1.79769313486231570814527423731704356798070e+308" validate:"gte=1.0"
    }

    // Inputs for Gradient.
    message Ins {
      // The signal to use for scale-out.
      InPort signal = 1;
      // The setpoint to use for scale-out.
      InPort setpoint = 2;
    }

    // Input ports for the Gradient.
    Ins in_ports = 1;

    // Gradient parameters for the controller. Defaults and constraints:
    // * slope = 1
    // * min_gradient = 1 (cannot be changed)
    // * max_gradient = +Inf (must be greater than 1)
    Parameters parameters = 2;
  }

  // Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
  message DecreasingGradient {
    // This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
    message Parameters {
      double slope = 1; // @gotags: default:"1.0"

      double min_gradient = 2; // @gotags: default:"-1.79769313486231570814527423731704356798070e+308" validate:"lte=1.0"
    }

    // Inputs for Gradient.
    message Ins {
      // The signal to use for scale-in.
      InPort signal = 1;
      // The setpoint to use for scale-in.
      InPort setpoint = 2;
    }

    // Input ports for the Gradient.
    Ins in_ports = 1;

    // Gradient parameters for the controller. Defaults and constraints:
    // * slope = 1
    // * min_gradient = -Inf (must be less than 1)
    // * max_gradient = 1 (cannot be changed)
    Parameters parameters = 2;
  }

  message ScaleOutController {
    message Controller {
      oneof controller {
        IncreasingGradient gradient = 1;
      }
    }

    // Controller
    Controller controller = 1; // @gotags: validate:"required"

    // Configuration for embedded alerter.
    Alerter.Parameters alerter_parameters = 2;
  }

  message ScaleInController {
    message Controller {
      oneof controller {
        DecreasingGradient gradient = 1;
      }
    }

    // Controller
    Controller controller = 1;

    // Configuration for embedded alerter.
    Alerter.Parameters alerter_parameters = 2;
  }

  message Scaler {
    oneof scaler {
      KubernetesReplicas kubernetes_replicas = 1;
    }
  }

  // KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
  message KubernetesReplicas {
    // The Kubernetes object on which horizontal scaling is applied.
    KubernetesObjectSelector kubernetes_object_selector = 1; // @gotags: validate:"required"

    // Configuration key for DynamicConfig
    string dynamic_config_key = 2;

    // Default configuration.
    PodScaler.ScaleActuator.DynamicConfig default_config = 3;
  }

  // Outputs for _AutoScaler_.
  message Outs {
    OutPort actual_scale = 1;
    OutPort configured_scale = 2;
    OutPort desired_scale = 3;
  }

  // Output ports for the _AutoScaler_.
  Outs out_ports = 1;

  Scaler scaler = 2; // @gotags: validate:"required"

  // The minimum scale to which the _AutoScaler_ can scale-in. E.g. in case of KubernetesReplicas Scaler, this is the minimum number of replicas.
  int64 min_scale = 3; // @gotags: default:"0" validate:"gte=0"
  // The maximum scale to which the _AutoScaler_ can scale-out. E.g. in case of KubernetesReplicas Scaler, this is the maximum number of replicas.
  int64 max_scale = 4; // @gotags: default:"9223372036854775807" validate:"gt=0"

  // List of _Controllers_ for scaling out.
  repeated ScaleOutController scale_out_controllers = 5;
  // List of _Controllers_ for scaling in.
  repeated ScaleInController scale_in_controllers = 6;

  // The maximum increase of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.
  double max_scale_out_percentage = 8; // @gotags: default:"10"
  // The maximum decrease of scale (e.g. pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.
  double max_scale_in_percentage = 7; // @gotags: default:"1"

  // The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
  google.protobuf.Duration scale_out_cooldown = 9; // @gotags: default:"30s"
  // The amount of time to wait after a scale-in operation for another scale-in operation.
  google.protobuf.Duration scale_in_cooldown = 10; // @gotags: default:"120s"

  // Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
  // For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
  // scale-increases by 10% or more, the previous cooldown is cancelled. Defaults to 50%.
  double cooldown_override_percentage = 11; // @gotags: default:"50"

  // Configuration for scale-out alerter.
  Alerter.Parameters scale_out_alerter_parameters = 12;

  // Configuration for scale-in alerter.
  Alerter.Parameters scale_in_alerter_parameters = 13;
}
