syntax = "proto3";

package aperture.flowcontrol.checkhttp.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/rpc/status.proto";
import "validate/validate.proto";

service FlowControlServiceHTTP {
  rpc CheckHTTP(CheckHTTPRequest) returns (CheckHTTPResponse) {
    option (google.api.http) = {
      post: "/v1/flowcontrol/checkhttp"
      body: "*"
    };
  }
}

message CheckHTTPRequest {
  message HttpRequest {
    string method = 1;

    map<string, string> headers = 2;

    string path = 3;

    string host = 4;

    string scheme = 5;

    int64 size = 6;

    string protocol = 7;

    string body = 8;
  }

  SocketAddress source = 1;

  SocketAddress destination = 2;

  HttpRequest request = 3;
}

message DeniedHttpResponse {
  int32 status = 1;

  map<string, string> headers = 2;

  string body = 3;
}

message OkHttpResponse {
  map<string, string> headers = 1;

  google.protobuf.Struct dynamic_metadata = 2;
}

message CheckHTTPResponse {
  google.rpc.Status status = 1;

  oneof http_response {
    // Supplies http attributes for a denied response.
    DeniedHttpResponse denied_response = 2;

    // Supplies http attributes for an ok response.
    OkHttpResponse ok_response = 3;
  }

  google.protobuf.Struct dynamic_metadata = 4;
}

message SocketAddress {
  enum Protocol {
    TCP = 0;
    UDP = 1;
  }

  Protocol protocol = 1 [(validate.rules).enum = {defined_only: true}];

  string address = 2 [(validate.rules).string = {min_len: 1}];

  uint32 port = 3 [(validate.rules).uint32 = {lte: 65535}];
}
