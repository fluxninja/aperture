# yaml-language-server: $schema=../../../../blueprints/policies/static-rate-limiting/gen/definitions.json
# Generated values file for policies/static-rate-limiting blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/policies/bundled-blueprints/policies/static-rate-limiting

common:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: "graphql-static-rate-limiting"

policy:
  # List of classification rules.
  # Type: []aperture.spec.v1.Classifier
  classifiers:
    - flow_selector:
        flow_matcher:
          control_point: ingress
        service_selector:
          agent_group: default
          service: service-graphql-demo-app.demoapp.svc.cluster.local
      rego:
        labels:
          user_id:
            telemetry: true
        module: |
          package graphql_example
          import future.keywords.if
          query_ast := graphql.parse_query(input.parsed_body.query)
          claims := payload if {
            io.jwt.verify_hs256(bearer_token, "secret")
            [_, payload, _] := io.jwt.decode(bearer_token)
          }
          bearer_token := t if {
            v := input.attributes.request.http.headers.authorization
            startswith(v, "Bearer ")
            t := substring(v, count("Bearer "), -1)
          }
          queryIsCreateTodo if {
            some operation
            walk(query_ast, [_, operation])
            operation.Name == "createTodo"
            count(operation.SelectionSet) > 0
            some selection
            walk(operation.SelectionSet, [_, selection])
            selection.Name == "createTodo"
          }
          user_id := u if {
            queryIsCreateTodo
            u := claims.userID
          }
  rate_limiter:
    # Number of requests per `policy.rate_limiter.parameters.limit_reset_interval` to accept
    # Type: float64
    # Required: True
    rate_limit: 10
    # A flow selector to match requests against
    # Type: aperture.spec.v1.FlowSelector
    flow_selector:
      service_selector:
        agent_group: default
        # Service Name.
        # Type: string
        # Required: True
        service: service-graphql-demo-app.demoapp.svc.cluster.local
      flow_matcher:
        # Control Point Name.
        # Type: string
        # Required: True
        control_point: ingress
    # Parameters.
    # Type: aperture.spec.v1.RateLimiterParameters
    parameters:
      # Flow label to use for rate limiting.
      # Type: string
      # Required: True
      label_key: user_id
      lazy_sync:
        enabled: true
        num_sync: 5
      limit_reset_interval: 1s
