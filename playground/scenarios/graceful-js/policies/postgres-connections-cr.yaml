apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  labels:
    fluxninja.com/validate: "true"
  name: postgres-connections
spec:
  circuit:
    components:
    - flow_control:
        aiad_load_scheduler:
          dry_run: false
          dry_run_config_key: dry_run
          in_ports:
            overload_confirmation:
              constant_signal:
                value: 1
            setpoint:
              signal_name: SETPOINT
            signal:
              signal_name: SIGNAL
          out_ports:
            desired_load_multiplier:
              signal_name: DESIRED_LOAD_MULTIPLIER
            observed_load_multiplier:
              signal_name: OBSERVED_LOAD_MULTIPLIER
          parameters:
            alerter:
              alert_name: AIAD Load Throttling Event
            load_multiplier_linear_decrement: 0.2
            load_multiplier_linear_increment: 0.05
            load_scheduler:
              scheduler:
                workloads:
                - label_matcher:
                    match_labels:
                      user_type: guest
                  name: guest
                  parameters:
                    priority: 50
                - label_matcher:
                    match_labels:
                      http.request.header.user_type: subscriber
                  name: subscriber
                  parameters:
                    priority: 250
              selectors:
              - agent_group: default
                control_point: ingress
                service: service1-demo-app.demoapp.svc.cluster.local
              workload_latency_based_tokens: true
            max_load_multiplier: 2
            min_load_multiplier: 0
            overload_condition: gt
    - query:
        promql:
          evaluation_interval: 10s
          out_ports:
            output:
              signal_name: SIGNAL
          query_string: (sum(postgresql_backends{policy_name="postgres-connections",infra_meter_name="postgresql"})
            / sum(postgresql_connection_max{policy_name="postgres-connections",infra_meter_name="postgresql"}))
            * 100
    - variable:
        constant_output:
          value: 40
        out_ports:
          output:
            signal_name: SETPOINT
    evaluation_interval: 1s
  resources:
    flow_control:
      classifiers:
      - rules:
          user_type:
            extractor:
              from: request.http.headers.user-type
        selectors:
        - agent_group: default
          control_point: ingress
          service: service1-demo-app.demoapp.svc.cluster.local
    infra_meters:
      postgresql:
        agent_group: default
        per_agent_group: true
        receivers:
          postgresql:
            collection_interval: 1s
            databases:
            - postgres
            endpoint: postgresql.postgresql.svc.cluster.local:5432
            password: secretpassword
            tls:
              insecure: true
            username: postgres
