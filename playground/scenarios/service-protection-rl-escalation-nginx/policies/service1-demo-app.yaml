# yaml-language-server: $schema=../../../../blueprints/policies/service-protection/average-latency/gen/definitions.json
# Generated values file for policies/service-protection/average-latency blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/blueprints/service-protection/average-latency
policy:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: service1-demo-app
  # List of additional circuit components.
  # Type: []aperture.spec.v1.Component
  components:
    - decider:
        in_ports:
          lhs:
            signal_name: DESIRED_LOAD_MULTIPLIER
          rhs:
            constant_signal:
              value: 1.0
        out_ports:
          output:
            signal_name: IS_CRAWLER_ESCALATION
        operator: lt
        true_for: 30s
    - switcher:
        in_ports:
          switch:
            signal_name: IS_CRAWLER_ESCALATION
          on_signal:
            constant_signal:
              value: 0.0
          off_signal:
            constant_signal:
              value: 10.0
        out_ports:
          output:
            signal_name: RATE_LIMIT
    - flow_control:
        rate_limiter:
          selectors:
            - control_point: service1-demo-app
              label_matcher:
                match_labels:
                  "http.request.header.user_type": "crawler"
          in_ports:
            bucket_capacity:
              signal_name: RATE_LIMIT
            fill_amount:
              signal_name: RATE_LIMIT
          parameters:
            label_key: http.request.header.user_id
            interval: 1s
  # Additional resources.
  # Type: aperture.spec.v1.Resources
  resources:
    flow_control:
      classifiers:
        - selectors:
            - control_point: service1-demo-app
              service: nginx-server.demoapp.svc.cluster.local
              label_matcher:
                match_labels:
                  http.target: "/service1"
          rules:
            user_type:
              extractor:
                from: request.http.headers.user-type

  service_protection_core:
    adaptive_load_scheduler:
      load_scheduler:
        # The selectors determine the flows that are protected by this policy.
        # Type: []aperture.spec.v1.Selector
        # Required: True
        selectors:
          - control_point: service1-demo-app
            service: nginx-server.demoapp.svc.cluster.local
            label_matcher:
              match_labels:
                http.target: "/service1"
        # Scheduler parameters.
        # Type: aperture.spec.v1.SchedulerParameters
        scheduler:
          workloads:
            - parameters:
                priority: "50"
              label_matcher:
                match_labels:
                  user_type: guest
              name: guest
            - parameters:
                priority: "200"
              label_matcher:
                match_labels:
                  http.request.header.user_type: subscriber
              name: subscriber
      # Linear increment to load multiplier in each execution tick (0.5s) when the system is not in overloaded state.
      # Type: float64
      load_multiplier_linear_increment: 0.025

  latency_baseliner:
    latency_tolerance_multiplier: 1.1
    # Flux Meter defines the scope of latency measurements.
    # Type: aperture.spec.v1.FluxMeter
    # Required: True
    flux_meter:
      selectors:
        - control_point: service3-demo-app
          service: nginx-server.demoapp.svc.cluster.local
          label_matcher:
            match_labels:
              http.target: "/service3"
