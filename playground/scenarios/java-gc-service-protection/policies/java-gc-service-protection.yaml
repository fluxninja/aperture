# yaml-language-server: $schema=../../../../blueprints/load-scheduling/java-gc-k8s/gen/definitions.json
# Generated values file for load-scheduling/average-latency blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/blueprints/load-scheduling/average-latency

blueprint: load-scheduling/java-gc-k8s
uri: ../../../../blueprints
policy:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: java-gc-service-protection
  # List of additional circuit components.
  # Type: []aperture.spec.v1.Component
  components:
    - decider:
        in_ports:
          lhs:
            signal_name: DESIRED_LOAD_MULTIPLIER
          rhs:
            constant_signal:
              value: 1.0
        out_ports:
          output:
            signal_name: IS_CRAWLER_ESCALATION
        operator: lt
        true_for: 30s
    - switcher:
        in_ports:
          switch:
            signal_name: IS_CRAWLER_ESCALATION
          on_signal:
            constant_signal:
              value: 0.0
          off_signal:
            constant_signal:
              value: 10.0
        out_ports:
          output:
            signal_name: RATE_LIMIT
    - flow_control:
        rate_limiter:
          in_ports:
            bucket_capacity:
              signal_name: RATE_LIMIT
            fill_amount:
              signal_name: RATE_LIMIT
          selectors:
            - agent_group: default
              service: service1-demo-app.demoapp.svc.cluster.local
              control_point: awesomeFeature
              label_matcher:
                match_labels:
                  user_type: crawler
          parameters:
            label_key: user_id
            interval: 1s
  # Additional resources.
  # Type: aperture.spec.v1.Resources
  resources:
    flow_control:
      classifiers:
        - selectors:
            - agent_group: default
              service: service1-demo-app.demoapp.svc.cluster.local
              control_point: awesomeFeature
          rules:
            user_type:
              extractor:
                from: request.http.headers.user-type

  load_scheduling_core:
    setpoint: 20
    dry_run: false
    aiad_load_scheduler:
      load_multiplier_linear_decrement: 0.05
      load_multiplier_linear_increment: 0.025
      max_load_multiplier: 2
      min_load_multiplier: 0
      load_scheduler:
        workload_latency_based_tokens: true
        # The selectors determine the flows that are protected by this policy.
        # Type: []aperture.spec.v1.Selector
        # Required: True
        selectors:
          - agent_group: default
            service: service1-demo-app.demoapp.svc.cluster.local
            control_point: awesomeFeature
        # Scheduler parameters.
        # Type: aperture.spec.v1.SchedulerParameters
        scheduler:
          workloads:
            - parameters:
                priority: 50.0
              label_matcher:
                match_labels:
                  user_type: guest
            - parameters:
                priority: 200.0
              label_matcher:
                match_labels:
                  user_type: subscriber

  jmx:
    app_namespace: "demoapp"
    k8s_pod_regex: "service3-demo-app-.*"
