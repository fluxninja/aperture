# yaml-language-server: $schema=../../../../blueprints/rate-limiting/base/gen/definitions.json
# Generated values file for rate-limiting/base blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/blueprints/rate-limiting

blueprint: rate-limiting/base
uri: ../../../../blueprints
policy:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: "graphql-rate-limiting"
  resources:
    flow_control:
      classifiers:
        - selectors:
            - control_point: ingress
              agent_group: default
              service: service-graphql-demo-app.demoapp.svc.cluster.local
          rego:
            labels:
              user_id:
                telemetry: true
            module: |
              package graphql_example
              import future.keywords.if
              query_ast := graphql.parse_query(input.parsed_body.query)
              claims := payload if {
                io.jwt.verify_hs256(bearer_token, "secret")
                [_, payload, _] := io.jwt.decode(bearer_token)
              }
              bearer_token := t if {
                v := input.attributes.request.http.headers.authorization
                startswith(v, "Bearer ")
                t := substring(v, count("Bearer "), -1)
              }
              queryIsCreateTodo if {
                some operation
                walk(query_ast, [_, operation])
                operation.Name == "createTodo"
                count(operation.SelectionSet) > 0
                some selection
                walk(operation.SelectionSet, [_, selection])
                selection.Name == "createTodo"
              }
              user_id := u if {
                queryIsCreateTodo
                u := claims.userID
              }
  rate_limiter:
    bucket_capacity: 40
    fill_amount: 2
    selectors:
      - agent_group: default
        service: service-graphql-demo-app.demoapp.svc.cluster.local
        control_point: ingress
    # Parameters.
    # Type: aperture.spec.v1.RateLimiterParameters
    parameters:
      # Flow label to use for rate limiting.
      # Type: string
      # Required: True
      label_key: user_id
      lazy_sync:
        enabled: true
        num_sync: 5
      interval: 1s
