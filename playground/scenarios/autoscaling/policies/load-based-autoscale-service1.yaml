# yaml-language-server: $schema=../../../../blueprints/policies/latency-aimd-concurrency-limiting/gen/definitions.json
# Generated values file for policies/latency-aimd-concurrency-limiting blueprint
# Documentation/Reference for objects and parameters can be found at:
# https://docs.fluxninja.com/reference/policies/bundled-blueprints/policies/latency-aimd-concurrency-limiting

common:
  # Name of the policy.
  # Type: string
  # Required: True
  policy_name: "load-based-autoscale-service1"

policy:
  # Flux Meter.
  # Type: aperture.spec.v1.FluxMeter
  flux_meter:
    flow_selector:
      service_selector:
        # Service Name.
        # Type: string
        # Required: True
        service: service1-demo-app.demoapp.svc.cluster.local
      flow_matcher:
        # Control Point Name.
        # Type: string
        # Required: True
        control_point: ingress
  # List of classification rules.
  # Type: []aperture.spec.v1.Classifier
  classifiers:
    - flow_selector: &concurrency_flow_selector
        service_selector:
          service: service1-demo-app.demoapp.svc.cluster.local
        flow_matcher:
          control_point: ingress
      rules:
        user_type:
          extractor:
            from: request.http.headers.user-type
  # List of additional circuit components.
  # Type: []aperture.spec.v1.Component
  components:
    - query:
        promql:
          query_string: 'avg(avg_over_time(k8s_pod_cpu_utilization{k8s_deployment_name="service1-demo-app"}[30s]))'
          evaluation_interval: 10s
          out_ports:
            output:
              signal_name: AVERAGE_CPU
    - auto_scale:
        autoscaler:
          scaler:
            kubernetes_replicas:
              kubernetes_object_selector:
                namespace: demoapp
                api_version: apps/v1
                kind: Deployment
                name: service1-demo-app
          min_scale: "1"
          max_scale: "10"
          scale_in_cooldown: "40s"
          scale_out_cooldown: "30s"
          scale_out_controllers:
            - controller:
                gradient:
                  in_ports:
                    signal:
                      signal_name: OBSERVED_LOAD_MULTIPLIER
                    setpoint:
                      constant_signal:
                        value: 1.0
                  parameters:
                    slope: -1.0
          scale_in_controllers:
            - controller:
                gradient:
                  in_ports:
                    signal:
                      signal_name: AVERAGE_CPU
                    setpoint:
                      constant_signal:
                        value: 0.5
                  parameters:
                    slope: 1.0

  concurrency_controller:
    # Concurrency Limiter flow selector.
    # Type: aperture.spec.v1.FlowSelector
    flow_selector: *concurrency_flow_selector
    # Scheduler parameters.
    # Type: aperture.spec.v1.SchedulerParameters
    scheduler:
      workloads:
        - parameters:
            priority: 50
          label_matcher:
            match_labels:
              user_type: guest
        - parameters:
            priority: 200
          label_matcher:
            match_labels:
              http.request.header.user_type: subscriber
    # Linear increment to load multiplier in each execution tick (0.5s) when the system is not in overloaded state.
    # Type: float64
    load_multiplier_linear_increment: 0.0025
