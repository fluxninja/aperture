apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  labels:
    fluxninja.com/validate: "true"
  name: load-based-autoscale-service1
spec:
  circuit:
    components:
    - query:
        promql:
          evaluation_interval: 1s
          out_ports:
            output:
              signal_name: LATENCY
          query_string: sum(increase(flux_meter_sum{valid="true", flow_status="OK",
            flux_meter_name="load-based-autoscale-service1"}[5s]))/sum(increase(flux_meter_count{valid="true",
            flow_status="OK", flux_meter_name="load-based-autoscale-service1"}[5s]))
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: LATENCY
          rhs:
            constant_signal:
              value: 2
        operator: mul
        out_ports:
          output:
            signal_name: MAX_EMA
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: LATENCY_EMA
          rhs:
            constant_signal:
              value: 1.1
        operator: mul
        out_ports:
          output:
            signal_name: LATENCY_SETPOINT
    - ema:
        in_ports:
          input:
            signal_name: LATENCY
          max_envelope:
            signal_name: MAX_EMA
        out_ports:
          output:
            signal_name: LATENCY_EMA
        parameters:
          correction_factor_on_max_envelope_violation: 0.95
          ema_window: 1500s
          warmup_window: 60s
    - flow_control:
        aimd_concurrency_controller:
          alerter_parameters:
            alert_name: Load Shed Event
          default_config:
            dry_run: false
          dynamic_config_key: concurrency_controller
          flow_selector:
            flow_matcher:
              control_point: ingress
            service_selector:
              service: service1-demo-app.demoapp.svc.cluster.local
          gradient_parameters:
            max_gradient: 1
            min_gradient: 0.1
            slope: -1
          in_ports:
            setpoint:
              signal_name: LATENCY_SETPOINT
            signal:
              signal_name: LATENCY
          load_multiplier_linear_increment: 0.0025
          max_load_multiplier: 2
          out_ports:
            accepted_concurrency:
              signal_name: ACCEPTED_CONCURRENCY
            desired_load_multiplier:
              signal_name: DESIRED_LOAD_MULTIPLIER
            incoming_concurrency:
              signal_name: INCOMING_CONCURRENCY
            is_overload:
              signal_name: IS_OVERLOAD
            observed_load_multiplier:
              signal_name: OBSERVED_LOAD_MULTIPLIER
          scheduler_parameters:
            workloads:
            - label_matcher:
                match_labels:
                  user_type: guest
              parameters:
                priority: 50
            - label_matcher:
                match_labels:
                  http.request.header.user_type: subscriber
              parameters:
                priority: 200
    - query:
        promql:
          evaluation_interval: 10s
          out_ports:
            output:
              signal_name: AVERAGE_CPU
          query_string: avg(avg_over_time(k8s_pod_cpu_utilization{k8s_deployment_name="service1-demo-app"}[30s]))
    - auto_scale:
        autoscaler:
          max_scale: "10"
          min_scale: "1"
          scale_in_controllers:
          - controller:
              gradient:
                in_ports:
                  setpoint:
                    constant_signal:
                      value: 0.5
                  signal:
                    signal_name: AVERAGE_CPU
                parameters:
                  slope: 1
          scale_in_cooldown: 40s
          scale_out_controllers:
          - controller:
              gradient:
                in_ports:
                  setpoint:
                    constant_signal:
                      value: 1
                  signal:
                    signal_name: OBSERVED_LOAD_MULTIPLIER
                parameters:
                  slope: -1
          scale_out_cooldown: 30s
          scaler:
            kubernetes_replicas:
              kubernetes_object_selector:
                api_version: apps/v1
                kind: Deployment
                name: service1-demo-app
                namespace: demoapp
    evaluation_interval: 0.5s
  resources:
    classifiers:
    - flow_selector:
        flow_matcher:
          control_point: ingress
        service_selector:
          service: service1-demo-app.demoapp.svc.cluster.local
      rules:
        user_type:
          extractor:
            from: request.http.headers.user-type
    flux_meters:
      load-based-autoscale-service1:
        flow_selector:
          flow_matcher:
            control_point: ingress
          service_selector:
            service: service1-demo-app.demoapp.svc.cluster.local
