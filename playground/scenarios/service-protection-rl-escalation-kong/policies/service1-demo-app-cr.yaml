apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  labels:
    fluxninja.com/validate: "true"
  name: service1-demo-app
spec:
  circuit:
    components:
    - decider:
        in_ports:
          lhs:
            signal_name: DESIRED_LOAD_MULTIPLIER
          rhs:
            constant_signal:
              value: 1
        operator: lt
        out_ports:
          output:
            signal_name: IS_CRAWLER_ESCALATION
        true_for: 30s
    - switcher:
        in_ports:
          off_signal:
            constant_signal:
              value: 10
          on_signal:
            constant_signal:
              value: 0
          switch:
            signal_name: IS_CRAWLER_ESCALATION
        out_ports:
          output:
            signal_name: RATE_LIMIT
    - flow_control:
        rate_limiter:
          in_ports:
            bucket_capacity:
              signal_name: RATE_LIMIT
            fill_amount:
              signal_name: RATE_LIMIT
          parameters:
            interval: 1s
            limit_by_label_key: http.request.header.user_id
          request_parameters:
            denied_response_status_code: BadRequest
          selectors:
          - agent_group: default
            control_point: service1-demo-app
            label_matcher:
              match_labels:
                http.request.header.user_type: crawler
    - flow_control:
        aimd_load_scheduler:
          dry_run: false
          dry_run_config_key: dry_run
          in_ports:
            overload_confirmation:
              constant_signal:
                value: 1
            setpoint:
              signal_name: SETPOINT
            signal:
              signal_name: SIGNAL
          out_ports:
            desired_load_multiplier:
              signal_name: DESIRED_LOAD_MULTIPLIER
            observed_load_multiplier:
              signal_name: OBSERVED_LOAD_MULTIPLIER
          parameters:
            alerter:
              alert_name: AIMD Load Throttling Event
            gradient:
              max_gradient: 1
              min_gradient: 0.1
              slope: -1
            load_multiplier_linear_increment: 0.025
            load_scheduler:
              scheduler:
                denied_response_status_code: BadRequest
                workloads:
                - label_matcher:
                    match_labels:
                      user_type: guest
                  name: guest
                  parameters:
                    priority: 50
                - label_matcher:
                    match_labels:
                      http.request.header.user_type: subscriber
                  name: subscriber
                  parameters:
                    priority: 200
              selectors:
              - agent_group: default
                control_point: service1-demo-app
                label_matcher:
                  match_labels:
                    http.target: /service1/request
                service: kong-server.demoapp.svc.cluster.local
              workload_latency_based_tokens: true
            max_load_multiplier: 2
    - query:
        promql:
          evaluation_interval: 10s
          out_ports:
            output:
              signal_name: SIGNAL
          query_string: sum(increase(flux_meter_sum{flow_status="OK", flux_meter_name="service1-demo-app",
            policy_name="service1-demo-app"}[30s]))/sum(increase(flux_meter_count{flow_status="OK",
            flux_meter_name="service1-demo-app", policy_name="service1-demo-app"}[30s]))
    - query:
        promql:
          evaluation_interval: 30s
          out_ports:
            output:
              signal_name: SIGNAL_LONG_TERM
          query_string: sum(increase(flux_meter_sum{flow_status="OK", flux_meter_name="service1-demo-app",
            policy_name="service1-demo-app"}[1800s]))/sum(increase(flux_meter_count{flow_status="OK",
            flux_meter_name="service1-demo-app", policy_name="service1-demo-app"}[1800s]))
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: SIGNAL_LONG_TERM
          rhs:
            constant_signal:
              value: 1.1
        operator: mul
        out_ports:
          output:
            signal_name: SETPOINT
    evaluation_interval: 1s
  resources:
    flow_control:
      classifiers:
      - rules:
          user_type:
            extractor:
              from: request.http.headers.user-type
        selectors:
        - agent_group: default
          control_point: service1-demo-app
          label_matcher:
            match_labels:
              http.target: /service1/request
          service: kong-server.demoapp.svc.cluster.local
      flux_meters:
        service1-demo-app:
          selectors:
          - agent_group: default
            control_point: service3-demo-app
            label_matcher:
              match_labels:
                http.target: /service3
            service: kong-server.demoapp.svc.cluster.local
    infra_meters: {}
