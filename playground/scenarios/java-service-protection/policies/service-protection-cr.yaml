apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  annotations:
    fluxninja.com/blueprint-name: service-protection/average-latency
    fluxninja.com/blueprints-uri: local
    fluxninja.com/values: '{"policy": {"components": [{"decider": {"in_ports": {"lhs":
      {"signal_name": "DESIRED_LOAD_MULTIPLIER"}, "rhs": {"constant_signal": {"value":
      1}}}, "operator": "lt", "out_ports": {"output": {"signal_name": "IS_CRAWLER_ESCALATION"}},
      "true_for": "30s"}}, {"switcher": {"in_ports": {"off_signal": {"constant_signal":
      {"value": 10}}, "on_signal": {"constant_signal": {"value": 0}}, "switch": {"signal_name":
      "IS_CRAWLER_ESCALATION"}}, "out_ports": {"output": {"signal_name": "RATE_LIMIT"}}}},
      {"flow_control": {"rate_limiter": {"in_ports": {"bucket_capacity": {"signal_name":
      "RATE_LIMIT"}, "fill_amount": {"signal_name": "RATE_LIMIT"}}, "parameters":
      {"interval": "1s", "label_key": "user_id"}, "selectors": [{"control_point":
      "awesomeFeature", "label_matcher": {"match_labels": {"user_type": "crawler"}},
      "service": "service1-demo-app.demoapp.svc.cluster.local"}]}}}], "latency_baseliner":
      {"flux_meter": {"selectors": [{"control_point": "awesomeFeature", "service":
      "service3-demo-app.demoapp.svc.cluster.local"}]}, "latency_tolerance_multiplier":
      1.1000000000000001}, "policy_name": "service-protection", "resources": {"flow_control":
      {"classifiers": [{"rules": {"user_type": {"extractor": {"from": "request.http.headers.user-type"}}},
      "selectors": [{"control_point": "awesomeFeature", "service": "service1-demo-app.demoapp.svc.cluster.local"}]}]}},
      "service_protection_core": {"adaptive_load_scheduler": {"load_multiplier_linear_increment":
      0.025000000000000001, "load_scheduler": {"scheduler": {"workloads": [{"label_matcher":
      {"match_labels": {"user_type": "guest"}}, "parameters": {"priority": "50"}},
      {"label_matcher": {"match_labels": {"user_type": "subscriber"}}, "parameters":
      {"priority": "200"}}]}, "selectors": [{"control_point": "awesomeFeature", "service":
      "service1-demo-app.demoapp.svc.cluster.local"}]}}}}}'
  labels:
    fluxninja.com/validate: "true"
  name: service-protection
spec:
  circuit:
    components:
    - flow_control:
        adaptive_load_scheduler:
          dry_run: false
          dry_run_config_key: dry_run
          in_ports:
            overload_confirmation:
              constant_signal:
                value: 1
            setpoint:
              signal_name: SETPOINT
            signal:
              signal_name: SIGNAL
          out_ports:
            desired_load_multiplier:
              signal_name: DESIRED_LOAD_MULTIPLIER
            observed_load_multiplier:
              signal_name: OBSERVED_LOAD_MULTIPLIER
          parameters:
            alerter:
              alert_name: Load Throttling Event
            gradient:
              max_gradient: 1
              min_gradient: 0.1
              slope: -1
            load_multiplier_linear_increment: 0.025
            load_scheduler:
              scheduler:
                workloads:
                - label_matcher:
                    match_labels:
                      user_type: guest
                  parameters:
                    priority: "50"
                - label_matcher:
                    match_labels:
                      user_type: subscriber
                  parameters:
                    priority: "200"
              selectors:
              - control_point: awesomeFeature
                service: service1-demo-app.demoapp.svc.cluster.local
            max_load_multiplier: 2
    - decider:
        in_ports:
          lhs:
            signal_name: DESIRED_LOAD_MULTIPLIER
          rhs:
            constant_signal:
              value: 1
        operator: lt
        out_ports:
          output:
            signal_name: IS_CRAWLER_ESCALATION
        true_for: 30s
    - switcher:
        in_ports:
          off_signal:
            constant_signal:
              value: 10
          on_signal:
            constant_signal:
              value: 0
          switch:
            signal_name: IS_CRAWLER_ESCALATION
        out_ports:
          output:
            signal_name: RATE_LIMIT
    - flow_control:
        rate_limiter:
          in_ports:
            bucket_capacity:
              signal_name: RATE_LIMIT
            fill_amount:
              signal_name: RATE_LIMIT
          parameters:
            interval: 1s
            label_key: user_id
          selectors:
          - control_point: awesomeFeature
            label_matcher:
              match_labels:
                user_type: crawler
            service: service1-demo-app.demoapp.svc.cluster.local
    - query:
        promql:
          evaluation_interval: 10s
          out_ports:
            output:
              signal_name: SIGNAL
          query_string: sum(increase(flux_meter_sum{flow_status="OK", flux_meter_name="service-protection",
            policy_name="service-protection"}[30s]))/sum(increase(flux_meter_count{flow_status="OK",
            flux_meter_name="service-protection", policy_name="service-protection"}[30s]))
    - query:
        promql:
          evaluation_interval: 30s
          out_ports:
            output:
              signal_name: SIGNAL_LONG_TERM
          query_string: sum(increase(flux_meter_sum{flow_status="OK", flux_meter_name="service-protection",
            policy_name="service-protection"}[1800s]))/sum(increase(flux_meter_count{flow_status="OK",
            flux_meter_name="service-protection", policy_name="service-protection"}[1800s]))
    - arithmetic_combinator:
        in_ports:
          lhs:
            signal_name: SIGNAL_LONG_TERM
          rhs:
            constant_signal:
              value: 1.1
        operator: mul
        out_ports:
          output:
            signal_name: SETPOINT
    evaluation_interval: 10s
  resources:
    flow_control:
      classifiers:
      - rules:
          user_type:
            extractor:
              from: request.http.headers.user-type
        selectors:
        - control_point: awesomeFeature
          service: service1-demo-app.demoapp.svc.cluster.local
      flux_meters:
        service-protection:
          selectors:
          - control_point: awesomeFeature
            service: service3-demo-app.demoapp.svc.cluster.local
