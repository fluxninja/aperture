worker_processes 128;
pid /run/nginx.pid;
env APERTURE_AGENT_ENDPOINT;

events {
    worker_connections 5120;
}

http {
    default_type application/octet-stream;
    resolver 10.96.0.10;

    sendfile on;
    keepalive_timeout 65;

    map $connection $protocol {
        # Use a regular expression to extract the protocol (TCP or UDP) from the $connection variable
        '~^(?<protocol>[A-Z]+)\s' $protocol;
    }

    map $request $http_version {
        # Use a regular expression to extract the HTTP version from the $request variable
        '~\sHTTP/(?<http_version>[0-9]+\.[0-9]+)$' "HTTP/$http_version";
    }

    init_by_lua_file /aperture_init.lua;

    access_by_lua_block {
        local authorized_status = authorize_request(ngx.req)

        if authorized_status ~= ngx.HTTP_OK then
          return ngx.exit(authorized_status)
        end
    }

    body_filter_by_lua_block {
        end_flow()
    }

    server {
        listen 80;
        proxy_http_version 1.1;

        location /service1 {
            proxy_pass http://service1-demo-app.demoapp.svc.cluster.local/request;
        }

        location /service2 {
            proxy_pass http://service2-demo-app.demoapp.svc.cluster.local/request;
        }

        location /service3 {
            proxy_pass http://service3-demo-app.demoapp.svc.cluster.local/request;
        }
    }
}
