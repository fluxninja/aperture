flowchart LR
subgraph 0[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 0_inports[ ]
style 0_inports fill:none,stroke:none
0lhs[lhs]
0rhs[rhs]
end
subgraph 0_outports[ ]
style 0_outports fill:none,stroke:none
0output[output]
end
end
FakeConstant0((2.00))
FakeConstant0 --> 0rhs
subgraph 1[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 1_inports[ ]
style 1_inports fill:none,stroke:none
1lhs[lhs]
1rhs[rhs]
end
subgraph 1_outports[ ]
style 1_outports fill:none,stroke:none
1output[output]
end
end
FakeConstant1((1.10))
FakeConstant1 --> 1rhs
subgraph 2[<center>ArithmeticCombinator<br/>sub</center>]
subgraph 2_inports[ ]
style 2_inports fill:none,stroke:none
2lhs[lhs]
2rhs[rhs]
end
subgraph 2_outports[ ]
style 2_outports fill:none,stroke:none
2output[output]
end
end
subgraph 3[<center>ArithmeticCombinator<br/>div</center>]
subgraph 3_inports[ ]
style 3_inports fill:none,stroke:none
3lhs[lhs]
3rhs[rhs]
end
subgraph 3_outports[ ]
style 3_outports fill:none,stroke:none
3output[output]
end
end
subgraph 4[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 4_inports[ ]
style 4_inports fill:none,stroke:none
4rhs[rhs]
4lhs[lhs]
end
subgraph 4_outports[ ]
style 4_outports fill:none,stroke:none
4output[output]
end
end
FakeConstant2((2.00))
FakeConstant2 --> 4lhs
subgraph 5[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 5_inports[ ]
style 5_inports fill:none,stroke:none
5lhs[lhs]
5rhs[rhs]
end
subgraph 5_outports[ ]
style 5_outports fill:none,stroke:none
5output[output]
end
end
FakeConstant3((1.10))
FakeConstant3 --> 5rhs
subgraph 6[<center>ArithmeticCombinator<br/>add</center>]
subgraph 6_inports[ ]
style 6_inports fill:none,stroke:none
6lhs[lhs]
6rhs[rhs]
end
subgraph 6_outports[ ]
style 6_outports fill:none,stroke:none
6output[output]
end
end
FakeConstant4((5.00))
FakeConstant4 --> 6lhs
subgraph 7[<center>ArithmeticCombinator<br/>add</center>]
subgraph 7_inports[ ]
style 7_inports fill:none,stroke:none
7lhs[lhs]
7rhs[rhs]
end
subgraph 7_outports[ ]
style 7_outports fill:none,stroke:none
7output[output]
end
end
subgraph 8[Min]
subgraph 8_inports[ ]
style 8_inports fill:none,stroke:none
8inputs[inputs]
8inputs[inputs]
end
subgraph 8_outports[ ]
style 8_outports fill:none,stroke:none
8output[output]
end
end
subgraph 9[FirstValid]
subgraph 9_inports[ ]
style 9_inports fill:none,stroke:none
9inputs[inputs]
9inputs[inputs]
end
subgraph 9_outports[ ]
style 9_outports fill:none,stroke:none
9output[output]
end
end
FakeConstant5((0.00))
FakeConstant5 --> 9inputs
subgraph 10[Max]
subgraph 10_inports[ ]
style 10_inports fill:none,stroke:none
10inputs[inputs]
10inputs[inputs]
end
subgraph 10_outports[ ]
style 10_outports fill:none,stroke:none
10output[output]
end
end
FakeConstant6((10.00))
FakeConstant6 --> 10inputs
subgraph 11[Sqrt]
subgraph 11_inports[ ]
style 11_inports fill:none,stroke:none
11input[input]
end
subgraph 11_outports[ ]
style 11_outports fill:none,stroke:none
11output[output]
end
end
subgraph 12[PromQL]
subgraph 12_outports[ ]
style 12_outports fill:none,stroke:none
12output[output]
end
end
subgraph 13[<center>EMA<br/>win: 1500s</center>]
subgraph 13_inports[ ]
style 13_inports fill:none,stroke:none
13max_envelope[max_envelope]
13input[input]
end
subgraph 13_outports[ ]
style 13_outports fill:none,stroke:none
13output[output]
end
end
subgraph 14[Gradient]
subgraph 14_inports[ ]
style 14_inports fill:none,stroke:none
14signal[signal]
14setpoint[setpoint]
14optimize[optimize]
14max[max]
14control_variable[control_variable]
end
subgraph 14_outports[ ]
style 14_outports fill:none,stroke:none
14output[output]
end
end
subgraph 15.Scheduler[<center>ConcurrencyLimiter/Scheduler<br/>service1-demo-ap...</center>]
subgraph 15.Scheduler_outports[ ]
style 15.Scheduler_outports fill:none,stroke:none
15.Schedulerincoming_concurrency[incoming_concurrency]
15.Scheduleraccepted_concurrency[accepted_concurrency]
end
end
subgraph 15.LoadShedActuator[<center>ConcurrencyLimiter/LoadShedActuator<br/>service1-demo-ap...</center>]
subgraph 15.LoadShedActuator_inports[ ]
style 15.LoadShedActuator_inports fill:none,stroke:none
15.LoadShedActuatorload_shed_factor[load_shed_factor]
end
end
subgraph 18[Switcher]
subgraph 18_inports[ ]
style 18_inports fill:none,stroke:none
18switch[switch]
18on_true[on_true]
18on_false[on_false]
end
subgraph 18_outports[ ]
style 18_outports fill:none,stroke:none
18output[output]
end
end
FakeConstant7((0.00))
FakeConstant7 --> 18on_true
subgraph 17[Switcher]
subgraph 17_inports[ ]
style 17_inports fill:none,stroke:none
17on_true[on_true]
17on_false[on_false]
17switch[switch]
end
subgraph 17_outports[ ]
style 17_outports fill:none,stroke:none
17output[output]
end
end
FakeConstant8((10.00))
FakeConstant8 --> 17on_true
subgraph 16[<center>Decider<br/>gt for 0s</center>]
subgraph 16_inports[ ]
style 16_inports fill:none,stroke:none
16lhs[lhs]
16rhs[rhs]
end
subgraph 16_outports[ ]
style 16_outports fill:none,stroke:none
16output[output]
end
end
10output --> |MAX_CONCURRENCY| 14max
14output --> |DESIRED_CONCURRENCY| 2rhs
15.Scheduleraccepted_concurrency --> |ACCEPTED_CONCURRENCY| 4rhs
15.Scheduleraccepted_concurrency --> |ACCEPTED_CONCURRENCY| 8inputs
15.Scheduleraccepted_concurrency --> |ACCEPTED_CONCURRENCY| 11input
15.Scheduleraccepted_concurrency --> |ACCEPTED_CONCURRENCY| 14control_variable
18output --> |CONCURRENCY_INCREMENT_FEEDBACK| 7rhs
3output --> |LSF| 15.LoadShedActuatorload_shed_factor
5output --> |LATENCY_OVERLOAD| 16rhs
8output --> |CONCURRENCY_INCREMENT_INTEGRAL_CAPPED| 9inputs
9output --> |CONCURRENCY_INCREMENT_NORMAL| 17on_false
9output --> |CONCURRENCY_INCREMENT_NORMAL| 18on_false
17output --> |CONCURRENCY_INCREMENT| 14optimize
4output --> |UPPER_CONCURRENCY_LIMIT| 10inputs
6output --> |CONCURRENCY_INCREMENT_SINGLE_TICK| 7lhs
11output --> |SQRT_CONCURRENCY_INCREMENT| 6rhs
12output --> |LATENCY| 0lhs
12output --> |LATENCY| 13input
12output --> |LATENCY| 14signal
12output --> |LATENCY| 16lhs
16output --> |IS_OVERLOAD_SWITCH| 17switch
16output --> |IS_OVERLOAD_SWITCH| 18switch
0output --> |MAX_EMA| 13max_envelope
1output --> |LATENCY_SETPOINT| 14setpoint
2output --> |DELTA_CONCURRENCY| 3lhs
7output --> |CONCURRENCY_INCREMENT_INTEGRAL| 8inputs
13output --> |LATENCY_EMA| 1lhs
13output --> |LATENCY_EMA| 5lhs
15.Schedulerincoming_concurrency --> |INCOMING_CONCURRENCY| 2lhs
15.Schedulerincoming_concurrency --> |INCOMING_CONCURRENCY| 3rhs
