consumes:
    - application/json
definitions:
    AdaptiveLoadScheduler:
        description: The _Adaptive Load Scheduler_ adjusts the accepted token rate based on the deviation of the input signal from the setpoint.
        properties:
            dry_run:
                description: |-
                    Decides whether to run the load scheduler in dry-run mode. In dry run mode the scheduler acts as pass through to all flow and does not queue flows.
                    It is useful for observing the behavior of load scheduler without disrupting any real traffic.
                type: boolean
            dry_run_config_key:
                description: Configuration key for setting dry run mode through dynamic configuration.
                type: string
            in_ports:
                $ref: '#/definitions/AdaptiveLoadSchedulerIns'
                description: |+
                    Collection of input ports for the _Adaptive Load Scheduler_ component.

                x-go-tag-validate: required
            out_ports:
                $ref: '#/definitions/AdaptiveLoadSchedulerOuts'
                description: Collection of output ports for the _Adaptive Load Scheduler_ component.
            parameters:
                $ref: '#/definitions/AdaptiveLoadSchedulerParameters'
                description: |+
                    Parameters for the _Adaptive Load Scheduler_ component.

                x-go-tag-validate: required
        type: object
    AdaptiveLoadSchedulerIns:
        description: Input ports for the _Adaptive Load Scheduler_ component.
        properties:
            overload_confirmation:
                $ref: '#/definitions/InPort'
                description: |-
                    The `overload_confirmation` port provides additional criteria to determine overload state which
                    results in _Flow_ throttling at the service.
            setpoint:
                $ref: '#/definitions/InPort'
                description: |+
                    The setpoint input to the controller.

                x-go-tag-validate: required
            signal:
                $ref: '#/definitions/InPort'
                description: |+
                    The input signal to the controller.

                x-go-tag-validate: required
        type: object
    AdaptiveLoadSchedulerOuts:
        description: Output ports for the _Adaptive Load Scheduler_ component.
        properties:
            desired_load_multiplier:
                $ref: '#/definitions/OutPort'
                description: Desired Load multiplier is the ratio of desired token rate to the incoming token rate.
            is_overload:
                $ref: '#/definitions/OutPort'
                description: A Boolean signal that indicates whether the service is in overload state.
            observed_load_multiplier:
                $ref: '#/definitions/OutPort'
                description: Observed Load multiplier is the ratio of accepted token rate to the incoming token rate.
        type: object
    AdaptiveLoadSchedulerParameters:
        description: Parameters for the _Adaptive Load Scheduler_ component.
        properties:
            alerter:
                $ref: '#/definitions/AlerterParameters'
                description: |+
                    Configuration parameters for the embedded Alerter.

                x-go-tag-validate: required
            gradient:
                $ref: '#/definitions/GradientControllerParameters'
                description: |+
                    Parameters for the _Gradient Controller_.

                x-go-tag-validate: required
            load_multiplier_linear_increment:
                default: 0.0025
                description: |+
                    Linear increment to load multiplier every 10 seconds while the system is
                    not in the overloaded state, up until the `max_load_multiplier` is reached.

                format: double
                type: number
                x-go-tag-default: "0.0025"
            load_scheduler:
                $ref: '#/definitions/LoadSchedulerParameters'
                description: |+
                    Parameters for the _Load Scheduler_.

                x-go-tag-validate: required
            max_load_multiplier:
                default: 2
                description: |+
                    The maximum load multiplier that can be reached during recovery from an overload state.
                    - Helps protect the service from request bursts while the system is still recovering.
                    - Once this value is reached, the scheduler enters the pass-through mode, allowing requests to bypass the scheduler and be sent directly to the service.
                    - The pass-through mode gets disabled if the system enters the overload state again.

                format: double
                type: number
                x-go-tag-default: "2.0"
        type: object
    AddressExtractor:
        description: |-
            IP addresses in attribute context are defined as objects with separate IP and port fields.
            This is a helper to display an address as a single string.

            :::caution

            This might introduce high-cardinality flow label values.

            :::

            [ext-authz-address]: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#config-core-v3-address

            Example:
            ```yaml
            from: "source.address # or destination.address"
            ```
        properties:
            from:
                description: |+
                    Attribute path pointing to some string - for example, `source.address`.

                type: string
                x-go-tag-validate: required
        required:
            - from
        title: Display an [Address][ext-authz-address] as a single string, for example, `<ip>:<port>`
        type: object
    Alerter:
        description: Alerter reacts to a signal and generates alert to send to alert manager.
        properties:
            in_ports:
                $ref: '#/definitions/AlerterIns'
                description: Input ports for the Alerter component.
            parameters:
                $ref: '#/definitions/AlerterParameters'
                title: Alerter configuration
                x-go-tag-validate: required
        type: object
    AlerterIns:
        description: Inputs for the Alerter component.
        properties:
            signal:
                $ref: '#/definitions/InPort'
                description: Signal which Alerter is monitoring. If the signal greater than 0, Alerter generates an alert.
        type: object
    AlerterParameters:
        description: Alerter Parameters configure parameters such as alert name, severity, resolve timeout, alert channels and labels.
        properties:
            alert_channels:
                description: A list of alert channel strings.
                items:
                    type: string
                type: array
            alert_name:
                description: |+
                    Name of the alert.

                type: string
                x-go-tag-validate: required
            labels:
                additionalProperties:
                    type: string
                description: Additional labels to add to alert.
                type: object
            resolve_timeout:
                default: 5s
                description: |+
                    Duration of alert resolver.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 5s
            severity:
                default: info
                description: |+
                    Severity of the alert, one of 'info', 'warn' or 'crit'.

                enum:
                    - info
                    - warn
                    - crit
                type: string
                x-go-tag-default: info
                x-go-tag-validate: oneof=info warn crit
                x-oneof: info | warn | crit
        required:
            - alert_name
        type: object
    And:
        description: |-
            Logical AND.

            Signals are mapped to Boolean values as follows:
            * Zero is treated as false.
            * Any non-zero is treated as true.
            * Invalid inputs are considered unknown.

              :::note

              Treating invalid inputs as "unknowns" has a consequence that the result
              might end up being valid even when some inputs are invalid. For example, `unknown && false == false`,
              because the result would end up false no matter if
              first signal was true or false. Conversely, `unknown && true == unknown`.

              :::
        properties:
            in_ports:
                $ref: '#/definitions/AndIns'
                description: Input ports for the And component.
            out_ports:
                $ref: '#/definitions/AndOuts'
                description: Output ports for the And component.
        type: object
    AndIns:
        description: Inputs for the And component.
        properties:
            inputs:
                description: |+
                    Array of input signals.

                items:
                    $ref: '#/definitions/InPort'
                    type: object
                type: array
                x-go-tag-validate: dive
        type: object
    AndOuts:
        description: Output ports for the And component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: |-
                    Result of logical AND of all the input signals.

                    Will always be 0 (false), 1 (true) or invalid (unknown).
        type: object
    ArithmeticCombinator:
        properties:
            in_ports:
                $ref: '#/definitions/ArithmeticCombinatorIns'
                description: Input ports for the Arithmetic Combinator component.
            operator:
                description: |+
                    Operator of the arithmetic operation.

                    The arithmetic operation can be addition, subtraction, multiplication, division, XOR, right bit shift or left bit shift.
                    In case of XOR and bit shifts, value of signals is cast to integers before performing the operation.

                enum:
                    - add
                    - sub
                    - mul
                    - div
                    - xor
                    - lshift
                    - rshift
                type: string
                x-go-tag-validate: oneof=add sub mul div xor lshift rshift
                x-oneof: add | sub | mul | div | xor | lshift | rshift
            out_ports:
                $ref: '#/definitions/ArithmeticCombinatorOuts'
                description: Output ports for the Arithmetic Combinator component.
        title: Type of Combinator that computes the arithmetic operation on the operand signals
        type: object
    ArithmeticCombinatorIns:
        description: Inputs for the Arithmetic Combinator component.
        properties:
            lhs:
                $ref: '#/definitions/InPort'
                description: Left hand side of the arithmetic operation.
            rhs:
                $ref: '#/definitions/InPort'
                description: Right hand side of the arithmetic operation.
        type: object
    ArithmeticCombinatorOuts:
        description: Outputs for the Arithmetic Combinator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Result of arithmetic operation.
        type: object
    AutoScale:
        description: AutoScale components are used to scale a service.
        properties:
            auto_scaler:
                $ref: '#/definitions/AutoScaler'
                description: _AutoScaler_ provides auto-scaling functionality for any scalable resource.
            pod_scaler:
                $ref: '#/definitions/PodScaler'
                description: PodScaler provides pod horizontal scaling functionality for scalable Kubernetes resources.
        type: object
    AutoScaleKubernetesControlPoint:
        properties:
            api_version:
                type: string
            kind:
                type: string
            name:
                type: string
            namespace:
                type: string
        type: object
    AutoScaleKubernetesControlPoints:
        properties:
            auto_scale_kubernetes_control_points:
                items:
                    $ref: '#/definitions/AutoScaleKubernetesControlPoint'
                    type: object
                type: array
        type: object
    AutoScaler:
        description: _AutoScaler_ provides auto-scaling functionality for any scalable resource. Multiple _Controllers_ can be defined on the _AutoScaler_ for performing scale-out or scale-in. The _AutoScaler_ can interface with infrastructure APIs such as Kubernetes to perform auto-scale.
        properties:
            dry_run:
                description: |-
                    Dry run mode ensures that no scaling is invoked by this auto scaler.
                    This is useful for observing the behavior of auto scaler without disrupting any real deployment.
                    This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
                type: boolean
            dry_run_config_key:
                description: Configuration key for overriding dry run setting through dynamic configuration.
                type: string
            scale_in_controllers:
                description: |+
                    List of _Controllers_ for scaling in.

                items:
                    $ref: '#/definitions/ScaleInController'
                    type: object
                type: array
                x-go-tag-validate: dive
            scale_out_controllers:
                description: |+
                    List of _Controllers_ for scaling out.

                items:
                    $ref: '#/definitions/ScaleOutController'
                    type: object
                type: array
                x-go-tag-validate: dive
            scaling_backend:
                $ref: '#/definitions/AutoScalerScalingBackend'
                x-go-tag-validate: required
            scaling_parameters:
                $ref: '#/definitions/AutoScalerScalingParameters'
                description: |+
                    Parameters that define the scaling behavior.

                x-go-tag-validate: required
        type: object
    AutoScalerScalingBackend:
        properties:
            kubernetes_replicas:
                $ref: '#/definitions/AutoScalerScalingBackendKubernetesReplicas'
        type: object
    AutoScalerScalingBackendKubernetesReplicas:
        description: KubernetesReplicas defines a horizontal pod scaler for Kubernetes.
        properties:
            kubernetes_object_selector:
                $ref: '#/definitions/KubernetesObjectSelector'
                description: |+
                    The Kubernetes object on which horizontal scaling is applied.

                x-go-tag-validate: required
            max_replicas:
                default: "9223372036854775807"
                description: |+
                    The maximum replicas to which the _AutoScaler_ can scale-out.

                format: int64
                minLength: 1
                type: string
                x-go-tag-default: "9223372036854775807"
                x-go-tag-validate: gt=0
            min_replicas:
                default: "0"
                description: |+
                    The minimum replicas to which the _AutoScaler_ can scale-in.

                format: int64
                minLength: 0
                type: string
                x-go-tag-default: "0"
                x-go-tag-validate: gte=0
            out_ports:
                $ref: '#/definitions/AutoScalerScalingBackendKubernetesReplicasOuts'
                description: Output ports for _Kubernetes Replicas_.
        type: object
    AutoScalerScalingBackendKubernetesReplicasOuts:
        properties:
            actual_replicas:
                $ref: '#/definitions/OutPort'
            configured_replicas:
                $ref: '#/definitions/OutPort'
            desired_replicas:
                $ref: '#/definitions/OutPort'
        title: Outputs
        type: object
    AutoScalerScalingParameters:
        properties:
            cooldown_override_percentage:
                default: 50
                description: |+
                    Cooldown override percentage defines a threshold change in scale-out beyond which previous cooldown is overridden.
                    For example, if the cooldown is 5 minutes and the cooldown override percentage is 10%, then if the
                    scale-increases by 10% or more, the previous cooldown is canceled. Defaults to 50%.

                format: double
                type: number
                x-go-tag-default: "50"
            max_scale_in_percentage:
                default: 1
                description: |+
                    The maximum decrease of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 1% of current scale value.

                format: double
                type: number
                x-go-tag-default: "1"
            max_scale_out_percentage:
                default: 10
                description: |+
                    The maximum increase of scale (for example, pods) at one time. Defined as percentage of current scale value. Can never go below one even if percentage computation is less than one. Defaults to 10% of current scale value.

                format: double
                type: number
                x-go-tag-default: "10"
            scale_in_alerter:
                $ref: '#/definitions/AlerterParameters'
                description: |+
                    Configuration for scale-in Alerter.

                x-go-tag-validate: required
            scale_in_cooldown:
                default: 120s
                description: |+
                    The amount of time to wait after a scale-in operation for another scale-in operation.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 120s
            scale_out_alerter:
                $ref: '#/definitions/AlerterParameters'
                description: |+
                    Configuration for scale-out Alerter.

                x-go-tag-validate: required
            scale_out_cooldown:
                default: 30s
                description: |+
                    The amount of time to wait after a scale-out operation for another scale-out or scale-in operation.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 30s
        type: object
    BoolVariable:
        description: Component that emits a constant Boolean signal which can be changed at runtime through dynamic configuration.
        properties:
            config_key:
                description: Configuration key for overriding value setting through dynamic configuration.
                type: string
            constant_output:
                description: The constant Boolean signal emitted by this component. The value of the constant Boolean signal can be overridden at runtime through dynamic configuration.
                type: boolean
            out_ports:
                $ref: '#/definitions/BoolVariableOuts'
                description: Output ports for the BoolVariable component.
        type: object
    BoolVariableOuts:
        description: Outputs for the BoolVariable component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: The value is emitted to the output port.
        type: object
    CheckHTTPRequest:
        properties:
            control_point:
                description: |-
                    For an SDK based insertion, a Control Point can represent a particular feature or execution block within a Service.
                    In case of Service Mesh or Middleware insertion, a Control Point can identify ingress vs egress calls or distinct listeners or filter chains.
                type: string
            destination:
                $ref: '#/definitions/SocketAddress'
                description: |-
                    The destination of a network activity, such as accepting a TCP connection.
                    In a multi hop network activity, the destination represents the receiver of
                    the last hop.
            ramp_mode:
                description: A flow with ramp_mode flag will only be accepted if at least one ramp component matches and accepts the flow.
                type: boolean
            request:
                $ref: '#/definitions/CheckHTTPRequestHttpRequest'
                description: Represents a network request, such as an HTTP request.
            source:
                $ref: '#/definitions/SocketAddress'
                description: |-
                    The source of a network activity, such as starting a TCP connection.
                    In a multi hop network activity, the source represents the sender of the
                    last hop.
        type: object
    CheckHTTPRequestHttpRequest:
        description: |-
            This message defines attributes for an HTTP request.
            HTTP/1.x, HTTP/2, gRPC are all considered as HTTP requests.
        properties:
            body:
                description: The HTTP request body.
                type: string
            headers:
                additionalProperties:
                    type: string
                description: The HTTP request headers.
                type: object
            host:
                description: The HTTP request `Host` header value.
                type: string
            method:
                description: The HTTP request method, such as `GET`, `POST`.
                type: string
            path:
                description: |-
                    The request target, as it appears in the first line of the HTTP request. This includes
                    the URL path and query-string. No decoding is performed.
                type: string
            protocol:
                description: The network protocol used with the request, such as "HTTP/1.0", "HTTP/1.1", or "HTTP/2".
                type: string
            scheme:
                description: The HTTP URL scheme, such as `http` and `https`.
                type: string
            size:
                description: The HTTP request size in bytes. If unknown, it must be -1.
                format: int64
                type: string
        type: object
    CheckHTTPResponse:
        properties:
            denied_response:
                $ref: '#/definitions/DeniedHttpResponse'
                description: Supplies http attributes for a denied response.
            dynamic_metadata:
                description: |-
                    Optional response metadata that will be emitted as dynamic metadata to be consumed by the next
                    filter.
                type: object
            ok_response:
                $ref: '#/definitions/OkHttpResponse'
                description: Supplies http attributes for an ok response.
            status:
                $ref: '#/definitions/googlerpcStatus'
                title: Status `OK` allows the request. Any other status indicates the request should be denied
        type: object
    CheckResponse:
        description: CheckResponse contains fields that represent decision made by Check call.
        properties:
            classifier_infos:
                description: classifiers that were matched for this request.
                items:
                    $ref: '#/definitions/ClassifierInfo'
                    type: object
                type: array
            control_point:
                title: control_point of request
                type: string
            decision_type:
                $ref: '#/definitions/CheckResponseDecisionType'
                description: decision_type contains what the decision was.
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
                description: |-
                    http_status contains the http status code to be returned to the client, if
                    decision_type is REJECTED. Optional.
            end:
                format: date-time
                title: end timestamp
                type: string
            flow_label_keys:
                description: flow label keys that were matched for this request.
                items:
                    type: string
                type: array
            flux_meter_infos:
                description: flux meters that were matched for this request.
                items:
                    $ref: '#/definitions/FluxMeterInfo'
                    type: object
                type: array
            limiter_decisions:
                description: limiter_decisions contains information about decision made by each limiter.
                items:
                    $ref: '#/definitions/LimiterDecision'
                    type: object
                type: array
            reject_reason:
                $ref: '#/definitions/CheckResponseRejectReason'
                description: reject_reason contains the reason for the rejection.
            services:
                items:
                    type: string
                title: services that matched
                type: array
            start:
                format: date-time
                title: start timestamp
                type: string
            telemetry_flow_labels:
                additionalProperties:
                    type: string
                description: telemetry_flow_labels are labels for telemetry purpose. The keys in telemetry_flow_labels is subset of flow_label_keys.
                type: object
            wait_time:
                description: |-
                    Recommended minimal amount of time to wait when retrying the request, if
                    decision_type is REJECTED. Optional.
                type: string
        type: object
    CheckResponseDecisionType:
        default: DECISION_TYPE_ACCEPTED
        description: DecisionType contains fields that represent decision made by Check call.
        enum:
            - DECISION_TYPE_ACCEPTED
            - DECISION_TYPE_REJECTED
        type: string
    CheckResponseRejectReason:
        default: REJECT_REASON_NONE
        description: RejectReason contains fields that give further information about rejection.
        enum:
            - REJECT_REASON_NONE
            - REJECT_REASON_RATE_LIMITED
            - REJECT_REASON_NO_TOKENS
            - REJECT_REASON_NOT_SAMPLED
            - REJECT_REASON_NO_MATCHING_RAMP
        type: string
    Circuit:
        description: |-
            Circuit is graph of inter-connected signal processing components.

            :::info

            See also [Circuit overview](/concepts/advanced/circuit.md).

            :::

            Signals flow between components through ports.
            As signals traverse the circuit, they get processed, stored within components or get acted upon (for example, load-shed, rate-limit, auto-scale and so on).
            Circuit is evaluated periodically to respond to changes in signal readings.

            :::info Signals

            Signals are floating point values.

            A signal can also have a special **Invalid** value. It's usually used to
            communicate that signal does not have a meaningful value at the moment, for example,
            [PromQL](#prom-q-l) emits such a value if it cannot execute a query.
            Components know when their input signals are invalid and can act
            accordingly. They can either propagate the invalid signal, by making their
            output itself invalid (for example,
            [ArithmeticCombinator](#arithmetic-combinator)) or use some different
            logic, for example, [Extrapolator](#extrapolator). Refer to a component's
            docs on how exactly it handles invalid inputs.

            :::
        properties:
            components:
                description: |+
                    Defines a signal processing graph as a list of components.

                items:
                    $ref: '#/definitions/Component'
                    type: object
                type: array
                x-go-tag-validate: dive
            evaluation_interval:
                default: 1s
                description: |+
                    Evaluation interval (tick) is the time between consecutive runs of the policy circuit.
                    This interval is typically aligned with how often the corrective action (actuation) needs to be taken.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 1s
        type: object
    Classifier:
        description: |-
            :::info

            See also [Classifier overview](/concepts/classifier.md).

            :::
            Example
            ```yaml
            selectors:
               - agent_group: demoapp
                 service: service1-demo-app.demoapp.svc.cluster.local
                 control_point: ingress
                 label_matcher:
                    match_labels:
                      user_tier: gold
                    match_expressions:
                      - key: user_type
                        operator: In
            rules:
              user:
               extractor:
                 from: request.http.headers.user-agent
              telemetry: false
            ```
        properties:
            rego:
                $ref: '#/definitions/Rego'
                description: |-
                    Rego is a policy language used to express complex policies in a concise and declarative way.
                    It can be used to define flow classification rules by writing custom queries that extract values from request metadata.
                    For simple cases, such as directly reading a value from header or a field from JSON body, declarative extractors are recommended.
                title: Rego based classification
            rules:
                additionalProperties:
                    $ref: '#/definitions/Rule'
                description: |+
                    A map of {key, value} pairs mapping from
                    [flow label](/concepts/flow-label.md) keys to rules that define
                    how to extract and propagate flow labels with that key.

                type: object
                x-go-tag-validate: dive,keys,required,endkeys,required
            selectors:
                description: |+
                    Selectors for flows that will be classified by this _Classifier_.

                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - selectors
        title: Set of classification rules sharing a common selector
        type: object
    ClassifierInfo:
        description: ClassifierInfo describes details for each ClassifierInfo.
        properties:
            classifier_index:
                format: int64
                type: string
            error:
                $ref: '#/definitions/ClassifierInfoError'
            policy_hash:
                type: string
            policy_name:
                type: string
        type: object
    ClassifierInfoError:
        default: ERROR_NONE
        description: Error information.
        enum:
            - ERROR_NONE
            - ERROR_EVAL_FAILED
            - ERROR_EMPTY_RESULTSET
            - ERROR_AMBIGUOUS_RESULTSET
            - ERROR_MULTI_EXPRESSION
            - ERROR_EXPRESSION_NOT_MAP
        type: string
    ClientToServerHello:
        properties:
            name:
                type: string
            next_id:
                format: uint64
                type: string
        type: object
    CommonAttributes:
        properties:
            component_id:
                description: The id of Component within the circuit.
                type: string
            policy_hash:
                description: Hash of the entire Policy spec.
                type: string
            policy_name:
                description: Name of the Policy.
                type: string
        type: object
    Component:
        description: |-
            :::info

            See also [Components overview](/concepts/advanced/circuit.md#components).

            :::

            Signals flow into the components from input ports and results are emitted on output ports.
            Components are wired to each other based on signal names forming an execution graph of the circuit.

            :::note

            Loops are broken by the runtime at the earliest component index that is part of the loop.
            The looped signals are saved in the tick they're generated and served in the subsequent tick.

            :::

            See also [Policy](#policy) for a higher-level explanation of circuits.
        properties:
            alerter:
                $ref: '#/definitions/Alerter'
                description: Alerter reacts to a signal and generates alert to send to alert manager.
            and:
                $ref: '#/definitions/And'
                description: Logical AND.
            arithmetic_combinator:
                $ref: '#/definitions/ArithmeticCombinator'
                description: Applies the given operator on input operands (signals) and emits the result.
            auto_scale:
                $ref: '#/definitions/AutoScale'
                description: AutoScale components are used to scale the service.
            bool_variable:
                $ref: '#/definitions/BoolVariable'
                description: BoolVariable emits a constant Boolean signal which can be changed at runtime through dynamic configuration.
            decider:
                $ref: '#/definitions/Decider'
                description: Decider emits the binary result of comparison operator on two operands.
            differentiator:
                $ref: '#/definitions/Differentiator'
                description: |-
                    Differentiator calculates rate of change per tick.
                    Deprecated: v3.0.0. Use `PIDController` instead.
            ema:
                $ref: '#/definitions/EMA'
                description: Exponential Moving Average filter.
            extrapolator:
                $ref: '#/definitions/Extrapolator'
                description: Takes an input signal and emits the extrapolated value; either mirroring the input value or repeating the last known value up to the maximum extrapolation interval.
            first_valid:
                $ref: '#/definitions/FirstValid'
                description: Picks the first valid input signal and emits it.
            flow_control:
                $ref: '#/definitions/FlowControl'
                description: FlowControl components are used to regulate requests flow.
            gradient_controller:
                $ref: '#/definitions/GradientController'
                description: |-
                    Gradient controller calculates the ratio between the signal and the setpoint to determine the magnitude of the correction that need to be applied.
                    This controller can be used to build AIMD (Additive Increase, Multiplicative Decrease) or MIMD style response.
            holder:
                $ref: '#/definitions/Holder'
                description: Holds the last valid signal value for the specified duration then waits for next valid value to hold.
            integrator:
                $ref: '#/definitions/Integrator'
                description: Accumulates sum of signal every tick.
            inverter:
                $ref: '#/definitions/Inverter'
                description: Logical NOT.
            max:
                $ref: '#/definitions/Max'
                description: Emits the maximum of the input signals.
            min:
                $ref: '#/definitions/Min'
                description: Emits the minimum of the input signals.
            nested_circuit:
                $ref: '#/definitions/NestedCircuit'
                description: Nested circuit defines a sub-circuit as a high-level component. It consists of a list of components and a map of input and output ports.
            nested_signal_egress:
                $ref: '#/definitions/NestedSignalEgress'
                description: Nested signal egress is a special type of component that allows to extract a signal from a nested circuit.
            nested_signal_ingress:
                $ref: '#/definitions/NestedSignalIngress'
                description: Nested signal ingress is a special type of component that allows to inject a signal into a nested circuit.
            or:
                $ref: '#/definitions/Or'
                description: Logical OR.
            pid_controller:
                $ref: '#/definitions/PIDController'
                description: PID Controller is a proportional–integral–derivative controller.
            pulse_generator:
                $ref: '#/definitions/PulseGenerator'
                description: Generates 0 and 1 in turns.
            query:
                $ref: '#/definitions/Query'
                description: Query components that are query databases such as Prometheus.
            signal_generator:
                $ref: '#/definitions/SignalGenerator'
                description: Generates the specified signal.
            sma:
                $ref: '#/definitions/SMA'
                description: Simple Moving Average filter.
            switcher:
                $ref: '#/definitions/Switcher'
                description: Switcher acts as a switch that emits one of the two signals based on third signal.
            unary_operator:
                $ref: '#/definitions/UnaryOperator'
                description: Takes an input signal and emits the square root of the input signal.
            variable:
                $ref: '#/definitions/Variable'
                description: Emits a variable signal which can be changed at runtime through dynamic configuration.
        title: Computational block that forms the circuit
        type: object
    ConstantSignal:
        description: Special constant input for ports and Variable component. Can provide either a constant value or special Nan/+-Inf value.
        properties:
            special_value:
                description: |+
                    A special value such as NaN, +Inf, -Inf.

                enum:
                    - NaN
                    - +Inf
                    - -Inf
                type: string
                x-go-tag-validate: oneof=NaN +Inf -Inf
                x-oneof: NaN | +Inf | -Inf
            value:
                description: A constant value.
                format: double
                type: number
        type: object
    ControllerInfo:
        properties:
            id:
                type: string
        type: object
    Decider:
        description: |-
            The comparison operator can be greater-than, less-than, greater-than-or-equal, less-than-or-equal, equal, or not-equal.

            This component also supports time-based response (the output)
            transitions between 1.0 or 0.0 signal if the decider condition is
            true or false for at least `true_for` or `false_for` duration. If
            `true_for` and `false_for` durations are zero then the transitions are
            instantaneous.
        properties:
            false_for:
                default: 0s
                description: |+
                    Duration of time to wait before changing to false state.
                    If the duration is zero, the change will happen instantaneously.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 0s
            in_ports:
                $ref: '#/definitions/DeciderIns'
                description: Input ports for the Decider component.
            operator:
                description: |+
                    Comparison operator that computes operation on LHS and RHS input signals.

                enum:
                    - gt
                    - lt
                    - gte
                    - lte
                    - eq
                    - neq
                type: string
                x-go-tag-validate: oneof=gt lt gte lte eq neq
                x-oneof: gt | lt | gte | lte | eq | neq
            out_ports:
                $ref: '#/definitions/DeciderOuts'
                description: Output ports for the Decider component.
            true_for:
                default: 0s
                description: |+
                    Duration of time to wait before changing to true state.
                    If the duration is zero, the change will happen instantaneously.```
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 0s
        title: Type of Combinator that computes the comparison operation on LHS and RHS signals
        type: object
    DeciderIns:
        description: Inputs for the Decider component.
        properties:
            lhs:
                $ref: '#/definitions/InPort'
                description: Left hand side input signal for the comparison operation.
            rhs:
                $ref: '#/definitions/InPort'
                description: Right hand side input signal for the comparison operation.
        type: object
    DeciderOuts:
        description: Outputs for the Decider component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Selected signal (1.0 or 0.0).
        type: object
    DecreasingGradient:
        description: Decreasing Gradient defines a controller for scaling in based on Gradient Controller.
        properties:
            in_ports:
                $ref: '#/definitions/DecreasingGradientIns'
                description: Input ports for the Gradient.
            parameters:
                $ref: '#/definitions/DecreasingGradientParameters'
                title: |-
                    Gradient parameters for the controller. Defaults and constraints:
                    * `slope` = 1
                    * `min_gradient` = -Inf (must be less than 1)
                    * `max_gradient` = 1 (cannot be changed)
        type: object
    DecreasingGradientIns:
        description: Inputs for Gradient.
        properties:
            setpoint:
                $ref: '#/definitions/InPort'
                description: The setpoint to use for scale-in.
            signal:
                $ref: '#/definitions/InPort'
                description: The signal to use for scale-in.
        type: object
    DecreasingGradientParameters:
        description: This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
        properties:
            min_gradient:
                default: -1.7976931348623157e+308
                format: double
                type: number
                x-go-tag-default: "-1.79769313486231570814527423731704356798070e+308"
                x-go-tag-validate: lte=1.0
            slope:
                default: 1
                format: double
                type: number
                x-go-tag-default: "1.0"
        type: object
    DeniedHttpResponse:
        description: HTTP attributes for a denied response.
        properties:
            body:
                description: |-
                    This field allows the authorization service to send a response body data
                    to the downstream client.
                type: string
            headers:
                additionalProperties:
                    type: string
                description: |-
                    This field allows the authorization service to send HTTP response headers
                    to the downstream client.
                type: object
            status:
                description: |-
                    This field allows the authorization service to send an HTTP response status code to the
                    downstream client. If not set, Envoy sends `403 Forbidden` HTTP status code by default.
                format: int32
                type: integer
        type: object
    Differentiator:
        description: Differentiator calculates rate of change per tick.
        properties:
            in_ports:
                $ref: '#/definitions/DifferentiatorIns'
                description: Input ports for the Differentiator component.
            out_ports:
                $ref: '#/definitions/DifferentiatorOuts'
                description: Output ports for the Differentiator component.
            window:
                default: 5s
                description: |+
                    The window of time over which differentiator operates.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 5s
        type: object
    DifferentiatorIns:
        description: Inputs for the Differentiator component.
        properties:
            input:
                $ref: '#/definitions/InPort'
        type: object
    DifferentiatorOuts:
        description: Outputs for the Differentiator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
        type: object
    EMA:
        description: |-
            At any time EMA component operates in one of the following states:
            1. Warm up state: The first `warmup_window` samples are used to compute the initial EMA.
               If an invalid reading is received during the `warmup_window`, the last good average is emitted and the state gets reset back to beginning of warm up state.
            2. Normal state: The EMA is computed using following formula.

            The EMA for a series $Y$ is calculated recursively as:
            <!-- vale off -->
            $$
            \text{EMA} _t =
            \begin{cases}
              Y_0, &\text{for } t = 0 \\
              \alpha Y_t + (1 - \alpha) \text{EMA}_{t-1}, &\text{for }t > 0
            \end{cases}
            $$

            The coefficient $\alpha$ represents the degree of weighting decrease, a constant smoothing factor between 0 and 1.
            A higher $\alpha$ discounts older observations faster.
            The $\alpha$ is computed using ema\_window:

            $$
            \alpha = \frac{2}{N + 1} \quad\text{where } N = \frac{\text{ema\_window}}{\text{evaluation\_period}}
            $$
            <!-- vale on -->
        properties:
            in_ports:
                $ref: '#/definitions/EMAIns'
                description: Input ports for the EMA component.
            out_ports:
                $ref: '#/definitions/EMAOuts'
                description: Output ports for the EMA component.
            parameters:
                $ref: '#/definitions/EMAParameters'
                description: |+
                    Parameters for the EMA component.

                x-go-tag-validate: required
        title: Exponential Moving Average (EMA) is a type of moving average that applies exponentially more weight to recent signal readings
        type: object
    EMAIns:
        description: Inputs for the EMA component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: Input signal to be used for the EMA computation.
            max_envelope:
                $ref: '#/definitions/InPort'
                description: |-
                    Upper bound of the moving average.

                    When the signal exceeds `max_envelope` it is multiplied by
                    `correction_factor_on_max_envelope_violation` **once per tick**.

                    :::note

                    If the signal deviates from `max_envelope` faster than the correction
                    faster, it might end up exceeding the envelope.

                    :::
            min_envelope:
                $ref: '#/definitions/InPort'
                description: |-
                    Lower bound of the moving average.

                    Behavior is similar to `max_envelope`.
        type: object
    EMAOuts:
        description: Outputs for the EMA component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Exponential moving average of the series of reading as an output signal.
        type: object
    EMAParameters:
        description: Parameters for the EMA component.
        properties:
            correction_factor_on_max_envelope_violation:
                default: 1
                description: |+
                    Correction factor to apply on the output value if its in violation of the max envelope.

                format: double
                minimum: 0
                type: number
                x-go-tag-default: "1.0"
                x-go-tag-validate: gte=0,lte=1.0
            correction_factor_on_min_envelope_violation:
                default: 1
                description: |+
                    Correction factor to apply on the output value if its in violation of the min envelope.

                format: double
                type: number
                x-go-tag-default: "1.0"
                x-go-tag-validate: gte=1.0
            ema_window:
                description: |+
                    EMA window duration.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            valid_during_warmup:
                default: false
                description: |+
                    Whether the output is valid during the warm-up stage.

                type: boolean
                x-go-tag-default: "false"
            warmup_window:
                description: |+
                    Duration of EMA warming up window.

                    The initial value of the EMA is the average of signal readings received during the warm up window.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
        required:
            - ema_window
            - warmup_window
        type: object
    Entities:
        description: Entities contains both mappings of ip address to entity and entity name to entity.
        properties:
            entities_by_ip_address:
                $ref: '#/definitions/EntitiesEntities'
            entities_by_name:
                $ref: '#/definitions/EntitiesEntities'
        type: object
    EntitiesEntities:
        description: Entities defines mapping of entities.
        properties:
            entities:
                additionalProperties:
                    $ref: '#/definitions/Entity'
                type: object
        type: object
    Entity:
        description: Entity represents a pod, VM, and so on.
        properties:
            ip_address:
                description: |+
                    IP address of the entity.

                pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                type: string
                x-go-tag-validate: required,ip
                x-pattern-rules: ip
            name:
                description: Name of the entity. For example, pod name.
                type: string
            namespace:
                description: Namespace of the entity. For example, pod namespace.
                type: string
            node_name:
                description: Node name of the entity. For example, hostname.
                type: string
            services:
                description: |+
                    Services of the entity.

                items:
                    type: string
                minItems: 1
                type: array
                x-go-tag-validate: gt=0
            uid:
                description: |+
                    Unique identifier of the entity.

                type: string
                x-go-tag-validate: required
        required:
            - ip_address
            - uid
        type: object
    EqualsMatchExpression:
        description: Label selector expression of the equal form `label == value`.
        properties:
            label:
                description: |+
                    Name of the label to equal match the value.

                type: string
                x-go-tag-validate: required
            value:
                description: Exact value that the label should be equal to.
                type: string
        required:
            - label
        type: object
    Extractor:
        description: There are multiple variants of extractor, specify exactly one.
        properties:
            address:
                $ref: '#/definitions/AddressExtractor'
                description: Display an address as a single string - `<ip>:<port>`.
            from:
                description: |-
                    Attribute path is a dot-separated path to attribute.

                    Should be either:
                    * one of the fields of [Attribute Context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/auth/v3/attribute_context.proto), or
                    * a special `request.http.bearer` pseudo-attribute.
                    For example, `request.http.method` or `request.http.header.user-agent`

                    Note: The same attribute path syntax is shared by other extractor variants,
                    wherever attribute path is needed in their "from" syntax.

                    Example:
                    ```yaml
                    from: request.http.headers.user-agent
                    ```
                title: Use an attribute with no conversion
                type: string
            json:
                $ref: '#/definitions/JSONExtractor'
                description: Parse JSON, and extract one of the fields.
            jwt:
                $ref: '#/definitions/JWTExtractor'
                description: Parse the attribute as JWT and read the payload.
            path_templates:
                $ref: '#/definitions/PathTemplateMatcher'
                description: Match HTTP Path to given path templates.
        title: Defines a high-level way to specify how to extract a flow label value given HTTP request metadata, without a need to write Rego code
        type: object
    Extrapolator:
        description: It does so until `maximum_extrapolation_interval` is reached, beyond which it emits invalid signal unless input signal becomes valid again.
        properties:
            in_ports:
                $ref: '#/definitions/ExtrapolatorIns'
                description: Input ports for the Extrapolator component.
            out_ports:
                $ref: '#/definitions/ExtrapolatorOuts'
                description: Output ports for the Extrapolator component.
            parameters:
                $ref: '#/definitions/ExtrapolatorParameters'
                description: |+
                    Parameters for the Extrapolator component.

                x-go-tag-validate: required
        title: Extrapolates the input signal by repeating the last valid value during the period in which it is invalid
        type: object
    ExtrapolatorIns:
        description: Inputs for the Extrapolator component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: Input signal for the Extrapolator component.
        type: object
    ExtrapolatorOuts:
        description: Outputs for the Extrapolator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Extrapolated signal.
        type: object
    ExtrapolatorParameters:
        description: Parameters for the Extrapolator component.
        properties:
            max_extrapolation_interval:
                description: |+
                    Maximum time interval to repeat the last valid value of input signal.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
        required:
            - max_extrapolation_interval
        type: object
    FirstValid:
        properties:
            in_ports:
                $ref: '#/definitions/FirstValidIns'
                description: Input ports for the FirstValid component.
            out_ports:
                $ref: '#/definitions/FirstValidOuts'
                description: Output ports for the FirstValid component.
        title: Picks the first valid input signal from the array of input signals and emits it as an output signal
        type: object
    FirstValidIns:
        description: Inputs for the FirstValid component.
        properties:
            inputs:
                description: |+
                    Array of input signals.

                items:
                    $ref: '#/definitions/InPort'
                    type: object
                type: array
                x-go-tag-validate: dive
        type: object
    FirstValidOuts:
        description: Outputs for the FirstValid component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: First valid input signal as an output signal.
        type: object
    FlowControl:
        description: _Flow Control_ encompasses components that manage the flow of requests or access to features within a service.
        properties:
            adaptive_load_scheduler:
                $ref: '#/definitions/AdaptiveLoadScheduler'
                description: _Adaptive Load Scheduler_ component is based on additive increase and multiplicative decrease of token rate. It takes a signal and setpoint as inputs and reduces token rate proportionally (or any arbitrary power) based on deviation of the signal from setpoint.
            load_ramp:
                $ref: '#/definitions/LoadRamp'
                description: _Load Ramp_ smoothly regulates the flow of requests over specified steps.
            load_scheduler:
                $ref: '#/definitions/LoadScheduler'
                description: _Load Scheduler_ provides service protection by creating a prioritized workload queue in front of the service using Weighted Fair Queuing.
            quota_scheduler:
                $ref: '#/definitions/QuotaScheduler'
            rate_limiter:
                $ref: '#/definitions/RateLimiter'
                description: _Rate Limiter_ provides service protection by applying rate limits using the token bucket algorithm.
            sampler:
                $ref: '#/definitions/Sampler'
                description: Sampler is a component that regulates the flow of requests to the service by allowing only the specified percentage of requests or sticky sessions.
        type: object
    FlowControlPoint:
        properties:
            control_point:
                type: string
            service:
                type: string
            type:
                type: string
        type: object
    FlowControlPoints:
        properties:
            flow_control_points:
                items:
                    $ref: '#/definitions/FlowControlPoint'
                    type: object
                type: array
        type: object
    FlowControlResources:
        properties:
            classifiers:
                description: |+
                    Classifiers are installed in the data-plane and are used to label the requests based on payload content.

                    The flow labels created by Classifiers can be matched by Flux Meters to create metrics for control purposes.

                items:
                    $ref: '#/definitions/Classifier'
                    type: object
                type: array
                x-go-tag-validate: dive
            flux_meters:
                additionalProperties:
                    $ref: '#/definitions/FluxMeter'
                description: |+
                    Flux Meters are installed in the data-plane and form the observability leg of the feedback loop.

                    Flux Meter created metrics can be consumed as input to the circuit through the PromQL component.

                type: object
                x-go-tag-validate: dive
        title: FlowControl Resources
        type: object
    FluxMeter:
        description: |-
            Flux Meter gathers metrics for the traffic that matches its selector.
            The histogram created by Flux Meter measures the workload latency by default.

            :::info

            See also [Flux Meter overview](/concepts/flux-meter.md).

            :::
            Example:
            ```yaml
            static_buckets:
               buckets: [5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]
            selectors:
               - agent_group: demoapp
                 service: service1-demo-app.demoapp.svc.cluster.local
                 control_point: ingress
            attribute_key: response_duration_ms
            ```
        properties:
            attribute_key:
                default: workload_duration_ms
                description: |+
                    Key of the attribute in access log or span from which the metric for this flux meter is read.

                    :::info

                    For list of available attributes in Envoy access logs, refer
                    [Envoy Filter](/integrations/istio/istio.md#envoy-filter)

                    :::

                type: string
                x-go-tag-default: workload_duration_ms
            exponential_buckets:
                $ref: '#/definitions/FluxMeterExponentialBuckets'
            exponential_buckets_range:
                $ref: '#/definitions/FluxMeterExponentialBucketsRange'
            linear_buckets:
                $ref: '#/definitions/FluxMeterLinearBuckets'
            selectors:
                description: |+
                    Selectors for flows that will be metered by this _Flux Meter_.

                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
            static_buckets:
                $ref: '#/definitions/FluxMeterStaticBuckets'
        required:
            - selectors
        type: object
    FluxMeterExponentialBuckets:
        description: |-
            ExponentialBuckets creates `count` number of buckets where the lowest bucket has an upper bound of `start`
            and each following bucket's upper bound is `factor` times the previous bucket's upper bound. The final +inf
            bucket is not counted.
        properties:
            count:
                description: |+
                    Number of buckets.

                exclusiveMinimum: true
                format: int32
                minimum: 0
                type: integer
                x-go-tag-validate: gt=0
            factor:
                description: |+
                    Factor to be multiplied to the previous bucket's upper bound to calculate the following bucket's upper bound.

                format: double
                type: number
                x-go-tag-validate: gt=1.0
            start:
                description: |+
                    Upper bound of the lowest bucket.

                format: double
                type: number
                x-go-tag-validate: gt=0.0
        type: object
    FluxMeterExponentialBucketsRange:
        description: |-
            ExponentialBucketsRange creates `count` number of buckets where the lowest bucket is `min` and the highest
            bucket is `max`. The final +inf bucket is not counted.
        properties:
            count:
                description: |+
                    Number of buckets.

                exclusiveMinimum: true
                format: int32
                minimum: 0
                type: integer
                x-go-tag-validate: gt=0
            max:
                description: Highest bucket.
                format: double
                type: number
            min:
                description: |+
                    Lowest bucket.

                format: double
                type: number
                x-go-tag-validate: gt=0.0
        type: object
    FluxMeterInfo:
        description: FluxMeterInfo describes detail for each FluxMeterInfo.
        properties:
            flux_meter_name:
                type: string
        type: object
    FluxMeterLinearBuckets:
        description: |-
            LinearBuckets creates `count` number of buckets, each `width` wide, where the lowest bucket has an
            upper bound of `start`. The final +inf bucket is not counted.
        properties:
            count:
                description: |+
                    Number of buckets.

                exclusiveMinimum: true
                format: int32
                minimum: 0
                type: integer
                x-go-tag-validate: gt=0
            start:
                description: Upper bound of the lowest bucket.
                format: double
                type: number
            width:
                description: Width of each bucket.
                format: double
                type: number
        type: object
    FluxMeterStaticBuckets:
        description: StaticBuckets holds the static value of the buckets where latency histogram will be stored.
        properties:
            buckets:
                default:
                    - 5
                    - 10
                    - 25
                    - 50
                    - 100
                    - 250
                    - 500
                    - 1000
                    - 2500
                    - 5000
                    - 10000
                description: |+
                    The buckets in which latency histogram will be stored.

                items:
                    format: double
                    type: number
                type: array
                x-go-tag-default: '[5.0,10.0,25.0,50.0,100.0,250.0,500.0,1000.0,2500.0,5000.0,10000.0]'
        type: object
    GetDecisionsResponse:
        description: GetDecisionsResponse is a response containing decisions for a given decision type.
        properties:
            decisions:
                additionalProperties:
                    type: string
                type: object
        type: object
    GetPoliciesResponse:
        description: GetPoliciesResponse is a response containing all Policies.
        properties:
            policies:
                $ref: '#/definitions/Policies'
        type: object
    GetPolicyResponse:
        description: GetPolicyResponse is a response containing the requested Policy.
        properties:
            policy:
                $ref: '#/definitions/Policy'
            reason:
                type: string
            status:
                $ref: '#/definitions/GetPolicyResponseStatus'
        type: object
    GetPolicyResponseStatus:
        default: VALID
        description: |4-
             - VALID: Policy is valid, present in etcd and running in the controller.
             - INVALID: Policy is present in etcd, but fails to parse.
             - NOT_LOADED: Policy is present in etcd, but is not (yet) running in the controller.
             - STALE: Policy is running on the controller, but is not present in etcd.
             - OUTDATED: Policy is present in etcd and policy with the same name is running in
            the controller, but these policies differ.
        enum:
            - VALID
            - INVALID
            - NOT_LOADED
            - STALE
            - OUTDATED
        type: string
    GlobalAutoScaleControlPoint:
        properties:
            agent_group:
                type: string
            auto_scale_control_point:
                $ref: '#/definitions/AutoScaleKubernetesControlPoint'
        type: object
    GlobalFlowControlPoint:
        description: |-
            GlobalFlowControlPoint contains info about a control point on a given
            service with explicit Agent Group.
        properties:
            agent_group:
                type: string
            flow_control_point:
                $ref: '#/definitions/FlowControlPoint'
        type: object
    GlobalService:
        description: GlobalService is a service with explicit agent group.
        properties:
            agent_group:
                type: string
            name:
                type: string
        type: object
    GradientController:
        description: |-
            The `gradient` describes a corrective factor that should be applied to the
            control variable to get the signal closer to the setpoint. It's computed as follows:

            $$
            \text{gradient} = \left(\frac{\text{signal}}{\text{setpoint}}\right)^{\text{slope}}
            $$

            `gradient` is then clamped to `[min_gradient, max_gradient]` range.

            The output of gradient controller is computed as follows:
            $$
            \text{output} = \text{gradient}_{\text{clamped}} \cdot \text{control\_variable} + \text{optimize}.
            $$

            Note the additional `optimize` signal, that can be used to "nudge" the
            controller into desired idle state.

            The output can be _optionally_ clamped to desired range using `max` and
            `min` input.
        properties:
            in_ports:
                $ref: '#/definitions/GradientControllerIns'
                description: Input ports of the Gradient Controller.
            manual_mode:
                description: In manual mode, the controller does not adjust the control variable. It emits the same output as the control variable input. This setting can be adjusted at runtime through dynamic configuration without restarting the policy.
                type: boolean
            manual_mode_config_key:
                description: Configuration key for overriding `manual_mode` setting through dynamic configuration.
                type: string
            out_ports:
                $ref: '#/definitions/GradientControllerOuts'
                description: Output ports of the Gradient Controller.
            parameters:
                $ref: '#/definitions/GradientControllerParameters'
                description: |+
                    Gradient Parameters.

                x-go-tag-validate: required
        title: |-
            Gradient controller is a type of controller which tries to adjust the
            control variable proportionally to the relative difference between setpoint
            and actual value of the signal
        type: object
    GradientControllerIns:
        description: Inputs for the Gradient Controller component.
        properties:
            control_variable:
                $ref: '#/definitions/InPort'
                description: |-
                    Actual current value of the control variable.

                    This signal is multiplied by the gradient to produce the output.
            max:
                $ref: '#/definitions/InPort'
                description: Maximum value to limit the output signal.
            min:
                $ref: '#/definitions/InPort'
                description: Minimum value to limit the output signal.
            setpoint:
                $ref: '#/definitions/InPort'
                description: Setpoint to be used for the gradient computation.
            signal:
                $ref: '#/definitions/InPort'
                description: Signal to be used for the gradient computation.
        type: object
    GradientControllerOuts:
        description: Outputs for the Gradient Controller component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Computed desired value of the control variable.
        type: object
    GradientControllerParameters:
        description: Gradient Parameters.
        properties:
            max_gradient:
                default: 1.7976931348623157e+308
                description: |+
                    Maximum gradient which clamps the computed gradient value to the range, `[min_gradient, max_gradient]`.

                format: double
                type: number
                x-go-tag-default: "1.79769313486231570814527423731704356798070e+308"
            min_gradient:
                default: -1.7976931348623157e+308
                description: |+
                    Minimum gradient which clamps the computed gradient value to the range, `[min_gradient, max_gradient]`.

                format: double
                type: number
                x-go-tag-default: "-1.79769313486231570814527423731704356798070e+308"
            slope:
                description: |+
                    Slope controls the aggressiveness and direction of the Gradient Controller.

                    Slope is used as exponent on the signal to setpoint ratio in computation
                    of the gradient (see the [main description](#gradient-controller) for
                    exact equation). This parameter decides how aggressive the controller
                    responds to the deviation of signal from the setpoint.
                    for example:
                    * $\text{slope} = 1$: when signal is too high, increase control variable,
                    * $\text{slope} = -1$: when signal is too high, decrease control variable,
                    * $\text{slope} = -0.5$: when signal is too high, decrease control variable gradually.

                    The sign of slope depends on correlation between the signal and control variable:
                    * Use $\text{slope} < 0$ if there is a _positive_ correlation between the signal and
                    the control variable (for example, Per-pod CPU usage and total concurrency).
                    * Use $\text{slope} > 0$ if there is a _negative_ correlation between the signal and
                    the control variable (for example, Per-pod CPU usage and number of pods).

                    :::note

                    You need to set _negative_ slope for a _positive_ correlation, as you're
                    describing the _action_ which controller should make when the signal
                    increases.

                    :::

                    The magnitude of slope describes how aggressively should the controller
                    react to a deviation of signal.
                    With $|\text{slope}| = 1$, the controller will aim to bring the signal to
                    the setpoint in one tick (assuming linear correlation with signal and setpoint).
                    Smaller magnitudes of slope will make the controller adjust the control
                    variable gradually.

                    Setting $|\text{slope}| < 1$ (for example, $\pm0.8$) is recommended.
                    If you experience overshooting, consider lowering the magnitude even more.
                    Values of $|\text{slope}| > 1$ aren't recommended.

                    :::note

                    Remember that the gradient and output signal can be (optionally) clamped,
                    so the _slope_ might not fully describe aggressiveness of the controller.

                    :::

                format: double
                type: number
                x-go-tag-validate: required
        required:
            - slope
        type: object
    GroupStatus:
        description: |-
            Groups is nested structure that holds status information about the node and a
            pointer to the next node.
        properties:
            groups:
                additionalProperties:
                    $ref: '#/definitions/GroupStatus'
                type: object
            status:
                $ref: '#/definitions/Status'
        type: object
    Holder:
        description: |-
            Holds the last valid signal value for the specified duration then waits for next valid value to hold.
            If it is holding a value that means it ignores both valid and invalid new signals until the `hold_for` duration is finished.
        properties:
            hold_for:
                default: 5s
                description: |+
                    Holding the last valid signal value for the `hold_for` duration.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 5s
            in_ports:
                $ref: '#/definitions/HolderIns'
                description: Input ports for the Holder component.
            out_ports:
                $ref: '#/definitions/HolderOuts'
                description: Output ports for the Holder component.
        type: object
    HolderIns:
        description: Inputs for the Holder component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: The input signal.
            reset:
                $ref: '#/definitions/InPort'
                description: Resets the holder output to the current input signal when reset signal is valid and non-zero.
        type: object
    HolderOuts:
        description: Outputs for the Holder component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: The output signal.
        type: object
    HostInfo:
        properties:
            hostname:
                type: string
            local_ip:
                type: string
            uuid:
                type: string
        type: object
    InPort:
        properties:
            constant_signal:
                $ref: '#/definitions/ConstantSignal'
                description: Constant value to be used for this InPort instead of a signal.
            signal_name:
                description: Name of the incoming Signal on the InPort.
                type: string
        title: Components receive input from other components through InPorts
        type: object
    IncreasingGradient:
        description: Increasing Gradient defines a controller for scaling out based on _Gradient Controller_.
        properties:
            in_ports:
                $ref: '#/definitions/IncreasingGradientIns'
                description: Input ports for the Gradient.
            parameters:
                $ref: '#/definitions/IncreasingGradientParameters'
                title: |-
                    Gradient parameters for the controller. Defaults and constraints:
                    * `slope` = 1
                    * `min_gradient` = 1 (cannot be changed)
                    * `max_gradient` = +Inf (must be greater than 1)
        type: object
    IncreasingGradientIns:
        description: Inputs for Gradient.
        properties:
            setpoint:
                $ref: '#/definitions/InPort'
                description: The setpoint to use for scale-out.
            signal:
                $ref: '#/definitions/InPort'
                description: The signal to use for scale-out.
        type: object
    IncreasingGradientParameters:
        description: This allows subset of parameters with constrained values compared to a regular gradient controller. For full documentation of these parameters, refer to the [GradientControllerParameters](#gradient-controller-parameters).
        properties:
            max_gradient:
                default: 1.7976931348623157e+308
                format: double
                type: number
                x-go-tag-default: "1.79769313486231570814527423731704356798070e+308"
                x-go-tag-validate: gte=1.0
            slope:
                default: 1
                format: double
                type: number
                x-go-tag-default: "1.0"
        type: object
    InfraMeter:
        description: |-
            InfraMeter is a resource that sets up OpenTelemetry pipelines.
            It defines receivers, processors, and a single metrics pipeline
            which will be exported to the configured Prometheus instance.
            Environment variables can be used in the configuration using format `${ENV_VAR_NAME}`.

            :::info

            See also [Get Started / Setup Integrations / Metrics](/integrations/metrics/metrics.md).

            :::
        properties:
            agent_group:
                default: default
                description: |+
                    AgentGroup is the agent group to sync this InfraMeter with.

                type: string
                x-go-tag-default: default
            per_agent_group:
                default: false
                description: |+
                    PerAgentGroup marks the pipeline to be instantiated only once per agent
                    group. This is helpful for receivers that scrape for example, some cluster-wide
                    metrics. When not set, pipeline will be instantiated on every Agent.

                type: boolean
                x-go-tag-default: "false"
            pipeline:
                $ref: '#/definitions/InfraMeterMetricsPipeline'
                description: |-
                    Pipeline is an OTel metrics pipeline definition, which **only** uses receivers
                    and processors defined above. Exporter would be added automatically.

                    If there are no processors defined or only one processor is defined, the
                    pipeline definition can be omitted. In such cases, the pipeline will
                    automatically use all given receivers and the defined processor (if
                    any).  However, if there are more than one processor, the pipeline must
                    be defined explicitly.
            processors:
                additionalProperties:
                    type: object
                description: |-
                    Processors define processors to be used in custom metrics pipelines. This should
                    be in [OTel format](https://opentelemetry.io/docs/collector/configuration/#processors).
                type: object
            receivers:
                additionalProperties:
                    type: object
                description: |-
                    Receivers define receivers to be used in custom metrics pipelines. This should
                    be in [OTel format](https://opentelemetry.io/docs/collector/configuration/#receivers).
                type: object
        type: object
    InfraMeterMetricsPipeline:
        description: MetricsPipelineConfig defines a custom metrics pipeline.
        properties:
            processors:
                items:
                    type: string
                type: array
            receivers:
                items:
                    type: string
                type: array
        type: object
    Integrator:
        description: Accumulates sum of signal every tick.
        properties:
            evaluation_interval:
                description: |-
                    The evaluation interval of the Integrator. This determines how often the Integrator is incremented. Defaults to the evaluation interval of the circuit.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
                type: string
            in_ports:
                $ref: '#/definitions/IntegratorIns'
                description: Input ports for the Integrator component.
            initial_value:
                default: 0
                description: |+
                    Initial value of the integrator.

                format: double
                type: number
                x-go-tag-default: "0"
            out_ports:
                $ref: '#/definitions/IntegratorOuts'
                description: Output ports for the Integrator component.
        type: object
    IntegratorIns:
        description: Inputs for the Integrator component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: The input signal.
            max:
                $ref: '#/definitions/InPort'
                description: The maximum output.
            min:
                $ref: '#/definitions/InPort'
                description: The minimum output.
            reset:
                $ref: '#/definitions/InPort'
                description: Resets the integrator output to zero when reset signal is valid and non-zero. Reset also resets the max and min constraints.
        type: object
    IntegratorOuts:
        description: Outputs for the Integrator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
        type: object
    Inverter:
        description: |-
            Logical NOT.

            See [And component](#and) on how signals are mapped onto Boolean values.
        properties:
            in_ports:
                $ref: '#/definitions/InverterIns'
                description: Input ports for the Inverter component.
            out_ports:
                $ref: '#/definitions/InverterOuts'
                description: Output ports for the Inverter component.
        type: object
    InverterIns:
        description: Inputs for the Inverter component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: |+
                    Signal to be negated.

                x-go-tag-validate: dive
        type: object
    InverterOuts:
        description: Output ports for the Inverter component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: |-
                    Logical negation of the input signal.

                    Will always be 0 (false), 1 (true) or invalid (unknown).
        type: object
    JSONExtractor:
        description: |-
            Example:
            ```yaml
            from: request.http.body
            pointer: /user/name
            ```
        properties:
            from:
                description: |+
                    Attribute path pointing to some strings - for example, `request.http.body`.

                type: string
                x-go-tag-validate: required
            pointer:
                description: |-
                    JSON pointer represents a parsed JSON pointer which allows to select a specified field from the payload.

                    Note: Uses [JSON pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,
                    for example, `/foo/bar`. If the pointer points into an object, it'd be converted to a string.
                type: string
        required:
            - from
        title: Parse JSON, and extract one of the fields
        type: object
    JWTExtractor:
        description: |-
            Specify a field to be extracted from payload using `json_pointer`.

            Note: The signature is not verified against the secret (assuming there's some
            other part of the system that handles such verification).

            Example:
            ```yaml
            from: request.http.bearer
            json_pointer: /user/email
            ```
        properties:
            from:
                description: |+
                    JWT (JSON Web Token) can be extracted from any input attribute, but most likely you'd want to use `request.http.bearer`.

                type: string
                x-go-tag-validate: required
            json_pointer:
                description: |-
                    JSON pointer allowing to select a specified field from the payload.

                    Note: Uses [JSON pointer](https://datatracker.ietf.org/doc/html/rfc6901) syntax,
                    for example, `/foo/bar`. If the pointer points into an object, it'd be converted to a string.
                type: string
        required:
            - from
        title: Parse the attribute as JWT and read the payload
        type: object
    K8sLabelMatcherRequirement:
        description: Label selector requirement which is a selector that contains values, a key, and an operator that relates the key and values.
        properties:
            key:
                description: |+
                    Label key that the selector applies to.

                type: string
                x-go-tag-validate: required
            operator:
                description: |+
                    Logical operator which represents a key's relationship to a set of values.
                    Valid operators are In, NotIn, Exists and DoesNotExist.

                enum:
                    - In
                    - NotIn
                    - Exists
                    - DoesNotExists
                type: string
                x-go-tag-validate: oneof=In NotIn Exists DoesNotExists
                x-oneof: In | NotIn | Exists | DoesNotExists
            values:
                description: |-
                    An array of string values that relates to the key by an operator.
                    If the operator is In or NotIn, the values array must be non-empty.
                    If the operator is Exists or DoesNotExist, the values array must be empty.
                items:
                    type: string
                type: array
        required:
            - key
        type: object
    KubernetesObjectSelector:
        description: |-
            Describes which pods a control or observability
            component should apply to.
        properties:
            agent_group:
                default: default
                description: |+
                    Which [agent-group](/concepts/selector.md#agent-group) this
                    selector applies to.

                type: string
                x-go-tag-default: default
            api_version:
                title: API version of Kubernetes resource
                type: string
                x-go-tag-validate: required
            kind:
                description: |+
                    Kubernetes resource type.

                type: string
                x-go-tag-validate: required
            name:
                description: |+
                    Kubernetes resource name.

                type: string
                x-go-tag-validate: required
            namespace:
                description: |+
                    Kubernetes namespace that the resource belongs to.

                type: string
                x-go-tag-validate: required
        required:
            - api_version
            - kind
            - name
            - namespace
        type: object
    LabelMatcher:
        description: |-
            It provides three ways to define requirements:
            - match labels
            - match expressions
            - arbitrary expression

            If multiple requirements are set, they're all combined using the logical AND operator.
            An empty label matcher always matches.
        properties:
            expression:
                $ref: '#/definitions/MatchExpression'
                description: An arbitrary expression to be evaluated on the labels.
            match_expressions:
                description: |-
                    List of Kubernetes-style label matcher requirements.

                    Note: The requirements are combined using the logical AND operator.
                items:
                    $ref: '#/definitions/K8sLabelMatcherRequirement'
                    type: object
                type: array
            match_labels:
                additionalProperties:
                    type: string
                description: |-
                    A map of {key,value} pairs representing labels to be matched.
                    A single {key,value} in the `match_labels` requires that the label `key` is present and equal to `value`.

                    Note: The requirements are combined using the logical AND operator.
                type: object
        title: |-
            Allows to define rules whether a map of
            [labels](/concepts/flow-label.md)
            should be considered a match or not
        type: object
    LimiterDecision:
        description: LimiterDecision describes details for each limiter.
        properties:
            component_id:
                type: string
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
            dropped:
                type: boolean
            load_scheduler_info:
                $ref: '#/definitions/LimiterDecisionSchedulerInfo'
            policy_hash:
                type: string
            policy_name:
                type: string
            quota_scheduler_info:
                $ref: '#/definitions/LimiterDecisionQuotaSchedulerInfo'
            rate_limiter_info:
                $ref: '#/definitions/LimiterDecisionRateLimiterInfo'
            reason:
                $ref: '#/definitions/LimiterDecisionLimiterReason'
            sampler_info:
                $ref: '#/definitions/LimiterDecisionSamplerInfo'
            wait_time:
                type: string
        type: object
    LimiterDecisionLimiterReason:
        default: LIMITER_REASON_UNSPECIFIED
        enum:
            - LIMITER_REASON_UNSPECIFIED
            - LIMITER_REASON_KEY_NOT_FOUND
        type: string
    LimiterDecisionQuotaSchedulerInfo:
        properties:
            label:
                type: string
            priority:
                format: double
                type: number
            tokens_info:
                $ref: '#/definitions/LimiterDecisionTokensInfo'
            workload_index:
                type: string
        type: object
    LimiterDecisionRateLimiterInfo:
        properties:
            label:
                type: string
            tokens_info:
                $ref: '#/definitions/LimiterDecisionTokensInfo'
        type: object
    LimiterDecisionSamplerInfo:
        properties:
            label:
                type: string
        type: object
    LimiterDecisionSchedulerInfo:
        properties:
            priority:
                format: double
                type: number
            tokens_info:
                $ref: '#/definitions/LimiterDecisionTokensInfo'
            workload_index:
                type: string
        type: object
    LimiterDecisionTokensInfo:
        properties:
            consumed:
                format: double
                type: number
            current:
                format: double
                type: number
            remaining:
                description: |-
                    remaining and current may not
                    provide accurate values in case
                    the request times out while waiting
                    for tokens.
                format: double
                type: number
        type: object
    ListAgentsResponse:
        properties:
            agents:
                items:
                    type: string
                type: array
        type: object
    ListAutoScaleControlPointsControllerResponse:
        properties:
            errors_count:
                format: int64
                type: integer
            global_auto_scale_control_points:
                items:
                    $ref: '#/definitions/GlobalAutoScaleControlPoint'
                    type: object
                type: array
        type: object
    ListDiscoveryEntitiesAgentResponse:
        properties:
            entities:
                additionalProperties:
                    $ref: '#/definitions/Entity'
                type: object
        type: object
    ListDiscoveryEntitiesControllerResponse:
        properties:
            entities:
                $ref: '#/definitions/ListDiscoveryEntitiesAgentResponse'
            errors_count:
                format: int64
                type: integer
        type: object
    ListDiscoveryEntityAgentResponse:
        properties:
            entity:
                $ref: '#/definitions/Entity'
        type: object
    ListFlowControlPointsControllerResponse:
        properties:
            errors_count:
                format: int64
                type: integer
            global_flow_control_points:
                items:
                    $ref: '#/definitions/GlobalFlowControlPoint'
                    type: object
                type: array
        type: object
    ListServicesControllerResponse:
        properties:
            errors_count:
                format: int64
                type: integer
            services:
                items:
                    $ref: '#/definitions/GlobalService'
                    type: object
                type: array
        type: object
    LoadRamp:
        description: |-
            The _Load Ramp_ produces a smooth and continuous traffic load
            that changes progressively over time, based on the specified steps.

            Each step is defined by two parameters:
            - The `target_accept_percentage`.
            - The `duration` for the signal to change from the
              previous step's `target_accept_percentage` to the current step's
              `target_accept_percentage`.

            The percentage of requests accepted starts at the `target_accept_percentage`
            defined in the first step and gradually ramps up or down linearly from
            the previous step's `target_accept_percentage` to the next
            `target_accept_percentage`, over the `duration` specified for each step.
        properties:
            in_ports:
                $ref: '#/definitions/LoadRampIns'
            out_ports:
                $ref: '#/definitions/LoadRampOuts'
            parameters:
                $ref: '#/definitions/LoadRampParameters'
                x-go-tag-validate: required
            pass_through_label_values:
                description: Specify certain label values to be always accepted by the _Sampler_ regardless of accept percentage.
                items:
                    type: string
                type: array
            pass_through_label_values_config_key:
                description: Configuration key for setting pass through label values through dynamic configuration.
                type: string
        type: object
    LoadRampIns:
        description: Inputs for the _Load Ramp_ component.
        properties:
            backward:
                $ref: '#/definitions/InPort'
                description: Whether to progress the _Load Ramp_ towards the previous step.
            forward:
                $ref: '#/definitions/InPort'
                description: Whether to progress the _Load Ramp_ towards the next step.
            reset:
                $ref: '#/definitions/InPort'
                description: Whether to reset the _Load Ramp_ to the first step.
        type: object
    LoadRampOuts:
        description: Outputs for the _Load Ramp_ component.
        properties:
            accept_percentage:
                $ref: '#/definitions/OutPort'
                description: The percentage of flows being accepted by the _Load Ramp_.
            at_end:
                $ref: '#/definitions/OutPort'
                description: A Boolean signal indicating whether the _Load Ramp_ is at the end of signal generation.
            at_start:
                $ref: '#/definitions/OutPort'
                description: A Boolean signal indicating whether the _Load Ramp_ is at the start of signal generation.
        type: object
    LoadRampParameters:
        description: Parameters for the _Load Ramp_ component.
        properties:
            sampler:
                $ref: '#/definitions/SamplerParameters'
                description: Parameters for the _Sampler_.
            steps:
                items:
                    $ref: '#/definitions/LoadRampParametersStep'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - steps
        type: object
    LoadRampParametersStep:
        properties:
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
                description: This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied.
            duration:
                description: |+
                    Duration for which the step is active.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            target_accept_percentage:
                description: |+
                    The value of the step.

                format: double
                maximum: 100
                minimum: 0
                type: number
                x-go-tag-validate: gte=0,lte=100
        required:
            - duration
        type: object
    LoadScheduler:
        description: |-
            :::info

            See also [_Load Scheduler_ overview](/concepts/scheduler/load-scheduler.md).

            :::

            To make scheduling decisions the Flows are mapped into Workloads by providing match rules.
            A workload determines the priority and cost of admitting each Flow that belongs to it.
            Scheduling of Flows is based on Weighted Fair Queuing principles.

            The signal at port `load_multiplier` determines the fraction of incoming tokens that get admitted. The signals gets acted on once every 10 seconds.
        properties:
            dry_run:
                description: |-
                    Decides whether to run the load scheduler in dry-run mode. In dry run mode the scheduler acts as pass through to all flow and does not queue flows.
                    It is useful for observing the behavior of load scheduler without disrupting any real traffic.
                type: boolean
            dry_run_config_key:
                description: Configuration key for setting dry run mode through dynamic configuration.
                type: string
            in_ports:
                $ref: '#/definitions/LoadSchedulerIns'
                description: |+
                    Input ports for the LoadScheduler component.

                x-go-tag-validate: required
            out_ports:
                $ref: '#/definitions/LoadSchedulerOuts'
                description: Output ports for the LoadScheduler component.
            parameters:
                $ref: '#/definitions/LoadSchedulerParameters'
                x-go-tag-validate: required
        title: _Load Scheduler_ creates a queue for flows in front of a service to provide active service protection
        type: object
    LoadSchedulerIns:
        description: Input for the LoadScheduler component.
        properties:
            load_multiplier:
                $ref: '#/definitions/InPort'
                description: |-
                    Load multiplier is proportion of incoming
                    token rate that needs to be accepted. The signal gets updated once every 10 seconds.
        type: object
    LoadSchedulerOuts:
        description: Output for the LoadScheduler component.
        properties:
            observed_load_multiplier:
                $ref: '#/definitions/OutPort'
                description: Observed load multiplier is the proportion of incoming token rate that is being accepted. The signal gets updated once every 10 seconds.
        type: object
    LoadSchedulerParameters:
        properties:
            scheduler:
                $ref: '#/definitions/Scheduler'
                description: |-
                    Configuration of Weighted Fair Queuing-based workload scheduler.

                    Contains configuration of per-agent scheduler
            selectors:
                description: |+
                    Selectors for the component.

                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
            workload_latency_based_tokens:
                default: false
                description: |+
                    Automatically estimate the size of flows within each workload, based on
                    historical latency. Each workload's `tokens` will be set to average
                    latency of flows in that workload during the last few seconds (exact duration
                    of this average can change).
                    This setting is useful in concurrency limiting use-case, where the
                    concurrency is calculated as `(avg. latency \* in-flight flows)` (Little's Law).

                    The value of tokens estimated takes a lower precedence
                    than the value of `tokens` specified in the workload definition
                    and `tokens` explicitly specified in the flow labels.

                type: boolean
                x-go-tag-default: "false"
        required:
            - selectors
        title: Parameters for _Load Scheduler_ component
        type: object
    MatchExpression:
        description: |-
            MatchExpression has multiple variants, exactly one should be set.

            Example:
            ```yaml
            all:
              of:
                - label_exists: foo
                - label_equals:
                    label: app
                    value: frobnicator
            ```
        properties:
            all:
                $ref: '#/definitions/MatchExpressionList'
                description: The expression is true when all sub expressions are true.
            any:
                $ref: '#/definitions/MatchExpressionList'
                description: The expression is true when any sub expression is true.
            label_equals:
                $ref: '#/definitions/EqualsMatchExpression'
                description: The expression is true when label value equals given value.
            label_exists:
                description: The expression is true when label with given name exists.
                type: string
            label_matches:
                $ref: '#/definitions/MatchesMatchExpression'
                description: The expression is true when label matches given regular expression.
            not:
                $ref: '#/definitions/MatchExpression'
                description: The expression negates the result of sub expression.
        type: object
    MatchExpressionList:
        description: 'for example, `{any: {of: [expr1, expr2]}}`.'
        properties:
            of:
                description: List of sub expressions of the match expression.
                items:
                    $ref: '#/definitions/MatchExpression'
                    type: object
                type: array
        title: List of MatchExpressions that is used for all or any matching
        type: object
    MatchesMatchExpression:
        description: Label selector expression of the form `label matches regex`.
        properties:
            label:
                description: |+
                    Name of the label to match the regular expression.

                type: string
                x-go-tag-validate: required
            regex:
                description: |+
                    Regular expression that should match the label value.
                    It uses [Go's regular expression syntax](https://github.com/google/re2/wiki/Syntax).

                type: string
                x-go-tag-validate: required
        required:
            - label
            - regex
        type: object
    Max:
        description: 'Max: output = max([]inputs).'
        properties:
            in_ports:
                $ref: '#/definitions/MaxIns'
                description: Input ports for the Max component.
            out_ports:
                $ref: '#/definitions/MaxOuts'
                description: Output ports for the Max component.
        title: Takes a list of input signals and emits the signal with the maximum value
        type: object
    MaxIns:
        description: Inputs for the Max component.
        properties:
            inputs:
                description: |+
                    Array of input signals.

                items:
                    $ref: '#/definitions/InPort'
                    type: object
                type: array
                x-go-tag-validate: dive
        type: object
    MaxOuts:
        description: Output for the Max component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Signal with maximum value as an output signal.
        type: object
    Min:
        description: |-
            Takes an array of input signals and emits the signal with the minimum value
            Min: output = min([]inputs).
        properties:
            in_ports:
                $ref: '#/definitions/MinIns'
                description: Input ports for the Min component.
            out_ports:
                $ref: '#/definitions/MinOuts'
                description: Output ports for the Min component.
        type: object
    MinIns:
        description: Inputs for the Min component.
        properties:
            inputs:
                description: |+
                    Array of input signals.

                items:
                    $ref: '#/definitions/InPort'
                    type: object
                type: array
                x-go-tag-validate: dive
        type: object
    MinOuts:
        description: Output ports for the Min component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Signal with minimum value as an output signal.
        type: object
    NestedCircuit:
        description: Nested circuit defines a sub-circuit as a high-level component. It consists of a list of components and a map of input and output ports.
        properties:
            components:
                description: |+
                    List of components in the nested circuit.

                items:
                    $ref: '#/definitions/Component'
                    type: object
                type: array
                x-go-tag-validate: dive
            in_ports_map:
                additionalProperties:
                    $ref: '#/definitions/InPort'
                description: Maps input port names to input ports.
                type: object
            out_ports_map:
                additionalProperties:
                    $ref: '#/definitions/OutPort'
                description: Maps output port names to output ports.
                type: object
        type: object
    NestedSignalEgress:
        description: Nested signal egress is a special type of component that allows to extract a signal from a nested circuit.
        properties:
            in_ports:
                $ref: '#/definitions/NestedSignalEgressIns'
                description: Input ports for the NestedSignalEgress component.
            port_name:
                description: Name of the port.
                type: string
        type: object
    NestedSignalEgressIns:
        description: Inputs for the NestedSignalEgress component.
        properties:
            signal:
                $ref: '#/definitions/InPort'
                description: Egress signal.
        type: object
    NestedSignalIngress:
        description: Nested signal ingress is a special type of component that allows to inject a signal into a nested circuit.
        properties:
            out_ports:
                $ref: '#/definitions/NestedSignalIngressOuts'
                description: Output ports for the NestedSignalIngress component.
            port_name:
                description: Name of the port.
                type: string
        type: object
    NestedSignalIngressOuts:
        description: Outputs for the NestedSignalIngress component.
        properties:
            signal:
                $ref: '#/definitions/OutPort'
                description: Ingress signal.
        type: object
    OkHttpResponse:
        description: HTTP attributes for an OK response.
        properties:
            dynamic_metadata:
                type: object
            headers:
                additionalProperties:
                    type: string
                description: HTTP entity headers in addition to the original request headers.
                type: object
        type: object
    Or:
        description: |-
            Logical OR.

            See [And component](#and) on how signals are mapped onto Boolean values.
        properties:
            in_ports:
                $ref: '#/definitions/OrIns'
                description: Input ports for the Or component.
            out_ports:
                $ref: '#/definitions/OrOuts'
                description: Output ports for the Or component.
        type: object
    OrIns:
        description: Inputs for the Or component.
        properties:
            inputs:
                description: |+
                    Array of input signals.

                items:
                    $ref: '#/definitions/InPort'
                    type: object
                type: array
                x-go-tag-validate: dive
        type: object
    OrOuts:
        description: Output ports for the Or component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: |-
                    Result of logical OR of all the input signals.

                    Will always be 0 (false), 1 (true) or invalid (unknown).
        type: object
    OutPort:
        properties:
            signal_name:
                description: Name of the outgoing Signal on the OutPort.
                type: string
        title: Components produce output for other components through OutPorts
        type: object
    OverlappingService:
        description: OverlappingService contains info about a service that overlaps with another one.
        properties:
            entities_count:
                format: int32
                type: integer
            service1:
                type: string
            service2:
                type: string
        type: object
    PIDController:
        properties:
            in_ports:
                $ref: '#/definitions/PIDControllerIns'
            out_ports:
                $ref: '#/definitions/PIDControllerOuts'
            parameters:
                $ref: '#/definitions/PIDControllerParameters'
                x-go-tag-validate: required
        title: |-
            PID Controller is a popular control mechanism for closed-loop feedback control. It takes a signal and a setpoint as inputs and uses the PID algorithm to compute proportional (proportional to the magnitude of error), integral (proportional to accumulation of error), and derivative (proportional to how fast the signal is changing) terms which are summed up to get a desired output.
            <!-- vale off -->
            $$
            error = setpoint - signal \\
            integral_i = integral_{i-1} + k_i \cdot error \\
            output_i = k_p \cdot error + k_d \cdot (signal_i - signal_{i-1}) + integral_i
            $$
            <!-- vale on -->
        type: object
    PIDControllerIns:
        properties:
            max:
                $ref: '#/definitions/InPort'
                title: Maximum allowed output
            min:
                $ref: '#/definitions/InPort'
                title: Minimum allowed output
            setpoint:
                $ref: '#/definitions/InPort'
                title: The desired setpoint for the signal
            signal:
                $ref: '#/definitions/InPort'
                title: The signal to be controlled
        type: object
    PIDControllerOuts:
        properties:
            output:
                $ref: '#/definitions/OutPort'
                title: Output of the PID controller
        type: object
    PIDControllerParameters:
        properties:
            evaluation_interval:
                description: |-
                    The evaluation interval of the PID controller. This determines how often the PID output is computed. Defaults to the evaluation interval of the circuit.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
                type: string
            kd:
                default: 0
                description: |+
                    The derivative gain of the PID controller.

                format: double
                minimum: 0
                type: number
                x-go-tag-default: "0"
                x-go-tag-validate: gte=0
            ki:
                default: 0
                description: |+
                    The integral gain of the PID controller.

                format: double
                minimum: 0
                type: number
                x-go-tag-default: "0"
                x-go-tag-validate: gte=0
            kp:
                default: 0
                description: |+
                    The proportional gain of the PID controller.

                format: double
                minimum: 0
                type: number
                x-go-tag-default: "0"
                x-go-tag-validate: gte=0
            reset_after_invalid_samples:
                default: 4
                description: |+
                    The integrator resets after the specified number of ticks if the signal or setpoint are continuously invalid. Defaults to 4 invalid samples.

                format: int32
                minimum: 1
                type: integer
                x-go-tag-default: "4"
                x-go-tag-validate: gte=1
        type: object
    PathTemplateMatcher:
        description: |-
            HTTP path will be matched against given path templates.
            If a match occurs, the value associated with the path template will be treated as a result.
            In case of multiple path templates matching, the most specific one will be chosen.
        properties:
            template_values:
                additionalProperties:
                    type: string
                description: |+
                    Template value keys are OpenAPI-inspired path templates.

                    * Static path segment `/foo` matches a path segment exactly
                    * `/{param}` matches arbitrary path segment.
                      (The parameter name is ignored and can be omitted (`{}`))
                    * The parameter must cover whole segment.
                    * Additionally, path template can end with `/*` wildcard to match
                      arbitrary number of trailing segments (0 or more).
                    * Multiple consecutive `/` are ignored, as well as trailing `/`.
                    * Parametrized path segments must come after static segments.
                    * `*`, if present, must come last.
                    * Most specific template "wins" (`/foo` over `/{}` and `/{}` over `/*`).

                    See also <https://swagger.io/specification/#path-templating-matching>

                    Example:
                    ```yaml
                    /register: register
                    "/user/{userId}": user
                    /static/*: other
                    ```

                minProperties: 1
                type: object
                x-go-tag-validate: gt=0,dive,keys,required,endkeys,required
        title: Matches HTTP Path to given path templates
        type: object
    Peer:
        description: Peer holds peer info and services.
        properties:
            address:
                type: string
            hostname:
                type: string
            services:
                additionalProperties:
                    type: string
                type: object
        type: object
    Peers:
        description: Peers holds the peer info of this peer and a mapping of address to other peers.
        properties:
            peers:
                additionalProperties:
                    $ref: '#/definitions/Peer'
                type: object
            self_peer:
                $ref: '#/definitions/Peer'
        type: object
    PeriodicDecrease:
        description: PeriodicDecrease defines a controller for scaling in based on a periodic timer.
        properties:
            period:
                description: |+
                    The period of the timer.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            scale_in_percentage:
                description: |+
                    The percentage of scale to reduce.

                format: double
                maximum: 100
                minimum: 0
                type: number
                x-go-tag-validate: required,gte=0,lte=100
        required:
            - period
            - scale_in_percentage
        type: object
    PodScaler:
        description: Component for scaling pods based on a signal.
        properties:
            dry_run:
                description: |-
                    Dry run mode ensures that no scaling is invoked by this pod scaler.
                    This is useful for observing the behavior of pod scaler without disrupting any real deployment.
                    This parameter sets the default value of dry run setting which can be overridden at runtime using dynamic configuration.
                type: boolean
            dry_run_config_key:
                description: Configuration key for overriding dry run setting through dynamic configuration.
                type: string
            in_ports:
                $ref: '#/definitions/PodScalerIns'
                description: Input ports for the PodScaler component.
            kubernetes_object_selector:
                $ref: '#/definitions/KubernetesObjectSelector'
                description: |+
                    The Kubernetes object to which this pod scaler applies.

                x-go-tag-validate: required
            out_ports:
                $ref: '#/definitions/PodScalerOuts'
                description: Output ports for the PodScaler component.
        type: object
    PodScalerIns:
        description: Inputs for the PodScaler component.
        properties:
            replicas:
                $ref: '#/definitions/InPort'
                title: The number of replicas to configure for the Kubernetes resource
        type: object
    PodScalerOuts:
        description: Outputs for the PodScaler component.
        properties:
            actual_replicas:
                $ref: '#/definitions/OutPort'
                description: The number of replicas that are currently running.
            configured_replicas:
                $ref: '#/definitions/OutPort'
                description: The number of replicas that are desired.
        type: object
    Policies:
        description: Policies is a collection of Policies.
        properties:
            policies:
                additionalProperties:
                    $ref: '#/definitions/GetPolicyResponse'
                type: object
        type: object
    Policy:
        description: |-
            Policy expresses observability-driven control logic.

            :::info

            See also [Policy overview](/concepts/advanced/policy.md).

            :::

            Policy specification contains a circuit that defines the controller logic and resources that need to be setup.
        properties:
            circuit:
                $ref: '#/definitions/Circuit'
                description: Defines the control-loop logic of the policy.
            resources:
                $ref: '#/definitions/Resources'
                description: Resources (such as Flux Meters, Classifiers) to setup.
        type: object
    PolicyWrapper:
        properties:
            common_attributes:
                $ref: '#/definitions/CommonAttributes'
                title: CommonAttributes
            policy:
                $ref: '#/definitions/Policy'
                title: Policy
            source:
                $ref: '#/definitions/PolicyWrapperSource'
                title: Where did the policy came from
        type: object
    PolicyWrapperSource:
        default: UNKNOWN
        enum:
            - UNKNOWN
            - ETCD
            - K8S
        type: string
    PolicyWrappers:
        properties:
            policy_wrappers:
                additionalProperties:
                    $ref: '#/definitions/PolicyWrapper'
                type: object
        type: object
    PreviewFlowLabelsControllerResponse:
        properties:
            response:
                $ref: '#/definitions/PreviewFlowLabelsResponse'
        type: object
    PreviewFlowLabelsResponse:
        properties:
            samples:
                items:
                    $ref: '#/definitions/PreviewFlowLabelsResponseFlowLabels'
                    type: object
                type: array
        type: object
    PreviewFlowLabelsResponseFlowLabels:
        properties:
            labels:
                additionalProperties:
                    type: string
                type: object
        type: object
    PreviewHTTPRequestsControllerResponse:
        properties:
            response:
                $ref: '#/definitions/PreviewHTTPRequestsResponse'
        type: object
    PreviewHTTPRequestsResponse:
        properties:
            samples:
                items:
                    type: object
                type: array
        type: object
    PreviewRequest:
        properties:
            control_point:
                description: Control point to preview.
                type: string
            label_matcher:
                $ref: '#/definitions/LabelMatcher'
                description: Flow labels to match. Optional parameter for advanced filtering.
            samples:
                description: Number of samples to collect.
                format: int64
                type: string
            service:
                description: Service to preview.
                type: string
        type: object
    ProcessInfo:
        properties:
            extensions:
                items:
                    type: string
                type: array
            start_time:
                format: date-time
                type: string
            uptime:
                type: string
        type: object
    PromQL:
        properties:
            evaluation_interval:
                default: 10s
                description: |+
                    Describes the interval between successive evaluations of the Prometheus query.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 10s
            out_ports:
                $ref: '#/definitions/PromQLOuts'
                description: Output ports for the PromQL component.
            query_string:
                description: |-
                    Describes the [PromQL](https://prometheus.io/docs/prometheus/latest/querying/basics/) query to be run.

                    :::note

                    The query must return a single value either as a scalar or as a vector with a single element.

                    :::

                    :::info Usage with Flux Meter

                    [Flux Meter](/concepts/flux-meter.md) metrics can be queried using PromQL. Flux Meter defines histogram type of metrics in Prometheus.
                    Therefore, one can refer to `flux_meter_sum`, `flux_meter_count` and `flux_meter_bucket`.
                    The particular Flux Meter can be identified with the `flux_meter_name` label.
                    There are additional labels available on a Flux Meter such as `valid`, `flow_status`, `http_status_code` and `decision_type`.

                    :::

                    :::info Usage with OpenTelemetry Metrics

                    Aperture supports OpenTelemetry metrics. See [reference](/integrations/metrics/metrics.md) for more details.

                    :::
                type: string
        title: Component that runs a Prometheus query periodically and returns the result as an output signal
        type: object
    PromQLOuts:
        description: Output for the PromQL component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: The result of the Prometheus query as an output signal.
        type: object
    PulseGenerator:
        description: Generates 0 and 1 in turns.
        properties:
            false_for:
                default: 5s
                description: |+
                    Emitting 0 for the `false_for` duration.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 5s
            out_ports:
                $ref: '#/definitions/PulseGeneratorOuts'
                description: Output ports for the PulseGenerator component.
            true_for:
                default: 5s
                description: |+
                    Emitting 1 for the `true_for` duration.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 5s
        type: object
    PulseGeneratorOuts:
        description: Outputs for the PulseGenerator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
        type: object
    Query:
        description: Query components that are query databases such as Prometheus.
        properties:
            promql:
                $ref: '#/definitions/PromQL'
                description: Periodically runs a Prometheus query in the background and emits the result.
        type: object
    QuotaScheduler:
        description: Schedules the traffic based on token-bucket based quotas.
        properties:
            in_ports:
                $ref: '#/definitions/RateLimiterIns'
                x-go-tag-validate: required
            rate_limiter:
                $ref: '#/definitions/RateLimiterParameters'
                x-go-tag-validate: required
            scheduler:
                $ref: '#/definitions/Scheduler'
            selectors:
                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - selectors
        type: object
    RateLimiter:
        description: |-
            :::info

            See also [_Rate Limiter_ overview](/concepts/rate-limiter.md).

            :::

            RateLimiting is done on per-label-value (`label_key`) basis and it uses the _Token Bucket Algorithm_.
        properties:
            in_ports:
                $ref: '#/definitions/RateLimiterIns'
                title: Input ports for the RateLimiter component
                x-go-tag-validate: required
            parameters:
                $ref: '#/definitions/RateLimiterParameters'
                title: Parameters for the RateLimiter component
                x-go-tag-validate: required
            request_parameters:
                $ref: '#/definitions/RateLimiterRequestParameters'
                title: RequestParameters for the component
            selectors:
                description: |+
                    Selectors for the component.

                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - selectors
        title: Limits the traffic on a control point to specified rate
        type: object
    RateLimiterIns:
        properties:
            bucket_capacity:
                $ref: '#/definitions/InPort'
                description: |+
                    Capacity of the bucket to allow for bursty traffic. The bucket is given a chance to empty out before the filling starts.

                x-go-tag-validate: required
            fill_amount:
                $ref: '#/definitions/InPort'
                description: |+
                    Number of tokens to fill within an `interval`.

                x-go-tag-validate: required
            pass_through:
                $ref: '#/definitions/InPort'
                title: PassThrough port determines whether all requests
        title: Inputs for the RateLimiter component
        type: object
    RateLimiterParameters:
        properties:
            continuous_fill:
                default: true
                description: |+
                    Continuous fill determines whether the token bucket should be filled
                    continuously or only on discrete intervals.

                type: boolean
                x-go-tag-default: "true"
            interval:
                description: |+
                    Interval defines the time interval in which the token bucket
                    will fill tokens specified by `fill_amount` signal.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            label_key:
                description: |-
                    Specifies which label the rate limiter should be keyed by.

                    Rate limiting is done independently for each value of the
                    [label](/concepts/flow-label.md) with given key.
                    For example, to give each user a separate limit, assuming you
                    have a _user_ flow
                    label set up, set `label_key: "user"`.
                    If no label key is specified, then all requests matching the
                    selectors will be rate limited based on the global bucket.
                type: string
            lazy_sync:
                $ref: '#/definitions/RateLimiterParametersLazySync'
                title: Configuration of lazy-syncing behavior of rate limiter
            max_idle_time:
                default: 7200s
                description: |+
                    Max idle time before token bucket state for a label is removed.
                    If set to 0, the state is never removed.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 7200s
        required:
            - interval
        type: object
    RateLimiterParametersLazySync:
        properties:
            enabled:
                default: false
                title: Enables lazy sync
                type: boolean
                x-go-tag-default: "false"
            num_sync:
                default: 4
                description: |+
                    Number of times to lazy sync within the `interval`.

                exclusiveMinimum: true
                format: int64
                minimum: 0
                type: integer
                x-go-tag-default: "4"
                x-go-tag-validate: gt=0
        type: object
    RateLimiterRequestParameters:
        properties:
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
                description: This field allows you to override the default HTTP status code (`429 Too Many Requests`) that is returned when a request is denied.
            tokens_label_key:
                description: |-
                    Flow label key that will be used to override the number of tokens
                    for this request.
                    This is an optional parameter and takes highest precedence
                    when assigning tokens to a request.
                    The label value must be a valid number.
                type: string
        type: object
    Rego:
        description: |-
            Rego define a set of labels that are extracted after evaluating a Rego module.

            :::info

            You can use the [live-preview](/concepts/classifier.md#live-previewing-requests) feature to first preview the input to the classifier before writing the labeling logic.

            :::

            Example of Rego module which also disables telemetry visibility of label:
            ```yaml
            rego:
              labels:
                user:
                  telemetry: false
              module: |
                package user_from_cookie
                cookies := split(input.attributes.request.http.headers.cookie, "; ")
                user := user {
                    cookie := cookies[_]
                    startswith(cookie, "session=")
                    session := substring(cookie, count("session="), -1)
                    parts := split(session, ".")
                    object := json.unmarshal(base64url.decode(parts[0]))
                    user := object.user
                }
            ```
        properties:
            labels:
                additionalProperties:
                    $ref: '#/definitions/RegoLabelProperties'
                description: |+
                    A map of {key, value} pairs mapping from
                    [flow label](/concepts/flow-label.md) keys to queries that define
                    how to extract and propagate flow labels with that key.
                    The name of the label maps to a variable in the Rego module. It maps to `data.<package>.<label>` variable.

                minProperties: 1
                type: object
                x-go-tag-validate: required,gt=0,dive,keys,required,endkeys,required
            module:
                description: |+
                    Source code of the Rego module.

                    :::note

                    Must include a "package" declaration.

                    :::

                type: string
                x-go-tag-validate: required
        required:
            - labels
            - module
        type: object
    RegoLabelProperties:
        properties:
            telemetry:
                default: true
                description: |+
                    :::note

                    The flow label is always accessible in Aperture Policies regardless of this setting.

                    :::

                    :::caution

                    When using [FluxNinja extension](/reference/fluxninja.md), telemetry enabled
                    labels are sent to Aperture Cloud for observability. Telemetry should
                    be disabled for sensitive labels.

                    :::

                title: |-
                    Decides if the created flow label should be available as an attribute in OLAP telemetry and
                    propagated in [baggage](/concepts/flow-label.md#baggage)
                type: boolean
                x-go-tag-default: "true"
        type: object
    ReportRequest:
        properties:
            agent_group:
                type: string
            all_statuses:
                $ref: '#/definitions/GroupStatus'
            auto_scale_kubernetes_control_points:
                $ref: '#/definitions/AutoScaleKubernetesControlPoints'
            controller_info:
                $ref: '#/definitions/ControllerInfo'
            flow_control_points:
                $ref: '#/definitions/FlowControlPoints'
            host_info:
                $ref: '#/definitions/HostInfo'
            installation_mode:
                type: string
            peers:
                $ref: '#/definitions/Peers'
            policies:
                $ref: '#/definitions/PolicyWrappers'
            process_info:
                $ref: '#/definitions/ProcessInfo'
            services_list:
                $ref: '#/definitions/ServicesList'
            version_info:
                $ref: '#/definitions/VersionInfo'
        type: object
    ReportResponse:
        description: ReportResponse is empty for now.
        type: object
    Request:
        properties:
            id:
                description: |-
                    Id of the request, this should be unique per client connection. First
                    request id on the connection should be equal to nextID from the Hello
                    message.
                format: uint64
                type: string
            payload:
                $ref: '#/definitions/googleprotobufAny'
                description: Request payload. The method on the callee will be dispatched by request's type.
            timeout:
                description: |-
                    Mandatory timeout for processing request. Timeout is handled on
                    caller-side. After it passes, caller is no longer interested in a response,
                    and callee can forget about the request.
                type: string
        type: object
    Resources:
        description: |-
            :::info

            See also [Resources overview](/concepts/advanced/policy.md).

            :::
        properties:
            flow_control:
                $ref: '#/definitions/FlowControlResources'
                description: FlowControlResources are resources that are provided by flow control integration.
            infra_meters:
                additionalProperties:
                    $ref: '#/definitions/InfraMeter'
                description: |-
                    _Infra Meters_ configure custom metrics OpenTelemetry collector pipelines, which will
                    receive and process telemetry at the agents and send metrics to the configured Prometheus.
                    Key in this map refers to OTel pipeline name. Prefixing pipeline name with `metrics/`
                    is optional, as all the components and pipeline names would be normalized.

                    Example:

                    ```yaml
                    infra_meters:
                      rabbitmq:
                        agent_group: default
                        per_agent_group: true
                        processors:
                    	     batch:
                    	       send_batch_size: 10
                    	       timeout: 10s
                    	   receivers:
                    	     rabbitmq:
                    	       collection_interval: 10s
                            endpoint: http://<rabbitmq-svc-fqdn>:15672
                            password: secretpassword
                            username: admin

                    ```

                    :::caution

                    Validate the OTel configuration before applying it to the
                    production cluster.
                    Incorrect configuration will get rejected at the agents and might cause
                    shutdown of the agent(s).

                    :::
                type: object
            telemetry_collectors:
                description: |-
                    TelemetryCollector configures OpenTelemetry collector integration.
                    Deprecated: v3.0.0. Use `infra_meters` instead.
                items:
                    $ref: '#/definitions/TelemetryCollector'
                    type: object
                type: array
        title: Resources that need to be setup for the policy to function
        type: object
    Response:
        properties:
            error:
                $ref: '#/definitions/googlerpcStatus'
            id:
                format: uint64
                type: string
            payload:
                description: Payload is a message of a type implied by request kind.
                format: byte
                type: string
        type: object
    Rule:
        description: |-
            Example of a JSON extractor:
            ```yaml
            extractor:
              json:
                from: request.http.body
                pointer: /user/name
            ```
        properties:
            extractor:
                $ref: '#/definitions/Extractor'
                description: High-level declarative extractor.
            telemetry:
                default: true
                description: |+
                    :::note

                    The flow label is always accessible in Aperture Policies regardless of this setting.

                    :::

                    :::caution

                    When using [FluxNinja extension](/reference/fluxninja.md), telemetry enabled
                    labels are sent to Aperture Cloud for observability. Telemetry should be
                    disabled for sensitive labels.

                    :::

                title: |-
                    Decides if the created flow label should be available as an attribute in OLAP telemetry and
                    propagated in [baggage](/concepts/flow-label.md#baggage)
                type: boolean
                x-go-tag-default: "true"
        title: Rule describes a single classification Rule
        type: object
    SMA:
        description: Simple Moving Average (SMA) is a type of moving average that computes the average of a fixed number of signal readings.
        properties:
            in_ports:
                $ref: '#/definitions/SMAIns'
                description: Input ports for the SMA component.
            out_ports:
                $ref: '#/definitions/SMAOuts'
                description: Output ports for the SMA component.
            parameters:
                $ref: '#/definitions/SMAParameters'
                description: |+
                    Parameters for the SMA component.

                x-go-tag-validate: required
        type: object
    SMAIns:
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: Signal to be used for the moving average computation.
        type: object
    SMAOuts:
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Computed moving average.
        type: object
    SMAParameters:
        properties:
            sma_window:
                description: |+
                    Window of time over which the moving average is computed.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            valid_during_warmup:
                default: false
                description: |+
                    Whether the output is valid during the warm-up stage.

                type: boolean
                x-go-tag-default: "false"
        required:
            - sma_window
        type: object
    Sampler:
        description: |-
            _Sampler_ is a component that regulates the load at a
            [_Control Point_](/concepts/selector.md/#control-point) by allowing only a specified percentage of
            flows at random or by sticky sessions.

            :::info

            See also [_Sampler_ overview](/concepts/load-ramp.md#sampler).

            :::
        properties:
            in_ports:
                $ref: '#/definitions/SamplerIns'
                description: Input ports for the _Sampler_.
            parameters:
                $ref: '#/definitions/SamplerParameters'
                description: Parameters for the _Sampler_.
            pass_through_label_values:
                description: Specify certain label values to be always accepted by this _Sampler_ regardless of accept percentage.
                items:
                    type: string
                type: array
            pass_through_label_values_config_key:
                description: Configuration key for setting pass through label values through dynamic configuration.
                type: string
        type: object
    SamplerIns:
        properties:
            accept_percentage:
                $ref: '#/definitions/InPort'
                description: The percentage of requests to accept.
        type: object
    SamplerParameters:
        properties:
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
                description: This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied.
            label_key:
                description: |-
                    The flow label key for identifying sessions.
                    - When label key is specified, _Sampler_ acts as a sticky filter.
                      The series of flows with the same value of label key get the same
                      decision provided that the `accept_percentage` is same or higher.
                    - When label key is not specified, _Sampler_ acts as a stateless filter.
                      Percentage of flows are selected randomly for rejection.
                type: string
            ramp_mode:
                default: false
                description: |+
                    Ramp component can accept flows with `ramp_mode` flag set.

                type: boolean
                x-go-tag-default: "false"
            selectors:
                description: |+
                    Selectors for the component.

                items:
                    $ref: '#/definitions/Selector'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - selectors
        type: object
    ScaleInController:
        properties:
            alerter:
                $ref: '#/definitions/AlerterParameters'
                description: |+
                    Configuration for embedded Alerter.

                x-go-tag-validate: required
            controller:
                $ref: '#/definitions/ScaleInControllerController'
                title: Controller
                x-go-tag-validate: required
        type: object
    ScaleInControllerController:
        properties:
            gradient:
                $ref: '#/definitions/DecreasingGradient'
            periodic:
                $ref: '#/definitions/PeriodicDecrease'
        type: object
    ScaleOutController:
        properties:
            alerter:
                $ref: '#/definitions/AlerterParameters'
                description: |+
                    Configuration for embedded Alerter.

                x-go-tag-validate: required
            controller:
                $ref: '#/definitions/ScaleOutControllerController'
                title: Controller
                x-go-tag-validate: required
        type: object
    ScaleOutControllerController:
        properties:
            gradient:
                $ref: '#/definitions/IncreasingGradient'
        type: object
    Scheduler:
        description: |-
            :::note

            Each Agent instantiates an independent copy of the scheduler, but output
            signals for accepted and incoming token rate are aggregated across all agents.

            :::
        properties:
            decision_deadline_margin:
                default: 0.01s
                description: |+
                    Decision deadline margin is the amount of time that the scheduler will
                    subtract from the request deadline to determine the deadline for the
                    decision. This is to ensure that the scheduler has enough time to
                    make a decision before the request deadline happens, accounting for
                    processing delays.
                    The request deadline is based on the
                    [gRPC deadline](https://grpc.io/blog/deadlines) or the
                    [`grpc-timeout` HTTP header](https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests).

                    Fail-open logic is use for flow control APIs, so if the gRPC deadline
                    reaches, the flow will end up being unconditionally allowed while
                    it is still waiting on the scheduler.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-default: 0.01s
            default_workload_parameters:
                $ref: '#/definitions/SchedulerWorkloadParameters'
                description: Parameters to be used if none of workloads specified in `workloads` match.
            denied_response_status_code:
                $ref: '#/definitions/StatusCode'
                description: This field allows you to override the default HTTP status code (`503 Service Unavailable`) that is returned when a request is denied.
            priority_label_key:
                description: |-
                    * Key for a flow label that can be used to override the default priority for this flow.
                    * The value associated with this key must be a valid number. Higher numbers means higher priority.
                    * If this parameter is not provided, the priority for the flow will be determined by the matched workload's priority.
                type: string
            tokens_label_key:
                description: |-
                    * Key for a flow label that can be used to override the default number of tokens for this request.
                    * The value associated with this key must be a valid number.
                    * If this parameter is not provided, the number of tokens for the flow will be determined by the matched workload's token count.
                type: string
            workloads:
                description: |+
                    List of workloads to be used in scheduler.

                    Categorizing flows into workloads
                    allows for load throttling to be "intelligent" instead of queueing flows in an arbitrary order.
                    There are two aspects of this "intelligence":
                    * Scheduler can more precisely calculate concurrency if it understands
                      that flows belonging to different classes have different weights (for example, insert queries compared to select queries).
                    * Setting different priorities to different workloads lets the scheduler
                      avoid dropping important traffic during overload.

                    Each workload in this list specifies also a matcher that is used to
                    determine which flow will be categorized into which workload.
                    In case of multiple matching workloads, the first matching one will be used.
                    If none of workloads match, `default_workload` will be used.

                    :::info

                    See also [workload definition in the concepts
                    section](/concepts/scheduler/scheduler.md#workload).

                    :::

                items:
                    $ref: '#/definitions/SchedulerWorkload'
                    type: object
                type: array
                x-go-tag-validate: dive
        title: Weighted Fair Queuing-based workload scheduler
        type: object
    SchedulerWorkload:
        description: Workload defines a class of flows that preferably have similar properties such as response latency and desired priority.
        properties:
            label_matcher:
                $ref: '#/definitions/LabelMatcher'
                description: |+
                    Label Matcher to select a Workload based on
                    [flow labels](/concepts/flow-label.md).

                x-go-tag-validate: required
            name:
                description: Name of the workload.
                type: string
            parameters:
                $ref: '#/definitions/SchedulerWorkloadParameters'
                description: Parameters associated with flows matching the label matcher.
        type: object
    SchedulerWorkloadParameters:
        description: Parameters such as priority and tokens that are applicable to flows within a workload.
        properties:
            priority:
                default: 1
                description: |+
                    $$
                    inverted\_priority = {\frac {1} {priority}}
                    $$

                    $$
                    virtual\_finish\_time = virtual\_time + \left(tokens \cdot inverted\_priority\right)
                    $$

                exclusiveMinimum: true
                format: double
                minimum: 0
                title: |-
                    Describes priority level of the flows within the workload.
                    Priority level is unbounded and can be any positive number.
                    Higher numbers means higher priority level.
                    The following formula is used to determine the position of a flow in the queue based on virtual finish time:
                type: number
                x-go-tag-default: "1.0"
                x-go-tag-validate: gt=0
            queue_timeout:
                description: |-
                    Timeout for the flow in the workload.
                    If timeout is provided on the Check call as well, the minimum of the two is picked.
                    If this override is not provided, the timeout provided in the check call is used.
                    0 timeout value implies that the request will not wait in the queue and will be accepted or dropped immediately.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.
                type: string
            tokens:
                default: 1
                description: |+
                    Tokens determines the cost of admitting a single flow in the workload,
                    which is typically defined as milliseconds of flow latency (time to response or duration of a feature) or
                    simply equal to 1 if the resource being accessed is constrained by the
                    number of flows (3rd party rate limiters).
                    This override is applicable only if tokens for the flow aren't specified
                    in the flow labels.

                format: double
                minimum: 0
                type: number
                x-go-tag-default: "1"
                x-go-tag-validate: gte=0
        type: object
    Selector:
        description: |-
            Selects flows based on control point, flow labels, agent group and the service
            that the flow control component
            will operate on.

            :::info

            See also [Selector overview](/concepts/selector.md).

            :::

            Example:
            ```yaml
            control_point: ingress
            label_matcher:
              match_labels:
                user_tier: gold
              match_expressions:
                - key: query
                  operator: In
                  values:
                    - insert
                    - delete
              expression:
                label_matches:
                    - label: user_agent
                      regex: ^(?!.*Chrome).*Safari
            ```
        properties:
            agent_group:
                default: default
                description: |+
                    [_Agent Group_](/concepts/selector.md#agent-group) this
                    selector applies to.

                    :::info

                    Agent Groups are used to scope policies to a subset of agents connected to the same controller.
                    The agents within an agent group receive exact same policy configuration and
                    form a peer to peer cluster to constantly share state.

                    :::

                type: string
                x-go-tag-default: default
            control_point:
                description: |+
                    [Control Point](/concepts/control-point.md)
                    identifies location within services where policies can act on flows.
                    For an SDK based insertion,
                    a _Control Point_ can represent a particular feature or execution
                    block within a service. In case of service mesh or middleware insertion, a
                    _Control Point_ can identify ingress or egress calls or distinct listeners
                    or filter chains.

                type: string
                x-go-tag-validate: required
            label_matcher:
                $ref: '#/definitions/LabelMatcher'
                description: |-
                    [Label Matcher](/concepts/selector.md#label-matcher)
                    can be used to match flows based on flow labels.
            service:
                default: any
                description: |+
                    The Fully Qualified Domain Name of the
                    [service](/concepts/selector.md) to select.

                    In Kubernetes, this is the FQDN of the Service object.

                    :::info

                    `any` matches all services.

                    :::

                    :::info

                    An entity (for example, Kubernetes pod) might belong to multiple services.

                    :::

                type: string
                x-go-tag-default: any
        required:
            - control_point
        type: object
    ServerToClient:
        properties:
            cancel_id:
                description: |-
                    Cancels in-flight request.

                    After cancellation, the response is not expected to be received, but
                    might happen that it will be received. If so, it should be ignored.
                format: uint64
                type: string
            request:
                $ref: '#/definitions/Request'
                description: |-
                    Make a request to client. Expect AgentToController message in the
                    future containing Response with the same id.
        type: object
    Service:
        description: |-
            Service contains information about single service discovered in agent group by a
            particular agent.
        properties:
            entities_count:
                format: int32
                type: integer
            name:
                type: string
        type: object
    ServicesList:
        properties:
            overlapping_services:
                items:
                    $ref: '#/definitions/OverlappingService'
                    type: object
                type: array
            services:
                items:
                    $ref: '#/definitions/Service'
                    type: object
                type: array
        type: object
    SignalGenerator:
        description: |-
            The _Signal Generator_ component generates a smooth and continuous signal
            by following a sequence of specified steps. Each step has two parameters:
            - `target_output`: The desired output value at the end of the step.
            - `duration`: The time it takes for the signal to change linearly from the
              previous step's `target_output` to the current step's `target_output`.

            The output signal starts at the `target_output` of the first step and
            changes linearly between steps based on their `duration`. The _Signal
            Generator_ can be controlled to move forwards, backwards, or reset to the
            beginning based on input signals.
        properties:
            in_ports:
                $ref: '#/definitions/SignalGeneratorIns'
            out_ports:
                $ref: '#/definitions/SignalGeneratorOuts'
            parameters:
                $ref: '#/definitions/SignalGeneratorParameters'
                description: |+
                    Parameters for the _Signal Generator_ component.

                x-go-tag-validate: required
        type: object
    SignalGeneratorIns:
        description: Inputs for the _Signal Generator_ component.
        properties:
            backward:
                $ref: '#/definitions/InPort'
                description: Whether to progress the _Signal Generator_ towards the previous step.
            forward:
                $ref: '#/definitions/InPort'
                description: Whether to progress the _Signal Generator_ towards the next step.
            reset:
                $ref: '#/definitions/InPort'
                description: Whether to reset the _Signal Generator_ to the first step.
        type: object
    SignalGeneratorOuts:
        description: Outputs for the _Signal Generator_ component.
        properties:
            at_end:
                $ref: '#/definitions/OutPort'
                description: A Boolean signal indicating whether the _Signal Generator_ is at the end of signal generation.
            at_start:
                $ref: '#/definitions/OutPort'
                description: A Boolean signal indicating whether the _Signal Generator_ is at the start of signal generation.
            output:
                $ref: '#/definitions/OutPort'
                description: The generated signal.
        type: object
    SignalGeneratorParameters:
        description: Parameters for the _Signal Generator_ component.
        properties:
            steps:
                items:
                    $ref: '#/definitions/SignalGeneratorParametersStep'
                    type: object
                minItems: 1
                type: array
                x-go-tag-validate: required,gt=0,dive
        required:
            - steps
        type: object
    SignalGeneratorParametersStep:
        properties:
            duration:
                description: |+
                    Duration for which the step is active.
                    This field employs the [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json) JSON representation from Protocol Buffers. The format accommodates fractional seconds up to nine digits after the decimal point, offering nanosecond precision. Every duration value must be suffixed with an "s" to indicate 'seconds.' For example, a value of "10s" would signify a duration of 10 seconds.

                type: string
                x-go-tag-validate: required
            target_output:
                $ref: '#/definitions/ConstantSignal'
                description: The value of the step.
        required:
            - duration
        type: object
    SocketAddress:
        properties:
            address:
                description: The address for this socket.
                type: string
            port:
                description: The port for this socket.
                format: int64
                type: integer
            protocol:
                $ref: '#/definitions/SocketAddressProtocol'
        type: object
    SocketAddressProtocol:
        default: TCP
        enum:
            - TCP
            - UDP
        type: string
    Status:
        description: Status holds details about a status that can be reported to the registry.
        properties:
            error:
                $ref: '#/definitions/StatusError'
            message:
                $ref: '#/definitions/googleprotobufAny'
            timestamp:
                format: date-time
                type: string
        type: object
    StatusCode:
        default: Empty
        description: '- Empty: Empty - This code not part of the HTTP status code specification, but it is needed for `enum` type.'
        enum:
            - Empty
            - Continue
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultiStatus
            - AlreadyReported
            - IMUsed
            - MultipleChoices
            - MovedPermanently
            - Found
            - SeeOther
            - NotModified
            - UseProxy
            - TemporaryRedirect
            - PermanentRedirect
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - PayloadTooLarge
            - URITooLong
            - UnsupportedMediaType
            - RangeNotSatisfiable
            - ExpectationFailed
            - MisdirectedRequest
            - UnprocessableEntity
            - Locked
            - FailedDependency
            - UpgradeRequired
            - PreconditionRequired
            - TooManyRequests
            - RequestHeaderFieldsTooLarge
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HTTPVersionNotSupported
            - VariantAlsoNegotiates
            - InsufficientStorage
            - LoopDetected
            - NotExtended
            - NetworkAuthenticationRequired
        title: |-
            HTTP response codes.
            For more details: https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
        type: string
    StatusError:
        description: Error holds raw error message and its cause in a nested field.
        properties:
            message:
                type: string
        type: object
    Switcher:
        description: |-
            `on_signal` will be returned if switch input is valid and not equal to 0.0 ,
             otherwise `off_signal` will be returned.
        properties:
            in_ports:
                $ref: '#/definitions/SwitcherIns'
                description: Input ports for the Switcher component.
            out_ports:
                $ref: '#/definitions/SwitcherOuts'
                description: Output ports for the Switcher component.
        title: Type of Combinator that switches between `on_signal` and `off_signal` signals based on switch input
        type: object
    SwitcherIns:
        description: Inputs for the Switcher component.
        properties:
            off_signal:
                $ref: '#/definitions/InPort'
                description: Output signal when switch is invalid or 0.0.
            on_signal:
                $ref: '#/definitions/InPort'
                description: Output signal when switch is valid and not 0.0.
            switch:
                $ref: '#/definitions/InPort'
                description: Decides whether to return `on_signal` or `off_signal`.
        type: object
    SwitcherOuts:
        description: Outputs for the Switcher component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Selected signal (`on_signal` or `off_signal`).
        type: object
    TelemetryCollector:
        properties:
            agent_group:
                default: default
                type: string
                x-go-tag-default: default
            infra_meters:
                additionalProperties:
                    $ref: '#/definitions/InfraMeter'
                description: |-
                    _Infra Meters_ configure custom metrics OpenTelemetry collector pipelines, which will
                    receive and process telemetry at the agents and send metrics to the configured Prometheus.
                    Key in this map refers to OTel pipeline name. Prefixing pipeline name with `metrics/`
                    is optional, as all the components and pipeline names would be normalized.

                    Example:

                    ```yaml
                     telemetry_collectors:
                       - agent_group: default
                         infra_meters:
                    	      rabbitmq:
                    	        processors:
                    	          batch:
                    	            send_batch_size: 10
                    	            timeout: 10s
                    	        receivers:
                    	          rabbitmq:
                    	            collection_interval: 10s
                    	            endpoint: http://<rabbitmq-svc-fqdn>:15672
                    	            password: secretpassword
                    	            username: admin
                    	        per_agent_group: true

                    ```

                    :::caution

                    Validate the OTel configuration before applying it to the
                    production cluster.
                    Incorrect configuration will get rejected at the agents and might cause
                    shutdown of the agent(s).

                    :::
                type: object
        title: |-
            TelemetryCollector defines the telemetry configuration to be synced with the agents.
            Deprecated: v3.0.0. Use `InfraMeter` instead.
            It consists of two parts:
            - Agent Group: Agent group to sync telemetry configuration with
            - Infra Meters: OTel compatible metrics pipelines
        type: object
    UnaryOperator:
        description: |-
            $$
            \text{output} = \unary_operator{\text{input}}
            $$
        properties:
            in_ports:
                $ref: '#/definitions/UnaryOperatorIns'
                description: Input ports for the UnaryOperator component.
            operator:
                description: |+
                    Unary Operator to apply.

                    The unary operator can be one of the following:
                    * `abs`: Absolute value with the sign removed.
                    * `acos`: `arccosine`, in radians.
                    * `acosh`: Inverse hyperbolic cosine.
                    * `asin`: `arcsine`, in radians.
                    * `asinh`: Inverse hyperbolic sine.
                    * `atan`: `arctangent`, in radians.
                    * `atanh`: Inverse hyperbolic tangent.
                    * `cbrt`: Cube root.
                    * `ceil`: Least integer value greater than or equal to input signal.
                    * `cos`: `cosine`, in radians.
                    * `cosh`: Hyperbolic cosine.
                    * `erf`: Error function.
                    * `erfc`: Complementary error function.
                    * `erfcinv`: Inverse complementary error function.
                    * `erfinv`: Inverse error function.
                    * `exp`: The base-e exponential of input signal.
                    * `exp2`: The base-2 exponential of input signal.
                    * `expm1`: The base-e exponential of input signal minus 1.
                    * `floor`: Greatest integer value less than or equal to input signal.
                    * `gamma`: Gamma function.
                    * `j0`: Bessel function of the first kind of order 0.
                    * `j1`: Bessel function of the first kind of order 1.
                    * `lgamma`: Natural logarithm of the absolute value of the gamma function.
                    * `log`: Natural logarithm of input signal.
                    * `log10`: Base-10 logarithm of input signal.
                    * `log1p`: Natural logarithm of input signal plus 1.
                    * `log2`: Base-2 logarithm of input signal.
                    * `round`: Round to nearest integer.
                    * `roundtoeven`: Round to nearest integer, with ties going to the nearest even integer.
                    * `sin`: `sine`, in radians.
                    * `sinh`: Hyperbolic sine.
                    * `sqrt`: Square root.
                    * `tan`: `tangent`, in radians.
                    * `tanh`: Hyperbolic tangent.
                    * `trunc`: Truncate to integer.
                    * `y0`: Bessel function of the second kind of order 0.
                    * `y1`: Bessel function of the second kind of order 1.

                enum:
                    - abs
                    - acos
                    - acosh
                    - asin
                    - asinh
                    - atan
                    - atanh
                    - cbrt
                    - ceil
                    - cos
                    - cosh
                    - erf
                    - erfc
                    - erfcinv
                    - erfinv
                    - exp
                    - exp2
                    - expm1
                    - floor
                    - gamma
                    - j0
                    - j1
                    - lgamma
                    - log
                    - log10
                    - log1p
                    - log2
                    - round
                    - roundtoeven
                    - sin
                    - sinh
                    - sqrt
                    - tan
                    - tanh
                    - trunc
                    - y0
                    - y1
                type: string
                x-go-tag-validate: oneof=abs acos acosh asin asinh atan atanh cbrt ceil cos cosh erf erfc erfcinv erfinv exp exp2 expm1 floor gamma j0 j1 lgamma log log10 log1p log2 round roundtoeven sin sinh sqrt tan tanh trunc y0 y1
                x-oneof: abs | acos | acosh | asin | asinh | atan | atanh | cbrt | ceil | cos | cosh | erf | erfc | erfcinv | erfinv | exp | exp2 | expm1 | floor | gamma | j0 | j1 | lgamma | log | log10 | log1p | log2 | round | roundtoeven | sin | sinh | sqrt | tan | tanh | trunc | y0 | y1
            out_ports:
                $ref: '#/definitions/UnaryOperatorOuts'
                description: Output ports for the UnaryOperator component.
        title: Takes an input signal and emits the output after applying the specified unary operator
        type: object
    UnaryOperatorIns:
        description: Inputs for the UnaryOperator component.
        properties:
            input:
                $ref: '#/definitions/InPort'
                description: Input signal.
        type: object
    UnaryOperatorOuts:
        description: Outputs for the UnaryOperator component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: Output signal.
        type: object
    Variable:
        description: Component that emits a constant signal which can be changed at runtime through dynamic configuration.
        properties:
            config_key:
                description: Configuration key for overriding value setting through dynamic configuration.
                type: string
            constant_output:
                $ref: '#/definitions/ConstantSignal'
                description: |+
                    The constant signal emitted by this component. The value of the constant signal can be overridden at runtime through dynamic configuration.

                x-go-tag-validate: required
            out_ports:
                $ref: '#/definitions/VariableOuts'
                description: Output ports for the Variable component.
        type: object
    VariableOuts:
        description: Outputs for the Variable component.
        properties:
            output:
                $ref: '#/definitions/OutPort'
                description: The value is emitted to the output port.
        type: object
    VersionInfo:
        properties:
            build_host:
                type: string
            build_os:
                type: string
            build_time:
                type: string
            git_branch:
                type: string
            git_commit_hash:
                type: string
            service:
                type: string
            version:
                type: string
        type: object
    googleprotobufAny:
        additionalProperties: {}
        description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        properties:
            '@type':
                description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                type: string
        type: object
    googleprotobufNullValue:
        default: NULL_VALUE
        description: |-
            `NullValue` is a singleton enumeration to represent the null value for the
            `Value` type union.

             The JSON representation for `NullValue` is JSON `null`.

             - NULL_VALUE: Null value.
        enum:
            - NULL_VALUE
        type: string
    googlerpcStatus:
        description: |-
            The `Status` type defines a logical error model that is suitable for
            different programming environments, including REST APIs and RPC APIs. It is
            used by [gRPC](https://github.com/grpc). Each `Status` message contains
            three pieces of data: error code, error message, and error details.

            You can find out more about this error model and how to work with it in the
            [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            code:
                description: |-
                    The status code, which should be an enum value of
                    [google.rpc.Code][google.rpc.Code].
                format: int32
                type: integer
            details:
                description: |-
                    A list of messages that carry the error details.  There is a common set of
                    message types for APIs to use.
                items:
                    $ref: '#/definitions/googleprotobufAny'
                    type: object
                type: array
            message:
                description: |-
                    A developer-facing error message, which should be in English. Any
                    user-facing error message should be localized and sent in the
                    [google.rpc.Status.details][google.rpc.Status.details] field, or localized
                    by the client.
                type: string
        type: object
info:
    title: Aperture API
    version: "1.0"
paths:
    /fluxninja/v1/controllerinfo:
        get:
            operationId: ControllerInfoService_GetControllerInfo
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ControllerInfo'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - ControllerInfoService
    /fluxninja/v1/report:
        post:
            operationId: FluxNinjaService_Report
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/ReportRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ReportResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Report accepts information about agents' health and applied configurations/policies.
            tags:
                - FluxNinjaService
    /v1/autoscale/kubernetes/controlpoints:
        get:
            operationId: AutoScaleKubernetesControlPointsService_GetControlPoints
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/AutoScaleKubernetesControlPoints'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/decisions/{decision_type}:
        get:
            operationId: PolicyService_GetDecisions
            parameters:
                - in: path
                  name: decision_type
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/GetDecisionsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-controller
    /v1/discovery/entities:
        get:
            operationId: EntitiesService_GetEntities
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/Entities'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/discovery/entities/ip-address/{ip_address}:
        get:
            operationId: EntitiesService_GetEntityByIPAddress
            parameters:
                - in: path
                  name: ip_address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/Entity'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/discovery/entities/name/{name}:
        get:
            operationId: EntitiesService_GetEntityByName
            parameters:
                - in: path
                  name: name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/Entity'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/distcache/stats:
        get:
            operationId: DistCacheService_GetStats
            responses:
                "200":
                    description: A successful response.
                    schema:
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/dynamic-configs/{policy_name}:
        post:
            operationId: PolicyService_PostDynamicConfig
            parameters:
                - in: path
                  name: policy_name
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                    description: PostDynamicConfigRequest is a request to patch dynamic configuration for Policy.
                    properties:
                        dynamic_config:
                            type: object
                    type: object
            responses:
                "200":
                    description: A successful response.
                    schema:
                        properties: {}
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: PostDynamicConfig creates/updates dynamic configuration based on the provided request.
            tags:
                - aperture-controller
    /v1/flowcontrol/checkhttp:
        post:
            operationId: FlowControlServiceHTTP_CheckHTTP
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/CheckHTTPRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/CheckHTTPResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/flowcontrol/controlpoints:
        get:
            operationId: FlowControlPointsService_GetControlPoints
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/FlowControlPoints'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/flowcontrol/preview/http_requests/{control_point}:
        post:
            operationId: FlowPreviewService_PreviewHTTPRequests2
            parameters:
                - description: Control point to preview.
                  in: path
                  name: control_point
                  required: true
                  type: string
                - description: Flow labels to match. Optional parameter for advanced filtering.
                  in: body
                  name: label_matcher
                  required: true
                  schema:
                    $ref: '#/definitions/LabelMatcher'
                - description: Number of samples to collect.
                  format: int64
                  in: query
                  name: samples
                  required: false
                  type: string
                - description: Service to preview.
                  in: query
                  name: service
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/PreviewHTTPRequestsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/flowcontrol/preview/http_requests/{service}/{control_point}:
        post:
            operationId: FlowPreviewService_PreviewHTTPRequests
            parameters:
                - description: Service to preview.
                  in: path
                  name: service
                  required: true
                  type: string
                - description: Control point to preview.
                  in: path
                  name: control_point
                  required: true
                  type: string
                - description: Flow labels to match. Optional parameter for advanced filtering.
                  in: body
                  name: label_matcher
                  required: true
                  schema:
                    $ref: '#/definitions/LabelMatcher'
                - description: Number of samples to collect.
                  format: int64
                  in: query
                  name: samples
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/PreviewHTTPRequestsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/flowcontrol/preview/labels/{control_point}:
        post:
            operationId: FlowPreviewService_PreviewFlowLabels2
            parameters:
                - description: Control point to preview.
                  in: path
                  name: control_point
                  required: true
                  type: string
                - description: Flow labels to match. Optional parameter for advanced filtering.
                  in: body
                  name: label_matcher
                  required: true
                  schema:
                    $ref: '#/definitions/LabelMatcher'
                - description: Number of samples to collect.
                  format: int64
                  in: query
                  name: samples
                  required: false
                  type: string
                - description: Service to preview.
                  in: query
                  name: service
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/PreviewFlowLabelsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/flowcontrol/preview/labels/{service}/{control_point}:
        post:
            operationId: FlowPreviewService_PreviewFlowLabels
            parameters:
                - description: Service to preview.
                  in: path
                  name: service
                  required: true
                  type: string
                - description: Control point to preview.
                  in: path
                  name: control_point
                  required: true
                  type: string
                - description: Flow labels to match. Optional parameter for advanced filtering.
                  in: body
                  name: label_matcher
                  required: true
                  schema:
                    $ref: '#/definitions/LabelMatcher'
                - description: Number of samples to collect.
                  format: int64
                  in: query
                  name: samples
                  required: false
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/PreviewFlowLabelsResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/info/host:
        get:
            operationId: InfoService_Host
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/HostInfo'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
                - aperture-controller
    /v1/info/process:
        get:
            operationId: InfoService_Process
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/ProcessInfo'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
                - aperture-controller
    /v1/info/version:
        get:
            operationId: InfoService_Version
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/VersionInfo'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
                - aperture-controller
    /v1/peers:
        get:
            operationId: PeerDiscoveryService_GetPeers
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/Peers'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/peers/address/{address}:
        get:
            operationId: PeerDiscoveryService_GetPeer
            parameters:
                - in: path
                  name: address
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/Peer'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
    /v1/policies:
        get:
            operationId: PolicyService_GetPolicies
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/GetPoliciesResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: GetPolicies returns all policies.
            tags:
                - aperture-controller
    /v1/policies/{name}:
        delete:
            operationId: PolicyService_DeletePolicy
            parameters:
                - in: path
                  name: name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        properties: {}
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: DeletePolicy removes a policy with the specified name.
            tags:
                - aperture-controller
        get:
            operationId: PolicyService_GetPolicy
            parameters:
                - in: path
                  name: name
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/GetPolicyResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: GetPolicy returns a policy with the specified name.
            tags:
                - aperture-controller
    /v1/policies/{policy_name}:
        patch:
            operationId: PolicyService_UpsertPolicy2
            parameters:
                - in: path
                  name: policy_name
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                    description: PostPolicyRequest is a request to create or update Policy.
                    properties:
                        policy:
                            $ref: '#/definitions/Policy'
                        update_mask:
                            description: The paths to update.
                            type: string
                    type: object
            responses:
                "200":
                    description: A successful response.
                    schema:
                        properties: {}
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: UpsertPolicy creates/updates policy based on the provided request.
            tags:
                - aperture-controller
        post:
            operationId: PolicyService_UpsertPolicy
            parameters:
                - in: path
                  name: policy_name
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                    description: PostPolicyRequest is a request to create or update Policy.
                    properties:
                        policy:
                            $ref: '#/definitions/Policy'
                        update_mask:
                            description: The paths to update.
                            type: string
                    type: object
            responses:
                "200":
                    description: A successful response.
                    schema:
                        properties: {}
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: UpsertPolicy creates/updates policy based on the provided request.
            tags:
                - aperture-controller
    /v1/status/{path}:
        get:
            operationId: StatusService_GetGroupStatus
            parameters:
                - in: path
                  name: path
                  pattern: .+
                  required: true
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/GroupStatus'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            tags:
                - aperture-agent
                - aperture-controller
produces:
    - application/json
swagger: "2.0"
tags:
    - name: AutoScaleKubernetesControlPointsService
    - name: FlowControlService
    - name: PolicyService
    - name: PolicyService
    - name: EntitiesService
    - name: FlowControlPointsService
    - name: FlowPreviewService
    - name: StatusService
    - name: Controller
    - name: DistCacheService
    - name: FlowControlServiceHTTP
    - name: InfoService
    - name: PeerDiscoveryService
    - name: FluxNinjaService
    - name: ControllerInfoService
    - name: Coordinator
