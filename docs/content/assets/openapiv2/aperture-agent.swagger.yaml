consumes:
- application/json
produces:
- application/json
schemes:
- https
swagger: "2.0"
info:
  title: Aperture API
  version: "1.0"
host: aperture-agent
paths:
  /v1/distcache/stats:
    get:
      tags:
      - aperture-agent
      operationId: DistCacheService_GetStats
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Stats'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/entities:
    get:
      tags:
      - aperture-agent
      operationId: EntityCacheService_GetEntityCache
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EntityCache'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/entities/ip-address/{ip_address}:
    get:
      tags:
      - aperture-agent
      operationId: EntityCacheService_GetEntityByIPAddress
      parameters:
      - type: string
        name: ip_address
        in: path
        required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Entity'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/entities/name/{name}:
    get:
      tags:
      - aperture-agent
      operationId: EntityCacheService_GetEntityByName
      parameters:
      - type: string
        name: name
        in: path
        required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Entity'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/flowcontrol/preview/http_requests/{service}/{control_point}:
    post:
      tags:
      - aperture-agent
      operationId: FlowPreviewService_PreviewHTTPRequests
      parameters:
      - type: string
        description: Service to preview.
        name: service
        in: path
        required: true
      - type: string
        description: |-
          Control point to preview.

          @gotags: validate:"required"
        name: control_point
        in: path
        required: true
      - description: Flow labels to match. Optional parameter for advanced filtering.
        name: label_matcher
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1LabelMatcher'
      - type: string
        format: int64
        description: |-
          Number of samples to collect. Defaults to 10.

          @gotags: validate:"min=1" default:"10"
        name: samples
        in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PreviewHTTPRequestsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/flowcontrol/preview/labels/{service}/{control_point}:
    post:
      tags:
      - aperture-agent
      operationId: FlowPreviewService_PreviewFlowLabels
      parameters:
      - type: string
        description: Service to preview.
        name: service
        in: path
        required: true
      - type: string
        description: |-
          Control point to preview.

          @gotags: validate:"required"
        name: control_point
        in: path
        required: true
      - description: Flow labels to match. Optional parameter for advanced filtering.
        name: label_matcher
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1LabelMatcher'
      - type: string
        format: int64
        description: |-
          Number of samples to collect. Defaults to 10.

          @gotags: validate:"min=1" default:"10"
        name: samples
        in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PreviewFlowLabelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/info/host:
    get:
      tags:
      - aperture-agent
      - aperture-controller
      operationId: InfoService_Host
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HostInfo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/info/process:
    get:
      tags:
      - aperture-agent
      - aperture-controller
      operationId: InfoService_Process
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ProcessInfo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/info/version:
    get:
      tags:
      - aperture-agent
      - aperture-controller
      operationId: InfoService_Version
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VersionInfo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/peers:
    get:
      tags:
      - aperture-agent
      operationId: PeerDiscoveryService_GetPeers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Peers'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/peers/address/{address}:
    get:
      tags:
      - aperture-agent
      operationId: PeerDiscoveryService_GetPeer
      parameters:
      - type: string
        name: address
        in: path
        required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Peer'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
  /v1/status/{path}:
    get:
      tags:
      - aperture-agent
      - aperture-controller
      operationId: StatusService_GetGroupStatus
      parameters:
      - pattern: .+
        type: string
        name: path
        in: path
        required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GroupStatus'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
definitions:
  EntityCacheEntities:
    description: Entities defines mapping of entities.
    type: object
    properties:
      entities:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Entity'
  MatchExpressionList:
    description: 'eg. {any: {of: [expr1, expr2]}}.'
    type: object
    title: List of MatchExpressions that is used for all/any matching
    properties:
      of:
        description: List of subexpressions of the match expression.
        type: array
        items:
          $ref: '#/definitions/v1MatchExpression'
  PreviewFlowLabelsResponseFlowLabels:
    type: object
    properties:
      labels:
        type: object
        additionalProperties:
          type: string
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
      message:
        type: string
  protobufAny:
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
    type: object
    properties:
      '@type':
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
        type: string
    additionalProperties: false
  statusv1Status:
    description: Status holds details about a status that can be reported to the registry.
    type: object
    properties:
      error:
        $ref: '#/definitions/v1StatusError'
      message:
        $ref: '#/definitions/protobufAny'
      timestamp:
        type: string
        format: date-time
  v1DMap:
    type: object
    properties:
      length:
        type: string
        format: int64
      num_tables:
        type: string
        format: int64
      slab_info:
        $ref: '#/definitions/v1SlabInfo'
  v1DMaps:
    type: object
    properties:
      delete_hits:
        type: string
        format: int64
      delete_misses:
        type: string
        format: int64
      entries_total:
        type: string
        format: int64
      evicted_total:
        type: string
        format: int64
      get_hits:
        type: string
        format: int64
      get_misses:
        type: string
        format: int64
  v1DTopics:
    type: object
    properties:
      current_listeners:
        type: string
        format: int64
      listeners_total:
        type: string
        format: int64
      published_total:
        type: string
        format: int64
  v1Entity:
    description: Entity represents a pod, vm, etc.
    type: object
    properties:
      ip_address:
        type: string
      name:
        type: string
      prefix:
        type: string
      services:
        type: array
        items:
          type: string
      uid:
        type: string
  v1EntityCache:
    description: EntityCache contains both mappings of ip address to entity and entity
      name to entity.
    type: object
    properties:
      entities_by_ip_address:
        $ref: '#/definitions/EntityCacheEntities'
      entities_by_name:
        $ref: '#/definitions/EntityCacheEntities'
  v1EqualsMatchExpression:
    description: Label selector expression of the equal form "label == value".
    type: object
    properties:
      label:
        description: |-
          Name of the label to equal match the value.

          @gotags: validate:"required"
        type: string
        x-go-validate: required
      value:
        description: Exact value that the label should be equal to.
        type: string
  v1GroupStatus:
    description: |-
      Groups is nested structure that holds status information about the node and a
      pointer to the next node.
    type: object
    properties:
      groups:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1GroupStatus'
      status:
        $ref: '#/definitions/statusv1Status'
  v1HostInfo:
    type: object
    properties:
      hostname:
        type: string
      local_ip:
        type: string
      uuid:
        type: string
  v1K8sLabelMatcherRequirement:
    description: Label selector requirement which is a selector that contains values,
      a key, and an operator that relates the key and values.
    type: object
    properties:
      key:
        description: |-
          Label key that the selector applies to.

          @gotags: validate:"required"
        type: string
        x-go-validate: required
      operator:
        description: |-
          Logical operator which represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.

          @gotags: validate:"oneof=In NotIn Exists DoesNotExists"
        type: string
        x-go-validate: oneof=In NotIn Exists DoesNotExists
      values:
        description: |-
          An array of string values that relates to the key by an operator.
          If the operator is In or NotIn, the values array must be non-empty.
          If the operator is Exists or DoesNotExist, the values array must be empty.
        type: array
        items:
          type: string
  v1LabelMatcher:
    description: |-
      It provides three ways to define requirements:
      - matchLabels
      - matchExpressions
      - arbitrary expression

      If multiple requirements are set, they are all ANDed.
      An empty label matcher always matches.
    type: object
    title: |-
      Allows to define rules whether a map of
      [labels](/concepts/integrations/flow-control/flow-label.md)
      should be considered a match or not
    properties:
      expression:
        description: An arbitrary expression to be evaluated on the labels.
        $ref: '#/definitions/v1MatchExpression'
      match_expressions:
        description: |-
          List of k8s-style label matcher requirements.

          Note: The requirements are ANDed.
        type: array
        items:
          $ref: '#/definitions/v1K8sLabelMatcherRequirement'
      match_labels:
        description: |-
          A map of {key,value} pairs representing labels to be matched.
          A single {key,value} in the matchLabels requires that the label "key" is present and equal to "value".

          Note: The requirements are ANDed.
        type: object
        additionalProperties:
          type: string
  v1MatchExpression:
    description: |-
      MatchExpression has multiple variants, exactly one should be set.

      Example:
      ```yaml
      all:
        of:
          - label_exists: foo
          - label_equals: { label = app, value = frobnicator }
      ```
    type: object
    title: Defines a [map<string, string> → bool] expression to be evaluated on labels
    properties:
      all:
        description: The expression is true when all subexpressions are true.
        $ref: '#/definitions/MatchExpressionList'
      any:
        description: The expression is true when any subexpression is true.
        $ref: '#/definitions/MatchExpressionList'
      label_equals:
        description: The expression is true when label value equals given value.
        $ref: '#/definitions/v1EqualsMatchExpression'
      label_exists:
        description: |-
          The expression is true when label with given name exists.

          @gotags: validate:"required"
        type: string
        x-go-validate: required
      label_matches:
        description: The expression is true when label matches given regex.
        $ref: '#/definitions/v1MatchesMatchExpression'
      not:
        description: The expression negates the result of subexpression.
        $ref: '#/definitions/v1MatchExpression'
  v1MatchesMatchExpression:
    description: Label selector expression of the matches form "label matches regex".
    type: object
    properties:
      label:
        description: |-
          Name of the label to match the regular expression.

          @gotags: validate:"required"
        type: string
        x-go-validate: required
      regex:
        description: |-
          Regular expression that should match the label value.
          It uses [golang's regular expression syntax](https://github.com/google/re2/wiki/Syntax).

          @gotags: validate:"required"
        type: string
        x-go-validate: required
  v1Member:
    type: object
    properties:
      birthdate:
        type: string
        format: int64
      id:
        type: string
        format: uint64
      name:
        type: string
  v1Network:
    type: object
    properties:
      commands_total:
        type: string
        format: int64
      connections_total:
        type: string
        format: int64
      current_connections:
        type: string
        format: int64
      read_bytes_total:
        type: string
        format: int64
      written_bytes_total:
        type: string
        format: int64
  v1Partition:
    type: object
    properties:
      backups:
        type: array
        items:
          $ref: '#/definitions/v1Member'
      d_maps:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1DMap'
      length:
        type: string
        format: int64
      previous_owners:
        type: array
        items:
          $ref: '#/definitions/v1Member'
  v1Peer:
    description: Peer holds peer info and services.
    type: object
    properties:
      address:
        type: string
      hostname:
        type: string
      services:
        type: object
        additionalProperties:
          type: string
  v1Peers:
    description: Peers holds the peer info of this peer and a mapping of address to
      other peers.
    type: object
    properties:
      peers:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Peer'
      self_peer:
        $ref: '#/definitions/v1Peer'
  v1PreviewFlowLabelsResponse:
    type: object
    properties:
      samples:
        type: array
        items:
          $ref: '#/definitions/PreviewFlowLabelsResponseFlowLabels'
  v1PreviewHTTPRequestsResponse:
    type: object
    properties:
      samples:
        type: array
        items:
          type: object
  v1ProcessInfo:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
      uptime:
        type: string
  v1SlabInfo:
    type: object
    properties:
      allocated:
        type: string
        format: int64
      garbage:
        type: string
        format: int64
      inuse:
        type: string
        format: int64
  v1Stats:
    type: object
    properties:
      backups:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Partition'
      cluster_coordinator:
        $ref: '#/definitions/v1Member'
      cluster_members:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Member'
      cmdline:
        type: array
        items:
          type: string
      d_maps:
        $ref: '#/definitions/v1DMaps'
      d_topics:
        $ref: '#/definitions/v1DTopics'
      member:
        $ref: '#/definitions/v1Member'
      network:
        $ref: '#/definitions/v1Network'
      partitions:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Partition'
      release_version:
        type: string
      runtime:
        type: object
      uptime_seconds:
        type: string
        format: int64
  v1StatusError:
    description: Error holds raw error message and its cause in a nested field.
    type: object
    properties:
      message:
        type: string
  v1VersionInfo:
    type: object
    properties:
      build_host:
        type: string
      build_os:
        type: string
      build_time:
        type: string
      git_branch:
        type: string
      git_commit_hash:
        type: string
      service:
        type: string
      version:
        type: string
