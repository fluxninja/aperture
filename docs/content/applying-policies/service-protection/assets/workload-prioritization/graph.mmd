flowchart LR
subgraph root.0[<center>AdaptiveLoadScheduler<br/>1 selectors</center>]
subgraph root.0_inports[ ]
style root.0_inports fill:none,stroke:none
root.0enabled[enabled]
root.0setpoint[setpoint]
root.0signal[signal]
end
subgraph root.0_outports[ ]
style root.0_outports fill:none,stroke:none
end
end
root.0_enabled_FakeConstantout((1.00))
subgraph root.1[<center>PromQL<br/>every 1s</center>]
subgraph root.1_outports[ ]
style root.1_outports fill:none,stroke:none
root.1output[output]
end
end
subgraph root.2[<center>ArithmeticCombinator<br/>Mul</center>]
subgraph root.2_inports[ ]
style root.2_inports fill:none,stroke:none
root.2lhs[lhs]
root.2rhs[rhs]
end
subgraph root.2_outports[ ]
style root.2_outports fill:none,stroke:none
root.2output[output]
end
end
root.2_rhs_FakeConstantout((2.00))
subgraph root.3[<center>ArithmeticCombinator<br/>Mul</center>]
subgraph root.3_inports[ ]
style root.3_inports fill:none,stroke:none
root.3lhs[lhs]
root.3rhs[rhs]
end
subgraph root.3_outports[ ]
style root.3_outports fill:none,stroke:none
root.3output[output]
end
end
root.3_rhs_FakeConstantout((1.10))
subgraph root.4[<center>EMA<br/>win: 1500</center>]
subgraph root.4_inports[ ]
style root.4_inports fill:none,stroke:none
root.4input[input]
root.4max_envelope[max_envelope]
end
subgraph root.4_outports[ ]
style root.4_outports fill:none,stroke:none
root.4output[output]
end
end
root.0_enabled_FakeConstantout --> root.0enabled
root.1output --> |SIGNAL| root.0signal
root.1output --> |SIGNAL| root.2lhs
root.1output --> |SIGNAL| root.4input
root.2output --> |MAX_EMA| root.4max_envelope
root.2_rhs_FakeConstantout --> root.2rhs
root.3output --> |SETPOINT| root.0setpoint
root.3_rhs_FakeConstantout --> root.3rhs
root.4output --> |SIGNAL_EMA| root.3lhs
