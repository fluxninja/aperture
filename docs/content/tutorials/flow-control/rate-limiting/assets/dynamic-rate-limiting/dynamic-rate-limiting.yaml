apiVersion: fluxninja.com/v1alpha1
dynamicConfig:
  concurrency_limiter:
    dry_run: false
kind: Policy
metadata:
  labels:
    fluxninja.com/validate: "true"
  name: service1-demo-app
spec:
  circuit:
    components:
      - arithmetic_combinator:
          in_ports:
            lhs:
              signal_name: LATENCY
            rhs:
              constant_signal:
                value: "2.0"
          operator: mul
          out_ports:
            output:
              signal_name: MAX_EMA
      - arithmetic_combinator:
          in_ports:
            lhs:
              signal_name: LATENCY_EMA
            rhs:
              constant_signal:
                value: "1.1"
          operator: mul
          out_ports:
            output:
              signal_name: LATENCY_SETPOINT
      - arithmetic_combinator:
          in_ports:
            lhs:
              signal_name: DESIRED_CONCURRENCY
            rhs:
              signal_name: INCOMING_CONCURRENCY
          operator: div
          out_ports:
            output:
              signal_name: DESIRED_CONCURRENCY_RATIO
      - arithmetic_combinator:
          in_ports:
            lhs:
              constant_signal:
                value: "2.0"
            rhs:
              signal_name: ACCEPTED_CONCURRENCY
          operator: mul
          out_ports:
            output:
              signal_name: NORMAL_CONCURRENCY_LIMIT
      - arithmetic_combinator:
          in_ports:
            lhs:
              constant_signal:
                value: "5.0"
            rhs:
              signal_name: SQRT_CONCURRENCY_INCREMENT
          operator: add
          out_ports:
            output:
              signal_name: CONCURRENCY_INCREMENT_SINGLE_TICK
      - integrator:
          in_ports:
            input:
              signal_name: CONCURRENCY_INCREMENT_SINGLE_TICK
            max:
              signal_name: NORMAL_CONCURRENCY_LIMIT
            min:
              signal_name: ACCEPTED_CONCURRENCY
            reset:
              signal_name: IS_OVERLOAD
          out_ports:
            output:
              signal_name: CONCURRENCY_INCREMENT
      - sqrt:
          in_ports:
            input:
              signal_name: ACCEPTED_CONCURRENCY
          out_ports:
            output:
              signal_name: SQRT_CONCURRENCY_INCREMENT
          scale: "1"
      - promql:
          evaluation_interval: 1s
          out_ports:
            output:
              signal_name: LATENCY
          query_string:
            sum(increase(flux_meter_sum{valid="true", flow_status="OK",
            flux_meter_name="service1-demo-app"}[5s]))/sum(increase(flux_meter_count{valid="true",
            flow_status="OK", flux_meter_name="service1-demo-app"}[5s]))
      - ema:
          correction_factor_on_max_envelope_violation: "0.95"
          ema_window: 1500s
          in_ports:
            input:
              signal_name: LATENCY
            max_envelope:
              signal_name: MAX_EMA
          out_ports:
            output:
              signal_name: LATENCY_EMA
          warm_up_window: 60s
      - gradient_controller:
          in_ports:
            control_variable:
              signal_name: ACCEPTED_CONCURRENCY
            max:
              signal_name: NORMAL_CONCURRENCY_LIMIT
            optimize:
              signal_name: CONCURRENCY_INCREMENT
            setpoint:
              signal_name: LATENCY_SETPOINT
            signal:
              signal_name: LATENCY
          max_gradient: "1.0"
          min_gradient: "0.1"
          out_ports:
            output:
              signal_name: DESIRED_CONCURRENCY
          slope: "-1"
      - extrapolator:
          in_ports:
            input:
              signal_name: DESIRED_CONCURRENCY_RATIO
          max_extrapolation_interval: 5s
          out_ports:
            output:
              signal_name: LOAD_MULTIPLIER
      - concurrency_limiter:
          flow_selector:
            flow_matcher:
              control_point: ingress
            service_selector:
              agent_group: default
              service: service1-demo-app.demoapp.svc.cluster.local
          load_actuator:
            alerter_config:
              alert_channels: []
              alert_name: Load Shed Event
              resolve_timeout: 5s
            dynamic_config_key: concurrency_limiter
            in_ports:
              load_multiplier:
                signal_name: LOAD_MULTIPLIER
          scheduler:
            auto_tokens: true
            default_workload_parameters:
              priority: 20
            out_ports:
              accepted_concurrency:
                signal_name: ACCEPTED_CONCURRENCY
              incoming_concurrency:
                signal_name: INCOMING_CONCURRENCY
            timeout_factor: 0.5
            workloads:
              - label_matcher:
                  match_labels:
                    user_type: guest
                workload_parameters:
                  priority: 50
              - label_matcher:
                  match_labels:
                    http.request.header.user_type: subscriber
                workload_parameters:
                  priority: 200
      - decider:
          in_ports:
            lhs:
              signal_name: LATENCY
            rhs:
              signal_name: LATENCY_SETPOINT
          operator: gt
          out_ports:
            output:
              signal_name: IS_OVERLOAD
      - decider:
          in_ports:
            lhs:
              signal_name: LOAD_MULTIPLIER
            rhs:
              constant_signal:
                value: 1
          operator: lt
          out_ports:
            output:
              signal_name: IS_BOT_ESCALATION
          true_for: 30s
      - switcher:
          in_ports:
            on_false:
              constant_signal:
                value: 10
            on_true:
              constant_signal:
                value: 0
            switch:
              signal_name: IS_BOT_ESCALATION
          out_ports:
            output:
              signal_name: RATE_LIMIT
      - rate_limiter:
          dynamic_config_key: rate_limiter
          flow_selector:
            flow_matcher:
              control_point: ingress
              label_matcher:
                match_labels:
                  http.request.header.user_type: bot
            service_selector:
              agent_group: default
              service: service1-demo-app.demoapp.svc.cluster.local
          in_ports:
            limit:
              signal_name: RATE_LIMIT
          label_key: http.request.header.user_id
          limit_reset_interval: 1s
    evaluation_interval: 0.5s
  resources:
    classifiers:
      - flow_selector:
          flow_matcher:
            control_point: ingress
          service_selector:
            agent_group: default
            service: service1-demo-app.demoapp.svc.cluster.local
        rules:
          user_type:
            extractor:
              from: request.http.headers.user-type
    flux_meters:
      service1-demo-app:
        flow_selector:
          flow_matcher:
            control_point: ingress
          service_selector:
            agent_group: default
            service: service1-demo-app.demoapp.svc.cluster.local
