common:
  policy_name: "service1-demo-app"
policy:
  flux_meter:
    flow_selector:
      service_selector:
        agent_group: default
        service: service1-demo-app.demoapp.svc.cluster.local
      flow_matcher:
        control_point: ingress
  classifiers:
    - flow_selector:
        service_selector:
          agent_group: default
          service: service1-demo-app.demoapp.svc.cluster.local
        flow_matcher:
          control_point: ingress
      rules:
        user_type:
          extractor:
            from: request.http.headers.user-type
  concurrency_controller:
    flow_selector:
      service_selector:
        agent_group: default
        service: service1-demo-app.demoapp.svc.cluster.local
      flow_matcher:
        control_point: ingress
    scheduler:
      workloads:
        - label_matcher:
            match_labels:
              user_type: "guest"
          parameters:
            priority: 50
        - label_matcher:
            match_labels:
              http.request.header.user_type: subscriber
          parameters:
            priority: 200
    default_config:
      dry_run: false
    alerter:
      # Name for alerter.
      # Type: string
      # Required: True
      alert_name: "Load Shed Event"
  components:
    - decider:
        in_ports:
          lhs:
            signal_name: OBSERVED_LOAD_MULTIPLIER
          rhs:
            constant_signal:
              value: 1
        operator: lt
        out_ports:
          output:
            signal_name: IS_BOT_ESCALATION
        true_for: 30s
    - switcher:
        in_ports:
          off_signal:
            constant_signal:
              value: 10
          on_signal:
            constant_signal:
              value: 0
          switch:
            signal_name: IS_BOT_ESCALATION
        out_ports:
          output:
            signal_name: RATE_LIMIT
    - flow_control:
        rate_limiter:
          dynamic_config_key: rate_limiter
          flow_selector:
            flow_matcher:
              control_point: ingress
              label_matcher:
                match_labels:
                  http.request.header.user_type: bot
            service_selector:
              agent_group: default
              service: service1-demo-app.demoapp.svc.cluster.local
          in_ports:
            limit:
              signal_name: RATE_LIMIT
          parameters:
            label_key: http.request.header.user_id
            limit_reset_interval: 1s
