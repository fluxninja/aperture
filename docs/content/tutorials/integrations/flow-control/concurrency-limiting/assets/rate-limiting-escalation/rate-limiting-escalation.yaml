apiVersion: fluxninja.com/v1alpha1
kind: Policy
metadata:
  labels:
    fluxninja.com/validate: "true"
  name: service1-demo-app
spec:
  circuit:
    components:
      - query:
          promql:
            evaluation_interval: 1s
            out_ports:
              output:
                signal_name: LATENCY
            query_string:
              sum(increase(flux_meter_sum{valid="true", flow_status="OK",
              flux_meter_name="service1-demo-app"}[5s]))/sum(increase(flux_meter_count{valid="true",
              flow_status="OK", flux_meter_name="service1-demo-app"}[5s]))
      - arithmetic_combinator:
          in_ports:
            lhs:
              signal_name: LATENCY
            rhs:
              constant_signal:
                value: 2
          operator: mul
          out_ports:
            output:
              signal_name: MAX_EMA
      - arithmetic_combinator:
          in_ports:
            lhs:
              signal_name: LATENCY_EMA
            rhs:
              constant_signal:
                value: 1.1
          operator: mul
          out_ports:
            output:
              signal_name: LATENCY_SETPOINT
      - ema:
          in_ports:
            input:
              signal_name: LATENCY
            max_envelope:
              signal_name: MAX_EMA
          out_ports:
            output:
              signal_name: LATENCY_EMA
          parameters:
            correction_factor_on_max_envelope_violation: 0.95
            ema_window: 1500s
            warmup_window: 60s
      - flow_control:
          aimd_concurrency_controller:
            alerter_parameters:
              alert_name: Load Shed Event
            default_config:
              dry_run: false
            dynamic_config_key: concurrency_controller
            flow_selector:
              flow_matcher:
                control_point: ingress
              service_selector:
                agent_group: default
                service: service1-demo-app.demoapp.svc.cluster.local
            gradient_parameters:
              max_gradient: 1
              min_gradient: 0.1
              slope: -1
            in_ports:
              setpoint:
                signal_name: LATENCY_SETPOINT
              signal:
                signal_name: LATENCY
            load_multiplier_linear_increment: 0.0025
            max_load_multiplier: 2
            out_ports:
              accepted_concurrency:
                signal_name: ACCEPTED_CONCURRENCY
              desired_load_multiplier:
                signal_name: DESIRED_LOAD_MULTIPLIER
              incoming_concurrency:
                signal_name: INCOMING_CONCURRENCY
              is_overload:
                signal_name: IS_OVERLOAD
              observed_load_multiplier:
                signal_name: OBSERVED_LOAD_MULTIPLIER
            scheduler_parameters:
              auto_tokens: true
              workloads:
                - label_matcher:
                    match_labels:
                      user_type: guest
                  parameters:
                    priority: 50
                - label_matcher:
                    match_labels:
                      http.request.header.user_type: subscriber
                  parameters:
                    priority: 200
      - decider:
          in_ports:
            lhs:
              signal_name: OBSERVED_LOAD_MULTIPLIER
            rhs:
              constant_signal:
                value: 1
          operator: lt
          out_ports:
            output:
              signal_name: IS_BOT_ESCALATION
          true_for: 30s
      - switcher:
          in_ports:
            off_signal:
              constant_signal:
                value: 10
            on_signal:
              constant_signal:
                value: 0
            switch:
              signal_name: IS_BOT_ESCALATION
          out_ports:
            output:
              signal_name: RATE_LIMIT
      - flow_control:
          rate_limiter:
            dynamic_config_key: rate_limiter
            flow_selector:
              flow_matcher:
                control_point: ingress
                label_matcher:
                  match_labels:
                    http.request.header.user_type: bot
              service_selector:
                agent_group: default
                service: service1-demo-app.demoapp.svc.cluster.local
            in_ports:
              limit:
                signal_name: RATE_LIMIT
            parameters:
              label_key: http.request.header.user_id
              limit_reset_interval: 1s
    evaluation_interval: 0.5s
  resources:
    classifiers:
      - flow_selector:
          flow_matcher:
            control_point: ingress
          service_selector:
            agent_group: default
            service: service1-demo-app.demoapp.svc.cluster.local
        rules:
          user_type:
            extractor:
              from: request.http.headers.user-type
    flux_meters:
      service1-demo-app:
        flow_selector:
          flow_matcher:
            control_point: ingress
          service_selector:
            agent_group: default
            service: service1-demo-app.demoapp.svc.cluster.local
