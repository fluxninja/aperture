flowchart LR
subgraph root.0[PromQL]
subgraph root.0_outports[ ]
style root.0_outports fill:none,stroke:none
root.0output[output]
end
end
subgraph root.1[<center>ArithmeticCombinator<br/>mul</center>]
subgraph root.1_inports[ ]
style root.1_inports fill:none,stroke:none
root.1lhs[lhs]
root.1rhs[rhs]
end
subgraph root.1_outports[ ]
style root.1_outports fill:none,stroke:none
root.1output[output]
end
end
FakeConstant0((2.00))
FakeConstant0 --> root.1rhs
subgraph root.2[<center>ArithmeticCombinator<br/>mul</center>]
subgraph root.2_inports[ ]
style root.2_inports fill:none,stroke:none
root.2rhs[rhs]
root.2lhs[lhs]
end
subgraph root.2_outports[ ]
style root.2_outports fill:none,stroke:none
root.2output[output]
end
end
FakeConstant1((1.10))
FakeConstant1 --> root.2rhs
subgraph root.3[<center>EMA<br/>win: 1500s</center>]
subgraph root.3_inports[ ]
style root.3_inports fill:none,stroke:none
root.3input[input]
root.3max_envelope[max_envelope]
end
subgraph root.3_outports[ ]
style root.3_outports fill:none,stroke:none
root.3output[output]
end
end
subgraph root.4[AIMDConcurrencyController]
subgraph root.4_inports[ ]
style root.4_inports fill:none,stroke:none
root.4setpoint[setpoint]
root.4signal[signal]
end
subgraph root.4_outports[ ]
style root.4_outports fill:none,stroke:none
root.4is_overload[is_overload]
root.4load_multiplier[load_multiplier]
end
end
root.2output --> |LATENCY_SETPOINT| root.4setpoint
root.3output --> |LATENCY_EMA| root.2lhs
root.0output --> |LATENCY| root.1lhs
root.0output --> |LATENCY| root.3input
root.0output --> |LATENCY| root.4signal
root.1output --> |MAX_EMA| root.3max_envelope
