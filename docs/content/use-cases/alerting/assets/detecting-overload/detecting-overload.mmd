flowchart LR
subgraph root.0[<center>PromQL<br/>every 0s</center>]
subgraph root.0_outports[ ]
style root.0_outports fill:none,stroke:none
root.0output[output]
end
end
subgraph root.1[<center>EMA<br/>win: 150</center>]
subgraph root.1_inports[ ]
style root.1_inports fill:none,stroke:none
root.1input[input]
end
subgraph root.1_outports[ ]
style root.1_outports fill:none,stroke:none
root.1output[output]
end
end
subgraph root.2[<center>ArithmeticCombinator<br/>mul</center>]
subgraph root.2_inports[ ]
style root.2_inports fill:none,stroke:none
root.2lhs[lhs]
root.2rhs[rhs]
end
subgraph root.2_outports[ ]
style root.2_outports fill:none,stroke:none
root.2output[output]
end
end
root.2_rhs_FakeConstantout((1.10))
subgraph root.3[<center>Decider<br/>gt for 0s</center>]
subgraph root.3_inports[ ]
style root.3_inports fill:none,stroke:none
root.3lhs[lhs]
root.3rhs[rhs]
end
subgraph root.3_outports[ ]
style root.3_outports fill:none,stroke:none
root.3output[output]
end
end
subgraph root.4[<center>Alerter<br/>overload/crit</center>]
subgraph root.4_inports[ ]
style root.4_inports fill:none,stroke:none
root.4signal[signal]
end
end
root.0output --> |LATENCY| root.1input
root.0output --> |LATENCY| root.3lhs
root.1output --> |LATENCY_EMA| root.2lhs
root.2output --> |LATENCY_SETPOINT| root.3rhs
root.2_rhs_FakeConstantout --> root.2rhs
root.3output --> |IS_OVERLOAD_SWITCH| root.4signal
