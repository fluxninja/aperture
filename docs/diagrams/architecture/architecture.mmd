flowchart TB
  subgraph Cloud["FluxNinja Cloud (Enterprise Edition)"]
    direction TB
    subgraph CloudAnalyticsDB["Large-scale Data"]
      direction LR
      CloudDiscovery[("Discovery DB")]
      CloudServiceHealth[("Metrics\n(Services and Flow)")]
    end
    CloudDB[(DB)]
    subgraph ControlPlane["Control Plane"]
      direction LR
      CloudNotifications["Alerts & Notifications"]
      CloudBehaviorModeling["AI-driven Behavior Modeling (Planned)"]
      CloudEnrichment["Processing and enriching metrics"]
    end
    subgraph UI
      direction LR
      CloudPolicyBuilder["Interactive Policy Builder (Planned)"]
      CloudAnalyticsUI["Flow analytics"]
    end
  end
  subgraph User VPC
    subgraph Controller["Aperture Controller"]
      ControlLoop["Policy Control Loop"]
      PolicyManagement["Classification Rules\n& Policy Management"]
    end
    subgraph ControllerDB["Aperture Data"]
      MetricsDB[("Short-scale metrics\n(Prometheus)")]
      ETCD[("K/V Store (Etcd)")]
    end
    subgraph KubernetesNode["Kubernetes Node"]
      subgraph Agent["Aperture Agent"]
        subgraph AgentMetricsService["Metrics Service"]
          direction LR
          AgentDiscovery["Service Discovery"]
          AgentMetrics["Metrics Collection"]
        end
        subgraph AgentFlowControl["Flow Control Service"]
          direction LR
          ConcurrencyControl["Concurrency Control"]
          Quotas["API Quotas"]
        end
        subgraph AgentClass["Classification Service"]
        end
      end
      subgraph ServiceAPod["Service A Pod"]
        subgraph ServiceA["Service A"]
          FeaturesA{{"Features & Frameworks\n(user code)"}}
          LibraryA["Aperture Library"]
        end
        MeshA["Service Mesh Dataplane Proxy\n(Envoy)"]
      end
      subgraph ServiceBPod["Service B Pod"]
        MeshB["Service Mesh Dataplane Proxy\n(Envoy)"]
      end
    end
  end

Agent --> Cloud
Controller <--> Cloud
Controller <--> ControllerDB

ETCD --> Agent
Agent --> MetricsDB
ServiceA <-..-> MeshA

MeshA -- "Request metadata,\nMetrics" --> Agent
Agent -- "Decisions,\nFlow Labels" --> MeshA

MeshA <-. API Traffic .-> MeshB

FeaturesA <-- Decisions & Metrics--> LibraryA
LibraryA <-- Decisions & Metrics --> Agent
Quotas <-- "shared counters synchronization\nwith other agents' quotas" --> Quotas
