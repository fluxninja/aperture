basePath: /aperture-agent
definitions:
  AdaptivePolicy:
    properties:
      enabled:
        description: Flag to enable the policy
        type: boolean
        x-go-default: "false"
        x-go-name: Enabled
      factor:
        description: Factor sets user-configured limit of available memory
        format: double
        type: number
        x-go-default: "0.50"
        x-go-name: Factor
        x-go-validate: gte=0,lte=1
    title: AdaptivePolicy creates a policy that forces GC when the usage surpasses
      the configured factor of the available memory. This policy calculates next target
      as usage+(limit-usage)*factor.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  AgentInfoConfig:
    properties:
      agent_group:
        description: |-
          All agents within an agent_group receive the same data-plane configuration (e.g. schedulers, FluxMeters, rate limiter).

          [Read more about agent groups here](/concepts/service.md#agent-group).
        type: string
        x-go-default: default
        x-go-name: AgentGroup
    title: AgentInfoConfig is the configuration for the agent group etc.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/agentinfo
  BackoffConfig:
    properties:
      base_delay:
        description: Base Delay
        format: string
        type: string
        x-go-default: 1s
        x-go-name: BaseDelay
        x-go-validate: gte=0
      jitter:
        description: Jitter
        format: double
        type: number
        x-go-default: "0.2"
        x-go-name: Jitter
        x-go-validate: gte=0
      max_delay:
        description: Max Delay
        format: string
        type: string
        x-go-default: 120s
        x-go-name: MaxDelay
        x-go-validate: gte=0
      multiplier:
        description: Backoff multiplier
        format: double
        type: number
        x-go-default: "1.6"
        x-go-name: Multiplier
        x-go-validate: gte=0
    title: BackoffConfig holds configuration for GRPC Client Backoff.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
  BatchPostrollupConfig:
    properties:
      send_batch_max_size:
        description: |-
          SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
          into smaller units.
        format: uint32
        type: integer
        x-go-default: "100"
        x-go-name: SendBatchMaxSize
        x-go-validate: gte=0
      send_batch_size:
        description: SendBatchSize is the size of a batch which after hit, will trigger
          it to be sent.
        format: uint32
        type: integer
        x-go-default: "100"
        x-go-name: SendBatchSize
        x-go-validate: gt=0
      timeout:
        description: Timeout sets the time after which a batch will be sent regardless
          of size.
        format: string
        type: string
        x-go-default: 1s
        x-go-name: Timeout
        x-go-validate: gt=0
    title: BatchPostrollupConfig defines configuration for OTEL batch processor.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/otelcollector
  BatchPrerollupConfig:
    properties:
      send_batch_max_size:
        description: |-
          SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
          into smaller units.
        format: uint32
        type: integer
        x-go-default: "10000"
        x-go-name: SendBatchMaxSize
        x-go-validate: gte=0
      send_batch_size:
        description: SendBatchSize is the size of a batch which after hit, will trigger
          it to be sent.
        format: uint32
        type: integer
        x-go-default: "10000"
        x-go-name: SendBatchSize
        x-go-validate: gt=0
      timeout:
        description: Timeout sets the time after which a batch will be sent regardless
          of size.
        format: string
        type: string
        x-go-default: 1s
        x-go-name: Timeout
        x-go-validate: gt=0
    title: BatchPrerollupConfig defines configuration for OTEL batch processor.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/otelcollector
  ClientTLSConfig:
    properties:
      ca_file:
        type: string
        x-go-name: CAFile
      cert_file:
        type: string
        x-go-name: CertFile
      insecure_skip_verify:
        type: boolean
        x-go-name: InsecureSkipVerify
      key_file:
        type: string
        x-go-name: KeyFile
      key_log_file:
        type: string
        x-go-name: KeyLogWriter
    title: ClientTLSConfig is the config for client TLS.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/tlsconfig
  DistCacheConfig:
    properties:
      bind_addr:
        description: BindAddr denotes the address that DistCache will bind to for
          communication with other peer nodes.
        type: string
        x-go-default: :3320
        x-go-name: BindAddr
        x-go-validate: hostname_port
      memberlist_advertise_addr:
        description: Address of memberlist to advertise to other cluster members.
          Used for nat traversal if provided.
        type: string
        x-go-name: MemberlistAdvertiseAddr
        x-go-validate: omitempty,hostname_port
      memberlist_bind_addr:
        description: Address to bind mememberlist server to.
        type: string
        x-go-default: :3322
        x-go-name: MemberlistBindAddr
        x-go-validate: hostname_port
      replica_count:
        description: ReplicaCount is 1 by default.
        format: int64
        type: integer
        x-go-default: "1"
        x-go-name: ReplicaCount
    title: DistCacheConfig configures distributed cache that holds per-label counters
      in distributed rate limiters.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/distcache
  Duration:
    description: It holds *durationpb.Duration which is generated type for google/protobuf/duration.proto.
    title: Duration is encoded as a string message which represents a signed span
      of time.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/config
  EntityConfig:
    properties:
      ip_address:
        description: IP address of the entity.
        type: string
        x-go-name: IPAddress
        x-go-validate: required,ip
      name:
        description: Name of the entity.
        type: string
        x-go-name: Name
      uid:
        description: UID of the entity.
        type: string
        x-go-name: UID
    title: EntityConfig describes a single entity.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/discovery/static
  EtcdConfig:
    properties:
      endpoints:
        description: List of Etcd server endpoints
        items:
          type: string
        type: array
        x-go-name: Endpoints
        x-go-validate: gt=0,dive,hostname_port|url|fqdn
      lease_ttl:
        description: Lease time-to-live
        format: string
        type: string
        x-go-default: 60s
        x-go-name: LeaseTTL
        x-go-validate: gte=1s
      password:
        type: string
        x-go-name: Password
      tls:
        $ref: '#/definitions/ClientTLSConfig'
      username:
        description: Authentication
        type: string
        x-go-name: Username
    title: EtcdConfig holds configuration for etcd client.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/etcd/client
  GRPCClientConfig:
    properties:
      backoff:
        $ref: '#/definitions/BackoffConfig'
      insecure:
        description: Disable ClientTLS
        type: boolean
        x-go-default: "false"
        x-go-name: Insecure
      min_connection_timeout:
        description: Minimum connection timeout
        format: string
        type: string
        x-go-default: 20s
        x-go-name: MinConnectionTimeout
        x-go-validate: gte=0
      tls:
        $ref: '#/definitions/ClientTLSConfig'
      use_proxy:
        description: Use HTTP CONNECT Proxy
        type: boolean
        x-go-default: "false"
        x-go-name: UseProxy
    title: GRPCClientConfig holds configuration for GRPC Client.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
  GRPCGatewayConfig:
    description: GRPCGatewayConfig holds configuration for grpc-http gateway
    properties:
      grpc_server_address:
        description: GRPC server address to connect to - By default it points to HTTP
          server port because FluxNinja stack runs GRPC and HTTP servers on the same
          port
        type: string
        x-go-default: 0.0.0.0:1
        x-go-name: GRPCAddr
        x-go-validate: hostname_port
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/grpcgateway
  GRPCServerConfig:
    properties:
      connection_timeout:
        description: Connection timeout
        format: string
        type: string
        x-go-default: 120s
        x-go-name: ConnectionTimeout
        x-go-validate: gte=0s
      enable_reflection:
        description: Enable Reflection
        type: boolean
        x-go-default: "false"
        x-go-name: EnableReflection
      latency_buckets_ms:
        description: Buckets specification in latency histogram
        items:
          format: double
          type: number
        type: array
        x-go-default: '[10.0,25.0,100.0,250.0,1000.0]'
        x-go-name: LatencyBucketsMS
        x-go-validate: gte=0
    title: GRPCServerConfig holds configuration for GRPC Server.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
  HTTPClientConfig:
    properties:
      disable_compression:
        description: Disable Compression
        type: boolean
        x-go-default: "false"
        x-go-name: DisableCompression
      disable_keep_alives:
        description: Disable HTTP Keep Alives
        type: boolean
        x-go-default: "false"
        x-go-name: DisableKeepAlives
      expect_continue_timeout:
        description: Expect Continue Timeout. 0 = no timeout.
        format: string
        type: string
        x-go-default: 1s
        x-go-name: ExpectContinueTimeout
        x-go-validate: gte=0s
      idle_connection_timeout:
        description: Idle Connection Timeout. 0 = no timeout.
        format: string
        type: string
        x-go-default: 90s
        x-go-name: IdleConnTimeout
        x-go-validate: gte=0s
      key_log_file:
        description: SSL key log file (useful for debugging with wireshark)
        type: string
        x-go-name: KeyLogWriter
      max_conns_per_host:
        description: Max Connections Per Host. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: MaxConnsPerHost
        x-go-validate: gte=0
      max_idle_connections:
        description: Max Idle Connections. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "100"
        x-go-name: MaxIdleConns
        x-go-validate: gte=0
      max_idle_connections_per_host:
        description: Max Idle Connections per host. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "5"
        x-go-name: MaxIdleConnsPerHost
        x-go-validate: gte=0
      max_response_header_bytes:
        description: Max Response Header Bytes. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: MaxResponseHeaderBytes
        x-go-validate: gte=0
      network_keep_alive:
        description: Network level keep-alive duration
        format: string
        type: string
        x-go-default: 30s
        x-go-name: NetworkKeepAlive
        x-go-validate: gte=0s
      network_timeout:
        description: Timeout for making network connection
        format: string
        type: string
        x-go-default: 30s
        x-go-name: NetworkTimeout
        x-go-validate: gte=0s
      proxy_connect_header:
        $ref: '#/definitions/Header'
        x-go-validate: omitempty
      read_buffer_size:
        description: Read Buffer Size. 0 = 4KB
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: ReadBufferSize
        x-go-validate: gte=0
      response_header_timeout:
        description: Response Header Timeout. 0 = no timeout.
        format: string
        type: string
        x-go-default: 0s
        x-go-name: ResponseHeaderTimeout
        x-go-validate: gte=0s
      timeout:
        description: HTTP client timeout - Timeouts includes connection time, redirects,
          reading the response etc. 0 = no timeout.
        format: string
        type: string
        x-go-default: 60s
        x-go-name: Timeout
        x-go-validate: gte=0s
      tls:
        $ref: '#/definitions/ClientTLSConfig'
      tls_handshake_timeout:
        description: TLS Handshake Timeout. 0 = no timeout
        format: string
        type: string
        x-go-default: 10s
        x-go-name: TLSHandshakeTimeout
        x-go-validate: gte=0s
      use_proxy:
        description: Use Proxy
        type: boolean
        x-go-default: "false"
        x-go-name: UseProxy
      write_buffer_size:
        description: Write Buffer Size. 0 = 4KB.
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: WriteBufferSize
        x-go-validate: gte=0
    title: HTTPClientConfig holds configuration for HTTP Client.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/http
  HTTPServerConfig:
    properties:
      disable_http_keep_alives:
        description: Disable HTTP Keep Alives
        type: boolean
        x-go-default: "false"
        x-go-name: DisableHTTPKeepAlives
      idle_timeout:
        description: Idle timeout
        format: string
        type: string
        x-go-default: 30s
        x-go-name: IdleTimeout
        x-go-validate: gte=0s
      latency_buckets_ms:
        description: Buckets specification in latency histogram
        items:
          format: double
          type: number
        type: array
        x-go-default: '[10.0,25.0,100.0,250.0,1000.0]'
        x-go-name: LatencyBucketsMS
        x-go-validate: gte=0
      max_header_bytes:
        description: Max header size in bytes
        format: int64
        type: integer
        x-go-default: "1048576"
        x-go-name: MaxHeaderBytes
        x-go-validate: gte=0
      read_header_timeout:
        description: Read header timeout
        format: string
        type: string
        x-go-default: 10s
        x-go-name: ReadHeaderTimeout
        x-go-validate: gte=0s
      read_timeout:
        description: Read timeout
        format: string
        type: string
        x-go-default: 10s
        x-go-name: ReadTimeout
        x-go-validate: gte=0s
      write_timeout:
        description: Write timeout
        format: string
        type: string
        x-go-default: 45s
        x-go-name: WriteTimeout
        x-go-validate: gte=0s
    title: HTTPServerConfig holds configuration for HTTP Server.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/http
  Header:
    additionalProperties:
      items:
        type: string
      type: array
    description: |-
      The keys should be in canonical form, as returned by
      CanonicalHeaderKey.
    title: A Header represents the key-value pairs in an HTTP header.
    type: object
    x-go-package: net/http
  HeapConfig:
    properties:
      adaptive_policy:
        $ref: '#/definitions/AdaptivePolicy'
      limit:
        description: Maximum memory (in bytes) sets limit of process usage. Default
          = 256MB.
        format: uint64
        type: integer
        x-go-default: "268435456"
        x-go-name: Limit
        x-go-validate: gt=0
      min_gogc:
        description: Minimum GoGC sets the minimum garbage collection target percentage
          for heap driven Watchdogs. This setting helps avoid overscheduling.
        format: int64
        type: integer
        x-go-default: "25"
        x-go-name: MinGoGC
        x-go-validate: gt=0,lte=100
      watermarks_policy:
        $ref: '#/definitions/WatermarksPolicy'
    title: HeapConfig holds configuration for heap Watchdog.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  HeapLimit:
    properties:
      limit:
        description: Maximum memory (in bytes) sets limit of process usage. Default
          = 256MB.
        format: uint64
        type: integer
        x-go-default: "268435456"
        x-go-name: Limit
        x-go-validate: gt=0
      min_gogc:
        description: Minimum GoGC sets the minimum garbage collection target percentage
          for heap driven Watchdogs. This setting helps avoid overscheduling.
        format: int64
        type: integer
        x-go-default: "25"
        x-go-name: MinGoGC
        x-go-validate: gt=0,lte=100
    title: HeapLimit holds configuration for Watchdog heap limit.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  JobConfig:
    description: JobConfig is config for Job
    properties:
      execution_period:
        description: Time period between job executions. Zero or negative value means
          that the job will never execute periodically.
        format: string
        type: string
        x-go-default: 10s
        x-go-name: ExecutionPeriod
      execution_timeout:
        description: Execution timeout
        format: string
        type: string
        x-go-default: 5s
        x-go-name: ExecutionTimeout
        x-go-validate: gte=0s
      initial_delay:
        description: Initial delay to start the job. Zero value will schedule the
          job immediately. Negative value will wait for next scheduled interval.
        format: string
        type: string
        x-go-default: 0s
        x-go-name: InitialDelay
      initially_healthy:
        description: Sets whether the job is initially healthy
        type: boolean
        x-go-default: "false"
        x-go-name: InitiallyHealthy
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/jobs
  JobGroupConfig:
    properties:
      max_concurrent_jobs:
        description: Limits how many jobs can be running at the same time. This is
          useful when running resource intensive jobs and a precise start time is
          not critical. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: MaxConcurrentJobs
        x-go-validate: gte=0
    title: JobGroupConfig holds configuration for JobGroup.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/jobs
  KubernetesDiscoveryConfig:
    properties:
      discovery_enabled:
        type: boolean
        x-go-default: "true"
        x-go-name: DiscoveryEnabled
      node_name:
        description: NodeName is the name of the k8s node the agent should be monitoring
        type: string
        x-go-name: NodeName
      pod_name:
        type: string
        x-go-name: PodName
    title: KubernetesDiscoveryConfig for Kubernetes service discovery.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/discovery/kubernetes
  ListenerConfig:
    properties:
      addr:
        description: Address to bind to in the form of [host%zone]:port
        type: string
        x-go-default: :8080
        x-go-name: Addr
        x-go-validate: hostname_port
      keep_alive:
        description: Keep-alive period - 0 = enabled if supported by protocol or OS.
          If negative then keep-alive is disabled.
        format: string
        type: string
        x-go-default: 180s
        x-go-name: KeepAlive
        x-go-validate: gte=0s
      network:
        description: TCP networks - "tcp", "tcp4" (IPv4-only), "tcp6" (IPv6-only)
        type: string
        x-go-default: tcp
        x-go-name: Network
        x-go-validate: oneof=tcp tcp4 tcp6
    title: ListenerConfig holds configuration for socket listeners.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/listener
  LogConfig:
    properties:
      level:
        description: Log level
        type: string
        x-go-default: info
        x-go-name: LogLevel
        x-go-validate: oneof=debug DEBUG info INFO warn WARN error ERROR fatal FATAL
          panic PANIC trace TRACE disabled DISABLED
      non_blocking:
        description: Use non-blocking log writer (can lose logs at high throughput)
        type: boolean
        x-go-default: "true"
        x-go-name: NonBlocking
      pretty_console:
        description: 'Additional log writer: pretty console (stdout) logging (not
          recommended for prod environments)'
        type: boolean
        x-go-default: "false"
        x-go-name: PrettyConsole
      writers:
        description: Log writers
        items:
          $ref: '#/definitions/LogWriterConfig'
        type: array
        x-go-name: Writers
        x-go-validate: omitempty,dive,omitempty
    title: LogConfig holds configuration for a logger and log writers.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/config
  LogWriterConfig:
    properties:
      compress:
        description: Compress
        type: boolean
        x-go-default: "false"
        x-go-name: Compress
      file:
        description: Output file for logs. Keywords allowed - ["stderr", "default"].
          "default" maps to `/var/log/fluxninja/<service>.log`
        type: string
        x-go-default: stderr
        x-go-name: File
      max_age:
        description: Max age in days for log files
        format: int64
        type: integer
        x-go-default: "7"
        x-go-name: MaxAge
        x-go-validate: gte=0
      max_backups:
        description: Max log file backups
        format: int64
        type: integer
        x-go-default: "3"
        x-go-name: MaxBackups
        x-go-validate: gte=0
      max_size:
        description: Log file max size in MB
        format: int64
        type: integer
        x-go-default: "50"
        x-go-name: MaxSize
        x-go-validate: gte=0
    title: LogWriterConfig holds configuration for a log writer.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/config
  MetricsConfig:
    properties:
      enable_go_metrics:
        description: EnableGoCollector controls whether the go collector is registered
          on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewGoCollector>
        type: boolean
        x-go-default: "false"
        x-go-name: EnableGoCollector
      enable_process_collector:
        description: EnableProcessCollector controls whether the process collector
          is registered on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewProcessCollector>
        type: boolean
        x-go-default: "false"
        x-go-name: EnableProcessCollector
      pedantic:
        description: Pedantic controls whether a pedantic Registerer is used as the
          prometheus backend. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewPedanticRegistry>
        type: boolean
        x-go-default: "false"
        x-go-name: Pedantic
    title: MetricsConfig holds configuration for service metrics.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/metrics
  MultiJobConfig:
    properties:
      execution_period:
        description: Time period between job executions. Zero or negative value means
          that the job will never execute periodically.
        format: string
        type: string
        x-go-default: 10s
        x-go-name: ExecutionPeriod
      execution_timeout:
        description: Execution timeout
        format: string
        type: string
        x-go-default: 5s
        x-go-name: ExecutionTimeout
        x-go-validate: gte=0s
      initial_delay:
        description: Initial delay to start the job. Zero value will schedule the
          job immediately. Negative value will wait for next scheduled interval.
        format: string
        type: string
        x-go-default: 0s
        x-go-name: InitialDelay
      initially_healthy:
        description: Sets whether the job is initially healthy
        type: boolean
        x-go-default: "false"
        x-go-name: InitiallyHealthy
    title: MultiJobConfig holds configuration for MultiJob.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/jobs
  OtelConfig:
    properties:
      batch_postrollup:
        $ref: '#/definitions/BatchPostrollupConfig'
      batch_prerollup:
        $ref: '#/definitions/BatchPrerollupConfig'
    title: OtelConfig is the configuration for the OTEL collector.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/otelcollector
  PeerDiscoveryConfig:
    properties:
      advertisement_addr:
        description: Network address of aperture server to advertise to peers - this
          address should be reachable from other agents. Used for nat traversal when
          provided.
        type: string
        x-go-name: AdvertisementAddr
        x-go-validate: omitempty,hostname_port
    title: PeerDiscoveryConfig holds configuration for Agent Peer Discovery.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/peers
  PluginsConfig:
    properties:
      disable_plugins:
        description: Disables all plugins
        type: boolean
        x-go-default: "false"
        x-go-name: DisablePlugins
      disabled_plugins:
        description: Specific plugins to disable
        items:
          type: string
        type: array
        x-go-name: DisabledPlugins
        x-go-validate: omitempty
      disabled_symbols:
        description: Specific plugin types to disable
        items:
          type: string
        type: array
        x-go-name: DisabledSymbols
        x-go-validate: omitempty
      plugins_path:
        description: Path to plugins directory. "default" points to `/var/lib/aperture/<service>/plugins`.
        type: string
        x-go-default: default
        x-go-name: PluginsPath
    title: PluginsConfig holds configuration for plugins.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/plugins
  PolicyCommon:
    properties:
      enabled:
        description: Flag to enable the policy
        type: boolean
        x-go-default: "false"
        x-go-name: Enabled
    title: PolicyCommon holds common configuration for Watchdog policies.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  ProfilersConfig:
    properties:
      cpu_profiler:
        description: Flag to enable cpu profiling on process start and save it to
          a file. HTTP interface will not work if this is enabled as CPU profile will
          always be running.
        type: boolean
        x-go-default: "false"
        x-go-name: CPUProfile
      profiles_path:
        description: Path to save performance profiles. "default" path is `/var/log/aperture/<service>/profiles`.
        type: string
        x-go-default: default
        x-go-name: ProfilesPath
      register_http_routes:
        description: Register routes. Profile types profile, symbol and cmdline will
          be registered at /debug/pprof/{profile,symbol,cmdline}.
        type: boolean
        x-go-default: "true"
        x-go-name: RegisterHTTPRoutes
    title: ProfilersConfig holds configuration for profilers.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/profilers
  PrometheusConfig:
    properties:
      address:
        description: Address of the prometheus server
        type: string
        x-go-name: Address
        x-go-validate: required,hostname_port|url|fqdn
    title: PrometheusConfig holds configuration for Prometheus Server.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/prometheus
  ProxyConfig:
    description: This configuration has preference over environment variables HTTP_PROXY,
      HTTPS_PROXY or NO_PROXY. See <https://pkg.go.dev/golang.org/x/net/http/httpproxy#Config>
    properties:
      http:
        type: string
        x-go-name: HTTPProxy
        x-go-validate: omitempty,url|hostname_port
      https:
        type: string
        x-go-name: HTTPSProxy
        x-go-validate: omitempty,url|hostname_port
      no_proxy:
        items:
          type: string
        type: array
        x-go-name: NoProxy
        x-go-validate: omitempty,dive,ip|cidr|fqdn|hostname_port
    title: ProxyConfig holds proxy configuration.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/http
  SchedulerConfig:
    properties:
      max_concurrent_jobs:
        description: Limits how many jobs can be running at the same time. This is
          useful when running resource intensive jobs and a precise start time is
          not critical. 0 = no limit.
        format: int64
        type: integer
        x-go-default: "0"
        x-go-name: MaxConcurrentJobs
        x-go-validate: gte=0
    title: SchedulerConfig holds configuration for job Scheduler.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/jobs
  ServerTLSConfig:
    properties:
      allowed_cn:
        description: Allowed CN
        type: string
        x-go-name: AllowedCN
        x-go-validate: omitempty,fqdn
      cert_file:
        description: Server Cert file path
        type: string
        x-go-name: CertFile
      client_ca_file:
        description: Client CA file path
        type: string
        x-go-name: ClientCAFile
      enabled:
        description: Enabled TLS
        type: boolean
        x-go-default: "false"
        x-go-name: Enabled
      key_file:
        description: Server Key file path
        type: string
        x-go-name: KeyFile
    title: ServerTLSConfig holds configuration for setting up server TLS support.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/net/tlsconfig
  ServiceConfig:
    properties:
      entities:
        description: Entities of the service.
        items:
          $ref: '#/definitions/EntityConfig'
        type: array
        x-go-name: Entities
      name:
        description: Name of the service.
        type: string
        x-go-name: Name
        x-go-validate: required
    title: ServiceConfig describes a service and its entities.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/discovery/static
  StaticDiscoveryConfig:
    properties:
      services:
        description: Services list.
        items:
          $ref: '#/definitions/ServiceConfig'
        type: array
        x-go-name: Services
    title: StaticDiscoveryConfig for pre-determined list of services.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/discovery/static
  WatchdogConfig:
    properties:
      cgroup:
        $ref: '#/definitions/WatchdogPolicyType'
      heap:
        $ref: '#/definitions/HeapConfig'
      job:
        $ref: '#/definitions/JobConfig'
      system:
        $ref: '#/definitions/WatchdogPolicyType'
    title: WatchdogConfig holds configuration for Watchdog Policy. For each policy,
      either watermark or adaptive should be configured.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  WatchdogPolicyType:
    properties:
      adaptive_policy:
        $ref: '#/definitions/AdaptivePolicy'
      watermarks_policy:
        $ref: '#/definitions/WatermarksPolicy'
    title: WatchdogPolicyType holds configuration Watchdog Policy algorithms. If both
      algorithms are configured then only watermark algorithm is used.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
  WatermarksPolicy:
    properties:
      enabled:
        description: Flag to enable the policy
        type: boolean
        x-go-default: "false"
        x-go-name: Enabled
      watermarks:
        description: Watermarks are increasing limits on which to trigger GC. Watchdog
          disarms when the last watermark is surpassed. It is recommended to set an
          extreme watermark for the last element (e.g. 0.99).
        items:
          format: double
          type: number
        type: array
        x-go-default: '[0.50,0.75,0.80,0.85,0.90,0.95,0.99]'
        x-go-name: Watermarks
        x-go-validate: omitempty,dive,gte=0,lte=1
    title: WatermarksPolicy creates a Watchdog policy that schedules GC at concrete
      watermarks.
    type: object
    x-go-package: github.com/fluxninja/aperture/pkg/watchdog
info:
  description: Aperture Agent
  title: Agent
paths:
  /agent_info:
    post:
      operationId: AgentInfo
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/AgentInfoConfig'
      tags:
      - common-configuration
  /client:
    post:
      operationId: Client
      parameters:
      - in: body
        name: proxy
        schema:
          $ref: '#/definitions/ProxyConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /dist_cache:
    post:
      operationId: DistCache
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/DistCacheConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /etcd:
    post:
      operationId: Etcd
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/EtcdConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /kubernetes_client:
    post:
      operationId: KubernetesClient
      parameters:
      - in: body
        name: http_client
        schema:
          $ref: '#/definitions/HTTPClientConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /liveness:
    post:
      operationId: Liveness
      parameters:
      - in: body
        name: service
        schema:
          $ref: '#/definitions/JobConfig'
      - in: body
        name: scheduler
        schema:
          $ref: '#/definitions/JobGroupConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /log:
    post:
      operationId: Log
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/LogConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /metrics:
    post:
      operationId: Metrics
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/MetricsConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /otel:
    post:
      operationId: Otel
      parameters:
      - in: body
        name: proxy
        schema:
          $ref: '#/definitions/OtelConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /peer_discovery:
    post:
      operationId: PeerDiscovery
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/PeerDiscoveryConfig'
      tags:
      - common-configuration
  /plugins:
    post:
      operationId: Plugins
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/PluginsConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /profilers:
    post:
      operationId: Profilers
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/ProfilersConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /prometheus:
    post:
      operationId: Prometheus
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/PrometheusConfig'
      - in: body
        name: http_client
        schema:
          $ref: '#/definitions/HTTPClientConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /readiness:
    post:
      operationId: Readiness
      parameters:
      - in: body
        name: service
        schema:
          $ref: '#/definitions/JobConfig'
      - in: body
        name: scheduler
        schema:
          $ref: '#/definitions/JobGroupConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /server:
    post:
      operationId: Server
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/ListenerConfig'
      - in: body
        name: http
        schema:
          $ref: '#/definitions/HTTPServerConfig'
      - in: body
        name: grpc
        schema:
          $ref: '#/definitions/GRPCServerConfig'
      - in: body
        name: grpc_gateway
        schema:
          $ref: '#/definitions/GRPCGatewayConfig'
      - in: body
        name: tls
        schema:
          $ref: '#/definitions/ServerTLSConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /service_discovery:
    post:
      operationId: ServiceDiscovery
      parameters:
      - in: body
        name: static
        schema:
          $ref: '#/definitions/StaticDiscoveryConfig'
      - in: body
        name: kubernetes
        schema:
          $ref: '#/definitions/KubernetesDiscoveryConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
  /watchdog:
    post:
      operationId: Watchdog
      parameters:
      - in: body
        name: memory
        schema:
          $ref: '#/definitions/WatchdogConfig'
      tags:
      - common-configuration
      x-fn-config-env: true
swagger: "2.0"
