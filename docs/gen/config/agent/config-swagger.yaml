basePath: /aperture-agent
definitions:
    AdaptivePolicy:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
            factor:
                description: Factor sets user-configured limit of available memory
                format: double
                type: number
                x-go-name: Factor
        title: AdaptivePolicy creates a policy that forces GC when the usage surpasses the configured factor of the available memory. This policy calculates next target as usage+(limit-usage)*factor.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    AgentFunctionsConfig:
        properties:
            client:
                $ref: '#/definitions/ClientConfig'
            endpoints:
                description: RPC servers to connect to (which will be able to call agent functions)
                items:
                    type: string
                type: array
                x-go-name: Endpoints
        title: AgentFunctionsConfig is configuration for agent functions.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/agent-functions/config
    AgentInfoConfig:
        properties:
            agent_group:
                description: |-
                    All agents within an agent group receive the same data-plane configuration (for example, Flux Meters, Rate Limiters and so on).

                    [Read more about agent groups here](/concepts/flow-control/selector.md#agent-group).
                type: string
                x-go-name: AgentGroup
        title: AgentInfoConfig is the configuration for the agent group and other agent attributes.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/agent-info
    AgentOTelConfig:
        description: +kubebuilder:object:generate=true
        properties:
            batch_alerts:
                $ref: '#/definitions/BatchAlertsConfig'
            batch_postrollup:
                $ref: '#/definitions/BatchPostrollupConfig'
            batch_prerollup:
                $ref: '#/definitions/BatchPrerollupConfig'
            disable_kubelet_scraper:
                description: DisableKubeletScraper disables the default metrics collection for kubelet.
                type: boolean
                x-go-name: DisableKubeletScraper
            disable_kubernetes_scraper:
                description: DisableKubernetesScraper disables the default metrics collection for Kubernetes resources.
                type: boolean
                x-go-name: DisableKubernetesScraper
            ports:
                $ref: '#/definitions/PortsConfig'
        title: AgentOTelConfig is the configuration for Agent's OTel collector.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/cmd/aperture-agent/config
    AlertManagerClientConfig:
        properties:
            address:
                type: string
                x-go-name: Address
            base_path:
                type: string
                x-go-name: BasePath
            http_client:
                $ref: '#/definitions/HTTPClientConfig'
            name:
                type: string
                x-go-name: Name
        title: AlertManagerClientConfig config for single alertmanager client.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/alert-manager/config
    AlertManagerConfig:
        properties:
            clients:
                items:
                    $ref: '#/definitions/AlertManagerClientConfig'
                type: array
                x-go-name: Clients
        title: AlertManagerConfig main level config for alertmanager.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/alert-manager/config
    AlerterConfig:
        properties:
            channel_size:
                description: |-
                    ChannelSize size of the alerts channel in the alerter. Alerts should be
                    consumed from it quickly, so no big sizes are needed.
                format: int64
                type: integer
                x-go-name: ChannelSize
        title: AlerterConfig for alerter.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/alerts
    AutoScaleKubernetesConfig:
        properties:
            enabled:
                description: Enables the Kubernetes auto-scale capability.
                type: boolean
                x-go-name: Enabled
        title: AutoScaleKubernetesConfig is the configuration for the flow preview service.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/policies/autoscale/kubernetes/config
    BackoffConfig:
        properties:
            base_delay:
                description: Base Delay
                format: string
                type: string
                x-go-name: BaseDelay
            jitter:
                description: Jitter
                format: double
                type: number
                x-go-name: Jitter
            max_delay:
                description: Max Delay
                format: string
                type: string
                x-go-name: MaxDelay
            multiplier:
                description: Backoff multiplier
                format: double
                type: number
                x-go-name: Multiplier
        title: BackoffConfig holds configuration for gRPC client backoff.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/grpc
    BatchAlertsConfig:
        properties:
            send_batch_max_size:
                description: |-
                    SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
                    into smaller units.
                format: uint32
                type: integer
                x-go-name: SendBatchMaxSize
            send_batch_size:
                description: SendBatchSize is the size of a batch which after hit, will trigger it to be sent.
                format: uint32
                type: integer
                x-go-name: SendBatchSize
            timeout:
                description: Timeout sets the time after which a batch will be sent regardless of size.
                format: string
                type: string
                x-go-name: Timeout
        title: BatchAlertsConfig defines configuration for OTel batch processor.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/otelcollector/config
    BatchPostrollupConfig:
        description: +kubebuilder:object:generate=true
        properties:
            send_batch_max_size:
                description: |-
                    SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
                    into smaller units.
                format: uint32
                type: integer
                x-go-name: SendBatchMaxSize
            send_batch_size:
                description: SendBatchSize is the size of a batch which after hit, will trigger it to be sent.
                format: uint32
                type: integer
                x-go-name: SendBatchSize
            timeout:
                description: Timeout sets the time after which a batch will be sent regardless of size.
                format: string
                type: string
                x-go-name: Timeout
        title: BatchPostrollupConfig defines configuration for OTel batch processor.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/cmd/aperture-agent/config
    BatchPrerollupConfig:
        description: +kubebuilder:object:generate=true
        properties:
            send_batch_max_size:
                description: |-
                    SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
                    into smaller units.
                format: uint32
                type: integer
                x-go-name: SendBatchMaxSize
            send_batch_size:
                description: SendBatchSize is the size of a batch which after hit, will trigger it to be sent.
                format: uint32
                type: integer
                x-go-name: SendBatchSize
            timeout:
                description: Timeout sets the time after which a batch will be sent regardless of size.
                format: string
                type: string
                x-go-name: Timeout
        title: BatchPrerollupConfig defines configuration for OTel batch processor.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/cmd/aperture-agent/config
    ClientConfig:
        properties:
            grpc:
                $ref: '#/definitions/GRPCClientConfig'
        title: ClientConfig is configuration for network clients used by agent-functions.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/agent-functions/config
    ClientTLSConfig:
        properties:
            ca_file:
                type: string
                x-go-name: CAFile
            cert_file:
                type: string
                x-go-name: CertFile
            insecure_skip_verify:
                type: boolean
                x-go-name: InsecureSkipVerify
            key_file:
                type: string
                x-go-name: KeyFile
            key_log_file:
                type: string
                x-go-name: KeyLogWriter
        title: ClientTLSConfig is the configuration for client TLS.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/tlsconfig
    CommonOTelConfig:
        properties:
            batch_alerts:
                $ref: '#/definitions/BatchAlertsConfig'
            ports:
                $ref: '#/definitions/PortsConfig'
        title: CommonOTelConfig is the configuration for the OTel collector.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/otelcollector/config
    DistCacheConfig:
        properties:
            bind_addr:
                description: BindAddr denotes the address that DistCache will bind to for communication with other peer nodes.
                type: string
                x-go-name: BindAddr
            memberlist_advertise_addr:
                description: Address of [`memberlist`](https://github.com/hashicorp/memberlist) to advertise to other cluster members. Used for NAT traversal if provided.
                type: string
                x-go-name: MemberlistAdvertiseAddr
            memberlist_bind_addr:
                description: Address to bind [`memberlist`](https://github.com/hashicorp/memberlist) server to.
                type: string
                x-go-name: MemberlistBindAddr
            replica_count:
                description: ReplicaCount is 1 by default.
                format: int64
                type: integer
                x-go-name: ReplicaCount
        title: DistCacheConfig configures distributed cache that holds per-label counters in distributed rate limiters.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/dist-cache/config
    Duration:
        description: It holds *durationpb.Duration which is generated type for google/protobuf/duration.proto.
        title: Duration is encoded as a string message which represents a signed span of time.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/config
    Entity:
        properties:
            ip_address:
                description: IP address of the entity.
                type: string
                x-go-name: IpAddress
            name:
                description: Name of the entity. For example, pod name.
                type: string
                x-go-name: Name
            namespace:
                description: Namespace of the entity. For example, pod namespace.
                type: string
                x-go-name: Namespace
            node_name:
                description: Node name of the entity. For example, hostname.
                type: string
                x-go-name: NodeName
            services:
                description: Services of the entity.
                items:
                    type: string
                type: array
                x-go-name: Services
            uid:
                description: Unique identifier of the entity.
                type: string
                x-go-name: Uid
        title: Entity represents a pod, VM, and so on.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/api/gen/proto/go/aperture/discovery/entities/v1
    EtcdConfig:
        properties:
            endpoints:
                description: List of etcd server endpoints
                items:
                    type: string
                type: array
                x-go-name: Endpoints
            lease_ttl:
                description: Lease time-to-live
                format: string
                type: string
                x-go-name: LeaseTTL
            password:
                type: string
                x-go-name: Password
            tls:
                $ref: '#/definitions/ClientTLSConfig'
            username:
                description: Authentication
                type: string
                x-go-name: Username
        title: EtcdConfig holds configuration for etcd client.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/etcd
    FlowPreviewConfig:
        properties:
            enabled:
                description: Enables the flow preview service.
                type: boolean
                x-go-name: Enabled
        title: FlowPreviewConfig is the configuration for the flow control preview service.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/policies/flowcontrol/service/preview/config
    GRPCClientConfig:
        properties:
            backoff:
                $ref: '#/definitions/BackoffConfig'
            insecure:
                description: Disable ClientTLS
                type: boolean
                x-go-name: Insecure
            min_connection_timeout:
                description: Minimum connection timeout
                format: string
                type: string
                x-go-name: MinConnectionTimeout
            tls:
                $ref: '#/definitions/ClientTLSConfig'
            use_proxy:
                description: Use HTTP CONNECT Proxy
                type: boolean
                x-go-name: UseProxy
        title: GRPCClientConfig holds configuration for gRPC Client.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/grpc
    GRPCGatewayConfig:
        description: GRPCGatewayConfig holds configuration for gRPC to HTTP gateway
        properties:
            grpc_server_address:
                description: gRPC server address to connect to - By default it points to HTTP server port because FluxNinja stack runs gRPC and HTTP servers on the same port
                type: string
                x-go-name: GRPCAddr
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/grpcgateway
    GRPCServerConfig:
        properties:
            connection_timeout:
                description: Connection timeout
                format: string
                type: string
                x-go-name: ConnectionTimeout
            enable_reflection:
                description: Enable Reflection
                type: boolean
                x-go-name: EnableReflection
            latency_buckets_ms:
                description: Buckets specification in latency histogram
                items:
                    format: double
                    type: number
                type: array
                x-go-name: LatencyBucketsMS
        title: GRPCServerConfig holds configuration for gRPC Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/grpc
    HTTPClientConfig:
        properties:
            disable_compression:
                description: Disable Compression
                type: boolean
                x-go-name: DisableCompression
            disable_keep_alives:
                description: Disable HTTP Keepalive
                type: boolean
                x-go-name: DisableKeepAlives
            expect_continue_timeout:
                description: Expect Continue Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: ExpectContinueTimeout
            idle_connection_timeout:
                description: Idle Connection Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: IdleConnTimeout
            key_log_file:
                description: SSL/TLS key log file (useful for debugging)
                type: string
                x-go-name: KeyLogWriter
            max_conns_per_host:
                description: Max Connections Per Host. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxConnsPerHost
            max_idle_connections:
                description: Max Idle Connections. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxIdleConns
            max_idle_connections_per_host:
                description: Max Idle Connections per host. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxIdleConnsPerHost
            max_response_header_bytes:
                description: Max Response Header Bytes. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxResponseHeaderBytes
            network_keep_alive:
                description: Network level keep-alive duration
                format: string
                type: string
                x-go-name: NetworkKeepAlive
            network_timeout:
                description: Timeout for making network connection
                format: string
                type: string
                x-go-name: NetworkTimeout
            proxy_connect_header:
                $ref: '#/definitions/Header'
            read_buffer_size:
                description: Read Buffer Size. 0 = 4 KB
                format: int64
                type: integer
                x-go-name: ReadBufferSize
            response_header_timeout:
                description: Response Header Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: ResponseHeaderTimeout
            timeout:
                description: HTTP client timeout - Timeouts include connection time, redirects, reading the response and so on. 0 = no timeout.
                format: string
                type: string
                x-go-name: Timeout
            tls:
                $ref: '#/definitions/ClientTLSConfig'
            tls_handshake_timeout:
                description: TLS Handshake Timeout. 0 = no timeout
                format: string
                type: string
                x-go-name: TLSHandshakeTimeout
            use_proxy:
                description: Use Proxy
                type: boolean
                x-go-name: UseProxy
            write_buffer_size:
                description: Write Buffer Size. 0 = 4 KB.
                format: int64
                type: integer
                x-go-name: WriteBufferSize
        title: HTTPClientConfig holds configuration for HTTP Client.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/http
    HTTPServerConfig:
        properties:
            disable_http_keep_alives:
                description: Disable HTTP Keepalive
                type: boolean
                x-go-name: DisableHTTPKeepAlives
            idle_timeout:
                description: Idle timeout
                format: string
                type: string
                x-go-name: IdleTimeout
            latency_buckets_ms:
                description: Buckets specification in latency histogram
                items:
                    format: double
                    type: number
                type: array
                x-go-name: LatencyBucketsMS
            max_header_bytes:
                description: Max header size in bytes
                format: int64
                type: integer
                x-go-name: MaxHeaderBytes
            read_header_timeout:
                description: Read header timeout
                format: string
                type: string
                x-go-name: ReadHeaderTimeout
            read_timeout:
                description: Read timeout
                format: string
                type: string
                x-go-name: ReadTimeout
            write_timeout:
                description: Write timeout
                format: string
                type: string
                x-go-name: WriteTimeout
        title: HTTPServerConfig holds configuration for HTTP Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/http
    Header:
        additionalProperties:
            items:
                type: string
            type: array
        description: |-
            The keys should be in canonical form, as returned by
            CanonicalHeaderKey.
        title: A Header represents the key-value pairs in an HTTP header.
        type: object
        x-go-package: net/http
    HeapConfig:
        properties:
            adaptive_policy:
                $ref: '#/definitions/AdaptivePolicy'
            limit:
                description: Maximum memory (in bytes) sets limit of process usage. Default = 256MB.
                format: uint64
                type: integer
                x-go-name: Limit
            min_gogc:
                description: Minimum GoGC sets the minimum garbage collection target percentage for heap driven Watchdogs. This setting helps avoid over scheduling.
                format: int64
                type: integer
                x-go-name: MinGoGC
            watermarks_policy:
                $ref: '#/definitions/WatermarksPolicy'
        title: HeapConfig holds configuration for heap Watchdog.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    HeapLimit:
        properties:
            limit:
                description: Maximum memory (in bytes) sets limit of process usage. Default = 256MB.
                format: uint64
                type: integer
                x-go-name: Limit
            min_gogc:
                description: Minimum GoGC sets the minimum garbage collection target percentage for heap driven Watchdogs. This setting helps avoid over scheduling.
                format: int64
                type: integer
                x-go-name: MinGoGC
        title: HeapLimit holds configuration for Watchdog heap limit.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    JobConfig:
        description: JobConfig is configuration for a periodic job
        properties:
            execution_period:
                description: Time between job executions. Zero or negative value means that the job will never execute periodically.
                format: string
                type: string
                x-go-name: ExecutionPeriod
            execution_timeout:
                description: Execution timeout
                format: string
                type: string
                x-go-name: ExecutionTimeout
            initially_healthy:
                description: Sets whether the job is initially healthy
                type: boolean
                x-go-name: InitiallyHealthy
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/jobs/config
    JobGroupConfig:
        properties:
            blocking_execution:
                description: |-
                    When true, the scheduler will run jobs synchronously,
                    waiting for each execution instance of the job to return
                    before starting the next execution. Running with this
                    option effectively serializes all job execution.
                type: boolean
                x-go-name: BlockingExecution
            worker_limit:
                description: |-
                    Limits how many jobs can be running at the same time. This is
                    useful when running resource intensive jobs and a precise start time is
                    not critical. 0 = no limit. If BlockingExecution is set, then WorkerLimit
                    is ignored.
                format: int64
                type: integer
                x-go-name: WorkerLimit
        title: JobGroupConfig holds configuration for JobGroup.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/jobs/config
    KubernetesDiscoveryConfig:
        properties:
            enabled:
                type: boolean
                x-go-name: Enabled
        title: KubernetesDiscoveryConfig for Kubernetes service discovery.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/discovery/kubernetes/config
    ListenerConfig:
        properties:
            addr:
                description: Address to bind to in the form of `[host%zone]:port`
                type: string
                x-go-name: Addr
            keep_alive:
                description: Keep-alive period - 0 = enabled if supported by protocol or operating system. If negative, then keep-alive is disabled.
                format: string
                type: string
                x-go-name: KeepAlive
            network:
                description: TCP networks - `tcp`, `tcp4` (IPv4-only), `tcp6` (IPv6-only)
                type: string
                x-go-name: Network
        title: ListenerConfig holds configuration for socket listeners.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/listener
    LogConfig:
        properties:
            level:
                description: Log level
                type: string
                x-go-name: LogLevel
            non_blocking:
                description: Use non-blocking log writer (can lose logs at high throughput)
                type: boolean
                x-go-name: NonBlocking
            pretty_console:
                description: 'Additional log writer: pretty console (`stdout`) logging (not recommended for prod environments)'
                type: boolean
                x-go-name: PrettyConsole
            writers:
                description: Log writers
                items:
                    $ref: '#/definitions/LogWriterConfig'
                type: array
                x-go-name: Writers
        title: LogConfig holds configuration for a logger and log writers.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/config
    LogWriterConfig:
        properties:
            compress:
                description: Compress
                type: boolean
                x-go-name: Compress
            file:
                description: Output file for logs. Keywords allowed - [`stderr`, `default`]. `default` maps to `/var/log/fluxninja/<service>.log`
                type: string
                x-go-name: File
            max_age:
                description: Max age in days for log files
                format: int64
                type: integer
                x-go-name: MaxAge
            max_backups:
                description: Max log file backups
                format: int64
                type: integer
                x-go-name: MaxBackups
            max_size:
                description: Log file max size in MB
                format: int64
                type: integer
                x-go-name: MaxSize
        title: LogWriterConfig holds configuration for a log writer.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/config
    MetricsConfig:
        properties:
            enable_go_metrics:
                description: EnableGoCollector controls whether the go collector is registered on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewGoCollector>
                type: boolean
                x-go-name: EnableGoCollector
            enable_process_collector:
                description: EnableProcessCollector controls whether the process collector is registered on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewProcessCollector>
                type: boolean
                x-go-name: EnableProcessCollector
            pedantic:
                description: Pedantic controls whether a pedantic registry is used. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewPedanticRegistry>
                type: boolean
                x-go-name: Pedantic
        title: MetricsConfig holds configuration for service metrics.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/metrics
    MultiJobConfig:
        properties:
            execution_period:
                description: Time between job executions. Zero or negative value means that the job will never execute periodically.
                format: string
                type: string
                x-go-name: ExecutionPeriod
            execution_timeout:
                description: Execution timeout
                format: string
                type: string
                x-go-name: ExecutionTimeout
            initially_healthy:
                description: Sets whether the job is initially healthy
                type: boolean
                x-go-name: InitiallyHealthy
        title: MultiJobConfig holds configuration for MultiJob.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/jobs
    PeerDiscoveryConfig:
        properties:
            advertisement_addr:
                description: |-
                    Network address of aperture server to advertise to peers - this address
                    should be reachable from other agents. Used for NAT traversal when
                    provided.
                type: string
                x-go-name: AdvertisementAddr
        title: PeerDiscoveryConfig holds configuration for Agent Peer Discovery.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/peers/config
    PolicyCommon:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
        title: PolicyCommon holds common configuration for Watchdog policies.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    PortsConfig:
        properties:
            debug_port:
                description: Port on which OTel collector exposes Prometheus metrics on /metrics path.
                format: uint32
                type: integer
                x-go-name: DebugPort
            health_check_port:
                description: Port on which health check extension in exposed.
                format: uint32
                type: integer
                x-go-name: HealthCheckPort
            pprof_port:
                description: Port on which `pprof` extension in exposed.
                format: uint32
                type: integer
                x-go-name: PprofPort
            zpages_port:
                description: Port on which `zpages` extension in exposed.
                format: uint32
                type: integer
                x-go-name: ZpagesPort
        title: PortsConfig defines configuration for OTel debug and extension ports.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/otelcollector/config
    ProfilersConfig:
        properties:
            cpu_profiler:
                description: Flag to enable CPU profiling on process start and save it to a file. The Browser (HTTP) interface won't work if this is enabled, as the CPU profile will always be running.
                type: boolean
                x-go-name: CPUProfile
            profiles_path:
                description: Path to save performance profiles. "default" path is `/var/log/aperture/<service>/profiles`.
                type: string
                x-go-name: ProfilesPath
            register_http_routes:
                description: Register routes. Profile types `profile`, `symbol` and `cmdline` will be registered at `/debug/pprof/{profile,symbol,cmdline}`.
                type: boolean
                x-go-name: RegisterHTTPRoutes
        title: ProfilersConfig holds configuration for profilers.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/profilers
    PrometheusConfig:
        properties:
            address:
                description: Address of the Prometheus server
                type: string
                x-go-name: Address
        title: PrometheusConfig holds configuration for Prometheus Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/prometheus/config
    ProxyConfig:
        description: This configuration has preference over environment variables HTTP_PROXY, HTTPS_PROXY or NO_PROXY. See <https://pkg.go.dev/golang.org/x/net/http/httpproxy#Config>
        properties:
            http:
                type: string
                x-go-name: HTTPProxy
            https:
                type: string
                x-go-name: HTTPSProxy
            no_proxy:
                items:
                    type: string
                type: array
                x-go-name: NoProxy
        title: ProxyConfig holds proxy configuration.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/http
    SchedulerConfig:
        properties:
            blocking_execution:
                description: |-
                    When true, the scheduler will run jobs synchronously,
                    waiting for each execution instance of the job to return
                    before starting the next execution. Running with this
                    option effectively serializes all job execution.
                type: boolean
                x-go-name: BlockingExecution
            worker_limit:
                description: |-
                    Limits how many jobs can be running at the same time. This is
                    useful when running resource intensive jobs and a precise start time is
                    not critical. 0 = no limit. If BlockingExecution is set, then WorkerLimit
                    is ignored.
                format: int64
                type: integer
                x-go-name: WorkerLimit
        title: SchedulerConfig holds configuration for job Scheduler.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/jobs/config
    ServerTLSConfig:
        properties:
            allowed_cn:
                description: Allowed CN
                type: string
                x-go-name: AllowedCN
            cert_file:
                description: Server Cert file path
                type: string
                x-go-name: CertFile
            client_ca_file:
                description: Client CA file path
                type: string
                x-go-name: ClientCAFile
            enabled:
                description: Enabled TLS
                type: boolean
                x-go-name: Enabled
            key_file:
                description: Server Key file path
                type: string
                x-go-name: KeyFile
        title: ServerTLSConfig holds configuration for setting up server TLS support.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/net/tlsconfig
    StaticDiscoveryConfig:
        properties:
            entities:
                items:
                    $ref: '#/definitions/Entity'
                type: array
                x-go-name: Entities
        title: StaticDiscoveryConfig for pre-determined list of services.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/discovery/static/config
    WatchdogConfig:
        properties:
            cgroup:
                $ref: '#/definitions/WatchdogPolicyType'
            heap:
                $ref: '#/definitions/HeapConfig'
            job:
                $ref: '#/definitions/JobConfig'
            system:
                $ref: '#/definitions/WatchdogPolicyType'
        title: WatchdogConfig holds configuration for Watchdog Policy. For each policy, either watermark or adaptive should be configured.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    WatchdogPolicyType:
        properties:
            adaptive_policy:
                $ref: '#/definitions/AdaptivePolicy'
            watermarks_policy:
                $ref: '#/definitions/WatermarksPolicy'
        title: WatchdogPolicyType holds configuration Watchdog Policy algorithms. If both algorithms are configured then only watermark algorithm is used.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
    WatermarksPolicy:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
            watermarks:
                description: Watermarks are increasing limits on which to trigger GC. Watchdog disarms when the last watermark is surpassed. It's recommended to set an extreme watermark for the last element (for example, 0.99).
                items:
                    format: double
                    type: number
                type: array
                x-go-name: Watermarks
        title: WatermarksPolicy creates a Watchdog policy that schedules GC at concrete watermarks.
        type: object
        x-go-package: github.com/fluxninja/aperture/v2/pkg/watchdog/config
info:
    description: Aperture Agent
    title: Agent
paths:
    /agent_functions:
        post:
            operationId: Functions
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/AgentFunctionsConfig'
            tags:
                - common-configuration
                - Agent
            x-fn-config-env: true
    /agent_info:
        post:
            operationId: AgentInfo
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/AgentInfoConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /auto_scale:
        post:
            operationId: AutoScaleConfig
            parameters:
                - in: body
                  name: kubernetes
                  schema:
                    $ref: '#/definitions/AutoScaleKubernetesConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /client:
        post:
            operationId: Client
            parameters:
                - in: body
                  name: proxy
                  schema:
                    $ref: '#/definitions/ProxyConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /dist_cache:
        post:
            operationId: DistCache
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/DistCacheConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /etcd:
        post:
            operationId: Etcd
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/EtcdConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /flow_control:
        post:
            operationId: FlowControl
            parameters:
                - in: body
                  name: preview_service
                  schema:
                    $ref: '#/definitions/FlowPreviewConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /kubernetes_client:
        post:
            operationId: KubernetesClient
            parameters:
                - in: body
                  name: http_client
                  schema:
                    $ref: '#/definitions/HTTPClientConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /liveness:
        post:
            operationId: Liveness
            parameters:
                - in: body
                  name: service
                  schema:
                    $ref: '#/definitions/JobConfig'
                - in: body
                  name: scheduler
                  schema:
                    $ref: '#/definitions/JobGroupConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /log:
        post:
            operationId: Log
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/LogConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /metrics:
        post:
            operationId: Metrics
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/MetricsConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /otel:
        post:
            operationId: OTel
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/AgentOTelConfig'
            tags:
                - agent-configuration
            x-fn-config-env: true
    /peer_discovery:
        post:
            operationId: PeerDiscovery
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/PeerDiscoveryConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /profilers:
        post:
            operationId: Profilers
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/ProfilersConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /prometheus:
        post:
            operationId: Prometheus
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/PrometheusConfig'
                - in: body
                  name: http_client
                  schema:
                    $ref: '#/definitions/HTTPClientConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /readiness:
        post:
            operationId: Readiness
            parameters:
                - in: body
                  name: service
                  schema:
                    $ref: '#/definitions/JobConfig'
                - in: body
                  name: scheduler
                  schema:
                    $ref: '#/definitions/JobGroupConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /server:
        post:
            operationId: Server
            parameters:
                - in: body
                  name: listener
                  schema:
                    $ref: '#/definitions/ListenerConfig'
                - in: body
                  name: http
                  schema:
                    $ref: '#/definitions/HTTPServerConfig'
                - in: body
                  name: grpc
                  schema:
                    $ref: '#/definitions/GRPCServerConfig'
                - in: body
                  name: grpc_gateway
                  schema:
                    $ref: '#/definitions/GRPCGatewayConfig'
                - in: body
                  name: tls
                  schema:
                    $ref: '#/definitions/ServerTLSConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /service_discovery:
        post:
            operationId: ServiceDiscovery
            parameters:
                - in: body
                  name: static
                  schema:
                    $ref: '#/definitions/StaticDiscoveryConfig'
                - in: body
                  name: kubernetes
                  schema:
                    $ref: '#/definitions/KubernetesDiscoveryConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /watchdog:
        post:
            operationId: Watchdog
            parameters:
                - in: body
                  name: memory
                  schema:
                    $ref: '#/definitions/WatchdogConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
swagger: "2.0"
