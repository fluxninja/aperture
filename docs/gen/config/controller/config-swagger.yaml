basePath: /aperture-controller
definitions:
    AdaptivePolicy:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
                x-go-tag-default: "false"
                x-go-tag-json: enabled
            factor:
                description: Factor sets user-configured limit of available memory
                format: double
                type: number
                x-go-name: Factor
                x-go-tag-default: "0.50"
                x-go-tag-json: factor
                x-go-tag-validate: gte=0,lte=1
        title: AdaptivePolicy creates a policy that forces GC when the usage surpasses the configured factor of the available memory. This policy calculates next target as usage+(limit-usage)*factor.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    AlertManagerClientConfig:
        properties:
            address:
                type: string
                x-go-name: Address
                x-go-tag-json: address
                x-go-tag-validate: hostname_port|url|fqdn
            base_path:
                type: string
                x-go-name: BasePath
                x-go-tag-default: /
                x-go-tag-json: base_path
            http_client:
                $ref: '#/definitions/HTTPClientConfig'
                x-go-tag-json: http_client
            name:
                type: string
                x-go-name: Name
                x-go-tag-json: name
        title: AlertManagerClientConfig config for single alertmanager client.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/alertmanager/client
    AlertManagerConfig:
        properties:
            clients:
                items:
                    $ref: '#/definitions/AlertManagerClientConfig'
                type: array
                x-go-name: Clients
                x-go-tag-json: clients,omitempty
        title: AlertManagerConfig main level config for alertmanager.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/alertmanager/client
    AlerterConfig:
        properties:
            channel_size:
                description: |-
                    ChannelSize size of the alerts channel in the alerter. Alerts should be
                    consumed from it quickly, so no big sizes are needed.
                format: int64
                type: integer
                x-go-name: ChannelSize
                x-go-tag-default: "100"
                x-go-tag-json: channel_size
                x-go-tag-validate: gt=0
        title: AlerterConfig for alerter.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/alerts
    BackoffConfig:
        properties:
            base_delay:
                description: Base Delay
                format: string
                type: string
                x-go-name: BaseDelay
                x-go-tag-default: 1s
                x-go-tag-json: base_delay
                x-go-tag-validate: gte=0
            jitter:
                description: Jitter
                format: double
                type: number
                x-go-name: Jitter
                x-go-tag-default: "0.2"
                x-go-tag-json: jitter
                x-go-tag-validate: gte=0
            max_delay:
                description: Max Delay
                format: string
                type: string
                x-go-name: MaxDelay
                x-go-tag-default: 120s
                x-go-tag-json: max_delay
                x-go-tag-validate: gte=0
            multiplier:
                description: Backoff multiplier
                format: double
                type: number
                x-go-name: Multiplier
                x-go-tag-default: "1.6"
                x-go-tag-json: multiplier
                x-go-tag-validate: gte=0
        title: BackoffConfig holds configuration for GRPC Client Backoff.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
    BatchAlertsConfig:
        properties:
            send_batch_max_size:
                description: |-
                    SendBatchMaxSize is the upper limit of the batch size. Bigger batches will be split
                    into smaller units.
                format: uint32
                type: integer
                x-go-name: SendBatchMaxSize
                x-go-tag-default: "100"
                x-go-tag-json: send_batch_max_size
                x-go-tag-validate: gte=0
            send_batch_size:
                description: SendBatchSize is the size of a batch which after hit, will trigger it to be sent.
                format: uint32
                type: integer
                x-go-name: SendBatchSize
                x-go-tag-default: "100"
                x-go-tag-json: send_batch_size
                x-go-tag-validate: gt=0
            timeout:
                description: Timeout sets the time after which a batch will be sent regardless of size.
                format: string
                type: string
                x-go-name: Timeout
                x-go-tag-default: 1s
                x-go-tag-json: timeout
                x-go-tag-validate: gt=0
        title: BatchAlertsConfig defines configuration for OTEL batch processor.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/otelcollector/config
    ClientTLSConfig:
        properties:
            ca_file:
                type: string
                x-go-name: CAFile
                x-go-tag-json: ca_file
            cert_file:
                type: string
                x-go-name: CertFile
                x-go-tag-json: cert_file
            insecure_skip_verify:
                type: boolean
                x-go-name: InsecureSkipVerify
                x-go-tag-json: insecure_skip_verify
            key_file:
                type: string
                x-go-name: KeyFile
                x-go-tag-json: key_file
            key_log_file:
                type: string
                x-go-name: KeyLogWriter
                x-go-tag-json: key_log_file
        title: ClientTLSConfig is the config for client TLS.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/tlsconfig
    CommonOTELConfig:
        properties:
            batch_alerts:
                $ref: '#/definitions/BatchAlertsConfig'
                x-go-tag-json: batch_alerts
            ports:
                $ref: '#/definitions/PortsConfig'
                x-go-tag-json: ports
        title: CommonOTELConfig is the configuration for the OTEL collector.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/otelcollector/config
    ControllerOTELConfig:
        properties:
            batch_alerts:
                $ref: '#/definitions/BatchAlertsConfig'
                x-go-tag-json: batch_alerts
            ports:
                $ref: '#/definitions/PortsConfig'
                x-go-tag-json: ports
        title: ControllerOTELConfig is the configuration for Agent's OTEL collector.
        type: object
        x-go-package: github.com/fluxninja/aperture/cmd/aperture-controller/config
    Duration:
        description: It holds *durationpb.Duration which is generated type for google/protobuf/duration.proto.
        title: Duration is encoded as a string message which represents a signed span of time.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/config
    EtcdConfig:
        properties:
            endpoints:
                description: List of Etcd server endpoints
                items:
                    type: string
                type: array
                x-go-name: Endpoints
                x-go-tag-json: endpoints
                x-go-tag-validate: required,gt=0,dive,hostname_port|url|fqdn
            lease_ttl:
                description: Lease time-to-live
                format: string
                type: string
                x-go-name: LeaseTTL
                x-go-tag-default: 60s
                x-go-tag-json: lease_ttl
                x-go-tag-validate: gte=1s
            password:
                type: string
                x-go-name: Password
                x-go-tag-json: password
            tls:
                $ref: '#/definitions/ClientTLSConfig'
                x-go-tag-json: tls
            username:
                description: Authentication
                type: string
                x-go-name: Username
                x-go-tag-json: username
        required:
            - endpoints
        title: EtcdConfig holds configuration for etcd client.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/etcd/client
    GRPCClientConfig:
        properties:
            backoff:
                $ref: '#/definitions/BackoffConfig'
                x-go-tag-json: backoff
            insecure:
                description: Disable ClientTLS
                type: boolean
                x-go-name: Insecure
                x-go-tag-default: "false"
                x-go-tag-json: insecure
            min_connection_timeout:
                description: Minimum connection timeout
                format: string
                type: string
                x-go-name: MinConnectionTimeout
                x-go-tag-default: 20s
                x-go-tag-json: min_connection_timeout
                x-go-tag-validate: gte=0
            tls:
                $ref: '#/definitions/ClientTLSConfig'
                x-go-tag-json: tls
            use_proxy:
                description: Use HTTP CONNECT Proxy
                type: boolean
                x-go-name: UseProxy
                x-go-tag-default: "false"
                x-go-tag-json: use_proxy
        title: GRPCClientConfig holds configuration for GRPC Client.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
    GRPCGatewayConfig:
        description: GRPCGatewayConfig holds configuration for grpc-http gateway
        properties:
            grpc_server_address:
                description: GRPC server address to connect to - By default it points to HTTP server port because FluxNinja stack runs GRPC and HTTP servers on the same port
                type: string
                x-go-name: GRPCAddr
                x-go-tag-default: 0.0.0.0:1
                x-go-tag-json: grpc_server_address
                x-go-tag-validate: hostname_port
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/grpcgateway
    GRPCServerConfig:
        properties:
            connection_timeout:
                description: Connection timeout
                format: string
                type: string
                x-go-name: ConnectionTimeout
                x-go-tag-default: 120s
                x-go-tag-json: connection_timeout
                x-go-tag-validate: gte=0s
            enable_reflection:
                description: Enable Reflection
                type: boolean
                x-go-name: EnableReflection
                x-go-tag-default: "false"
                x-go-tag-json: enable_reflection
            latency_buckets_ms:
                description: Buckets specification in latency histogram
                items:
                    format: double
                    type: number
                type: array
                x-go-name: LatencyBucketsMS
                x-go-tag-default: '[10.0,25.0,100.0,250.0,1000.0]'
                x-go-tag-json: latency_buckets_ms
                x-go-tag-validate: gte=0
        title: GRPCServerConfig holds configuration for GRPC Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/grpc
    HTTPClientConfig:
        properties:
            disable_compression:
                description: Disable Compression
                type: boolean
                x-go-name: DisableCompression
                x-go-tag-default: "false"
                x-go-tag-json: disable_compression
            disable_keep_alives:
                description: Disable HTTP Keep Alives
                type: boolean
                x-go-name: DisableKeepAlives
                x-go-tag-default: "false"
                x-go-tag-json: disable_keep_alives
            expect_continue_timeout:
                description: Expect Continue Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: ExpectContinueTimeout
                x-go-tag-default: 1s
                x-go-tag-json: expect_continue_timeout
                x-go-tag-validate: gte=0s
            idle_connection_timeout:
                description: Idle Connection Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: IdleConnTimeout
                x-go-tag-default: 90s
                x-go-tag-json: idle_connection_timeout
                x-go-tag-validate: gte=0s
            key_log_file:
                description: SSL key log file (useful for debugging with wireshark)
                type: string
                x-go-name: KeyLogWriter
                x-go-tag-json: key_log_file
            max_conns_per_host:
                description: Max Connections Per Host. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxConnsPerHost
                x-go-tag-default: "0"
                x-go-tag-json: max_conns_per_host
                x-go-tag-validate: gte=0
            max_idle_connections:
                description: Max Idle Connections. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxIdleConns
                x-go-tag-default: "100"
                x-go-tag-json: max_idle_connections
                x-go-tag-validate: gte=0
            max_idle_connections_per_host:
                description: Max Idle Connections per host. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxIdleConnsPerHost
                x-go-tag-default: "5"
                x-go-tag-json: max_idle_connections_per_host
                x-go-tag-validate: gte=0
            max_response_header_bytes:
                description: Max Response Header Bytes. 0 = no limit.
                format: int64
                type: integer
                x-go-name: MaxResponseHeaderBytes
                x-go-tag-default: "0"
                x-go-tag-json: max_response_header_bytes
                x-go-tag-validate: gte=0
            network_keep_alive:
                description: Network level keep-alive duration
                format: string
                type: string
                x-go-name: NetworkKeepAlive
                x-go-tag-default: 30s
                x-go-tag-json: network_keep_alive
                x-go-tag-validate: gte=0s
            network_timeout:
                description: Timeout for making network connection
                format: string
                type: string
                x-go-name: NetworkTimeout
                x-go-tag-default: 30s
                x-go-tag-json: network_timeout
                x-go-tag-validate: gte=0s
            proxy_connect_header:
                $ref: '#/definitions/Header'
                x-go-tag-json: proxy_connect_header,omitempty
                x-go-tag-validate: omitempty
            read_buffer_size:
                description: Read Buffer Size. 0 = 4KB
                format: int64
                type: integer
                x-go-name: ReadBufferSize
                x-go-tag-default: "0"
                x-go-tag-json: read_buffer_size
                x-go-tag-validate: gte=0
            response_header_timeout:
                description: Response Header Timeout. 0 = no timeout.
                format: string
                type: string
                x-go-name: ResponseHeaderTimeout
                x-go-tag-default: 0s
                x-go-tag-json: response_header_timeout
                x-go-tag-validate: gte=0s
            timeout:
                description: HTTP client timeout - Timeouts includes connection time, redirects, reading the response etc. 0 = no timeout.
                format: string
                type: string
                x-go-name: Timeout
                x-go-tag-default: 60s
                x-go-tag-json: timeout
                x-go-tag-validate: gte=0s
            tls:
                $ref: '#/definitions/ClientTLSConfig'
                x-go-tag-json: tls
            tls_handshake_timeout:
                description: TLS Handshake Timeout. 0 = no timeout
                format: string
                type: string
                x-go-name: TLSHandshakeTimeout
                x-go-tag-default: 10s
                x-go-tag-json: tls_handshake_timeout
                x-go-tag-validate: gte=0s
            use_proxy:
                description: Use Proxy
                type: boolean
                x-go-name: UseProxy
                x-go-tag-default: "false"
                x-go-tag-json: use_proxy
            write_buffer_size:
                description: Write Buffer Size. 0 = 4KB.
                format: int64
                type: integer
                x-go-name: WriteBufferSize
                x-go-tag-default: "0"
                x-go-tag-json: write_buffer_size
                x-go-tag-validate: gte=0
        title: HTTPClientConfig holds configuration for HTTP Client.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/http
    HTTPServerConfig:
        properties:
            disable_http_keep_alives:
                description: Disable HTTP Keep Alives
                type: boolean
                x-go-name: DisableHTTPKeepAlives
                x-go-tag-default: "false"
                x-go-tag-json: disable_http_keep_alives
            idle_timeout:
                description: Idle timeout
                format: string
                type: string
                x-go-name: IdleTimeout
                x-go-tag-default: 30s
                x-go-tag-json: idle_timeout
                x-go-tag-validate: gte=0s
            latency_buckets_ms:
                description: Buckets specification in latency histogram
                items:
                    format: double
                    type: number
                type: array
                x-go-name: LatencyBucketsMS
                x-go-tag-default: '[10.0,25.0,100.0,250.0,1000.0]'
                x-go-tag-json: latency_buckets_ms
                x-go-tag-validate: gte=0
            max_header_bytes:
                description: Max header size in bytes
                format: int64
                type: integer
                x-go-name: MaxHeaderBytes
                x-go-tag-default: "1048576"
                x-go-tag-json: max_header_bytes
                x-go-tag-validate: gte=0
            read_header_timeout:
                description: Read header timeout
                format: string
                type: string
                x-go-name: ReadHeaderTimeout
                x-go-tag-default: 10s
                x-go-tag-json: read_header_timeout
                x-go-tag-validate: gte=0s
            read_timeout:
                description: Read timeout
                format: string
                type: string
                x-go-name: ReadTimeout
                x-go-tag-default: 10s
                x-go-tag-json: read_timeout
                x-go-tag-validate: gte=0s
            write_timeout:
                description: Write timeout
                format: string
                type: string
                x-go-name: WriteTimeout
                x-go-tag-default: 45s
                x-go-tag-json: write_timeout
                x-go-tag-validate: gte=0s
        title: HTTPServerConfig holds configuration for HTTP Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/http
    Header:
        additionalProperties:
            items:
                type: string
            type: array
        description: |-
            The keys should be in canonical form, as returned by
            CanonicalHeaderKey.
        title: A Header represents the key-value pairs in an HTTP header.
        type: object
        x-go-package: net/http
    HeapConfig:
        properties:
            adaptive_policy:
                $ref: '#/definitions/AdaptivePolicy'
                x-go-tag-json: adaptive_policy
            limit:
                description: Maximum memory (in bytes) sets limit of process usage. Default = 256MB.
                format: uint64
                type: integer
                x-go-name: Limit
                x-go-tag-default: "268435456"
                x-go-tag-json: limit
                x-go-tag-validate: gt=0
            min_gogc:
                description: Minimum GoGC sets the minimum garbage collection target percentage for heap driven Watchdogs. This setting helps avoid overscheduling.
                format: int64
                type: integer
                x-go-name: MinGoGC
                x-go-tag-default: "25"
                x-go-tag-json: min_gogc
                x-go-tag-validate: gt=0,lte=100
            watermarks_policy:
                $ref: '#/definitions/WatermarksPolicy'
                x-go-tag-json: watermarks_policy
        title: HeapConfig holds configuration for heap Watchdog.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    HeapLimit:
        properties:
            limit:
                description: Maximum memory (in bytes) sets limit of process usage. Default = 256MB.
                format: uint64
                type: integer
                x-go-name: Limit
                x-go-tag-default: "268435456"
                x-go-tag-json: limit
                x-go-tag-validate: gt=0
            min_gogc:
                description: Minimum GoGC sets the minimum garbage collection target percentage for heap driven Watchdogs. This setting helps avoid overscheduling.
                format: int64
                type: integer
                x-go-name: MinGoGC
                x-go-tag-default: "25"
                x-go-tag-json: min_gogc
                x-go-tag-validate: gt=0,lte=100
        title: HeapLimit holds configuration for Watchdog heap limit.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    JobConfig:
        description: JobConfig is config for Job
        properties:
            execution_period:
                description: Time period between job executions. Zero or negative value means that the job will never execute periodically.
                format: string
                type: string
                x-go-name: ExecutionPeriod
                x-go-tag-default: 10s
                x-go-tag-json: execution_period
            execution_timeout:
                description: Execution timeout
                format: string
                type: string
                x-go-name: ExecutionTimeout
                x-go-tag-default: 5s
                x-go-tag-json: execution_timeout
                x-go-tag-validate: gte=0s
            initially_healthy:
                description: Sets whether the job is initially healthy
                type: boolean
                x-go-name: InitiallyHealthy
                x-go-tag-default: "false"
                x-go-tag-json: initially_healthy
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/jobs
    JobGroupConfig:
        properties:
            blocking_execution:
                description: |-
                    When true, the scheduler will run jobs synchronously,
                    waiting for each execution instance of the job to return
                    before starting the next execution. Running with this
                    option effectively serializes all job execution.
                type: boolean
                x-go-name: BlockingExecution
                x-go-tag-default: "false"
                x-go-tag-json: blocking_execution
            worker_limit:
                description: |-
                    Limits how many jobs can be running at the same time. This is
                    useful when running resource intensive jobs and a precise start time is
                    not critical. 0 = no limit. If BlockingExecution is set, then WorkerLimit
                    is ignored.
                format: int64
                type: integer
                x-go-name: WorkerLimit
                x-go-tag-default: "0"
                x-go-tag-json: worker_limit
        title: JobGroupConfig holds configuration for JobGroup.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/jobs
    ListenerConfig:
        properties:
            addr:
                description: Address to bind to in the form of [host%zone]:port
                type: string
                x-go-name: Addr
                x-go-tag-default: :8080
                x-go-tag-json: addr
                x-go-tag-validate: hostname_port
            keep_alive:
                description: Keep-alive period - 0 = enabled if supported by protocol or OS. If negative then keep-alive is disabled.
                format: string
                type: string
                x-go-name: KeepAlive
                x-go-tag-default: 180s
                x-go-tag-json: keep_alive
                x-go-tag-validate: gte=0s
            network:
                description: TCP networks - "tcp", "tcp4" (IPv4-only), "tcp6" (IPv6-only)
                type: string
                x-go-name: Network
                x-go-tag-default: tcp
                x-go-tag-json: network
                x-go-tag-validate: oneof=tcp tcp4 tcp6
        title: ListenerConfig holds configuration for socket listeners.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/listener
    LogConfig:
        properties:
            level:
                description: Log level
                type: string
                x-go-name: LogLevel
                x-go-tag-default: info
                x-go-tag-json: level
                x-go-tag-validate: oneof=debug DEBUG info INFO warn WARN error ERROR fatal FATAL panic PANIC trace TRACE disabled DISABLED
            non_blocking:
                description: Use non-blocking log writer (can lose logs at high throughput)
                type: boolean
                x-go-name: NonBlocking
                x-go-tag-default: "true"
                x-go-tag-json: non_blocking
            pretty_console:
                description: 'Additional log writer: pretty console (stdout) logging (not recommended for prod environments)'
                type: boolean
                x-go-name: PrettyConsole
                x-go-tag-default: "false"
                x-go-tag-json: pretty_console
            writers:
                description: Log writers
                items:
                    $ref: '#/definitions/LogWriterConfig'
                type: array
                x-go-name: Writers
                x-go-tag-json: writers,omitempty
                x-go-tag-validate: omitempty,dive,omitempty
        title: LogConfig holds configuration for a logger and log writers.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/config
    LogWriterConfig:
        properties:
            compress:
                description: Compress
                type: boolean
                x-go-name: Compress
                x-go-tag-default: "false"
                x-go-tag-json: compress
            file:
                description: Output file for logs. Keywords allowed - ["stderr", "default"]. "default" maps to `/var/log/fluxninja/<service>.log`
                type: string
                x-go-name: File
                x-go-tag-default: stderr
                x-go-tag-json: file
            max_age:
                description: Max age in days for log files
                format: int64
                type: integer
                x-go-name: MaxAge
                x-go-tag-default: "7"
                x-go-tag-json: max_age
                x-go-tag-validate: gte=0
            max_backups:
                description: Max log file backups
                format: int64
                type: integer
                x-go-name: MaxBackups
                x-go-tag-default: "3"
                x-go-tag-json: max_backups
                x-go-tag-validate: gte=0
            max_size:
                description: Log file max size in MB
                format: int64
                type: integer
                x-go-name: MaxSize
                x-go-tag-default: "50"
                x-go-tag-json: max_size
                x-go-tag-validate: gte=0
        title: LogWriterConfig holds configuration for a log writer.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/config
    MetricsConfig:
        properties:
            enable_go_metrics:
                description: EnableGoCollector controls whether the go collector is registered on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewGoCollector>
                type: boolean
                x-go-name: EnableGoCollector
                x-go-tag-default: "false"
                x-go-tag-json: enable_go_metrics
            enable_process_collector:
                description: EnableProcessCollector controls whether the process collector is registered on startup. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewProcessCollector>
                type: boolean
                x-go-name: EnableProcessCollector
                x-go-tag-default: "false"
                x-go-tag-json: enable_process_collector
            pedantic:
                description: Pedantic controls whether a pedantic Registerer is used as the prometheus backend. See <https://godoc.org/github.com/prometheus/client_golang/prometheus#NewPedanticRegistry>
                type: boolean
                x-go-name: Pedantic
                x-go-tag-default: "false"
                x-go-tag-json: pedantic
        title: MetricsConfig holds configuration for service metrics.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/metrics
    MultiJobConfig:
        properties:
            execution_period:
                description: Time period between job executions. Zero or negative value means that the job will never execute periodically.
                format: string
                type: string
                x-go-name: ExecutionPeriod
                x-go-tag-default: 10s
                x-go-tag-json: execution_period
            execution_timeout:
                description: Execution timeout
                format: string
                type: string
                x-go-name: ExecutionTimeout
                x-go-tag-default: 5s
                x-go-tag-json: execution_timeout
                x-go-tag-validate: gte=0s
            initially_healthy:
                description: Sets whether the job is initially healthy
                type: boolean
                x-go-name: InitiallyHealthy
                x-go-tag-default: "false"
                x-go-tag-json: initially_healthy
        title: MultiJobConfig holds configuration for MultiJob.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/jobs
    PluginsConfig:
        properties:
            disable_plugins:
                description: Disables all plugins
                type: boolean
                x-go-name: DisablePlugins
                x-go-tag-default: "false"
                x-go-tag-json: disable_plugins
            disabled_plugins:
                description: Specific plugins to disable
                items:
                    type: string
                type: array
                x-go-name: DisabledPlugins
                x-go-tag-json: disabled_plugins,omitempty
                x-go-tag-validate: omitempty
            disabled_symbols:
                description: Specific plugin types to disable
                items:
                    type: string
                type: array
                x-go-name: DisabledSymbols
                x-go-tag-json: disabled_symbols,omitempty
                x-go-tag-validate: omitempty
            plugins_path:
                description: Path to plugins directory. "default" points to `/var/lib/aperture/<service>/plugins`.
                type: string
                x-go-name: PluginsPath
                x-go-tag-default: default
                x-go-tag-json: plugins_path
        title: PluginsConfig holds configuration for plugins.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/plugins
    PolicyCommon:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
                x-go-tag-default: "false"
                x-go-tag-json: enabled
        title: PolicyCommon holds common configuration for Watchdog policies.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    PortsConfig:
        properties:
            debug_port:
                description: Port on which otel collector exposes prometheus metrics on /metrics path.
                format: uint32
                type: integer
                x-go-name: DebugPort
                x-go-tag-default: "8888"
                x-go-tag-json: debug_port
                x-go-tag-validate: gte=0
            health_check_port:
                description: Port on which health check extension in exposed.
                format: uint32
                type: integer
                x-go-name: HealthCheckPort
                x-go-tag-default: "13133"
                x-go-tag-json: health_check_port
                x-go-tag-validate: gte=0
            pprof_port:
                description: Port on which pprof extension in exposed.
                format: uint32
                type: integer
                x-go-name: PprofPort
                x-go-tag-default: "1777"
                x-go-tag-json: pprof_port
                x-go-tag-validate: gte=0
            zpages_port:
                description: Port on which zpages extension in exposed.
                format: uint32
                type: integer
                x-go-name: ZpagesPort
                x-go-tag-default: "55679"
                x-go-tag-json: zpages_port
                x-go-tag-validate: gte=0
        title: PortsConfig defines configuration for OTEL debug and extension ports.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/otelcollector/config
    ProfilersConfig:
        properties:
            cpu_profiler:
                description: Flag to enable cpu profiling on process start and save it to a file. HTTP interface will not work if this is enabled as CPU profile will always be running.
                type: boolean
                x-go-name: CPUProfile
                x-go-tag-default: "false"
                x-go-tag-json: cpu_profiler
            profiles_path:
                description: Path to save performance profiles. "default" path is `/var/log/aperture/<service>/profiles`.
                type: string
                x-go-name: ProfilesPath
                x-go-tag-default: default
                x-go-tag-json: profiles_path
            register_http_routes:
                description: Register routes. Profile types profile, symbol and cmdline will be registered at /debug/pprof/{profile,symbol,cmdline}.
                type: boolean
                x-go-name: RegisterHTTPRoutes
                x-go-tag-default: "true"
                x-go-tag-json: register_http_routes
        title: ProfilersConfig holds configuration for profilers.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/profilers
    PrometheusConfig:
        properties:
            address:
                description: Address of the prometheus server
                type: string
                x-go-name: Address
                x-go-tag-json: address
                x-go-tag-validate: required,hostname_port|url|fqdn
        required:
            - address
        title: PrometheusConfig holds configuration for Prometheus Server.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/prometheus
    ProxyConfig:
        description: This configuration has preference over environment variables HTTP_PROXY, HTTPS_PROXY or NO_PROXY. See <https://pkg.go.dev/golang.org/x/net/http/httpproxy#Config>
        properties:
            http:
                type: string
                x-go-name: HTTPProxy
                x-go-tag-json: http
                x-go-tag-validate: omitempty,url|hostname_port
            https:
                type: string
                x-go-name: HTTPSProxy
                x-go-tag-json: https
                x-go-tag-validate: omitempty,url|hostname_port
            no_proxy:
                items:
                    type: string
                type: array
                x-go-name: NoProxy
                x-go-tag-json: no_proxy,omitempty
                x-go-tag-validate: omitempty,dive,ip|cidr|fqdn|hostname_port
        title: ProxyConfig holds proxy configuration.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/http
    SchedulerConfig:
        properties:
            blocking_execution:
                description: |-
                    When true, the scheduler will run jobs synchronously,
                    waiting for each execution instance of the job to return
                    before starting the next execution. Running with this
                    option effectively serializes all job execution.
                type: boolean
                x-go-name: BlockingExecution
                x-go-tag-default: "false"
                x-go-tag-json: blocking_execution
            worker_limit:
                description: |-
                    Limits how many jobs can be running at the same time. This is
                    useful when running resource intensive jobs and a precise start time is
                    not critical. 0 = no limit. If BlockingExecution is set, then WorkerLimit
                    is ignored.
                format: int64
                type: integer
                x-go-name: WorkerLimit
                x-go-tag-default: "0"
                x-go-tag-json: worker_limit
        title: SchedulerConfig holds configuration for job Scheduler.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/jobs
    ServerTLSConfig:
        properties:
            allowed_cn:
                description: Allowed CN
                type: string
                x-go-name: AllowedCN
                x-go-tag-json: allowed_cn
                x-go-tag-validate: omitempty,fqdn
            cert_file:
                description: Server Cert file path
                type: string
                x-go-name: CertFile
                x-go-tag-json: cert_file
            client_ca_file:
                description: Client CA file path
                type: string
                x-go-name: ClientCAFile
                x-go-tag-json: client_ca_file
            enabled:
                description: Enabled TLS
                type: boolean
                x-go-name: Enabled
                x-go-tag-default: "false"
                x-go-tag-json: enabled
            key_file:
                description: Server Key file path
                type: string
                x-go-name: KeyFile
                x-go-tag-json: key_file
        title: ServerTLSConfig holds configuration for setting up server TLS support.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/net/tlsconfig
    WatchdogConfig:
        properties:
            cgroup:
                $ref: '#/definitions/WatchdogPolicyType'
                x-go-tag-json: cgroup
            heap:
                $ref: '#/definitions/HeapConfig'
                x-go-tag-json: heap
            job:
                $ref: '#/definitions/JobConfig'
                x-go-tag-json: job
            system:
                $ref: '#/definitions/WatchdogPolicyType'
                x-go-tag-json: system
        title: WatchdogConfig holds configuration for Watchdog Policy. For each policy, either watermark or adaptive should be configured.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    WatchdogPolicyType:
        properties:
            adaptive_policy:
                $ref: '#/definitions/AdaptivePolicy'
                x-go-tag-json: adaptive_policy
            watermarks_policy:
                $ref: '#/definitions/WatermarksPolicy'
                x-go-tag-json: watermarks_policy
        title: WatchdogPolicyType holds configuration Watchdog Policy algorithms. If both algorithms are configured then only watermark algorithm is used.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
    WatermarksPolicy:
        properties:
            enabled:
                description: Flag to enable the policy
                type: boolean
                x-go-name: Enabled
                x-go-tag-default: "false"
                x-go-tag-json: enabled
            watermarks:
                description: Watermarks are increasing limits on which to trigger GC. Watchdog disarms when the last watermark is surpassed. It is recommended to set an extreme watermark for the last element (e.g. 0.99).
                items:
                    format: double
                    type: number
                type: array
                x-go-name: Watermarks
                x-go-tag-default: '[0.50,0.75,0.80,0.85,0.90,0.95,0.99]'
                x-go-tag-json: watermarks,omitempty
                x-go-tag-validate: omitempty,dive,gte=0,lte=1
        title: WatermarksPolicy creates a Watchdog policy that schedules GC at concrete watermarks.
        type: object
        x-go-package: github.com/fluxninja/aperture/pkg/watchdog
info:
    description: Aperture Controller
    title: Controller
paths:
    /client:
        post:
            operationId: Client
            parameters:
                - in: body
                  name: proxy
                  schema:
                    $ref: '#/definitions/ProxyConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /etcd:
        post:
            operationId: Etcd
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/EtcdConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /liveness:
        post:
            operationId: Liveness
            parameters:
                - in: body
                  name: service
                  schema:
                    $ref: '#/definitions/JobConfig'
                - in: body
                  name: scheduler
                  schema:
                    $ref: '#/definitions/JobGroupConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /log:
        post:
            operationId: Log
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/LogConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /metrics:
        post:
            operationId: Metrics
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/MetricsConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /otel:
        post:
            operationId: OTEL
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/ControllerOTELConfig'
            tags:
                - controller-configuration
            x-fn-config-env: true
    /plugins:
        post:
            operationId: Plugins
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/PluginsConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /policies:
        post:
            operationId: PoliciesConfig
            parameters:
                - in: body
                  name: promql_jobs_scheduler
                  schema:
                    $ref: '#/definitions/JobGroupConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /profilers:
        post:
            operationId: Profilers
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/ProfilersConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /prometheus:
        post:
            operationId: Prometheus
            parameters:
                - in: body
                  schema:
                    $ref: '#/definitions/PrometheusConfig'
                - in: body
                  name: http_client
                  schema:
                    $ref: '#/definitions/HTTPClientConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /readiness:
        post:
            operationId: Readiness
            parameters:
                - in: body
                  name: service
                  schema:
                    $ref: '#/definitions/JobConfig'
                - in: body
                  name: scheduler
                  schema:
                    $ref: '#/definitions/JobGroupConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /server:
        post:
            operationId: Server
            parameters:
                - in: body
                  name: listener
                  schema:
                    $ref: '#/definitions/ListenerConfig'
                - in: body
                  name: http
                  schema:
                    $ref: '#/definitions/HTTPServerConfig'
                - in: body
                  name: grpc
                  schema:
                    $ref: '#/definitions/GRPCServerConfig'
                - in: body
                  name: grpc_gateway
                  schema:
                    $ref: '#/definitions/GRPCGatewayConfig'
                - in: body
                  name: tls
                  schema:
                    $ref: '#/definitions/ServerTLSConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
    /watchdog:
        post:
            operationId: Watchdog
            parameters:
                - in: body
                  name: memory
                  schema:
                    $ref: '#/definitions/WatchdogConfig'
            tags:
                - common-configuration
            x-fn-config-env: true
swagger: "2.0"
