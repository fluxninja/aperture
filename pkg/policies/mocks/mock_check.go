// Code generated by MockGen. DO NOT EDIT.
// Source: check.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	checkv1 "github.com/fluxninja/aperture/v2/api/gen/proto/go/aperture/flowcontrol/check/v1"
	iface "github.com/fluxninja/aperture/v2/pkg/policies/flowcontrol/iface"
	gomock "github.com/golang/mock/gomock"
)

// MockHandlerWithValues is a mock of HandlerWithValues interface.
type MockHandlerWithValues struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerWithValuesMockRecorder
}

// MockHandlerWithValuesMockRecorder is the mock recorder for MockHandlerWithValues.
type MockHandlerWithValuesMockRecorder struct {
	mock *MockHandlerWithValues
}

// NewMockHandlerWithValues creates a new mock instance.
func NewMockHandlerWithValues(ctrl *gomock.Controller) *MockHandlerWithValues {
	mock := &MockHandlerWithValues{ctrl: ctrl}
	mock.recorder = &MockHandlerWithValuesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlerWithValues) EXPECT() *MockHandlerWithValuesMockRecorder {
	return m.recorder
}

// CheckRequest mocks base method.
func (m *MockHandlerWithValues) CheckRequest(arg0 context.Context, arg1 iface.RequestContext) *checkv1.CheckResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckRequest", arg0, arg1)
	ret0, _ := ret[0].(*checkv1.CheckResponse)
	return ret0
}

// CheckRequest indicates an expected call of CheckRequest.
func (mr *MockHandlerWithValuesMockRecorder) CheckRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckRequest", reflect.TypeOf((*MockHandlerWithValues)(nil).CheckRequest), arg0, arg1)
}
